(global["webpackJsonp"] = global["webpackJsonp"] || []).push([["common/vendor"],[
/* 0 */,
/* 1 */
/*!************************************************************!*\
  !*** ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.createApp = createApp;exports.createComponent = createComponent;exports.createPage = createPage;exports.default = void 0;var _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 2));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function ownKeys(object, enumerableOnly) {var keys = Object.keys(object);if (Object.getOwnPropertySymbols) {var symbols = Object.getOwnPropertySymbols(object);if (enumerableOnly) symbols = symbols.filter(function (sym) {return Object.getOwnPropertyDescriptor(object, sym).enumerable;});keys.push.apply(keys, symbols);}return keys;}function _objectSpread(target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i] != null ? arguments[i] : {};if (i % 2) {ownKeys(Object(source), true).forEach(function (key) {_defineProperty(target, key, source[key]);});} else if (Object.getOwnPropertyDescriptors) {Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));} else {ownKeys(Object(source)).forEach(function (key) {Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));});}}return target;}function _slicedToArray(arr, i) {return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();}function _nonIterableRest() {throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");}function _iterableToArrayLimit(arr, i) {if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return;var _arr = [];var _n = true;var _d = false;var _e = undefined;try {for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {_arr.push(_s.value);if (i && _arr.length === i) break;}} catch (err) {_d = true;_e = err;} finally {try {if (!_n && _i["return"] != null) _i["return"]();} finally {if (_d) throw _e;}}return _arr;}function _arrayWithHoles(arr) {if (Array.isArray(arr)) return arr;}function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}function _toConsumableArray(arr) {return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();}function _nonIterableSpread() {throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");}function _unsupportedIterableToArray(o, minLen) {if (!o) return;if (typeof o === "string") return _arrayLikeToArray(o, minLen);var n = Object.prototype.toString.call(o).slice(8, -1);if (n === "Object" && o.constructor) n = o.constructor.name;if (n === "Map" || n === "Set") return Array.from(o);if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);}function _iterableToArray(iter) {if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter);}function _arrayWithoutHoles(arr) {if (Array.isArray(arr)) return _arrayLikeToArray(arr);}function _arrayLikeToArray(arr, len) {if (len == null || len > arr.length) len = arr.length;for (var i = 0, arr2 = new Array(len); i < len; i++) {arr2[i] = arr[i];}return arr2;}

var _toString = Object.prototype.toString;
var hasOwnProperty = Object.prototype.hasOwnProperty;

function isFn(fn) {
  return typeof fn === 'function';
}

function isStr(str) {
  return typeof str === 'string';
}

function isPlainObject(obj) {
  return _toString.call(obj) === '[object Object]';
}

function hasOwn(obj, key) {
  return hasOwnProperty.call(obj, key);
}

function noop() {}

/**
                    * Create a cached version of a pure function.
                    */
function cached(fn) {
  var cache = Object.create(null);
  return function cachedFn(str) {
    var hit = cache[str];
    return hit || (cache[str] = fn(str));
  };
}

/**
   * Camelize a hyphen-delimited string.
   */
var camelizeRE = /-(\w)/g;
var camelize = cached(function (str) {
  return str.replace(camelizeRE, function (_, c) {return c ? c.toUpperCase() : '';});
});

var HOOKS = [
'invoke',
'success',
'fail',
'complete',
'returnValue'];


var globalInterceptors = {};
var scopedInterceptors = {};

function mergeHook(parentVal, childVal) {
  var res = childVal ?
  parentVal ?
  parentVal.concat(childVal) :
  Array.isArray(childVal) ?
  childVal : [childVal] :
  parentVal;
  return res ?
  dedupeHooks(res) :
  res;
}

function dedupeHooks(hooks) {
  var res = [];
  for (var i = 0; i < hooks.length; i++) {
    if (res.indexOf(hooks[i]) === -1) {
      res.push(hooks[i]);
    }
  }
  return res;
}

function removeHook(hooks, hook) {
  var index = hooks.indexOf(hook);
  if (index !== -1) {
    hooks.splice(index, 1);
  }
}

function mergeInterceptorHook(interceptor, option) {
  Object.keys(option).forEach(function (hook) {
    if (HOOKS.indexOf(hook) !== -1 && isFn(option[hook])) {
      interceptor[hook] = mergeHook(interceptor[hook], option[hook]);
    }
  });
}

function removeInterceptorHook(interceptor, option) {
  if (!interceptor || !option) {
    return;
  }
  Object.keys(option).forEach(function (hook) {
    if (HOOKS.indexOf(hook) !== -1 && isFn(option[hook])) {
      removeHook(interceptor[hook], option[hook]);
    }
  });
}

function addInterceptor(method, option) {
  if (typeof method === 'string' && isPlainObject(option)) {
    mergeInterceptorHook(scopedInterceptors[method] || (scopedInterceptors[method] = {}), option);
  } else if (isPlainObject(method)) {
    mergeInterceptorHook(globalInterceptors, method);
  }
}

function removeInterceptor(method, option) {
  if (typeof method === 'string') {
    if (isPlainObject(option)) {
      removeInterceptorHook(scopedInterceptors[method], option);
    } else {
      delete scopedInterceptors[method];
    }
  } else if (isPlainObject(method)) {
    removeInterceptorHook(globalInterceptors, method);
  }
}

function wrapperHook(hook) {
  return function (data) {
    return hook(data) || data;
  };
}

function isPromise(obj) {
  return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';
}

function queue(hooks, data) {
  var promise = false;
  for (var i = 0; i < hooks.length; i++) {
    var hook = hooks[i];
    if (promise) {
      promise = Promise.resolve(wrapperHook(hook));
    } else {
      var res = hook(data);
      if (isPromise(res)) {
        promise = Promise.resolve(res);
      }
      if (res === false) {
        return {
          then: function then() {} };

      }
    }
  }
  return promise || {
    then: function then(callback) {
      return callback(data);
    } };

}

function wrapperOptions(interceptor) {var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  ['success', 'fail', 'complete'].forEach(function (name) {
    if (Array.isArray(interceptor[name])) {
      var oldCallback = options[name];
      options[name] = function callbackInterceptor(res) {
        queue(interceptor[name], res).then(function (res) {
          /* eslint-disable no-mixed-operators */
          return isFn(oldCallback) && oldCallback(res) || res;
        });
      };
    }
  });
  return options;
}

function wrapperReturnValue(method, returnValue) {
  var returnValueHooks = [];
  if (Array.isArray(globalInterceptors.returnValue)) {
    returnValueHooks.push.apply(returnValueHooks, _toConsumableArray(globalInterceptors.returnValue));
  }
  var interceptor = scopedInterceptors[method];
  if (interceptor && Array.isArray(interceptor.returnValue)) {
    returnValueHooks.push.apply(returnValueHooks, _toConsumableArray(interceptor.returnValue));
  }
  returnValueHooks.forEach(function (hook) {
    returnValue = hook(returnValue) || returnValue;
  });
  return returnValue;
}

function getApiInterceptorHooks(method) {
  var interceptor = Object.create(null);
  Object.keys(globalInterceptors).forEach(function (hook) {
    if (hook !== 'returnValue') {
      interceptor[hook] = globalInterceptors[hook].slice();
    }
  });
  var scopedInterceptor = scopedInterceptors[method];
  if (scopedInterceptor) {
    Object.keys(scopedInterceptor).forEach(function (hook) {
      if (hook !== 'returnValue') {
        interceptor[hook] = (interceptor[hook] || []).concat(scopedInterceptor[hook]);
      }
    });
  }
  return interceptor;
}

function invokeApi(method, api, options) {for (var _len = arguments.length, params = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {params[_key - 3] = arguments[_key];}
  var interceptor = getApiInterceptorHooks(method);
  if (interceptor && Object.keys(interceptor).length) {
    if (Array.isArray(interceptor.invoke)) {
      var res = queue(interceptor.invoke, options);
      return res.then(function (options) {
        return api.apply(void 0, [wrapperOptions(interceptor, options)].concat(params));
      });
    } else {
      return api.apply(void 0, [wrapperOptions(interceptor, options)].concat(params));
    }
  }
  return api.apply(void 0, [options].concat(params));
}

var promiseInterceptor = {
  returnValue: function returnValue(res) {
    if (!isPromise(res)) {
      return res;
    }
    return res.then(function (res) {
      return res[1];
    }).catch(function (res) {
      return res[0];
    });
  } };


var SYNC_API_RE =
/^\$|sendNativeEvent|restoreGlobal|getCurrentSubNVue|getMenuButtonBoundingClientRect|^report|interceptors|Interceptor$|getSubNVueById|requireNativePlugin|upx2px|hideKeyboard|canIUse|^create|Sync$|Manager$|base64ToArrayBuffer|arrayBufferToBase64/;

var CONTEXT_API_RE = /^create|Manager$/;

// Context例外情况
var CONTEXT_API_RE_EXC = ['createBLEConnection'];

// 同步例外情况
var ASYNC_API = ['createBLEConnection'];

var CALLBACK_API_RE = /^on|^off/;

function isContextApi(name) {
  return CONTEXT_API_RE.test(name) && CONTEXT_API_RE_EXC.indexOf(name) === -1;
}
function isSyncApi(name) {
  return SYNC_API_RE.test(name) && ASYNC_API.indexOf(name) === -1;
}

function isCallbackApi(name) {
  return CALLBACK_API_RE.test(name) && name !== 'onPush';
}

function handlePromise(promise) {
  return promise.then(function (data) {
    return [null, data];
  }).
  catch(function (err) {return [err];});
}

function shouldPromise(name) {
  if (
  isContextApi(name) ||
  isSyncApi(name) ||
  isCallbackApi(name))
  {
    return false;
  }
  return true;
}

/* eslint-disable no-extend-native */
if (!Promise.prototype.finally) {
  Promise.prototype.finally = function (callback) {
    var promise = this.constructor;
    return this.then(
    function (value) {return promise.resolve(callback()).then(function () {return value;});},
    function (reason) {return promise.resolve(callback()).then(function () {
        throw reason;
      });});

  };
}

function promisify(name, api) {
  if (!shouldPromise(name)) {
    return api;
  }
  return function promiseApi() {var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};for (var _len2 = arguments.length, params = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {params[_key2 - 1] = arguments[_key2];}
    if (isFn(options.success) || isFn(options.fail) || isFn(options.complete)) {
      return wrapperReturnValue(name, invokeApi.apply(void 0, [name, api, options].concat(params)));
    }
    return wrapperReturnValue(name, handlePromise(new Promise(function (resolve, reject) {
      invokeApi.apply(void 0, [name, api, Object.assign({}, options, {
        success: resolve,
        fail: reject })].concat(
      params));
    })));
  };
}

var EPS = 1e-4;
var BASE_DEVICE_WIDTH = 750;
var isIOS = false;
var deviceWidth = 0;
var deviceDPR = 0;

function checkDeviceWidth() {var _wx$getSystemInfoSync =




  wx.getSystemInfoSync(),platform = _wx$getSystemInfoSync.platform,pixelRatio = _wx$getSystemInfoSync.pixelRatio,windowWidth = _wx$getSystemInfoSync.windowWidth; // uni=>wx runtime 编译目标是 uni 对象，内部不允许直接使用 uni

  deviceWidth = windowWidth;
  deviceDPR = pixelRatio;
  isIOS = platform === 'ios';
}

function upx2px(number, newDeviceWidth) {
  if (deviceWidth === 0) {
    checkDeviceWidth();
  }

  number = Number(number);
  if (number === 0) {
    return 0;
  }
  var result = number / BASE_DEVICE_WIDTH * (newDeviceWidth || deviceWidth);
  if (result < 0) {
    result = -result;
  }
  result = Math.floor(result + EPS);
  if (result === 0) {
    if (deviceDPR === 1 || !isIOS) {
      result = 1;
    } else {
      result = 0.5;
    }
  }
  return number < 0 ? -result : result;
}

var interceptors = {
  promiseInterceptor: promiseInterceptor };


var baseApi = /*#__PURE__*/Object.freeze({
  __proto__: null,
  upx2px: upx2px,
  addInterceptor: addInterceptor,
  removeInterceptor: removeInterceptor,
  interceptors: interceptors });var


EventChannel = /*#__PURE__*/function () {
  function EventChannel(id, events) {var _this = this;_classCallCheck(this, EventChannel);
    this.id = id;
    this.listener = {};
    this.emitCache = {};
    if (events) {
      Object.keys(events).forEach(function (name) {
        _this.on(name, events[name]);
      });
    }
  }_createClass(EventChannel, [{ key: "emit", value: function emit(

    eventName) {for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {args[_key3 - 1] = arguments[_key3];}
      var fns = this.listener[eventName];
      if (!fns) {
        return (this.emitCache[eventName] || (this.emitCache[eventName] = [])).push(args);
      }
      fns.forEach(function (opt) {
        opt.fn.apply(opt.fn, args);
      });
      this.listener[eventName] = fns.filter(function (opt) {return opt.type !== 'once';});
    } }, { key: "on", value: function on(

    eventName, fn) {
      this._addListener(eventName, 'on', fn);
      this._clearCache(eventName);
    } }, { key: "once", value: function once(

    eventName, fn) {
      this._addListener(eventName, 'once', fn);
      this._clearCache(eventName);
    } }, { key: "off", value: function off(

    eventName, fn) {
      var fns = this.listener[eventName];
      if (!fns) {
        return;
      }
      if (fn) {
        for (var i = 0; i < fns.length;) {
          if (fns[i].fn === fn) {
            fns.splice(i, 1);
            i--;
          }
          i++;
        }
      } else {
        delete this.listener[eventName];
      }
    } }, { key: "_clearCache", value: function _clearCache(

    eventName) {
      var cacheArgs = this.emitCache[eventName];
      if (cacheArgs) {
        for (; cacheArgs.length > 0;) {
          this.emit.apply(this, [eventName].concat(cacheArgs.shift()));
        }
      }
    } }, { key: "_addListener", value: function _addListener(

    eventName, type, fn) {
      (this.listener[eventName] || (this.listener[eventName] = [])).push({
        fn: fn,
        type: type });

    } }]);return EventChannel;}();


var eventChannels = {};

var eventChannelStack = [];

var id = 0;

function initEventChannel(events) {var cache = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
  id++;
  var eventChannel = new EventChannel(id, events);
  if (cache) {
    eventChannels[id] = eventChannel;
    eventChannelStack.push(eventChannel);
  }
  return eventChannel;
}

function getEventChannel(id) {
  if (id) {
    var eventChannel = eventChannels[id];
    delete eventChannels[id];
    return eventChannel;
  }
  return eventChannelStack.shift();
}

var navigateTo = {
  args: function args(fromArgs, toArgs) {
    var id = initEventChannel(fromArgs.events).id;
    if (fromArgs.url) {
      fromArgs.url = fromArgs.url + (fromArgs.url.indexOf('?') === -1 ? '?' : '&') + '__id__=' + id;
    }
  },
  returnValue: function returnValue(fromRes, toRes) {
    fromRes.eventChannel = getEventChannel();
  } };


function findExistsPageIndex(url) {
  var pages = getCurrentPages();
  var len = pages.length;
  while (len--) {
    var page = pages[len];
    if (page.$page && page.$page.fullPath === url) {
      return len;
    }
  }
  return -1;
}

var redirectTo = {
  name: function name(fromArgs) {
    if (fromArgs.exists === 'back' && fromArgs.delta) {
      return 'navigateBack';
    }
    return 'redirectTo';
  },
  args: function args(fromArgs) {
    if (fromArgs.exists === 'back' && fromArgs.url) {
      var existsPageIndex = findExistsPageIndex(fromArgs.url);
      if (existsPageIndex !== -1) {
        var delta = getCurrentPages().length - 1 - existsPageIndex;
        if (delta > 0) {
          fromArgs.delta = delta;
        }
      }
    }
  } };


var previewImage = {
  args: function args(fromArgs) {
    var currentIndex = parseInt(fromArgs.current);
    if (isNaN(currentIndex)) {
      return;
    }
    var urls = fromArgs.urls;
    if (!Array.isArray(urls)) {
      return;
    }
    var len = urls.length;
    if (!len) {
      return;
    }
    if (currentIndex < 0) {
      currentIndex = 0;
    } else if (currentIndex >= len) {
      currentIndex = len - 1;
    }
    if (currentIndex > 0) {
      fromArgs.current = urls[currentIndex];
      fromArgs.urls = urls.filter(
      function (item, index) {return index < currentIndex ? item !== urls[currentIndex] : true;});

    } else {
      fromArgs.current = urls[0];
    }
    return {
      indicator: false,
      loop: false };

  } };


function addSafeAreaInsets(result) {
  if (result.safeArea) {
    var safeArea = result.safeArea;
    result.safeAreaInsets = {
      top: safeArea.top,
      left: safeArea.left,
      right: result.windowWidth - safeArea.right,
      bottom: result.windowHeight - safeArea.bottom };

  }
}
var protocols = {
  redirectTo: redirectTo,
  navigateTo: navigateTo,
  previewImage: previewImage,
  getSystemInfo: {
    returnValue: addSafeAreaInsets },

  getSystemInfoSync: {
    returnValue: addSafeAreaInsets } };


var todos = [
'vibrate',
'preloadPage',
'unPreloadPage',
'loadSubPackage'];

var canIUses = [];

var CALLBACKS = ['success', 'fail', 'cancel', 'complete'];

function processCallback(methodName, method, returnValue) {
  return function (res) {
    return method(processReturnValue(methodName, res, returnValue));
  };
}

function processArgs(methodName, fromArgs) {var argsOption = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};var returnValue = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};var keepFromArgs = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
  if (isPlainObject(fromArgs)) {// 一般 api 的参数解析
    var toArgs = keepFromArgs === true ? fromArgs : {}; // returnValue 为 false 时，说明是格式化返回值，直接在返回值对象上修改赋值
    if (isFn(argsOption)) {
      argsOption = argsOption(fromArgs, toArgs) || {};
    }
    for (var key in fromArgs) {
      if (hasOwn(argsOption, key)) {
        var keyOption = argsOption[key];
        if (isFn(keyOption)) {
          keyOption = keyOption(fromArgs[key], fromArgs, toArgs);
        }
        if (!keyOption) {// 不支持的参数
          console.warn("\u5FAE\u4FE1\u5C0F\u7A0B\u5E8F ".concat(methodName, "\u6682\u4E0D\u652F\u6301").concat(key));
        } else if (isStr(keyOption)) {// 重写参数 key
          toArgs[keyOption] = fromArgs[key];
        } else if (isPlainObject(keyOption)) {// {name:newName,value:value}可重新指定参数 key:value
          toArgs[keyOption.name ? keyOption.name : key] = keyOption.value;
        }
      } else if (CALLBACKS.indexOf(key) !== -1) {
        if (isFn(fromArgs[key])) {
          toArgs[key] = processCallback(methodName, fromArgs[key], returnValue);
        }
      } else {
        if (!keepFromArgs) {
          toArgs[key] = fromArgs[key];
        }
      }
    }
    return toArgs;
  } else if (isFn(fromArgs)) {
    fromArgs = processCallback(methodName, fromArgs, returnValue);
  }
  return fromArgs;
}

function processReturnValue(methodName, res, returnValue) {var keepReturnValue = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
  if (isFn(protocols.returnValue)) {// 处理通用 returnValue
    res = protocols.returnValue(methodName, res);
  }
  return processArgs(methodName, res, returnValue, {}, keepReturnValue);
}

function wrapper(methodName, method) {
  if (hasOwn(protocols, methodName)) {
    var protocol = protocols[methodName];
    if (!protocol) {// 暂不支持的 api
      return function () {
        console.error("\u5FAE\u4FE1\u5C0F\u7A0B\u5E8F \u6682\u4E0D\u652F\u6301".concat(methodName));
      };
    }
    return function (arg1, arg2) {// 目前 api 最多两个参数
      var options = protocol;
      if (isFn(protocol)) {
        options = protocol(arg1);
      }

      arg1 = processArgs(methodName, arg1, options.args, options.returnValue);

      var args = [arg1];
      if (typeof arg2 !== 'undefined') {
        args.push(arg2);
      }
      if (isFn(options.name)) {
        methodName = options.name(arg1);
      } else if (isStr(options.name)) {
        methodName = options.name;
      }
      var returnValue = wx[methodName].apply(wx, args);
      if (isSyncApi(methodName)) {// 同步 api
        return processReturnValue(methodName, returnValue, options.returnValue, isContextApi(methodName));
      }
      return returnValue;
    };
  }
  return method;
}

var todoApis = Object.create(null);

var TODOS = [
'onTabBarMidButtonTap',
'subscribePush',
'unsubscribePush',
'onPush',
'offPush',
'share'];


function createTodoApi(name) {
  return function todoApi(_ref)


  {var fail = _ref.fail,complete = _ref.complete;
    var res = {
      errMsg: "".concat(name, ":fail:\u6682\u4E0D\u652F\u6301 ").concat(name, " \u65B9\u6CD5") };

    isFn(fail) && fail(res);
    isFn(complete) && complete(res);
  };
}

TODOS.forEach(function (name) {
  todoApis[name] = createTodoApi(name);
});

var providers = {
  oauth: ['weixin'],
  share: ['weixin'],
  payment: ['wxpay'],
  push: ['weixin'] };


function getProvider(_ref2)




{var service = _ref2.service,success = _ref2.success,fail = _ref2.fail,complete = _ref2.complete;
  var res = false;
  if (providers[service]) {
    res = {
      errMsg: 'getProvider:ok',
      service: service,
      provider: providers[service] };

    isFn(success) && success(res);
  } else {
    res = {
      errMsg: 'getProvider:fail:服务[' + service + ']不存在' };

    isFn(fail) && fail(res);
  }
  isFn(complete) && complete(res);
}

var extraApi = /*#__PURE__*/Object.freeze({
  __proto__: null,
  getProvider: getProvider });


var getEmitter = function () {
  var Emitter;
  return function getUniEmitter() {
    if (!Emitter) {
      Emitter = new _vue.default();
    }
    return Emitter;
  };
}();

function apply(ctx, method, args) {
  return ctx[method].apply(ctx, args);
}

function $on() {
  return apply(getEmitter(), '$on', Array.prototype.slice.call(arguments));
}
function $off() {
  return apply(getEmitter(), '$off', Array.prototype.slice.call(arguments));
}
function $once() {
  return apply(getEmitter(), '$once', Array.prototype.slice.call(arguments));
}
function $emit() {
  return apply(getEmitter(), '$emit', Array.prototype.slice.call(arguments));
}

var eventApi = /*#__PURE__*/Object.freeze({
  __proto__: null,
  $on: $on,
  $off: $off,
  $once: $once,
  $emit: $emit });


var api = /*#__PURE__*/Object.freeze({
  __proto__: null });


var MPPage = Page;
var MPComponent = Component;

var customizeRE = /:/g;

var customize = cached(function (str) {
  return camelize(str.replace(customizeRE, '-'));
});

function initTriggerEvent(mpInstance) {
  {
    if (!wx.canIUse('nextTick')) {
      return;
    }
  }
  var oldTriggerEvent = mpInstance.triggerEvent;
  mpInstance.triggerEvent = function (event) {for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {args[_key4 - 1] = arguments[_key4];}
    return oldTriggerEvent.apply(mpInstance, [customize(event)].concat(args));
  };
}

function initHook(name, options) {
  var oldHook = options[name];
  if (!oldHook) {
    options[name] = function () {
      initTriggerEvent(this);
    };
  } else {
    options[name] = function () {
      initTriggerEvent(this);for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {args[_key5] = arguments[_key5];}
      return oldHook.apply(this, args);
    };
  }
}

Page = function Page() {var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  initHook('onLoad', options);
  return MPPage(options);
};

Component = function Component() {var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  initHook('created', options);
  return MPComponent(options);
};

var PAGE_EVENT_HOOKS = [
'onPullDownRefresh',
'onReachBottom',
'onAddToFavorites',
'onShareTimeline',
'onShareAppMessage',
'onPageScroll',
'onResize',
'onTabItemTap'];


function initMocks(vm, mocks) {
  var mpInstance = vm.$mp[vm.mpType];
  mocks.forEach(function (mock) {
    if (hasOwn(mpInstance, mock)) {
      vm[mock] = mpInstance[mock];
    }
  });
}

function hasHook(hook, vueOptions) {
  if (!vueOptions) {
    return true;
  }

  if (_vue.default.options && Array.isArray(_vue.default.options[hook])) {
    return true;
  }

  vueOptions = vueOptions.default || vueOptions;

  if (isFn(vueOptions)) {
    if (isFn(vueOptions.extendOptions[hook])) {
      return true;
    }
    if (vueOptions.super &&
    vueOptions.super.options &&
    Array.isArray(vueOptions.super.options[hook])) {
      return true;
    }
    return false;
  }

  if (isFn(vueOptions[hook])) {
    return true;
  }
  var mixins = vueOptions.mixins;
  if (Array.isArray(mixins)) {
    return !!mixins.find(function (mixin) {return hasHook(hook, mixin);});
  }
}

function initHooks(mpOptions, hooks, vueOptions) {
  hooks.forEach(function (hook) {
    if (hasHook(hook, vueOptions)) {
      mpOptions[hook] = function (args) {
        return this.$vm && this.$vm.__call_hook(hook, args);
      };
    }
  });
}

function initVueComponent(Vue, vueOptions) {
  vueOptions = vueOptions.default || vueOptions;
  var VueComponent;
  if (isFn(vueOptions)) {
    VueComponent = vueOptions;
  } else {
    VueComponent = Vue.extend(vueOptions);
  }
  vueOptions = VueComponent.options;
  return [VueComponent, vueOptions];
}

function initSlots(vm, vueSlots) {
  if (Array.isArray(vueSlots) && vueSlots.length) {
    var $slots = Object.create(null);
    vueSlots.forEach(function (slotName) {
      $slots[slotName] = true;
    });
    vm.$scopedSlots = vm.$slots = $slots;
  }
}

function initVueIds(vueIds, mpInstance) {
  vueIds = (vueIds || '').split(',');
  var len = vueIds.length;

  if (len === 1) {
    mpInstance._$vueId = vueIds[0];
  } else if (len === 2) {
    mpInstance._$vueId = vueIds[0];
    mpInstance._$vuePid = vueIds[1];
  }
}

function initData(vueOptions, context) {
  var data = vueOptions.data || {};
  var methods = vueOptions.methods || {};

  if (typeof data === 'function') {
    try {
      data = data.call(context); // 支持 Vue.prototype 上挂的数据
    } catch (e) {
      if (Object({"VUE_APP_NAME":"uni-doctor","VUE_APP_PLATFORM":"mp-weixin","NODE_ENV":"development","BASE_URL":"/"}).VUE_APP_DEBUG) {
        console.warn('根据 Vue 的 data 函数初始化小程序 data 失败，请尽量确保 data 函数中不访问 vm 对象，否则可能影响首次数据渲染速度。', data);
      }
    }
  } else {
    try {
      // 对 data 格式化
      data = JSON.parse(JSON.stringify(data));
    } catch (e) {}
  }

  if (!isPlainObject(data)) {
    data = {};
  }

  Object.keys(methods).forEach(function (methodName) {
    if (context.__lifecycle_hooks__.indexOf(methodName) === -1 && !hasOwn(data, methodName)) {
      data[methodName] = methods[methodName];
    }
  });

  return data;
}

var PROP_TYPES = [String, Number, Boolean, Object, Array, null];

function createObserver(name) {
  return function observer(newVal, oldVal) {
    if (this.$vm) {
      this.$vm[name] = newVal; // 为了触发其他非 render watcher
    }
  };
}

function initBehaviors(vueOptions, initBehavior) {
  var vueBehaviors = vueOptions.behaviors;
  var vueExtends = vueOptions.extends;
  var vueMixins = vueOptions.mixins;

  var vueProps = vueOptions.props;

  if (!vueProps) {
    vueOptions.props = vueProps = [];
  }

  var behaviors = [];
  if (Array.isArray(vueBehaviors)) {
    vueBehaviors.forEach(function (behavior) {
      behaviors.push(behavior.replace('uni://', "wx".concat("://")));
      if (behavior === 'uni://form-field') {
        if (Array.isArray(vueProps)) {
          vueProps.push('name');
          vueProps.push('value');
        } else {
          vueProps.name = {
            type: String,
            default: '' };

          vueProps.value = {
            type: [String, Number, Boolean, Array, Object, Date],
            default: '' };

        }
      }
    });
  }
  if (isPlainObject(vueExtends) && vueExtends.props) {
    behaviors.push(
    initBehavior({
      properties: initProperties(vueExtends.props, true) }));


  }
  if (Array.isArray(vueMixins)) {
    vueMixins.forEach(function (vueMixin) {
      if (isPlainObject(vueMixin) && vueMixin.props) {
        behaviors.push(
        initBehavior({
          properties: initProperties(vueMixin.props, true) }));


      }
    });
  }
  return behaviors;
}

function parsePropType(key, type, defaultValue, file) {
  // [String]=>String
  if (Array.isArray(type) && type.length === 1) {
    return type[0];
  }
  return type;
}

function initProperties(props) {var isBehavior = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;var file = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';
  var properties = {};
  if (!isBehavior) {
    properties.vueId = {
      type: String,
      value: '' };

    // 用于字节跳动小程序模拟抽象节点
    properties.generic = {
      type: Object,
      value: null };

    properties.vueSlots = { // 小程序不能直接定义 $slots 的 props，所以通过 vueSlots 转换到 $slots
      type: null,
      value: [],
      observer: function observer(newVal, oldVal) {
        var $slots = Object.create(null);
        newVal.forEach(function (slotName) {
          $slots[slotName] = true;
        });
        this.setData({
          $slots: $slots });

      } };

  }
  if (Array.isArray(props)) {// ['title']
    props.forEach(function (key) {
      properties[key] = {
        type: null,
        observer: createObserver(key) };

    });
  } else if (isPlainObject(props)) {// {title:{type:String,default:''},content:String}
    Object.keys(props).forEach(function (key) {
      var opts = props[key];
      if (isPlainObject(opts)) {// title:{type:String,default:''}
        var value = opts.default;
        if (isFn(value)) {
          value = value();
        }

        opts.type = parsePropType(key, opts.type);

        properties[key] = {
          type: PROP_TYPES.indexOf(opts.type) !== -1 ? opts.type : null,
          value: value,
          observer: createObserver(key) };

      } else {// content:String
        var type = parsePropType(key, opts);
        properties[key] = {
          type: PROP_TYPES.indexOf(type) !== -1 ? type : null,
          observer: createObserver(key) };

      }
    });
  }
  return properties;
}

function wrapper$1(event) {
  // TODO 又得兼容 mpvue 的 mp 对象
  try {
    event.mp = JSON.parse(JSON.stringify(event));
  } catch (e) {}

  event.stopPropagation = noop;
  event.preventDefault = noop;

  event.target = event.target || {};

  if (!hasOwn(event, 'detail')) {
    event.detail = {};
  }

  if (hasOwn(event, 'markerId')) {
    event.detail = typeof event.detail === 'object' ? event.detail : {};
    event.detail.markerId = event.markerId;
  }

  if (isPlainObject(event.detail)) {
    event.target = Object.assign({}, event.target, event.detail);
  }

  return event;
}

function getExtraValue(vm, dataPathsArray) {
  var context = vm;
  dataPathsArray.forEach(function (dataPathArray) {
    var dataPath = dataPathArray[0];
    var value = dataPathArray[2];
    if (dataPath || typeof value !== 'undefined') {// ['','',index,'disable']
      var propPath = dataPathArray[1];
      var valuePath = dataPathArray[3];

      var vFor;
      if (Number.isInteger(dataPath)) {
        vFor = dataPath;
      } else if (!dataPath) {
        vFor = context;
      } else if (typeof dataPath === 'string' && dataPath) {
        if (dataPath.indexOf('#s#') === 0) {
          vFor = dataPath.substr(3);
        } else {
          vFor = vm.__get_value(dataPath, context);
        }
      }

      if (Number.isInteger(vFor)) {
        context = value;
      } else if (!propPath) {
        context = vFor[value];
      } else {
        if (Array.isArray(vFor)) {
          context = vFor.find(function (vForItem) {
            return vm.__get_value(propPath, vForItem) === value;
          });
        } else if (isPlainObject(vFor)) {
          context = Object.keys(vFor).find(function (vForKey) {
            return vm.__get_value(propPath, vFor[vForKey]) === value;
          });
        } else {
          console.error('v-for 暂不支持循环数据：', vFor);
        }
      }

      if (valuePath) {
        context = vm.__get_value(valuePath, context);
      }
    }
  });
  return context;
}

function processEventExtra(vm, extra, event) {
  var extraObj = {};

  if (Array.isArray(extra) && extra.length) {
    /**
                                              *[
                                              *    ['data.items', 'data.id', item.data.id],
                                              *    ['metas', 'id', meta.id]
                                              *],
                                              *[
                                              *    ['data.items', 'data.id', item.data.id],
                                              *    ['metas', 'id', meta.id]
                                              *],
                                              *'test'
                                              */
    extra.forEach(function (dataPath, index) {
      if (typeof dataPath === 'string') {
        if (!dataPath) {// model,prop.sync
          extraObj['$' + index] = vm;
        } else {
          if (dataPath === '$event') {// $event
            extraObj['$' + index] = event;
          } else if (dataPath === 'arguments') {
            if (event.detail && event.detail.__args__) {
              extraObj['$' + index] = event.detail.__args__;
            } else {
              extraObj['$' + index] = [event];
            }
          } else if (dataPath.indexOf('$event.') === 0) {// $event.target.value
            extraObj['$' + index] = vm.__get_value(dataPath.replace('$event.', ''), event);
          } else {
            extraObj['$' + index] = vm.__get_value(dataPath);
          }
        }
      } else {
        extraObj['$' + index] = getExtraValue(vm, dataPath);
      }
    });
  }

  return extraObj;
}

function getObjByArray(arr) {
  var obj = {};
  for (var i = 1; i < arr.length; i++) {
    var element = arr[i];
    obj[element[0]] = element[1];
  }
  return obj;
}

function processEventArgs(vm, event) {var args = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];var extra = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];var isCustom = arguments.length > 4 ? arguments[4] : undefined;var methodName = arguments.length > 5 ? arguments[5] : undefined;
  var isCustomMPEvent = false; // wxcomponent 组件，传递原始 event 对象
  if (isCustom) {// 自定义事件
    isCustomMPEvent = event.currentTarget &&
    event.currentTarget.dataset &&
    event.currentTarget.dataset.comType === 'wx';
    if (!args.length) {// 无参数，直接传入 event 或 detail 数组
      if (isCustomMPEvent) {
        return [event];
      }
      return event.detail.__args__ || event.detail;
    }
  }

  var extraObj = processEventExtra(vm, extra, event);

  var ret = [];
  args.forEach(function (arg) {
    if (arg === '$event') {
      if (methodName === '__set_model' && !isCustom) {// input v-model value
        ret.push(event.target.value);
      } else {
        if (isCustom && !isCustomMPEvent) {
          ret.push(event.detail.__args__[0]);
        } else {// wxcomponent 组件或内置组件
          ret.push(event);
        }
      }
    } else {
      if (Array.isArray(arg) && arg[0] === 'o') {
        ret.push(getObjByArray(arg));
      } else if (typeof arg === 'string' && hasOwn(extraObj, arg)) {
        ret.push(extraObj[arg]);
      } else {
        ret.push(arg);
      }
    }
  });

  return ret;
}

var ONCE = '~';
var CUSTOM = '^';

function isMatchEventType(eventType, optType) {
  return eventType === optType ||

  optType === 'regionchange' && (

  eventType === 'begin' ||
  eventType === 'end');


}

function getContextVm(vm) {
  var $parent = vm.$parent;
  // 父组件是 scoped slots 或者其他自定义组件时继续查找
  while ($parent && $parent.$parent && ($parent.$options.generic || $parent.$parent.$options.generic || $parent.$scope._$vuePid)) {
    $parent = $parent.$parent;
  }
  return $parent && $parent.$parent;
}

function handleEvent(event) {var _this2 = this;
  event = wrapper$1(event);

  // [['tap',[['handle',[1,2,a]],['handle1',[1,2,a]]]]]
  var dataset = (event.currentTarget || event.target).dataset;
  if (!dataset) {
    return console.warn('事件信息不存在');
  }
  var eventOpts = dataset.eventOpts || dataset['event-opts']; // 支付宝 web-view 组件 dataset 非驼峰
  if (!eventOpts) {
    return console.warn('事件信息不存在');
  }

  // [['handle',[1,2,a]],['handle1',[1,2,a]]]
  var eventType = event.type;

  var ret = [];

  eventOpts.forEach(function (eventOpt) {
    var type = eventOpt[0];
    var eventsArray = eventOpt[1];

    var isCustom = type.charAt(0) === CUSTOM;
    type = isCustom ? type.slice(1) : type;
    var isOnce = type.charAt(0) === ONCE;
    type = isOnce ? type.slice(1) : type;

    if (eventsArray && isMatchEventType(eventType, type)) {
      eventsArray.forEach(function (eventArray) {
        var methodName = eventArray[0];
        if (methodName) {
          var handlerCtx = _this2.$vm;
          if (handlerCtx.$options.generic) {// mp-weixin,mp-toutiao 抽象节点模拟 scoped slots
            handlerCtx = getContextVm(handlerCtx) || handlerCtx;
          }
          if (methodName === '$emit') {
            handlerCtx.$emit.apply(handlerCtx,
            processEventArgs(
            _this2.$vm,
            event,
            eventArray[1],
            eventArray[2],
            isCustom,
            methodName));

            return;
          }
          var handler = handlerCtx[methodName];
          if (!isFn(handler)) {
            throw new Error(" _vm.".concat(methodName, " is not a function"));
          }
          if (isOnce) {
            if (handler.once) {
              return;
            }
            handler.once = true;
          }
          var params = processEventArgs(
          _this2.$vm,
          event,
          eventArray[1],
          eventArray[2],
          isCustom,
          methodName);

          // 参数尾部增加原始事件对象用于复杂表达式内获取额外数据
          // eslint-disable-next-line no-sparse-arrays
          ret.push(handler.apply(handlerCtx, (Array.isArray(params) ? params : []).concat([,,,,,,,,,, event])));
        }
      });
    }
  });

  if (
  eventType === 'input' &&
  ret.length === 1 &&
  typeof ret[0] !== 'undefined')
  {
    return ret[0];
  }
}

var hooks = [
'onShow',
'onHide',
'onError',
'onPageNotFound',
'onThemeChange',
'onUnhandledRejection'];


function parseBaseApp(vm, _ref3)


{var mocks = _ref3.mocks,initRefs = _ref3.initRefs;
  if (vm.$options.store) {
    _vue.default.prototype.$store = vm.$options.store;
  }

  _vue.default.prototype.mpHost = "mp-weixin";

  _vue.default.mixin({
    beforeCreate: function beforeCreate() {
      if (!this.$options.mpType) {
        return;
      }

      this.mpType = this.$options.mpType;

      this.$mp = _defineProperty({
        data: {} },
      this.mpType, this.$options.mpInstance);


      this.$scope = this.$options.mpInstance;

      delete this.$options.mpType;
      delete this.$options.mpInstance;

      if (this.mpType !== 'app') {
        initRefs(this);
        initMocks(this, mocks);
      }
    } });


  var appOptions = {
    onLaunch: function onLaunch(args) {
      if (this.$vm) {// 已经初始化过了，主要是为了百度，百度 onShow 在 onLaunch 之前
        return;
      }
      {
        if (!wx.canIUse('nextTick')) {// 事实 上2.2.3 即可，简单使用 2.3.0 的 nextTick 判断
          console.error('当前微信基础库版本过低，请将 微信开发者工具-详情-项目设置-调试基础库版本 更换为`2.3.0`以上');
        }
      }

      this.$vm = vm;

      this.$vm.$mp = {
        app: this };


      this.$vm.$scope = this;
      // vm 上也挂载 globalData
      this.$vm.globalData = this.globalData;

      this.$vm._isMounted = true;
      this.$vm.__call_hook('mounted', args);

      this.$vm.__call_hook('onLaunch', args);
    } };


  // 兼容旧版本 globalData
  appOptions.globalData = vm.$options.globalData || {};
  // 将 methods 中的方法挂在 getApp() 中
  var methods = vm.$options.methods;
  if (methods) {
    Object.keys(methods).forEach(function (name) {
      appOptions[name] = methods[name];
    });
  }

  initHooks(appOptions, hooks);

  return appOptions;
}

var mocks = ['__route__', '__wxExparserNodeId__', '__wxWebviewId__'];

function findVmByVueId(vm, vuePid) {
  var $children = vm.$children;
  // 优先查找直属(反向查找:https://github.com/dcloudio/uni-app/issues/1200)
  for (var i = $children.length - 1; i >= 0; i--) {
    var childVm = $children[i];
    if (childVm.$scope._$vueId === vuePid) {
      return childVm;
    }
  }
  // 反向递归查找
  var parentVm;
  for (var _i = $children.length - 1; _i >= 0; _i--) {
    parentVm = findVmByVueId($children[_i], vuePid);
    if (parentVm) {
      return parentVm;
    }
  }
}

function initBehavior(options) {
  return Behavior(options);
}

function isPage() {
  return !!this.route;
}

function initRelation(detail) {
  this.triggerEvent('__l', detail);
}

function initRefs(vm) {
  var mpInstance = vm.$scope;
  Object.defineProperty(vm, '$refs', {
    get: function get() {
      var $refs = {};
      var components = mpInstance.selectAllComponents('.vue-ref');
      components.forEach(function (component) {
        var ref = component.dataset.ref;
        $refs[ref] = component.$vm || component;
      });
      var forComponents = mpInstance.selectAllComponents('.vue-ref-in-for');
      forComponents.forEach(function (component) {
        var ref = component.dataset.ref;
        if (!$refs[ref]) {
          $refs[ref] = [];
        }
        $refs[ref].push(component.$vm || component);
      });
      return $refs;
    } });

}

function handleLink(event) {var _ref4 =



  event.detail || event.value,vuePid = _ref4.vuePid,vueOptions = _ref4.vueOptions; // detail 是微信,value 是百度(dipatch)

  var parentVm;

  if (vuePid) {
    parentVm = findVmByVueId(this.$vm, vuePid);
  }

  if (!parentVm) {
    parentVm = this.$vm;
  }

  vueOptions.parent = parentVm;
}

function parseApp(vm) {
  return parseBaseApp(vm, {
    mocks: mocks,
    initRefs: initRefs });

}

function createApp(vm) {
  _vue.default.prototype.getOpenerEventChannel = function () {
    if (!this.__eventChannel__) {
      this.__eventChannel__ = new EventChannel();
    }
    return this.__eventChannel__;
  };
  var callHook = _vue.default.prototype.__call_hook;
  _vue.default.prototype.__call_hook = function (hook, args) {
    if (hook === 'onLoad' && args && args.__id__) {
      this.__eventChannel__ = getEventChannel(args.__id__);
      delete args.__id__;
    }
    return callHook.call(this, hook, args);
  };
  App(parseApp(vm));
  return vm;
}

var encodeReserveRE = /[!'()*]/g;
var encodeReserveReplacer = function encodeReserveReplacer(c) {return '%' + c.charCodeAt(0).toString(16);};
var commaRE = /%2C/g;

// fixed encodeURIComponent which is more conformant to RFC3986:
// - escapes [!'()*]
// - preserve commas
var encode = function encode(str) {return encodeURIComponent(str).
  replace(encodeReserveRE, encodeReserveReplacer).
  replace(commaRE, ',');};

function stringifyQuery(obj) {var encodeStr = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : encode;
  var res = obj ? Object.keys(obj).map(function (key) {
    var val = obj[key];

    if (val === undefined) {
      return '';
    }

    if (val === null) {
      return encodeStr(key);
    }

    if (Array.isArray(val)) {
      var result = [];
      val.forEach(function (val2) {
        if (val2 === undefined) {
          return;
        }
        if (val2 === null) {
          result.push(encodeStr(key));
        } else {
          result.push(encodeStr(key) + '=' + encodeStr(val2));
        }
      });
      return result.join('&');
    }

    return encodeStr(key) + '=' + encodeStr(val);
  }).filter(function (x) {return x.length > 0;}).join('&') : null;
  return res ? "?".concat(res) : '';
}

function parseBaseComponent(vueComponentOptions)


{var _ref5 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},isPage = _ref5.isPage,initRelation = _ref5.initRelation;var _initVueComponent =
  initVueComponent(_vue.default, vueComponentOptions),_initVueComponent2 = _slicedToArray(_initVueComponent, 2),VueComponent = _initVueComponent2[0],vueOptions = _initVueComponent2[1];

  var options = _objectSpread({
    multipleSlots: true,
    addGlobalClass: true },
  vueOptions.options || {});


  {
    // 微信 multipleSlots 部分情况有 bug，导致内容顺序错乱 如 u-list，提供覆盖选项
    if (vueOptions['mp-weixin'] && vueOptions['mp-weixin'].options) {
      Object.assign(options, vueOptions['mp-weixin'].options);
    }
  }

  var componentOptions = {
    options: options,
    data: initData(vueOptions, _vue.default.prototype),
    behaviors: initBehaviors(vueOptions, initBehavior),
    properties: initProperties(vueOptions.props, false, vueOptions.__file),
    lifetimes: {
      attached: function attached() {
        var properties = this.properties;

        var options = {
          mpType: isPage.call(this) ? 'page' : 'component',
          mpInstance: this,
          propsData: properties };


        initVueIds(properties.vueId, this);

        // 处理父子关系
        initRelation.call(this, {
          vuePid: this._$vuePid,
          vueOptions: options });


        // 初始化 vue 实例
        this.$vm = new VueComponent(options);

        // 处理$slots,$scopedSlots（暂不支持动态变化$slots）
        initSlots(this.$vm, properties.vueSlots);

        // 触发首次 setData
        this.$vm.$mount();
      },
      ready: function ready() {
        // 当组件 props 默认值为 true，初始化时传入 false 会导致 created,ready 触发, 但 attached 不触发
        // https://developers.weixin.qq.com/community/develop/doc/00066ae2844cc0f8eb883e2a557800
        if (this.$vm) {
          this.$vm._isMounted = true;
          this.$vm.__call_hook('mounted');
          this.$vm.__call_hook('onReady');
        }
      },
      detached: function detached() {
        this.$vm && this.$vm.$destroy();
      } },

    pageLifetimes: {
      show: function show(args) {
        this.$vm && this.$vm.__call_hook('onPageShow', args);
      },
      hide: function hide() {
        this.$vm && this.$vm.__call_hook('onPageHide');
      },
      resize: function resize(size) {
        this.$vm && this.$vm.__call_hook('onPageResize', size);
      } },

    methods: {
      __l: handleLink,
      __e: handleEvent } };


  // externalClasses
  if (vueOptions.externalClasses) {
    componentOptions.externalClasses = vueOptions.externalClasses;
  }

  if (Array.isArray(vueOptions.wxsCallMethods)) {
    vueOptions.wxsCallMethods.forEach(function (callMethod) {
      componentOptions.methods[callMethod] = function (args) {
        return this.$vm[callMethod](args);
      };
    });
  }

  if (isPage) {
    return componentOptions;
  }
  return [componentOptions, VueComponent];
}

function parseComponent(vueComponentOptions) {
  return parseBaseComponent(vueComponentOptions, {
    isPage: isPage,
    initRelation: initRelation });

}

var hooks$1 = [
'onShow',
'onHide',
'onUnload'];


hooks$1.push.apply(hooks$1, PAGE_EVENT_HOOKS);

function parseBasePage(vuePageOptions, _ref6)


{var isPage = _ref6.isPage,initRelation = _ref6.initRelation;
  var pageOptions = parseComponent(vuePageOptions);

  initHooks(pageOptions.methods, hooks$1, vuePageOptions);

  pageOptions.methods.onLoad = function (query) {
    this.options = query;
    var copyQuery = Object.assign({}, query);
    delete copyQuery.__id__;
    this.$page = {
      fullPath: '/' + (this.route || this.is) + stringifyQuery(copyQuery) };

    this.$vm.$mp.query = query; // 兼容 mpvue
    this.$vm.__call_hook('onLoad', query);
  };

  return pageOptions;
}

function parsePage(vuePageOptions) {
  return parseBasePage(vuePageOptions, {
    isPage: isPage,
    initRelation: initRelation });

}

function createPage(vuePageOptions) {
  {
    return Component(parsePage(vuePageOptions));
  }
}

function createComponent(vueOptions) {
  {
    return Component(parseComponent(vueOptions));
  }
}

todos.forEach(function (todoApi) {
  protocols[todoApi] = false;
});

canIUses.forEach(function (canIUseApi) {
  var apiName = protocols[canIUseApi] && protocols[canIUseApi].name ? protocols[canIUseApi].name :
  canIUseApi;
  if (!wx.canIUse(apiName)) {
    protocols[canIUseApi] = false;
  }
});

var uni = {};

if (typeof Proxy !== 'undefined' && "mp-weixin" !== 'app-plus') {
  uni = new Proxy({}, {
    get: function get(target, name) {
      if (hasOwn(target, name)) {
        return target[name];
      }
      if (baseApi[name]) {
        return baseApi[name];
      }
      if (api[name]) {
        return promisify(name, api[name]);
      }
      {
        if (extraApi[name]) {
          return promisify(name, extraApi[name]);
        }
        if (todoApis[name]) {
          return promisify(name, todoApis[name]);
        }
      }
      if (eventApi[name]) {
        return eventApi[name];
      }
      if (!hasOwn(wx, name) && !hasOwn(protocols, name)) {
        return;
      }
      return promisify(name, wrapper(name, wx[name]));
    },
    set: function set(target, name, value) {
      target[name] = value;
      return true;
    } });

} else {
  Object.keys(baseApi).forEach(function (name) {
    uni[name] = baseApi[name];
  });

  {
    Object.keys(todoApis).forEach(function (name) {
      uni[name] = promisify(name, todoApis[name]);
    });
    Object.keys(extraApi).forEach(function (name) {
      uni[name] = promisify(name, todoApis[name]);
    });
  }

  Object.keys(eventApi).forEach(function (name) {
    uni[name] = eventApi[name];
  });

  Object.keys(api).forEach(function (name) {
    uni[name] = promisify(name, api[name]);
  });

  Object.keys(wx).forEach(function (name) {
    if (hasOwn(wx, name) || hasOwn(protocols, name)) {
      uni[name] = promisify(name, wrapper(name, wx[name]));
    }
  });
}

wx.createApp = createApp;
wx.createPage = createPage;
wx.createComponent = createComponent;

var uni$1 = uni;var _default =

uni$1;exports.default = _default;

/***/ }),
/* 2 */
/*!******************************************************************************************!*\
  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/mp-vue/dist/mp.runtime.esm.js ***!
  \******************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(global) {/*!
 * Vue.js v2.6.11
 * (c) 2014-2020 Evan You
 * Released under the MIT License.
 */
/*  */

var emptyObject = Object.freeze({});

// These helpers produce better VM code in JS engines due to their
// explicitness and function inlining.
function isUndef (v) {
  return v === undefined || v === null
}

function isDef (v) {
  return v !== undefined && v !== null
}

function isTrue (v) {
  return v === true
}

function isFalse (v) {
  return v === false
}

/**
 * Check if value is primitive.
 */
function isPrimitive (value) {
  return (
    typeof value === 'string' ||
    typeof value === 'number' ||
    // $flow-disable-line
    typeof value === 'symbol' ||
    typeof value === 'boolean'
  )
}

/**
 * Quick object check - this is primarily used to tell
 * Objects from primitive values when we know the value
 * is a JSON-compliant type.
 */
function isObject (obj) {
  return obj !== null && typeof obj === 'object'
}

/**
 * Get the raw type string of a value, e.g., [object Object].
 */
var _toString = Object.prototype.toString;

function toRawType (value) {
  return _toString.call(value).slice(8, -1)
}

/**
 * Strict object type check. Only returns true
 * for plain JavaScript objects.
 */
function isPlainObject (obj) {
  return _toString.call(obj) === '[object Object]'
}

function isRegExp (v) {
  return _toString.call(v) === '[object RegExp]'
}

/**
 * Check if val is a valid array index.
 */
function isValidArrayIndex (val) {
  var n = parseFloat(String(val));
  return n >= 0 && Math.floor(n) === n && isFinite(val)
}

function isPromise (val) {
  return (
    isDef(val) &&
    typeof val.then === 'function' &&
    typeof val.catch === 'function'
  )
}

/**
 * Convert a value to a string that is actually rendered.
 */
function toString (val) {
  return val == null
    ? ''
    : Array.isArray(val) || (isPlainObject(val) && val.toString === _toString)
      ? JSON.stringify(val, null, 2)
      : String(val)
}

/**
 * Convert an input value to a number for persistence.
 * If the conversion fails, return original string.
 */
function toNumber (val) {
  var n = parseFloat(val);
  return isNaN(n) ? val : n
}

/**
 * Make a map and return a function for checking if a key
 * is in that map.
 */
function makeMap (
  str,
  expectsLowerCase
) {
  var map = Object.create(null);
  var list = str.split(',');
  for (var i = 0; i < list.length; i++) {
    map[list[i]] = true;
  }
  return expectsLowerCase
    ? function (val) { return map[val.toLowerCase()]; }
    : function (val) { return map[val]; }
}

/**
 * Check if a tag is a built-in tag.
 */
var isBuiltInTag = makeMap('slot,component', true);

/**
 * Check if an attribute is a reserved attribute.
 */
var isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');

/**
 * Remove an item from an array.
 */
function remove (arr, item) {
  if (arr.length) {
    var index = arr.indexOf(item);
    if (index > -1) {
      return arr.splice(index, 1)
    }
  }
}

/**
 * Check whether an object has the property.
 */
var hasOwnProperty = Object.prototype.hasOwnProperty;
function hasOwn (obj, key) {
  return hasOwnProperty.call(obj, key)
}

/**
 * Create a cached version of a pure function.
 */
function cached (fn) {
  var cache = Object.create(null);
  return (function cachedFn (str) {
    var hit = cache[str];
    return hit || (cache[str] = fn(str))
  })
}

/**
 * Camelize a hyphen-delimited string.
 */
var camelizeRE = /-(\w)/g;
var camelize = cached(function (str) {
  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })
});

/**
 * Capitalize a string.
 */
var capitalize = cached(function (str) {
  return str.charAt(0).toUpperCase() + str.slice(1)
});

/**
 * Hyphenate a camelCase string.
 */
var hyphenateRE = /\B([A-Z])/g;
var hyphenate = cached(function (str) {
  return str.replace(hyphenateRE, '-$1').toLowerCase()
});

/**
 * Simple bind polyfill for environments that do not support it,
 * e.g., PhantomJS 1.x. Technically, we don't need this anymore
 * since native bind is now performant enough in most browsers.
 * But removing it would mean breaking code that was able to run in
 * PhantomJS 1.x, so this must be kept for backward compatibility.
 */

/* istanbul ignore next */
function polyfillBind (fn, ctx) {
  function boundFn (a) {
    var l = arguments.length;
    return l
      ? l > 1
        ? fn.apply(ctx, arguments)
        : fn.call(ctx, a)
      : fn.call(ctx)
  }

  boundFn._length = fn.length;
  return boundFn
}

function nativeBind (fn, ctx) {
  return fn.bind(ctx)
}

var bind = Function.prototype.bind
  ? nativeBind
  : polyfillBind;

/**
 * Convert an Array-like object to a real Array.
 */
function toArray (list, start) {
  start = start || 0;
  var i = list.length - start;
  var ret = new Array(i);
  while (i--) {
    ret[i] = list[i + start];
  }
  return ret
}

/**
 * Mix properties into target object.
 */
function extend (to, _from) {
  for (var key in _from) {
    to[key] = _from[key];
  }
  return to
}

/**
 * Merge an Array of Objects into a single Object.
 */
function toObject (arr) {
  var res = {};
  for (var i = 0; i < arr.length; i++) {
    if (arr[i]) {
      extend(res, arr[i]);
    }
  }
  return res
}

/* eslint-disable no-unused-vars */

/**
 * Perform no operation.
 * Stubbing args to make Flow happy without leaving useless transpiled code
 * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/).
 */
function noop (a, b, c) {}

/**
 * Always return false.
 */
var no = function (a, b, c) { return false; };

/* eslint-enable no-unused-vars */

/**
 * Return the same value.
 */
var identity = function (_) { return _; };

/**
 * Check if two values are loosely equal - that is,
 * if they are plain objects, do they have the same shape?
 */
function looseEqual (a, b) {
  if (a === b) { return true }
  var isObjectA = isObject(a);
  var isObjectB = isObject(b);
  if (isObjectA && isObjectB) {
    try {
      var isArrayA = Array.isArray(a);
      var isArrayB = Array.isArray(b);
      if (isArrayA && isArrayB) {
        return a.length === b.length && a.every(function (e, i) {
          return looseEqual(e, b[i])
        })
      } else if (a instanceof Date && b instanceof Date) {
        return a.getTime() === b.getTime()
      } else if (!isArrayA && !isArrayB) {
        var keysA = Object.keys(a);
        var keysB = Object.keys(b);
        return keysA.length === keysB.length && keysA.every(function (key) {
          return looseEqual(a[key], b[key])
        })
      } else {
        /* istanbul ignore next */
        return false
      }
    } catch (e) {
      /* istanbul ignore next */
      return false
    }
  } else if (!isObjectA && !isObjectB) {
    return String(a) === String(b)
  } else {
    return false
  }
}

/**
 * Return the first index at which a loosely equal value can be
 * found in the array (if value is a plain object, the array must
 * contain an object of the same shape), or -1 if it is not present.
 */
function looseIndexOf (arr, val) {
  for (var i = 0; i < arr.length; i++) {
    if (looseEqual(arr[i], val)) { return i }
  }
  return -1
}

/**
 * Ensure a function is called only once.
 */
function once (fn) {
  var called = false;
  return function () {
    if (!called) {
      called = true;
      fn.apply(this, arguments);
    }
  }
}

var ASSET_TYPES = [
  'component',
  'directive',
  'filter'
];

var LIFECYCLE_HOOKS = [
  'beforeCreate',
  'created',
  'beforeMount',
  'mounted',
  'beforeUpdate',
  'updated',
  'beforeDestroy',
  'destroyed',
  'activated',
  'deactivated',
  'errorCaptured',
  'serverPrefetch'
];

/*  */



var config = ({
  /**
   * Option merge strategies (used in core/util/options)
   */
  // $flow-disable-line
  optionMergeStrategies: Object.create(null),

  /**
   * Whether to suppress warnings.
   */
  silent: false,

  /**
   * Show production mode tip message on boot?
   */
  productionTip: "development" !== 'production',

  /**
   * Whether to enable devtools
   */
  devtools: "development" !== 'production',

  /**
   * Whether to record perf
   */
  performance: false,

  /**
   * Error handler for watcher errors
   */
  errorHandler: null,

  /**
   * Warn handler for watcher warns
   */
  warnHandler: null,

  /**
   * Ignore certain custom elements
   */
  ignoredElements: [],

  /**
   * Custom user key aliases for v-on
   */
  // $flow-disable-line
  keyCodes: Object.create(null),

  /**
   * Check if a tag is reserved so that it cannot be registered as a
   * component. This is platform-dependent and may be overwritten.
   */
  isReservedTag: no,

  /**
   * Check if an attribute is reserved so that it cannot be used as a component
   * prop. This is platform-dependent and may be overwritten.
   */
  isReservedAttr: no,

  /**
   * Check if a tag is an unknown element.
   * Platform-dependent.
   */
  isUnknownElement: no,

  /**
   * Get the namespace of an element
   */
  getTagNamespace: noop,

  /**
   * Parse the real tag name for the specific platform.
   */
  parsePlatformTagName: identity,

  /**
   * Check if an attribute must be bound using property, e.g. value
   * Platform-dependent.
   */
  mustUseProp: no,

  /**
   * Perform updates asynchronously. Intended to be used by Vue Test Utils
   * This will significantly reduce performance if set to false.
   */
  async: true,

  /**
   * Exposed for legacy reasons
   */
  _lifecycleHooks: LIFECYCLE_HOOKS
});

/*  */

/**
 * unicode letters used for parsing html tags, component names and property paths.
 * using https://www.w3.org/TR/html53/semantics-scripting.html#potentialcustomelementname
 * skipping \u10000-\uEFFFF due to it freezing up PhantomJS
 */
var unicodeRegExp = /a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;

/**
 * Check if a string starts with $ or _
 */
function isReserved (str) {
  var c = (str + '').charCodeAt(0);
  return c === 0x24 || c === 0x5F
}

/**
 * Define a property.
 */
function def (obj, key, val, enumerable) {
  Object.defineProperty(obj, key, {
    value: val,
    enumerable: !!enumerable,
    writable: true,
    configurable: true
  });
}

/**
 * Parse simple path.
 */
var bailRE = new RegExp(("[^" + (unicodeRegExp.source) + ".$_\\d]"));
function parsePath (path) {
  if (bailRE.test(path)) {
    return
  }
  var segments = path.split('.');
  return function (obj) {
    for (var i = 0; i < segments.length; i++) {
      if (!obj) { return }
      obj = obj[segments[i]];
    }
    return obj
  }
}

/*  */

// can we use __proto__?
var hasProto = '__proto__' in {};

// Browser environment sniffing
var inBrowser = typeof window !== 'undefined';
var inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;
var weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();
var UA = inBrowser && window.navigator.userAgent.toLowerCase();
var isIE = UA && /msie|trident/.test(UA);
var isIE9 = UA && UA.indexOf('msie 9.0') > 0;
var isEdge = UA && UA.indexOf('edge/') > 0;
var isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');
var isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');
var isChrome = UA && /chrome\/\d+/.test(UA) && !isEdge;
var isPhantomJS = UA && /phantomjs/.test(UA);
var isFF = UA && UA.match(/firefox\/(\d+)/);

// Firefox has a "watch" function on Object.prototype...
var nativeWatch = ({}).watch;
if (inBrowser) {
  try {
    var opts = {};
    Object.defineProperty(opts, 'passive', ({
      get: function get () {
      }
    })); // https://github.com/facebook/flow/issues/285
    window.addEventListener('test-passive', null, opts);
  } catch (e) {}
}

// this needs to be lazy-evaled because vue may be required before
// vue-server-renderer can set VUE_ENV
var _isServer;
var isServerRendering = function () {
  if (_isServer === undefined) {
    /* istanbul ignore if */
    if (!inBrowser && !inWeex && typeof global !== 'undefined') {
      // detect presence of vue-server-renderer and avoid
      // Webpack shimming the process
      _isServer = global['process'] && global['process'].env.VUE_ENV === 'server';
    } else {
      _isServer = false;
    }
  }
  return _isServer
};

// detect devtools
var devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;

/* istanbul ignore next */
function isNative (Ctor) {
  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())
}

var hasSymbol =
  typeof Symbol !== 'undefined' && isNative(Symbol) &&
  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);

var _Set;
/* istanbul ignore if */ // $flow-disable-line
if (typeof Set !== 'undefined' && isNative(Set)) {
  // use native Set when available.
  _Set = Set;
} else {
  // a non-standard Set polyfill that only works with primitive keys.
  _Set = /*@__PURE__*/(function () {
    function Set () {
      this.set = Object.create(null);
    }
    Set.prototype.has = function has (key) {
      return this.set[key] === true
    };
    Set.prototype.add = function add (key) {
      this.set[key] = true;
    };
    Set.prototype.clear = function clear () {
      this.set = Object.create(null);
    };

    return Set;
  }());
}

/*  */

var warn = noop;
var tip = noop;
var generateComponentTrace = (noop); // work around flow check
var formatComponentName = (noop);

if (true) {
  var hasConsole = typeof console !== 'undefined';
  var classifyRE = /(?:^|[-_])(\w)/g;
  var classify = function (str) { return str
    .replace(classifyRE, function (c) { return c.toUpperCase(); })
    .replace(/[-_]/g, ''); };

  warn = function (msg, vm) {
    var trace = vm ? generateComponentTrace(vm) : '';

    if (config.warnHandler) {
      config.warnHandler.call(null, msg, vm, trace);
    } else if (hasConsole && (!config.silent)) {
      console.error(("[Vue warn]: " + msg + trace));
    }
  };

  tip = function (msg, vm) {
    if (hasConsole && (!config.silent)) {
      console.warn("[Vue tip]: " + msg + (
        vm ? generateComponentTrace(vm) : ''
      ));
    }
  };

  formatComponentName = function (vm, includeFile) {
    if (vm.$root === vm) {
      if (vm.$options && vm.$options.__file) { // fixed by xxxxxx
        return ('') + vm.$options.__file
      }
      return '<Root>'
    }
    var options = typeof vm === 'function' && vm.cid != null
      ? vm.options
      : vm._isVue
        ? vm.$options || vm.constructor.options
        : vm;
    var name = options.name || options._componentTag;
    var file = options.__file;
    if (!name && file) {
      var match = file.match(/([^/\\]+)\.vue$/);
      name = match && match[1];
    }

    return (
      (name ? ("<" + (classify(name)) + ">") : "<Anonymous>") +
      (file && includeFile !== false ? (" at " + file) : '')
    )
  };

  var repeat = function (str, n) {
    var res = '';
    while (n) {
      if (n % 2 === 1) { res += str; }
      if (n > 1) { str += str; }
      n >>= 1;
    }
    return res
  };

  generateComponentTrace = function (vm) {
    if (vm._isVue && vm.$parent) {
      var tree = [];
      var currentRecursiveSequence = 0;
      while (vm && vm.$options.name !== 'PageBody') {
        if (tree.length > 0) {
          var last = tree[tree.length - 1];
          if (last.constructor === vm.constructor) {
            currentRecursiveSequence++;
            vm = vm.$parent;
            continue
          } else if (currentRecursiveSequence > 0) {
            tree[tree.length - 1] = [last, currentRecursiveSequence];
            currentRecursiveSequence = 0;
          }
        }
        !vm.$options.isReserved && tree.push(vm);
        vm = vm.$parent;
      }
      return '\n\nfound in\n\n' + tree
        .map(function (vm, i) { return ("" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)
            ? ((formatComponentName(vm[0])) + "... (" + (vm[1]) + " recursive calls)")
            : formatComponentName(vm))); })
        .join('\n')
    } else {
      return ("\n\n(found in " + (formatComponentName(vm)) + ")")
    }
  };
}

/*  */

var uid = 0;

/**
 * A dep is an observable that can have multiple
 * directives subscribing to it.
 */
var Dep = function Dep () {
  this.id = uid++;
  this.subs = [];
};

Dep.prototype.addSub = function addSub (sub) {
  this.subs.push(sub);
};

Dep.prototype.removeSub = function removeSub (sub) {
  remove(this.subs, sub);
};

Dep.prototype.depend = function depend () {
  if (Dep.SharedObject.target) {
    Dep.SharedObject.target.addDep(this);
  }
};

Dep.prototype.notify = function notify () {
  // stabilize the subscriber list first
  var subs = this.subs.slice();
  if ( true && !config.async) {
    // subs aren't sorted in scheduler if not running async
    // we need to sort them now to make sure they fire in correct
    // order
    subs.sort(function (a, b) { return a.id - b.id; });
  }
  for (var i = 0, l = subs.length; i < l; i++) {
    subs[i].update();
  }
};

// The current target watcher being evaluated.
// This is globally unique because only one watcher
// can be evaluated at a time.
// fixed by xxxxxx (nvue shared vuex)
/* eslint-disable no-undef */
Dep.SharedObject = {};
Dep.SharedObject.target = null;
Dep.SharedObject.targetStack = [];

function pushTarget (target) {
  Dep.SharedObject.targetStack.push(target);
  Dep.SharedObject.target = target;
  Dep.target = target;
}

function popTarget () {
  Dep.SharedObject.targetStack.pop();
  Dep.SharedObject.target = Dep.SharedObject.targetStack[Dep.SharedObject.targetStack.length - 1];
  Dep.target = Dep.SharedObject.target;
}

/*  */

var VNode = function VNode (
  tag,
  data,
  children,
  text,
  elm,
  context,
  componentOptions,
  asyncFactory
) {
  this.tag = tag;
  this.data = data;
  this.children = children;
  this.text = text;
  this.elm = elm;
  this.ns = undefined;
  this.context = context;
  this.fnContext = undefined;
  this.fnOptions = undefined;
  this.fnScopeId = undefined;
  this.key = data && data.key;
  this.componentOptions = componentOptions;
  this.componentInstance = undefined;
  this.parent = undefined;
  this.raw = false;
  this.isStatic = false;
  this.isRootInsert = true;
  this.isComment = false;
  this.isCloned = false;
  this.isOnce = false;
  this.asyncFactory = asyncFactory;
  this.asyncMeta = undefined;
  this.isAsyncPlaceholder = false;
};

var prototypeAccessors = { child: { configurable: true } };

// DEPRECATED: alias for componentInstance for backwards compat.
/* istanbul ignore next */
prototypeAccessors.child.get = function () {
  return this.componentInstance
};

Object.defineProperties( VNode.prototype, prototypeAccessors );

var createEmptyVNode = function (text) {
  if ( text === void 0 ) text = '';

  var node = new VNode();
  node.text = text;
  node.isComment = true;
  return node
};

function createTextVNode (val) {
  return new VNode(undefined, undefined, undefined, String(val))
}

// optimized shallow clone
// used for static nodes and slot nodes because they may be reused across
// multiple renders, cloning them avoids errors when DOM manipulations rely
// on their elm reference.
function cloneVNode (vnode) {
  var cloned = new VNode(
    vnode.tag,
    vnode.data,
    // #7975
    // clone children array to avoid mutating original in case of cloning
    // a child.
    vnode.children && vnode.children.slice(),
    vnode.text,
    vnode.elm,
    vnode.context,
    vnode.componentOptions,
    vnode.asyncFactory
  );
  cloned.ns = vnode.ns;
  cloned.isStatic = vnode.isStatic;
  cloned.key = vnode.key;
  cloned.isComment = vnode.isComment;
  cloned.fnContext = vnode.fnContext;
  cloned.fnOptions = vnode.fnOptions;
  cloned.fnScopeId = vnode.fnScopeId;
  cloned.asyncMeta = vnode.asyncMeta;
  cloned.isCloned = true;
  return cloned
}

/*
 * not type checking this file because flow doesn't play well with
 * dynamically accessing methods on Array prototype
 */

var arrayProto = Array.prototype;
var arrayMethods = Object.create(arrayProto);

var methodsToPatch = [
  'push',
  'pop',
  'shift',
  'unshift',
  'splice',
  'sort',
  'reverse'
];

/**
 * Intercept mutating methods and emit events
 */
methodsToPatch.forEach(function (method) {
  // cache original method
  var original = arrayProto[method];
  def(arrayMethods, method, function mutator () {
    var args = [], len = arguments.length;
    while ( len-- ) args[ len ] = arguments[ len ];

    var result = original.apply(this, args);
    var ob = this.__ob__;
    var inserted;
    switch (method) {
      case 'push':
      case 'unshift':
        inserted = args;
        break
      case 'splice':
        inserted = args.slice(2);
        break
    }
    if (inserted) { ob.observeArray(inserted); }
    // notify change
    ob.dep.notify();
    return result
  });
});

/*  */

var arrayKeys = Object.getOwnPropertyNames(arrayMethods);

/**
 * In some cases we may want to disable observation inside a component's
 * update computation.
 */
var shouldObserve = true;

function toggleObserving (value) {
  shouldObserve = value;
}

/**
 * Observer class that is attached to each observed
 * object. Once attached, the observer converts the target
 * object's property keys into getter/setters that
 * collect dependencies and dispatch updates.
 */
var Observer = function Observer (value) {
  this.value = value;
  this.dep = new Dep();
  this.vmCount = 0;
  def(value, '__ob__', this);
  if (Array.isArray(value)) {
    if (hasProto) {
      {// fixed by xxxxxx 微信小程序使用 plugins 之后，数组方法被直接挂载到了数组对象上，需要执行 copyAugment 逻辑
        if(value.push !== value.__proto__.push){
          copyAugment(value, arrayMethods, arrayKeys);
        } else {
          protoAugment(value, arrayMethods);
        }
      }
    } else {
      copyAugment(value, arrayMethods, arrayKeys);
    }
    this.observeArray(value);
  } else {
    this.walk(value);
  }
};

/**
 * Walk through all properties and convert them into
 * getter/setters. This method should only be called when
 * value type is Object.
 */
Observer.prototype.walk = function walk (obj) {
  var keys = Object.keys(obj);
  for (var i = 0; i < keys.length; i++) {
    defineReactive$$1(obj, keys[i]);
  }
};

/**
 * Observe a list of Array items.
 */
Observer.prototype.observeArray = function observeArray (items) {
  for (var i = 0, l = items.length; i < l; i++) {
    observe(items[i]);
  }
};

// helpers

/**
 * Augment a target Object or Array by intercepting
 * the prototype chain using __proto__
 */
function protoAugment (target, src) {
  /* eslint-disable no-proto */
  target.__proto__ = src;
  /* eslint-enable no-proto */
}

/**
 * Augment a target Object or Array by defining
 * hidden properties.
 */
/* istanbul ignore next */
function copyAugment (target, src, keys) {
  for (var i = 0, l = keys.length; i < l; i++) {
    var key = keys[i];
    def(target, key, src[key]);
  }
}

/**
 * Attempt to create an observer instance for a value,
 * returns the new observer if successfully observed,
 * or the existing observer if the value already has one.
 */
function observe (value, asRootData) {
  if (!isObject(value) || value instanceof VNode) {
    return
  }
  var ob;
  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {
    ob = value.__ob__;
  } else if (
    shouldObserve &&
    !isServerRendering() &&
    (Array.isArray(value) || isPlainObject(value)) &&
    Object.isExtensible(value) &&
    !value._isVue
  ) {
    ob = new Observer(value);
  }
  if (asRootData && ob) {
    ob.vmCount++;
  }
  return ob
}

/**
 * Define a reactive property on an Object.
 */
function defineReactive$$1 (
  obj,
  key,
  val,
  customSetter,
  shallow
) {
  var dep = new Dep();

  var property = Object.getOwnPropertyDescriptor(obj, key);
  if (property && property.configurable === false) {
    return
  }

  // cater for pre-defined getter/setters
  var getter = property && property.get;
  var setter = property && property.set;
  if ((!getter || setter) && arguments.length === 2) {
    val = obj[key];
  }

  var childOb = !shallow && observe(val);
  Object.defineProperty(obj, key, {
    enumerable: true,
    configurable: true,
    get: function reactiveGetter () {
      var value = getter ? getter.call(obj) : val;
      if (Dep.SharedObject.target) { // fixed by xxxxxx
        dep.depend();
        if (childOb) {
          childOb.dep.depend();
          if (Array.isArray(value)) {
            dependArray(value);
          }
        }
      }
      return value
    },
    set: function reactiveSetter (newVal) {
      var value = getter ? getter.call(obj) : val;
      /* eslint-disable no-self-compare */
      if (newVal === value || (newVal !== newVal && value !== value)) {
        return
      }
      /* eslint-enable no-self-compare */
      if ( true && customSetter) {
        customSetter();
      }
      // #7981: for accessor properties without setter
      if (getter && !setter) { return }
      if (setter) {
        setter.call(obj, newVal);
      } else {
        val = newVal;
      }
      childOb = !shallow && observe(newVal);
      dep.notify();
    }
  });
}

/**
 * Set a property on an object. Adds the new property and
 * triggers change notification if the property doesn't
 * already exist.
 */
function set (target, key, val) {
  if ( true &&
    (isUndef(target) || isPrimitive(target))
  ) {
    warn(("Cannot set reactive property on undefined, null, or primitive value: " + ((target))));
  }
  if (Array.isArray(target) && isValidArrayIndex(key)) {
    target.length = Math.max(target.length, key);
    target.splice(key, 1, val);
    return val
  }
  if (key in target && !(key in Object.prototype)) {
    target[key] = val;
    return val
  }
  var ob = (target).__ob__;
  if (target._isVue || (ob && ob.vmCount)) {
     true && warn(
      'Avoid adding reactive properties to a Vue instance or its root $data ' +
      'at runtime - declare it upfront in the data option.'
    );
    return val
  }
  if (!ob) {
    target[key] = val;
    return val
  }
  defineReactive$$1(ob.value, key, val);
  ob.dep.notify();
  return val
}

/**
 * Delete a property and trigger change if necessary.
 */
function del (target, key) {
  if ( true &&
    (isUndef(target) || isPrimitive(target))
  ) {
    warn(("Cannot delete reactive property on undefined, null, or primitive value: " + ((target))));
  }
  if (Array.isArray(target) && isValidArrayIndex(key)) {
    target.splice(key, 1);
    return
  }
  var ob = (target).__ob__;
  if (target._isVue || (ob && ob.vmCount)) {
     true && warn(
      'Avoid deleting properties on a Vue instance or its root $data ' +
      '- just set it to null.'
    );
    return
  }
  if (!hasOwn(target, key)) {
    return
  }
  delete target[key];
  if (!ob) {
    return
  }
  ob.dep.notify();
}

/**
 * Collect dependencies on array elements when the array is touched, since
 * we cannot intercept array element access like property getters.
 */
function dependArray (value) {
  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {
    e = value[i];
    e && e.__ob__ && e.__ob__.dep.depend();
    if (Array.isArray(e)) {
      dependArray(e);
    }
  }
}

/*  */

/**
 * Option overwriting strategies are functions that handle
 * how to merge a parent option value and a child option
 * value into the final value.
 */
var strats = config.optionMergeStrategies;

/**
 * Options with restrictions
 */
if (true) {
  strats.el = strats.propsData = function (parent, child, vm, key) {
    if (!vm) {
      warn(
        "option \"" + key + "\" can only be used during instance " +
        'creation with the `new` keyword.'
      );
    }
    return defaultStrat(parent, child)
  };
}

/**
 * Helper that recursively merges two data objects together.
 */
function mergeData (to, from) {
  if (!from) { return to }
  var key, toVal, fromVal;

  var keys = hasSymbol
    ? Reflect.ownKeys(from)
    : Object.keys(from);

  for (var i = 0; i < keys.length; i++) {
    key = keys[i];
    // in case the object is already observed...
    if (key === '__ob__') { continue }
    toVal = to[key];
    fromVal = from[key];
    if (!hasOwn(to, key)) {
      set(to, key, fromVal);
    } else if (
      toVal !== fromVal &&
      isPlainObject(toVal) &&
      isPlainObject(fromVal)
    ) {
      mergeData(toVal, fromVal);
    }
  }
  return to
}

/**
 * Data
 */
function mergeDataOrFn (
  parentVal,
  childVal,
  vm
) {
  if (!vm) {
    // in a Vue.extend merge, both should be functions
    if (!childVal) {
      return parentVal
    }
    if (!parentVal) {
      return childVal
    }
    // when parentVal & childVal are both present,
    // we need to return a function that returns the
    // merged result of both functions... no need to
    // check if parentVal is a function here because
    // it has to be a function to pass previous merges.
    return function mergedDataFn () {
      return mergeData(
        typeof childVal === 'function' ? childVal.call(this, this) : childVal,
        typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal
      )
    }
  } else {
    return function mergedInstanceDataFn () {
      // instance merge
      var instanceData = typeof childVal === 'function'
        ? childVal.call(vm, vm)
        : childVal;
      var defaultData = typeof parentVal === 'function'
        ? parentVal.call(vm, vm)
        : parentVal;
      if (instanceData) {
        return mergeData(instanceData, defaultData)
      } else {
        return defaultData
      }
    }
  }
}

strats.data = function (
  parentVal,
  childVal,
  vm
) {
  if (!vm) {
    if (childVal && typeof childVal !== 'function') {
       true && warn(
        'The "data" option should be a function ' +
        'that returns a per-instance value in component ' +
        'definitions.',
        vm
      );

      return parentVal
    }
    return mergeDataOrFn(parentVal, childVal)
  }

  return mergeDataOrFn(parentVal, childVal, vm)
};

/**
 * Hooks and props are merged as arrays.
 */
function mergeHook (
  parentVal,
  childVal
) {
  var res = childVal
    ? parentVal
      ? parentVal.concat(childVal)
      : Array.isArray(childVal)
        ? childVal
        : [childVal]
    : parentVal;
  return res
    ? dedupeHooks(res)
    : res
}

function dedupeHooks (hooks) {
  var res = [];
  for (var i = 0; i < hooks.length; i++) {
    if (res.indexOf(hooks[i]) === -1) {
      res.push(hooks[i]);
    }
  }
  return res
}

LIFECYCLE_HOOKS.forEach(function (hook) {
  strats[hook] = mergeHook;
});

/**
 * Assets
 *
 * When a vm is present (instance creation), we need to do
 * a three-way merge between constructor options, instance
 * options and parent options.
 */
function mergeAssets (
  parentVal,
  childVal,
  vm,
  key
) {
  var res = Object.create(parentVal || null);
  if (childVal) {
     true && assertObjectType(key, childVal, vm);
    return extend(res, childVal)
  } else {
    return res
  }
}

ASSET_TYPES.forEach(function (type) {
  strats[type + 's'] = mergeAssets;
});

/**
 * Watchers.
 *
 * Watchers hashes should not overwrite one
 * another, so we merge them as arrays.
 */
strats.watch = function (
  parentVal,
  childVal,
  vm,
  key
) {
  // work around Firefox's Object.prototype.watch...
  if (parentVal === nativeWatch) { parentVal = undefined; }
  if (childVal === nativeWatch) { childVal = undefined; }
  /* istanbul ignore if */
  if (!childVal) { return Object.create(parentVal || null) }
  if (true) {
    assertObjectType(key, childVal, vm);
  }
  if (!parentVal) { return childVal }
  var ret = {};
  extend(ret, parentVal);
  for (var key$1 in childVal) {
    var parent = ret[key$1];
    var child = childVal[key$1];
    if (parent && !Array.isArray(parent)) {
      parent = [parent];
    }
    ret[key$1] = parent
      ? parent.concat(child)
      : Array.isArray(child) ? child : [child];
  }
  return ret
};

/**
 * Other object hashes.
 */
strats.props =
strats.methods =
strats.inject =
strats.computed = function (
  parentVal,
  childVal,
  vm,
  key
) {
  if (childVal && "development" !== 'production') {
    assertObjectType(key, childVal, vm);
  }
  if (!parentVal) { return childVal }
  var ret = Object.create(null);
  extend(ret, parentVal);
  if (childVal) { extend(ret, childVal); }
  return ret
};
strats.provide = mergeDataOrFn;

/**
 * Default strategy.
 */
var defaultStrat = function (parentVal, childVal) {
  return childVal === undefined
    ? parentVal
    : childVal
};

/**
 * Validate component names
 */
function checkComponents (options) {
  for (var key in options.components) {
    validateComponentName(key);
  }
}

function validateComponentName (name) {
  if (!new RegExp(("^[a-zA-Z][\\-\\.0-9_" + (unicodeRegExp.source) + "]*$")).test(name)) {
    warn(
      'Invalid component name: "' + name + '". Component names ' +
      'should conform to valid custom element name in html5 specification.'
    );
  }
  if (isBuiltInTag(name) || config.isReservedTag(name)) {
    warn(
      'Do not use built-in or reserved HTML elements as component ' +
      'id: ' + name
    );
  }
}

/**
 * Ensure all props option syntax are normalized into the
 * Object-based format.
 */
function normalizeProps (options, vm) {
  var props = options.props;
  if (!props) { return }
  var res = {};
  var i, val, name;
  if (Array.isArray(props)) {
    i = props.length;
    while (i--) {
      val = props[i];
      if (typeof val === 'string') {
        name = camelize(val);
        res[name] = { type: null };
      } else if (true) {
        warn('props must be strings when using array syntax.');
      }
    }
  } else if (isPlainObject(props)) {
    for (var key in props) {
      val = props[key];
      name = camelize(key);
      res[name] = isPlainObject(val)
        ? val
        : { type: val };
    }
  } else if (true) {
    warn(
      "Invalid value for option \"props\": expected an Array or an Object, " +
      "but got " + (toRawType(props)) + ".",
      vm
    );
  }
  options.props = res;
}

/**
 * Normalize all injections into Object-based format
 */
function normalizeInject (options, vm) {
  var inject = options.inject;
  if (!inject) { return }
  var normalized = options.inject = {};
  if (Array.isArray(inject)) {
    for (var i = 0; i < inject.length; i++) {
      normalized[inject[i]] = { from: inject[i] };
    }
  } else if (isPlainObject(inject)) {
    for (var key in inject) {
      var val = inject[key];
      normalized[key] = isPlainObject(val)
        ? extend({ from: key }, val)
        : { from: val };
    }
  } else if (true) {
    warn(
      "Invalid value for option \"inject\": expected an Array or an Object, " +
      "but got " + (toRawType(inject)) + ".",
      vm
    );
  }
}

/**
 * Normalize raw function directives into object format.
 */
function normalizeDirectives (options) {
  var dirs = options.directives;
  if (dirs) {
    for (var key in dirs) {
      var def$$1 = dirs[key];
      if (typeof def$$1 === 'function') {
        dirs[key] = { bind: def$$1, update: def$$1 };
      }
    }
  }
}

function assertObjectType (name, value, vm) {
  if (!isPlainObject(value)) {
    warn(
      "Invalid value for option \"" + name + "\": expected an Object, " +
      "but got " + (toRawType(value)) + ".",
      vm
    );
  }
}

/**
 * Merge two option objects into a new one.
 * Core utility used in both instantiation and inheritance.
 */
function mergeOptions (
  parent,
  child,
  vm
) {
  if (true) {
    checkComponents(child);
  }

  if (typeof child === 'function') {
    child = child.options;
  }

  normalizeProps(child, vm);
  normalizeInject(child, vm);
  normalizeDirectives(child);

  // Apply extends and mixins on the child options,
  // but only if it is a raw options object that isn't
  // the result of another mergeOptions call.
  // Only merged options has the _base property.
  if (!child._base) {
    if (child.extends) {
      parent = mergeOptions(parent, child.extends, vm);
    }
    if (child.mixins) {
      for (var i = 0, l = child.mixins.length; i < l; i++) {
        parent = mergeOptions(parent, child.mixins[i], vm);
      }
    }
  }

  var options = {};
  var key;
  for (key in parent) {
    mergeField(key);
  }
  for (key in child) {
    if (!hasOwn(parent, key)) {
      mergeField(key);
    }
  }
  function mergeField (key) {
    var strat = strats[key] || defaultStrat;
    options[key] = strat(parent[key], child[key], vm, key);
  }
  return options
}

/**
 * Resolve an asset.
 * This function is used because child instances need access
 * to assets defined in its ancestor chain.
 */
function resolveAsset (
  options,
  type,
  id,
  warnMissing
) {
  /* istanbul ignore if */
  if (typeof id !== 'string') {
    return
  }
  var assets = options[type];
  // check local registration variations first
  if (hasOwn(assets, id)) { return assets[id] }
  var camelizedId = camelize(id);
  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }
  var PascalCaseId = capitalize(camelizedId);
  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }
  // fallback to prototype chain
  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];
  if ( true && warnMissing && !res) {
    warn(
      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,
      options
    );
  }
  return res
}

/*  */



function validateProp (
  key,
  propOptions,
  propsData,
  vm
) {
  var prop = propOptions[key];
  var absent = !hasOwn(propsData, key);
  var value = propsData[key];
  // boolean casting
  var booleanIndex = getTypeIndex(Boolean, prop.type);
  if (booleanIndex > -1) {
    if (absent && !hasOwn(prop, 'default')) {
      value = false;
    } else if (value === '' || value === hyphenate(key)) {
      // only cast empty string / same name to boolean if
      // boolean has higher priority
      var stringIndex = getTypeIndex(String, prop.type);
      if (stringIndex < 0 || booleanIndex < stringIndex) {
        value = true;
      }
    }
  }
  // check default value
  if (value === undefined) {
    value = getPropDefaultValue(vm, prop, key);
    // since the default value is a fresh copy,
    // make sure to observe it.
    var prevShouldObserve = shouldObserve;
    toggleObserving(true);
    observe(value);
    toggleObserving(prevShouldObserve);
  }
  if (
    true
  ) {
    assertProp(prop, key, value, vm, absent);
  }
  return value
}

/**
 * Get the default value of a prop.
 */
function getPropDefaultValue (vm, prop, key) {
  // no default, return undefined
  if (!hasOwn(prop, 'default')) {
    return undefined
  }
  var def = prop.default;
  // warn against non-factory defaults for Object & Array
  if ( true && isObject(def)) {
    warn(
      'Invalid default value for prop "' + key + '": ' +
      'Props with type Object/Array must use a factory function ' +
      'to return the default value.',
      vm
    );
  }
  // the raw prop value was also undefined from previous render,
  // return previous default value to avoid unnecessary watcher trigger
  if (vm && vm.$options.propsData &&
    vm.$options.propsData[key] === undefined &&
    vm._props[key] !== undefined
  ) {
    return vm._props[key]
  }
  // call factory function for non-Function types
  // a value is Function if its prototype is function even across different execution context
  return typeof def === 'function' && getType(prop.type) !== 'Function'
    ? def.call(vm)
    : def
}

/**
 * Assert whether a prop is valid.
 */
function assertProp (
  prop,
  name,
  value,
  vm,
  absent
) {
  if (prop.required && absent) {
    warn(
      'Missing required prop: "' + name + '"',
      vm
    );
    return
  }
  if (value == null && !prop.required) {
    return
  }
  var type = prop.type;
  var valid = !type || type === true;
  var expectedTypes = [];
  if (type) {
    if (!Array.isArray(type)) {
      type = [type];
    }
    for (var i = 0; i < type.length && !valid; i++) {
      var assertedType = assertType(value, type[i]);
      expectedTypes.push(assertedType.expectedType || '');
      valid = assertedType.valid;
    }
  }

  if (!valid) {
    warn(
      getInvalidTypeMessage(name, value, expectedTypes),
      vm
    );
    return
  }
  var validator = prop.validator;
  if (validator) {
    if (!validator(value)) {
      warn(
        'Invalid prop: custom validator check failed for prop "' + name + '".',
        vm
      );
    }
  }
}

var simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;

function assertType (value, type) {
  var valid;
  var expectedType = getType(type);
  if (simpleCheckRE.test(expectedType)) {
    var t = typeof value;
    valid = t === expectedType.toLowerCase();
    // for primitive wrapper objects
    if (!valid && t === 'object') {
      valid = value instanceof type;
    }
  } else if (expectedType === 'Object') {
    valid = isPlainObject(value);
  } else if (expectedType === 'Array') {
    valid = Array.isArray(value);
  } else {
    valid = value instanceof type;
  }
  return {
    valid: valid,
    expectedType: expectedType
  }
}

/**
 * Use function string name to check built-in types,
 * because a simple equality check will fail when running
 * across different vms / iframes.
 */
function getType (fn) {
  var match = fn && fn.toString().match(/^\s*function (\w+)/);
  return match ? match[1] : ''
}

function isSameType (a, b) {
  return getType(a) === getType(b)
}

function getTypeIndex (type, expectedTypes) {
  if (!Array.isArray(expectedTypes)) {
    return isSameType(expectedTypes, type) ? 0 : -1
  }
  for (var i = 0, len = expectedTypes.length; i < len; i++) {
    if (isSameType(expectedTypes[i], type)) {
      return i
    }
  }
  return -1
}

function getInvalidTypeMessage (name, value, expectedTypes) {
  var message = "Invalid prop: type check failed for prop \"" + name + "\"." +
    " Expected " + (expectedTypes.map(capitalize).join(', '));
  var expectedType = expectedTypes[0];
  var receivedType = toRawType(value);
  var expectedValue = styleValue(value, expectedType);
  var receivedValue = styleValue(value, receivedType);
  // check if we need to specify expected value
  if (expectedTypes.length === 1 &&
      isExplicable(expectedType) &&
      !isBoolean(expectedType, receivedType)) {
    message += " with value " + expectedValue;
  }
  message += ", got " + receivedType + " ";
  // check if we need to specify received value
  if (isExplicable(receivedType)) {
    message += "with value " + receivedValue + ".";
  }
  return message
}

function styleValue (value, type) {
  if (type === 'String') {
    return ("\"" + value + "\"")
  } else if (type === 'Number') {
    return ("" + (Number(value)))
  } else {
    return ("" + value)
  }
}

function isExplicable (value) {
  var explicitTypes = ['string', 'number', 'boolean'];
  return explicitTypes.some(function (elem) { return value.toLowerCase() === elem; })
}

function isBoolean () {
  var args = [], len = arguments.length;
  while ( len-- ) args[ len ] = arguments[ len ];

  return args.some(function (elem) { return elem.toLowerCase() === 'boolean'; })
}

/*  */

function handleError (err, vm, info) {
  // Deactivate deps tracking while processing error handler to avoid possible infinite rendering.
  // See: https://github.com/vuejs/vuex/issues/1505
  pushTarget();
  try {
    if (vm) {
      var cur = vm;
      while ((cur = cur.$parent)) {
        var hooks = cur.$options.errorCaptured;
        if (hooks) {
          for (var i = 0; i < hooks.length; i++) {
            try {
              var capture = hooks[i].call(cur, err, vm, info) === false;
              if (capture) { return }
            } catch (e) {
              globalHandleError(e, cur, 'errorCaptured hook');
            }
          }
        }
      }
    }
    globalHandleError(err, vm, info);
  } finally {
    popTarget();
  }
}

function invokeWithErrorHandling (
  handler,
  context,
  args,
  vm,
  info
) {
  var res;
  try {
    res = args ? handler.apply(context, args) : handler.call(context);
    if (res && !res._isVue && isPromise(res) && !res._handled) {
      res.catch(function (e) { return handleError(e, vm, info + " (Promise/async)"); });
      // issue #9511
      // avoid catch triggering multiple times when nested calls
      res._handled = true;
    }
  } catch (e) {
    handleError(e, vm, info);
  }
  return res
}

function globalHandleError (err, vm, info) {
  if (config.errorHandler) {
    try {
      return config.errorHandler.call(null, err, vm, info)
    } catch (e) {
      // if the user intentionally throws the original error in the handler,
      // do not log it twice
      if (e !== err) {
        logError(e, null, 'config.errorHandler');
      }
    }
  }
  logError(err, vm, info);
}

function logError (err, vm, info) {
  if (true) {
    warn(("Error in " + info + ": \"" + (err.toString()) + "\""), vm);
  }
  /* istanbul ignore else */
  if ((inBrowser || inWeex) && typeof console !== 'undefined') {
    console.error(err);
  } else {
    throw err
  }
}

/*  */

var callbacks = [];
var pending = false;

function flushCallbacks () {
  pending = false;
  var copies = callbacks.slice(0);
  callbacks.length = 0;
  for (var i = 0; i < copies.length; i++) {
    copies[i]();
  }
}

// Here we have async deferring wrappers using microtasks.
// In 2.5 we used (macro) tasks (in combination with microtasks).
// However, it has subtle problems when state is changed right before repaint
// (e.g. #6813, out-in transitions).
// Also, using (macro) tasks in event handler would cause some weird behaviors
// that cannot be circumvented (e.g. #7109, #7153, #7546, #7834, #8109).
// So we now use microtasks everywhere, again.
// A major drawback of this tradeoff is that there are some scenarios
// where microtasks have too high a priority and fire in between supposedly
// sequential events (e.g. #4521, #6690, which have workarounds)
// or even between bubbling of the same event (#6566).
var timerFunc;

// The nextTick behavior leverages the microtask queue, which can be accessed
// via either native Promise.then or MutationObserver.
// MutationObserver has wider support, however it is seriously bugged in
// UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It
// completely stops working after triggering a few times... so, if native
// Promise is available, we will use it:
/* istanbul ignore next, $flow-disable-line */
if (typeof Promise !== 'undefined' && isNative(Promise)) {
  var p = Promise.resolve();
  timerFunc = function () {
    p.then(flushCallbacks);
    // In problematic UIWebViews, Promise.then doesn't completely break, but
    // it can get stuck in a weird state where callbacks are pushed into the
    // microtask queue but the queue isn't being flushed, until the browser
    // needs to do some other work, e.g. handle a timer. Therefore we can
    // "force" the microtask queue to be flushed by adding an empty timer.
    if (isIOS) { setTimeout(noop); }
  };
} else if (!isIE && typeof MutationObserver !== 'undefined' && (
  isNative(MutationObserver) ||
  // PhantomJS and iOS 7.x
  MutationObserver.toString() === '[object MutationObserverConstructor]'
)) {
  // Use MutationObserver where native Promise is not available,
  // e.g. PhantomJS, iOS7, Android 4.4
  // (#6466 MutationObserver is unreliable in IE11)
  var counter = 1;
  var observer = new MutationObserver(flushCallbacks);
  var textNode = document.createTextNode(String(counter));
  observer.observe(textNode, {
    characterData: true
  });
  timerFunc = function () {
    counter = (counter + 1) % 2;
    textNode.data = String(counter);
  };
} else if (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {
  // Fallback to setImmediate.
  // Technically it leverages the (macro) task queue,
  // but it is still a better choice than setTimeout.
  timerFunc = function () {
    setImmediate(flushCallbacks);
  };
} else {
  // Fallback to setTimeout.
  timerFunc = function () {
    setTimeout(flushCallbacks, 0);
  };
}

function nextTick (cb, ctx) {
  var _resolve;
  callbacks.push(function () {
    if (cb) {
      try {
        cb.call(ctx);
      } catch (e) {
        handleError(e, ctx, 'nextTick');
      }
    } else if (_resolve) {
      _resolve(ctx);
    }
  });
  if (!pending) {
    pending = true;
    timerFunc();
  }
  // $flow-disable-line
  if (!cb && typeof Promise !== 'undefined') {
    return new Promise(function (resolve) {
      _resolve = resolve;
    })
  }
}

/*  */

/* not type checking this file because flow doesn't play well with Proxy */

var initProxy;

if (true) {
  var allowedGlobals = makeMap(
    'Infinity,undefined,NaN,isFinite,isNaN,' +
    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +
    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +
    'require' // for Webpack/Browserify
  );

  var warnNonPresent = function (target, key) {
    warn(
      "Property or method \"" + key + "\" is not defined on the instance but " +
      'referenced during render. Make sure that this property is reactive, ' +
      'either in the data option, or for class-based components, by ' +
      'initializing the property. ' +
      'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',
      target
    );
  };

  var warnReservedPrefix = function (target, key) {
    warn(
      "Property \"" + key + "\" must be accessed with \"$data." + key + "\" because " +
      'properties starting with "$" or "_" are not proxied in the Vue instance to ' +
      'prevent conflicts with Vue internals. ' +
      'See: https://vuejs.org/v2/api/#data',
      target
    );
  };

  var hasProxy =
    typeof Proxy !== 'undefined' && isNative(Proxy);

  if (hasProxy) {
    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');
    config.keyCodes = new Proxy(config.keyCodes, {
      set: function set (target, key, value) {
        if (isBuiltInModifier(key)) {
          warn(("Avoid overwriting built-in modifier in config.keyCodes: ." + key));
          return false
        } else {
          target[key] = value;
          return true
        }
      }
    });
  }

  var hasHandler = {
    has: function has (target, key) {
      var has = key in target;
      var isAllowed = allowedGlobals(key) ||
        (typeof key === 'string' && key.charAt(0) === '_' && !(key in target.$data));
      if (!has && !isAllowed) {
        if (key in target.$data) { warnReservedPrefix(target, key); }
        else { warnNonPresent(target, key); }
      }
      return has || !isAllowed
    }
  };

  var getHandler = {
    get: function get (target, key) {
      if (typeof key === 'string' && !(key in target)) {
        if (key in target.$data) { warnReservedPrefix(target, key); }
        else { warnNonPresent(target, key); }
      }
      return target[key]
    }
  };

  initProxy = function initProxy (vm) {
    if (hasProxy) {
      // determine which proxy handler to use
      var options = vm.$options;
      var handlers = options.render && options.render._withStripped
        ? getHandler
        : hasHandler;
      vm._renderProxy = new Proxy(vm, handlers);
    } else {
      vm._renderProxy = vm;
    }
  };
}

/*  */

var seenObjects = new _Set();

/**
 * Recursively traverse an object to evoke all converted
 * getters, so that every nested property inside the object
 * is collected as a "deep" dependency.
 */
function traverse (val) {
  _traverse(val, seenObjects);
  seenObjects.clear();
}

function _traverse (val, seen) {
  var i, keys;
  var isA = Array.isArray(val);
  if ((!isA && !isObject(val)) || Object.isFrozen(val) || val instanceof VNode) {
    return
  }
  if (val.__ob__) {
    var depId = val.__ob__.dep.id;
    if (seen.has(depId)) {
      return
    }
    seen.add(depId);
  }
  if (isA) {
    i = val.length;
    while (i--) { _traverse(val[i], seen); }
  } else {
    keys = Object.keys(val);
    i = keys.length;
    while (i--) { _traverse(val[keys[i]], seen); }
  }
}

var mark;
var measure;

if (true) {
  var perf = inBrowser && window.performance;
  /* istanbul ignore if */
  if (
    perf &&
    perf.mark &&
    perf.measure &&
    perf.clearMarks &&
    perf.clearMeasures
  ) {
    mark = function (tag) { return perf.mark(tag); };
    measure = function (name, startTag, endTag) {
      perf.measure(name, startTag, endTag);
      perf.clearMarks(startTag);
      perf.clearMarks(endTag);
      // perf.clearMeasures(name)
    };
  }
}

/*  */

var normalizeEvent = cached(function (name) {
  var passive = name.charAt(0) === '&';
  name = passive ? name.slice(1) : name;
  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first
  name = once$$1 ? name.slice(1) : name;
  var capture = name.charAt(0) === '!';
  name = capture ? name.slice(1) : name;
  return {
    name: name,
    once: once$$1,
    capture: capture,
    passive: passive
  }
});

function createFnInvoker (fns, vm) {
  function invoker () {
    var arguments$1 = arguments;

    var fns = invoker.fns;
    if (Array.isArray(fns)) {
      var cloned = fns.slice();
      for (var i = 0; i < cloned.length; i++) {
        invokeWithErrorHandling(cloned[i], null, arguments$1, vm, "v-on handler");
      }
    } else {
      // return handler return value for single handlers
      return invokeWithErrorHandling(fns, null, arguments, vm, "v-on handler")
    }
  }
  invoker.fns = fns;
  return invoker
}

function updateListeners (
  on,
  oldOn,
  add,
  remove$$1,
  createOnceHandler,
  vm
) {
  var name, def$$1, cur, old, event;
  for (name in on) {
    def$$1 = cur = on[name];
    old = oldOn[name];
    event = normalizeEvent(name);
    if (isUndef(cur)) {
       true && warn(
        "Invalid handler for event \"" + (event.name) + "\": got " + String(cur),
        vm
      );
    } else if (isUndef(old)) {
      if (isUndef(cur.fns)) {
        cur = on[name] = createFnInvoker(cur, vm);
      }
      if (isTrue(event.once)) {
        cur = on[name] = createOnceHandler(event.name, cur, event.capture);
      }
      add(event.name, cur, event.capture, event.passive, event.params);
    } else if (cur !== old) {
      old.fns = cur;
      on[name] = old;
    }
  }
  for (name in oldOn) {
    if (isUndef(on[name])) {
      event = normalizeEvent(name);
      remove$$1(event.name, oldOn[name], event.capture);
    }
  }
}

/*  */

/*  */

// fixed by xxxxxx (mp properties)
function extractPropertiesFromVNodeData(data, Ctor, res, context) {
  var propOptions = Ctor.options.mpOptions && Ctor.options.mpOptions.properties;
  if (isUndef(propOptions)) {
    return res
  }
  var externalClasses = Ctor.options.mpOptions.externalClasses || [];
  var attrs = data.attrs;
  var props = data.props;
  if (isDef(attrs) || isDef(props)) {
    for (var key in propOptions) {
      var altKey = hyphenate(key);
      var result = checkProp(res, props, key, altKey, true) ||
          checkProp(res, attrs, key, altKey, false);
      // externalClass
      if (
        result &&
        res[key] &&
        externalClasses.indexOf(altKey) !== -1 &&
        context[camelize(res[key])]
      ) {
        // 赋值 externalClass 真正的值(模板里 externalClass 的值可能是字符串)
        res[key] = context[camelize(res[key])];
      }
    }
  }
  return res
}

function extractPropsFromVNodeData (
  data,
  Ctor,
  tag,
  context// fixed by xxxxxx
) {
  // we are only extracting raw values here.
  // validation and default values are handled in the child
  // component itself.
  var propOptions = Ctor.options.props;
  if (isUndef(propOptions)) {
    // fixed by xxxxxx
    return extractPropertiesFromVNodeData(data, Ctor, {}, context)
  }
  var res = {};
  var attrs = data.attrs;
  var props = data.props;
  if (isDef(attrs) || isDef(props)) {
    for (var key in propOptions) {
      var altKey = hyphenate(key);
      if (true) {
        var keyInLowerCase = key.toLowerCase();
        if (
          key !== keyInLowerCase &&
          attrs && hasOwn(attrs, keyInLowerCase)
        ) {
          tip(
            "Prop \"" + keyInLowerCase + "\" is passed to component " +
            (formatComponentName(tag || Ctor)) + ", but the declared prop name is" +
            " \"" + key + "\". " +
            "Note that HTML attributes are case-insensitive and camelCased " +
            "props need to use their kebab-case equivalents when using in-DOM " +
            "templates. You should probably use \"" + altKey + "\" instead of \"" + key + "\"."
          );
        }
      }
      checkProp(res, props, key, altKey, true) ||
      checkProp(res, attrs, key, altKey, false);
    }
  }
  // fixed by xxxxxx
  return extractPropertiesFromVNodeData(data, Ctor, res, context)
}

function checkProp (
  res,
  hash,
  key,
  altKey,
  preserve
) {
  if (isDef(hash)) {
    if (hasOwn(hash, key)) {
      res[key] = hash[key];
      if (!preserve) {
        delete hash[key];
      }
      return true
    } else if (hasOwn(hash, altKey)) {
      res[key] = hash[altKey];
      if (!preserve) {
        delete hash[altKey];
      }
      return true
    }
  }
  return false
}

/*  */

// The template compiler attempts to minimize the need for normalization by
// statically analyzing the template at compile time.
//
// For plain HTML markup, normalization can be completely skipped because the
// generated render function is guaranteed to return Array<VNode>. There are
// two cases where extra normalization is needed:

// 1. When the children contains components - because a functional component
// may return an Array instead of a single root. In this case, just a simple
// normalization is needed - if any child is an Array, we flatten the whole
// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep
// because functional components already normalize their own children.
function simpleNormalizeChildren (children) {
  for (var i = 0; i < children.length; i++) {
    if (Array.isArray(children[i])) {
      return Array.prototype.concat.apply([], children)
    }
  }
  return children
}

// 2. When the children contains constructs that always generated nested Arrays,
// e.g. <template>, <slot>, v-for, or when the children is provided by user
// with hand-written render functions / JSX. In such cases a full normalization
// is needed to cater to all possible types of children values.
function normalizeChildren (children) {
  return isPrimitive(children)
    ? [createTextVNode(children)]
    : Array.isArray(children)
      ? normalizeArrayChildren(children)
      : undefined
}

function isTextNode (node) {
  return isDef(node) && isDef(node.text) && isFalse(node.isComment)
}

function normalizeArrayChildren (children, nestedIndex) {
  var res = [];
  var i, c, lastIndex, last;
  for (i = 0; i < children.length; i++) {
    c = children[i];
    if (isUndef(c) || typeof c === 'boolean') { continue }
    lastIndex = res.length - 1;
    last = res[lastIndex];
    //  nested
    if (Array.isArray(c)) {
      if (c.length > 0) {
        c = normalizeArrayChildren(c, ((nestedIndex || '') + "_" + i));
        // merge adjacent text nodes
        if (isTextNode(c[0]) && isTextNode(last)) {
          res[lastIndex] = createTextVNode(last.text + (c[0]).text);
          c.shift();
        }
        res.push.apply(res, c);
      }
    } else if (isPrimitive(c)) {
      if (isTextNode(last)) {
        // merge adjacent text nodes
        // this is necessary for SSR hydration because text nodes are
        // essentially merged when rendered to HTML strings
        res[lastIndex] = createTextVNode(last.text + c);
      } else if (c !== '') {
        // convert primitive to vnode
        res.push(createTextVNode(c));
      }
    } else {
      if (isTextNode(c) && isTextNode(last)) {
        // merge adjacent text nodes
        res[lastIndex] = createTextVNode(last.text + c.text);
      } else {
        // default key for nested array children (likely generated by v-for)
        if (isTrue(children._isVList) &&
          isDef(c.tag) &&
          isUndef(c.key) &&
          isDef(nestedIndex)) {
          c.key = "__vlist" + nestedIndex + "_" + i + "__";
        }
        res.push(c);
      }
    }
  }
  return res
}

/*  */

function initProvide (vm) {
  var provide = vm.$options.provide;
  if (provide) {
    vm._provided = typeof provide === 'function'
      ? provide.call(vm)
      : provide;
  }
}

function initInjections (vm) {
  var result = resolveInject(vm.$options.inject, vm);
  if (result) {
    toggleObserving(false);
    Object.keys(result).forEach(function (key) {
      /* istanbul ignore else */
      if (true) {
        defineReactive$$1(vm, key, result[key], function () {
          warn(
            "Avoid mutating an injected value directly since the changes will be " +
            "overwritten whenever the provided component re-renders. " +
            "injection being mutated: \"" + key + "\"",
            vm
          );
        });
      } else {}
    });
    toggleObserving(true);
  }
}

function resolveInject (inject, vm) {
  if (inject) {
    // inject is :any because flow is not smart enough to figure out cached
    var result = Object.create(null);
    var keys = hasSymbol
      ? Reflect.ownKeys(inject)
      : Object.keys(inject);

    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      // #6574 in case the inject object is observed...
      if (key === '__ob__') { continue }
      var provideKey = inject[key].from;
      var source = vm;
      while (source) {
        if (source._provided && hasOwn(source._provided, provideKey)) {
          result[key] = source._provided[provideKey];
          break
        }
        source = source.$parent;
      }
      if (!source) {
        if ('default' in inject[key]) {
          var provideDefault = inject[key].default;
          result[key] = typeof provideDefault === 'function'
            ? provideDefault.call(vm)
            : provideDefault;
        } else if (true) {
          warn(("Injection \"" + key + "\" not found"), vm);
        }
      }
    }
    return result
  }
}

/*  */



/**
 * Runtime helper for resolving raw children VNodes into a slot object.
 */
function resolveSlots (
  children,
  context
) {
  if (!children || !children.length) {
    return {}
  }
  var slots = {};
  for (var i = 0, l = children.length; i < l; i++) {
    var child = children[i];
    var data = child.data;
    // remove slot attribute if the node is resolved as a Vue slot node
    if (data && data.attrs && data.attrs.slot) {
      delete data.attrs.slot;
    }
    // named slots should only be respected if the vnode was rendered in the
    // same context.
    if ((child.context === context || child.fnContext === context) &&
      data && data.slot != null
    ) {
      var name = data.slot;
      var slot = (slots[name] || (slots[name] = []));
      if (child.tag === 'template') {
        slot.push.apply(slot, child.children || []);
      } else {
        slot.push(child);
      }
    } else {
      // fixed by xxxxxx 临时 hack 掉 uni-app 中的异步 name slot page
      if(child.asyncMeta && child.asyncMeta.data && child.asyncMeta.data.slot === 'page'){
        (slots['page'] || (slots['page'] = [])).push(child);
      }else{
        (slots.default || (slots.default = [])).push(child);
      }
    }
  }
  // ignore slots that contains only whitespace
  for (var name$1 in slots) {
    if (slots[name$1].every(isWhitespace)) {
      delete slots[name$1];
    }
  }
  return slots
}

function isWhitespace (node) {
  return (node.isComment && !node.asyncFactory) || node.text === ' '
}

/*  */

function normalizeScopedSlots (
  slots,
  normalSlots,
  prevSlots
) {
  var res;
  var hasNormalSlots = Object.keys(normalSlots).length > 0;
  var isStable = slots ? !!slots.$stable : !hasNormalSlots;
  var key = slots && slots.$key;
  if (!slots) {
    res = {};
  } else if (slots._normalized) {
    // fast path 1: child component re-render only, parent did not change
    return slots._normalized
  } else if (
    isStable &&
    prevSlots &&
    prevSlots !== emptyObject &&
    key === prevSlots.$key &&
    !hasNormalSlots &&
    !prevSlots.$hasNormal
  ) {
    // fast path 2: stable scoped slots w/ no normal slots to proxy,
    // only need to normalize once
    return prevSlots
  } else {
    res = {};
    for (var key$1 in slots) {
      if (slots[key$1] && key$1[0] !== '$') {
        res[key$1] = normalizeScopedSlot(normalSlots, key$1, slots[key$1]);
      }
    }
  }
  // expose normal slots on scopedSlots
  for (var key$2 in normalSlots) {
    if (!(key$2 in res)) {
      res[key$2] = proxyNormalSlot(normalSlots, key$2);
    }
  }
  // avoriaz seems to mock a non-extensible $scopedSlots object
  // and when that is passed down this would cause an error
  if (slots && Object.isExtensible(slots)) {
    (slots)._normalized = res;
  }
  def(res, '$stable', isStable);
  def(res, '$key', key);
  def(res, '$hasNormal', hasNormalSlots);
  return res
}

function normalizeScopedSlot(normalSlots, key, fn) {
  var normalized = function () {
    var res = arguments.length ? fn.apply(null, arguments) : fn({});
    res = res && typeof res === 'object' && !Array.isArray(res)
      ? [res] // single vnode
      : normalizeChildren(res);
    return res && (
      res.length === 0 ||
      (res.length === 1 && res[0].isComment) // #9658
    ) ? undefined
      : res
  };
  // this is a slot using the new v-slot syntax without scope. although it is
  // compiled as a scoped slot, render fn users would expect it to be present
  // on this.$slots because the usage is semantically a normal slot.
  if (fn.proxy) {
    Object.defineProperty(normalSlots, key, {
      get: normalized,
      enumerable: true,
      configurable: true
    });
  }
  return normalized
}

function proxyNormalSlot(slots, key) {
  return function () { return slots[key]; }
}

/*  */

/**
 * Runtime helper for rendering v-for lists.
 */
function renderList (
  val,
  render
) {
  var ret, i, l, keys, key;
  if (Array.isArray(val) || typeof val === 'string') {
    ret = new Array(val.length);
    for (i = 0, l = val.length; i < l; i++) {
      ret[i] = render(val[i], i, i, i); // fixed by xxxxxx
    }
  } else if (typeof val === 'number') {
    ret = new Array(val);
    for (i = 0; i < val; i++) {
      ret[i] = render(i + 1, i, i, i); // fixed by xxxxxx
    }
  } else if (isObject(val)) {
    if (hasSymbol && val[Symbol.iterator]) {
      ret = [];
      var iterator = val[Symbol.iterator]();
      var result = iterator.next();
      while (!result.done) {
        ret.push(render(result.value, ret.length, i++, i)); // fixed by xxxxxx
        result = iterator.next();
      }
    } else {
      keys = Object.keys(val);
      ret = new Array(keys.length);
      for (i = 0, l = keys.length; i < l; i++) {
        key = keys[i];
        ret[i] = render(val[key], key, i, i); // fixed by xxxxxx
      }
    }
  }
  if (!isDef(ret)) {
    ret = [];
  }
  (ret)._isVList = true;
  return ret
}

/*  */

/**
 * Runtime helper for rendering <slot>
 */
function renderSlot (
  name,
  fallback,
  props,
  bindObject
) {
  var scopedSlotFn = this.$scopedSlots[name];
  var nodes;
  if (scopedSlotFn) { // scoped slot
    props = props || {};
    if (bindObject) {
      if ( true && !isObject(bindObject)) {
        warn(
          'slot v-bind without argument expects an Object',
          this
        );
      }
      props = extend(extend({}, bindObject), props);
    }
    // fixed by xxxxxx app-plus scopedSlot
    nodes = scopedSlotFn(props, this, props._i) || fallback;
  } else {
    nodes = this.$slots[name] || fallback;
  }

  var target = props && props.slot;
  if (target) {
    return this.$createElement('template', { slot: target }, nodes)
  } else {
    return nodes
  }
}

/*  */

/**
 * Runtime helper for resolving filters
 */
function resolveFilter (id) {
  return resolveAsset(this.$options, 'filters', id, true) || identity
}

/*  */

function isKeyNotMatch (expect, actual) {
  if (Array.isArray(expect)) {
    return expect.indexOf(actual) === -1
  } else {
    return expect !== actual
  }
}

/**
 * Runtime helper for checking keyCodes from config.
 * exposed as Vue.prototype._k
 * passing in eventKeyName as last argument separately for backwards compat
 */
function checkKeyCodes (
  eventKeyCode,
  key,
  builtInKeyCode,
  eventKeyName,
  builtInKeyName
) {
  var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;
  if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {
    return isKeyNotMatch(builtInKeyName, eventKeyName)
  } else if (mappedKeyCode) {
    return isKeyNotMatch(mappedKeyCode, eventKeyCode)
  } else if (eventKeyName) {
    return hyphenate(eventKeyName) !== key
  }
}

/*  */

/**
 * Runtime helper for merging v-bind="object" into a VNode's data.
 */
function bindObjectProps (
  data,
  tag,
  value,
  asProp,
  isSync
) {
  if (value) {
    if (!isObject(value)) {
       true && warn(
        'v-bind without argument expects an Object or Array value',
        this
      );
    } else {
      if (Array.isArray(value)) {
        value = toObject(value);
      }
      var hash;
      var loop = function ( key ) {
        if (
          key === 'class' ||
          key === 'style' ||
          isReservedAttribute(key)
        ) {
          hash = data;
        } else {
          var type = data.attrs && data.attrs.type;
          hash = asProp || config.mustUseProp(tag, type, key)
            ? data.domProps || (data.domProps = {})
            : data.attrs || (data.attrs = {});
        }
        var camelizedKey = camelize(key);
        var hyphenatedKey = hyphenate(key);
        if (!(camelizedKey in hash) && !(hyphenatedKey in hash)) {
          hash[key] = value[key];

          if (isSync) {
            var on = data.on || (data.on = {});
            on[("update:" + key)] = function ($event) {
              value[key] = $event;
            };
          }
        }
      };

      for (var key in value) loop( key );
    }
  }
  return data
}

/*  */

/**
 * Runtime helper for rendering static trees.
 */
function renderStatic (
  index,
  isInFor
) {
  var cached = this._staticTrees || (this._staticTrees = []);
  var tree = cached[index];
  // if has already-rendered static tree and not inside v-for,
  // we can reuse the same tree.
  if (tree && !isInFor) {
    return tree
  }
  // otherwise, render a fresh tree.
  tree = cached[index] = this.$options.staticRenderFns[index].call(
    this._renderProxy,
    null,
    this // for render fns generated for functional component templates
  );
  markStatic(tree, ("__static__" + index), false);
  return tree
}

/**
 * Runtime helper for v-once.
 * Effectively it means marking the node as static with a unique key.
 */
function markOnce (
  tree,
  index,
  key
) {
  markStatic(tree, ("__once__" + index + (key ? ("_" + key) : "")), true);
  return tree
}

function markStatic (
  tree,
  key,
  isOnce
) {
  if (Array.isArray(tree)) {
    for (var i = 0; i < tree.length; i++) {
      if (tree[i] && typeof tree[i] !== 'string') {
        markStaticNode(tree[i], (key + "_" + i), isOnce);
      }
    }
  } else {
    markStaticNode(tree, key, isOnce);
  }
}

function markStaticNode (node, key, isOnce) {
  node.isStatic = true;
  node.key = key;
  node.isOnce = isOnce;
}

/*  */

function bindObjectListeners (data, value) {
  if (value) {
    if (!isPlainObject(value)) {
       true && warn(
        'v-on without argument expects an Object value',
        this
      );
    } else {
      var on = data.on = data.on ? extend({}, data.on) : {};
      for (var key in value) {
        var existing = on[key];
        var ours = value[key];
        on[key] = existing ? [].concat(existing, ours) : ours;
      }
    }
  }
  return data
}

/*  */

function resolveScopedSlots (
  fns, // see flow/vnode
  res,
  // the following are added in 2.6
  hasDynamicKeys,
  contentHashKey
) {
  res = res || { $stable: !hasDynamicKeys };
  for (var i = 0; i < fns.length; i++) {
    var slot = fns[i];
    if (Array.isArray(slot)) {
      resolveScopedSlots(slot, res, hasDynamicKeys);
    } else if (slot) {
      // marker for reverse proxying v-slot without scope on this.$slots
      if (slot.proxy) {
        slot.fn.proxy = true;
      }
      res[slot.key] = slot.fn;
    }
  }
  if (contentHashKey) {
    (res).$key = contentHashKey;
  }
  return res
}

/*  */

function bindDynamicKeys (baseObj, values) {
  for (var i = 0; i < values.length; i += 2) {
    var key = values[i];
    if (typeof key === 'string' && key) {
      baseObj[values[i]] = values[i + 1];
    } else if ( true && key !== '' && key !== null) {
      // null is a special value for explicitly removing a binding
      warn(
        ("Invalid value for dynamic directive argument (expected string or null): " + key),
        this
      );
    }
  }
  return baseObj
}

// helper to dynamically append modifier runtime markers to event names.
// ensure only append when value is already string, otherwise it will be cast
// to string and cause the type check to miss.
function prependModifier (value, symbol) {
  return typeof value === 'string' ? symbol + value : value
}

/*  */

function installRenderHelpers (target) {
  target._o = markOnce;
  target._n = toNumber;
  target._s = toString;
  target._l = renderList;
  target._t = renderSlot;
  target._q = looseEqual;
  target._i = looseIndexOf;
  target._m = renderStatic;
  target._f = resolveFilter;
  target._k = checkKeyCodes;
  target._b = bindObjectProps;
  target._v = createTextVNode;
  target._e = createEmptyVNode;
  target._u = resolveScopedSlots;
  target._g = bindObjectListeners;
  target._d = bindDynamicKeys;
  target._p = prependModifier;
}

/*  */

function FunctionalRenderContext (
  data,
  props,
  children,
  parent,
  Ctor
) {
  var this$1 = this;

  var options = Ctor.options;
  // ensure the createElement function in functional components
  // gets a unique context - this is necessary for correct named slot check
  var contextVm;
  if (hasOwn(parent, '_uid')) {
    contextVm = Object.create(parent);
    // $flow-disable-line
    contextVm._original = parent;
  } else {
    // the context vm passed in is a functional context as well.
    // in this case we want to make sure we are able to get a hold to the
    // real context instance.
    contextVm = parent;
    // $flow-disable-line
    parent = parent._original;
  }
  var isCompiled = isTrue(options._compiled);
  var needNormalization = !isCompiled;

  this.data = data;
  this.props = props;
  this.children = children;
  this.parent = parent;
  this.listeners = data.on || emptyObject;
  this.injections = resolveInject(options.inject, parent);
  this.slots = function () {
    if (!this$1.$slots) {
      normalizeScopedSlots(
        data.scopedSlots,
        this$1.$slots = resolveSlots(children, parent)
      );
    }
    return this$1.$slots
  };

  Object.defineProperty(this, 'scopedSlots', ({
    enumerable: true,
    get: function get () {
      return normalizeScopedSlots(data.scopedSlots, this.slots())
    }
  }));

  // support for compiled functional template
  if (isCompiled) {
    // exposing $options for renderStatic()
    this.$options = options;
    // pre-resolve slots for renderSlot()
    this.$slots = this.slots();
    this.$scopedSlots = normalizeScopedSlots(data.scopedSlots, this.$slots);
  }

  if (options._scopeId) {
    this._c = function (a, b, c, d) {
      var vnode = createElement(contextVm, a, b, c, d, needNormalization);
      if (vnode && !Array.isArray(vnode)) {
        vnode.fnScopeId = options._scopeId;
        vnode.fnContext = parent;
      }
      return vnode
    };
  } else {
    this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };
  }
}

installRenderHelpers(FunctionalRenderContext.prototype);

function createFunctionalComponent (
  Ctor,
  propsData,
  data,
  contextVm,
  children
) {
  var options = Ctor.options;
  var props = {};
  var propOptions = options.props;
  if (isDef(propOptions)) {
    for (var key in propOptions) {
      props[key] = validateProp(key, propOptions, propsData || emptyObject);
    }
  } else {
    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }
    if (isDef(data.props)) { mergeProps(props, data.props); }
  }

  var renderContext = new FunctionalRenderContext(
    data,
    props,
    children,
    contextVm,
    Ctor
  );

  var vnode = options.render.call(null, renderContext._c, renderContext);

  if (vnode instanceof VNode) {
    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options, renderContext)
  } else if (Array.isArray(vnode)) {
    var vnodes = normalizeChildren(vnode) || [];
    var res = new Array(vnodes.length);
    for (var i = 0; i < vnodes.length; i++) {
      res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options, renderContext);
    }
    return res
  }
}

function cloneAndMarkFunctionalResult (vnode, data, contextVm, options, renderContext) {
  // #7817 clone node before setting fnContext, otherwise if the node is reused
  // (e.g. it was from a cached normal slot) the fnContext causes named slots
  // that should not be matched to match.
  var clone = cloneVNode(vnode);
  clone.fnContext = contextVm;
  clone.fnOptions = options;
  if (true) {
    (clone.devtoolsMeta = clone.devtoolsMeta || {}).renderContext = renderContext;
  }
  if (data.slot) {
    (clone.data || (clone.data = {})).slot = data.slot;
  }
  return clone
}

function mergeProps (to, from) {
  for (var key in from) {
    to[camelize(key)] = from[key];
  }
}

/*  */

/*  */

/*  */

/*  */

// inline hooks to be invoked on component VNodes during patch
var componentVNodeHooks = {
  init: function init (vnode, hydrating) {
    if (
      vnode.componentInstance &&
      !vnode.componentInstance._isDestroyed &&
      vnode.data.keepAlive
    ) {
      // kept-alive components, treat as a patch
      var mountedNode = vnode; // work around flow
      componentVNodeHooks.prepatch(mountedNode, mountedNode);
    } else {
      var child = vnode.componentInstance = createComponentInstanceForVnode(
        vnode,
        activeInstance
      );
      child.$mount(hydrating ? vnode.elm : undefined, hydrating);
    }
  },

  prepatch: function prepatch (oldVnode, vnode) {
    var options = vnode.componentOptions;
    var child = vnode.componentInstance = oldVnode.componentInstance;
    updateChildComponent(
      child,
      options.propsData, // updated props
      options.listeners, // updated listeners
      vnode, // new parent vnode
      options.children // new children
    );
  },

  insert: function insert (vnode) {
    var context = vnode.context;
    var componentInstance = vnode.componentInstance;
    if (!componentInstance._isMounted) {
      callHook(componentInstance, 'onServiceCreated');
      callHook(componentInstance, 'onServiceAttached');
      componentInstance._isMounted = true;
      callHook(componentInstance, 'mounted');
    }
    if (vnode.data.keepAlive) {
      if (context._isMounted) {
        // vue-router#1212
        // During updates, a kept-alive component's child components may
        // change, so directly walking the tree here may call activated hooks
        // on incorrect children. Instead we push them into a queue which will
        // be processed after the whole patch process ended.
        queueActivatedComponent(componentInstance);
      } else {
        activateChildComponent(componentInstance, true /* direct */);
      }
    }
  },

  destroy: function destroy (vnode) {
    var componentInstance = vnode.componentInstance;
    if (!componentInstance._isDestroyed) {
      if (!vnode.data.keepAlive) {
        componentInstance.$destroy();
      } else {
        deactivateChildComponent(componentInstance, true /* direct */);
      }
    }
  }
};

var hooksToMerge = Object.keys(componentVNodeHooks);

function createComponent (
  Ctor,
  data,
  context,
  children,
  tag
) {
  if (isUndef(Ctor)) {
    return
  }

  var baseCtor = context.$options._base;

  // plain options object: turn it into a constructor
  if (isObject(Ctor)) {
    Ctor = baseCtor.extend(Ctor);
  }

  // if at this stage it's not a constructor or an async component factory,
  // reject.
  if (typeof Ctor !== 'function') {
    if (true) {
      warn(("Invalid Component definition: " + (String(Ctor))), context);
    }
    return
  }

  // async component
  var asyncFactory;
  if (isUndef(Ctor.cid)) {
    asyncFactory = Ctor;
    Ctor = resolveAsyncComponent(asyncFactory, baseCtor);
    if (Ctor === undefined) {
      // return a placeholder node for async component, which is rendered
      // as a comment node but preserves all the raw information for the node.
      // the information will be used for async server-rendering and hydration.
      return createAsyncPlaceholder(
        asyncFactory,
        data,
        context,
        children,
        tag
      )
    }
  }

  data = data || {};

  // resolve constructor options in case global mixins are applied after
  // component constructor creation
  resolveConstructorOptions(Ctor);

  // transform component v-model data into props & events
  if (isDef(data.model)) {
    transformModel(Ctor.options, data);
  }

  // extract props
  var propsData = extractPropsFromVNodeData(data, Ctor, tag, context); // fixed by xxxxxx

  // functional component
  if (isTrue(Ctor.options.functional)) {
    return createFunctionalComponent(Ctor, propsData, data, context, children)
  }

  // extract listeners, since these needs to be treated as
  // child component listeners instead of DOM listeners
  var listeners = data.on;
  // replace with listeners with .native modifier
  // so it gets processed during parent component patch.
  data.on = data.nativeOn;

  if (isTrue(Ctor.options.abstract)) {
    // abstract components do not keep anything
    // other than props & listeners & slot

    // work around flow
    var slot = data.slot;
    data = {};
    if (slot) {
      data.slot = slot;
    }
  }

  // install component management hooks onto the placeholder node
  installComponentHooks(data);

  // return a placeholder vnode
  var name = Ctor.options.name || tag;
  var vnode = new VNode(
    ("vue-component-" + (Ctor.cid) + (name ? ("-" + name) : '')),
    data, undefined, undefined, undefined, context,
    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },
    asyncFactory
  );

  return vnode
}

function createComponentInstanceForVnode (
  vnode, // we know it's MountedComponentVNode but flow doesn't
  parent // activeInstance in lifecycle state
) {
  var options = {
    _isComponent: true,
    _parentVnode: vnode,
    parent: parent
  };
  // check inline-template render functions
  var inlineTemplate = vnode.data.inlineTemplate;
  if (isDef(inlineTemplate)) {
    options.render = inlineTemplate.render;
    options.staticRenderFns = inlineTemplate.staticRenderFns;
  }
  return new vnode.componentOptions.Ctor(options)
}

function installComponentHooks (data) {
  var hooks = data.hook || (data.hook = {});
  for (var i = 0; i < hooksToMerge.length; i++) {
    var key = hooksToMerge[i];
    var existing = hooks[key];
    var toMerge = componentVNodeHooks[key];
    if (existing !== toMerge && !(existing && existing._merged)) {
      hooks[key] = existing ? mergeHook$1(toMerge, existing) : toMerge;
    }
  }
}

function mergeHook$1 (f1, f2) {
  var merged = function (a, b) {
    // flow complains about extra args which is why we use any
    f1(a, b);
    f2(a, b);
  };
  merged._merged = true;
  return merged
}

// transform component v-model info (value and callback) into
// prop and event handler respectively.
function transformModel (options, data) {
  var prop = (options.model && options.model.prop) || 'value';
  var event = (options.model && options.model.event) || 'input'
  ;(data.attrs || (data.attrs = {}))[prop] = data.model.value;
  var on = data.on || (data.on = {});
  var existing = on[event];
  var callback = data.model.callback;
  if (isDef(existing)) {
    if (
      Array.isArray(existing)
        ? existing.indexOf(callback) === -1
        : existing !== callback
    ) {
      on[event] = [callback].concat(existing);
    }
  } else {
    on[event] = callback;
  }
}

/*  */

var SIMPLE_NORMALIZE = 1;
var ALWAYS_NORMALIZE = 2;

// wrapper function for providing a more flexible interface
// without getting yelled at by flow
function createElement (
  context,
  tag,
  data,
  children,
  normalizationType,
  alwaysNormalize
) {
  if (Array.isArray(data) || isPrimitive(data)) {
    normalizationType = children;
    children = data;
    data = undefined;
  }
  if (isTrue(alwaysNormalize)) {
    normalizationType = ALWAYS_NORMALIZE;
  }
  return _createElement(context, tag, data, children, normalizationType)
}

function _createElement (
  context,
  tag,
  data,
  children,
  normalizationType
) {
  if (isDef(data) && isDef((data).__ob__)) {
     true && warn(
      "Avoid using observed data object as vnode data: " + (JSON.stringify(data)) + "\n" +
      'Always create fresh vnode data objects in each render!',
      context
    );
    return createEmptyVNode()
  }
  // object syntax in v-bind
  if (isDef(data) && isDef(data.is)) {
    tag = data.is;
  }
  if (!tag) {
    // in case of component :is set to falsy value
    return createEmptyVNode()
  }
  // warn against non-primitive key
  if ( true &&
    isDef(data) && isDef(data.key) && !isPrimitive(data.key)
  ) {
    {
      warn(
        'Avoid using non-primitive value as key, ' +
        'use string/number value instead.',
        context
      );
    }
  }
  // support single function children as default scoped slot
  if (Array.isArray(children) &&
    typeof children[0] === 'function'
  ) {
    data = data || {};
    data.scopedSlots = { default: children[0] };
    children.length = 0;
  }
  if (normalizationType === ALWAYS_NORMALIZE) {
    children = normalizeChildren(children);
  } else if (normalizationType === SIMPLE_NORMALIZE) {
    children = simpleNormalizeChildren(children);
  }
  var vnode, ns;
  if (typeof tag === 'string') {
    var Ctor;
    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);
    if (config.isReservedTag(tag)) {
      // platform built-in elements
      if ( true && isDef(data) && isDef(data.nativeOn)) {
        warn(
          ("The .native modifier for v-on is only valid on components but it was used on <" + tag + ">."),
          context
        );
      }
      vnode = new VNode(
        config.parsePlatformTagName(tag), data, children,
        undefined, undefined, context
      );
    } else if ((!data || !data.pre) && isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {
      // component
      vnode = createComponent(Ctor, data, context, children, tag);
    } else {
      // unknown or unlisted namespaced elements
      // check at runtime because it may get assigned a namespace when its
      // parent normalizes children
      vnode = new VNode(
        tag, data, children,
        undefined, undefined, context
      );
    }
  } else {
    // direct component options / constructor
    vnode = createComponent(tag, data, context, children);
  }
  if (Array.isArray(vnode)) {
    return vnode
  } else if (isDef(vnode)) {
    if (isDef(ns)) { applyNS(vnode, ns); }
    if (isDef(data)) { registerDeepBindings(data); }
    return vnode
  } else {
    return createEmptyVNode()
  }
}

function applyNS (vnode, ns, force) {
  vnode.ns = ns;
  if (vnode.tag === 'foreignObject') {
    // use default namespace inside foreignObject
    ns = undefined;
    force = true;
  }
  if (isDef(vnode.children)) {
    for (var i = 0, l = vnode.children.length; i < l; i++) {
      var child = vnode.children[i];
      if (isDef(child.tag) && (
        isUndef(child.ns) || (isTrue(force) && child.tag !== 'svg'))) {
        applyNS(child, ns, force);
      }
    }
  }
}

// ref #5318
// necessary to ensure parent re-render when deep bindings like :style and
// :class are used on slot nodes
function registerDeepBindings (data) {
  if (isObject(data.style)) {
    traverse(data.style);
  }
  if (isObject(data.class)) {
    traverse(data.class);
  }
}

/*  */

function initRender (vm) {
  vm._vnode = null; // the root of the child tree
  vm._staticTrees = null; // v-once cached trees
  var options = vm.$options;
  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree
  var renderContext = parentVnode && parentVnode.context;
  vm.$slots = resolveSlots(options._renderChildren, renderContext);
  vm.$scopedSlots = emptyObject;
  // bind the createElement fn to this instance
  // so that we get proper render context inside it.
  // args order: tag, data, children, normalizationType, alwaysNormalize
  // internal version is used by render functions compiled from templates
  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };
  // normalization is always applied for the public version, used in
  // user-written render functions.
  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };

  // $attrs & $listeners are exposed for easier HOC creation.
  // they need to be reactive so that HOCs using them are always updated
  var parentData = parentVnode && parentVnode.data;

  /* istanbul ignore else */
  if (true) {
    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {
      !isUpdatingChildComponent && warn("$attrs is readonly.", vm);
    }, true);
    defineReactive$$1(vm, '$listeners', options._parentListeners || emptyObject, function () {
      !isUpdatingChildComponent && warn("$listeners is readonly.", vm);
    }, true);
  } else {}
}

var currentRenderingInstance = null;

function renderMixin (Vue) {
  // install runtime convenience helpers
  installRenderHelpers(Vue.prototype);

  Vue.prototype.$nextTick = function (fn) {
    return nextTick(fn, this)
  };

  Vue.prototype._render = function () {
    var vm = this;
    var ref = vm.$options;
    var render = ref.render;
    var _parentVnode = ref._parentVnode;

    if (_parentVnode) {
      vm.$scopedSlots = normalizeScopedSlots(
        _parentVnode.data.scopedSlots,
        vm.$slots,
        vm.$scopedSlots
      );
    }

    // set parent vnode. this allows render functions to have access
    // to the data on the placeholder node.
    vm.$vnode = _parentVnode;
    // render self
    var vnode;
    try {
      // There's no need to maintain a stack because all render fns are called
      // separately from one another. Nested component's render fns are called
      // when parent component is patched.
      currentRenderingInstance = vm;
      vnode = render.call(vm._renderProxy, vm.$createElement);
    } catch (e) {
      handleError(e, vm, "render");
      // return error render result,
      // or previous vnode to prevent render error causing blank component
      /* istanbul ignore else */
      if ( true && vm.$options.renderError) {
        try {
          vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);
        } catch (e) {
          handleError(e, vm, "renderError");
          vnode = vm._vnode;
        }
      } else {
        vnode = vm._vnode;
      }
    } finally {
      currentRenderingInstance = null;
    }
    // if the returned array contains only a single node, allow it
    if (Array.isArray(vnode) && vnode.length === 1) {
      vnode = vnode[0];
    }
    // return empty vnode in case the render function errored out
    if (!(vnode instanceof VNode)) {
      if ( true && Array.isArray(vnode)) {
        warn(
          'Multiple root nodes returned from render function. Render function ' +
          'should return a single root node.',
          vm
        );
      }
      vnode = createEmptyVNode();
    }
    // set parent
    vnode.parent = _parentVnode;
    return vnode
  };
}

/*  */

function ensureCtor (comp, base) {
  if (
    comp.__esModule ||
    (hasSymbol && comp[Symbol.toStringTag] === 'Module')
  ) {
    comp = comp.default;
  }
  return isObject(comp)
    ? base.extend(comp)
    : comp
}

function createAsyncPlaceholder (
  factory,
  data,
  context,
  children,
  tag
) {
  var node = createEmptyVNode();
  node.asyncFactory = factory;
  node.asyncMeta = { data: data, context: context, children: children, tag: tag };
  return node
}

function resolveAsyncComponent (
  factory,
  baseCtor
) {
  if (isTrue(factory.error) && isDef(factory.errorComp)) {
    return factory.errorComp
  }

  if (isDef(factory.resolved)) {
    return factory.resolved
  }

  var owner = currentRenderingInstance;
  if (owner && isDef(factory.owners) && factory.owners.indexOf(owner) === -1) {
    // already pending
    factory.owners.push(owner);
  }

  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {
    return factory.loadingComp
  }

  if (owner && !isDef(factory.owners)) {
    var owners = factory.owners = [owner];
    var sync = true;
    var timerLoading = null;
    var timerTimeout = null

    ;(owner).$on('hook:destroyed', function () { return remove(owners, owner); });

    var forceRender = function (renderCompleted) {
      for (var i = 0, l = owners.length; i < l; i++) {
        (owners[i]).$forceUpdate();
      }

      if (renderCompleted) {
        owners.length = 0;
        if (timerLoading !== null) {
          clearTimeout(timerLoading);
          timerLoading = null;
        }
        if (timerTimeout !== null) {
          clearTimeout(timerTimeout);
          timerTimeout = null;
        }
      }
    };

    var resolve = once(function (res) {
      // cache resolved
      factory.resolved = ensureCtor(res, baseCtor);
      // invoke callbacks only if this is not a synchronous resolve
      // (async resolves are shimmed as synchronous during SSR)
      if (!sync) {
        forceRender(true);
      } else {
        owners.length = 0;
      }
    });

    var reject = once(function (reason) {
       true && warn(
        "Failed to resolve async component: " + (String(factory)) +
        (reason ? ("\nReason: " + reason) : '')
      );
      if (isDef(factory.errorComp)) {
        factory.error = true;
        forceRender(true);
      }
    });

    var res = factory(resolve, reject);

    if (isObject(res)) {
      if (isPromise(res)) {
        // () => Promise
        if (isUndef(factory.resolved)) {
          res.then(resolve, reject);
        }
      } else if (isPromise(res.component)) {
        res.component.then(resolve, reject);

        if (isDef(res.error)) {
          factory.errorComp = ensureCtor(res.error, baseCtor);
        }

        if (isDef(res.loading)) {
          factory.loadingComp = ensureCtor(res.loading, baseCtor);
          if (res.delay === 0) {
            factory.loading = true;
          } else {
            timerLoading = setTimeout(function () {
              timerLoading = null;
              if (isUndef(factory.resolved) && isUndef(factory.error)) {
                factory.loading = true;
                forceRender(false);
              }
            }, res.delay || 200);
          }
        }

        if (isDef(res.timeout)) {
          timerTimeout = setTimeout(function () {
            timerTimeout = null;
            if (isUndef(factory.resolved)) {
              reject(
                 true
                  ? ("timeout (" + (res.timeout) + "ms)")
                  : undefined
              );
            }
          }, res.timeout);
        }
      }
    }

    sync = false;
    // return in case resolved synchronously
    return factory.loading
      ? factory.loadingComp
      : factory.resolved
  }
}

/*  */

function isAsyncPlaceholder (node) {
  return node.isComment && node.asyncFactory
}

/*  */

function getFirstComponentChild (children) {
  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      var c = children[i];
      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {
        return c
      }
    }
  }
}

/*  */

/*  */

function initEvents (vm) {
  vm._events = Object.create(null);
  vm._hasHookEvent = false;
  // init parent attached events
  var listeners = vm.$options._parentListeners;
  if (listeners) {
    updateComponentListeners(vm, listeners);
  }
}

var target;

function add (event, fn) {
  target.$on(event, fn);
}

function remove$1 (event, fn) {
  target.$off(event, fn);
}

function createOnceHandler (event, fn) {
  var _target = target;
  return function onceHandler () {
    var res = fn.apply(null, arguments);
    if (res !== null) {
      _target.$off(event, onceHandler);
    }
  }
}

function updateComponentListeners (
  vm,
  listeners,
  oldListeners
) {
  target = vm;
  updateListeners(listeners, oldListeners || {}, add, remove$1, createOnceHandler, vm);
  target = undefined;
}

function eventsMixin (Vue) {
  var hookRE = /^hook:/;
  Vue.prototype.$on = function (event, fn) {
    var vm = this;
    if (Array.isArray(event)) {
      for (var i = 0, l = event.length; i < l; i++) {
        vm.$on(event[i], fn);
      }
    } else {
      (vm._events[event] || (vm._events[event] = [])).push(fn);
      // optimize hook:event cost by using a boolean flag marked at registration
      // instead of a hash lookup
      if (hookRE.test(event)) {
        vm._hasHookEvent = true;
      }
    }
    return vm
  };

  Vue.prototype.$once = function (event, fn) {
    var vm = this;
    function on () {
      vm.$off(event, on);
      fn.apply(vm, arguments);
    }
    on.fn = fn;
    vm.$on(event, on);
    return vm
  };

  Vue.prototype.$off = function (event, fn) {
    var vm = this;
    // all
    if (!arguments.length) {
      vm._events = Object.create(null);
      return vm
    }
    // array of events
    if (Array.isArray(event)) {
      for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {
        vm.$off(event[i$1], fn);
      }
      return vm
    }
    // specific event
    var cbs = vm._events[event];
    if (!cbs) {
      return vm
    }
    if (!fn) {
      vm._events[event] = null;
      return vm
    }
    // specific handler
    var cb;
    var i = cbs.length;
    while (i--) {
      cb = cbs[i];
      if (cb === fn || cb.fn === fn) {
        cbs.splice(i, 1);
        break
      }
    }
    return vm
  };

  Vue.prototype.$emit = function (event) {
    var vm = this;
    if (true) {
      var lowerCaseEvent = event.toLowerCase();
      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {
        tip(
          "Event \"" + lowerCaseEvent + "\" is emitted in component " +
          (formatComponentName(vm)) + " but the handler is registered for \"" + event + "\". " +
          "Note that HTML attributes are case-insensitive and you cannot use " +
          "v-on to listen to camelCase events when using in-DOM templates. " +
          "You should probably use \"" + (hyphenate(event)) + "\" instead of \"" + event + "\"."
        );
      }
    }
    var cbs = vm._events[event];
    if (cbs) {
      cbs = cbs.length > 1 ? toArray(cbs) : cbs;
      var args = toArray(arguments, 1);
      var info = "event handler for \"" + event + "\"";
      for (var i = 0, l = cbs.length; i < l; i++) {
        invokeWithErrorHandling(cbs[i], vm, args, vm, info);
      }
    }
    return vm
  };
}

/*  */

var activeInstance = null;
var isUpdatingChildComponent = false;

function setActiveInstance(vm) {
  var prevActiveInstance = activeInstance;
  activeInstance = vm;
  return function () {
    activeInstance = prevActiveInstance;
  }
}

function initLifecycle (vm) {
  var options = vm.$options;

  // locate first non-abstract parent
  var parent = options.parent;
  if (parent && !options.abstract) {
    while (parent.$options.abstract && parent.$parent) {
      parent = parent.$parent;
    }
    parent.$children.push(vm);
  }

  vm.$parent = parent;
  vm.$root = parent ? parent.$root : vm;

  vm.$children = [];
  vm.$refs = {};

  vm._watcher = null;
  vm._inactive = null;
  vm._directInactive = false;
  vm._isMounted = false;
  vm._isDestroyed = false;
  vm._isBeingDestroyed = false;
}

function lifecycleMixin (Vue) {
  Vue.prototype._update = function (vnode, hydrating) {
    var vm = this;
    var prevEl = vm.$el;
    var prevVnode = vm._vnode;
    var restoreActiveInstance = setActiveInstance(vm);
    vm._vnode = vnode;
    // Vue.prototype.__patch__ is injected in entry points
    // based on the rendering backend used.
    if (!prevVnode) {
      // initial render
      vm.$el = vm.__patch__(vm.$el, vnode, hydrating, false /* removeOnly */);
    } else {
      // updates
      vm.$el = vm.__patch__(prevVnode, vnode);
    }
    restoreActiveInstance();
    // update __vue__ reference
    if (prevEl) {
      prevEl.__vue__ = null;
    }
    if (vm.$el) {
      vm.$el.__vue__ = vm;
    }
    // if parent is an HOC, update its $el as well
    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {
      vm.$parent.$el = vm.$el;
    }
    // updated hook is called by the scheduler to ensure that children are
    // updated in a parent's updated hook.
  };

  Vue.prototype.$forceUpdate = function () {
    var vm = this;
    if (vm._watcher) {
      vm._watcher.update();
    }
  };

  Vue.prototype.$destroy = function () {
    var vm = this;
    if (vm._isBeingDestroyed) {
      return
    }
    callHook(vm, 'beforeDestroy');
    vm._isBeingDestroyed = true;
    // remove self from parent
    var parent = vm.$parent;
    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {
      remove(parent.$children, vm);
    }
    // teardown watchers
    if (vm._watcher) {
      vm._watcher.teardown();
    }
    var i = vm._watchers.length;
    while (i--) {
      vm._watchers[i].teardown();
    }
    // remove reference from data ob
    // frozen object may not have observer.
    if (vm._data.__ob__) {
      vm._data.__ob__.vmCount--;
    }
    // call the last hook...
    vm._isDestroyed = true;
    // invoke destroy hooks on current rendered tree
    vm.__patch__(vm._vnode, null);
    // fire destroyed hook
    callHook(vm, 'destroyed');
    // turn off all instance listeners.
    vm.$off();
    // remove __vue__ reference
    if (vm.$el) {
      vm.$el.__vue__ = null;
    }
    // release circular reference (#6759)
    if (vm.$vnode) {
      vm.$vnode.parent = null;
    }
  };
}

function updateChildComponent (
  vm,
  propsData,
  listeners,
  parentVnode,
  renderChildren
) {
  if (true) {
    isUpdatingChildComponent = true;
  }

  // determine whether component has slot children
  // we need to do this before overwriting $options._renderChildren.

  // check if there are dynamic scopedSlots (hand-written or compiled but with
  // dynamic slot names). Static scoped slots compiled from template has the
  // "$stable" marker.
  var newScopedSlots = parentVnode.data.scopedSlots;
  var oldScopedSlots = vm.$scopedSlots;
  var hasDynamicScopedSlot = !!(
    (newScopedSlots && !newScopedSlots.$stable) ||
    (oldScopedSlots !== emptyObject && !oldScopedSlots.$stable) ||
    (newScopedSlots && vm.$scopedSlots.$key !== newScopedSlots.$key)
  );

  // Any static slot children from the parent may have changed during parent's
  // update. Dynamic scoped slots may also have changed. In such cases, a forced
  // update is necessary to ensure correctness.
  var needsForceUpdate = !!(
    renderChildren ||               // has new static slots
    vm.$options._renderChildren ||  // has old static slots
    hasDynamicScopedSlot
  );

  vm.$options._parentVnode = parentVnode;
  vm.$vnode = parentVnode; // update vm's placeholder node without re-render

  if (vm._vnode) { // update child tree's parent
    vm._vnode.parent = parentVnode;
  }
  vm.$options._renderChildren = renderChildren;

  // update $attrs and $listeners hash
  // these are also reactive so they may trigger child update if the child
  // used them during render
  vm.$attrs = parentVnode.data.attrs || emptyObject;
  vm.$listeners = listeners || emptyObject;

  // update props
  if (propsData && vm.$options.props) {
    toggleObserving(false);
    var props = vm._props;
    var propKeys = vm.$options._propKeys || [];
    for (var i = 0; i < propKeys.length; i++) {
      var key = propKeys[i];
      var propOptions = vm.$options.props; // wtf flow?
      props[key] = validateProp(key, propOptions, propsData, vm);
    }
    toggleObserving(true);
    // keep a copy of raw propsData
    vm.$options.propsData = propsData;
  }
  
  // fixed by xxxxxx update properties(mp runtime)
  vm._$updateProperties && vm._$updateProperties(vm);
  
  // update listeners
  listeners = listeners || emptyObject;
  var oldListeners = vm.$options._parentListeners;
  vm.$options._parentListeners = listeners;
  updateComponentListeners(vm, listeners, oldListeners);

  // resolve slots + force update if has children
  if (needsForceUpdate) {
    vm.$slots = resolveSlots(renderChildren, parentVnode.context);
    vm.$forceUpdate();
  }

  if (true) {
    isUpdatingChildComponent = false;
  }
}

function isInInactiveTree (vm) {
  while (vm && (vm = vm.$parent)) {
    if (vm._inactive) { return true }
  }
  return false
}

function activateChildComponent (vm, direct) {
  if (direct) {
    vm._directInactive = false;
    if (isInInactiveTree(vm)) {
      return
    }
  } else if (vm._directInactive) {
    return
  }
  if (vm._inactive || vm._inactive === null) {
    vm._inactive = false;
    for (var i = 0; i < vm.$children.length; i++) {
      activateChildComponent(vm.$children[i]);
    }
    callHook(vm, 'activated');
  }
}

function deactivateChildComponent (vm, direct) {
  if (direct) {
    vm._directInactive = true;
    if (isInInactiveTree(vm)) {
      return
    }
  }
  if (!vm._inactive) {
    vm._inactive = true;
    for (var i = 0; i < vm.$children.length; i++) {
      deactivateChildComponent(vm.$children[i]);
    }
    callHook(vm, 'deactivated');
  }
}

function callHook (vm, hook) {
  // #7573 disable dep collection when invoking lifecycle hooks
  pushTarget();
  var handlers = vm.$options[hook];
  var info = hook + " hook";
  if (handlers) {
    for (var i = 0, j = handlers.length; i < j; i++) {
      invokeWithErrorHandling(handlers[i], vm, null, vm, info);
    }
  }
  if (vm._hasHookEvent) {
    vm.$emit('hook:' + hook);
  }
  popTarget();
}

/*  */

var MAX_UPDATE_COUNT = 100;

var queue = [];
var activatedChildren = [];
var has = {};
var circular = {};
var waiting = false;
var flushing = false;
var index = 0;

/**
 * Reset the scheduler's state.
 */
function resetSchedulerState () {
  index = queue.length = activatedChildren.length = 0;
  has = {};
  if (true) {
    circular = {};
  }
  waiting = flushing = false;
}

// Async edge case #6566 requires saving the timestamp when event listeners are
// attached. However, calling performance.now() has a perf overhead especially
// if the page has thousands of event listeners. Instead, we take a timestamp
// every time the scheduler flushes and use that for all event listeners
// attached during that flush.
var currentFlushTimestamp = 0;

// Async edge case fix requires storing an event listener's attach timestamp.
var getNow = Date.now;

// Determine what event timestamp the browser is using. Annoyingly, the
// timestamp can either be hi-res (relative to page load) or low-res
// (relative to UNIX epoch), so in order to compare time we have to use the
// same timestamp type when saving the flush timestamp.
// All IE versions use low-res event timestamps, and have problematic clock
// implementations (#9632)
if (inBrowser && !isIE) {
  var performance = window.performance;
  if (
    performance &&
    typeof performance.now === 'function' &&
    getNow() > document.createEvent('Event').timeStamp
  ) {
    // if the event timestamp, although evaluated AFTER the Date.now(), is
    // smaller than it, it means the event is using a hi-res timestamp,
    // and we need to use the hi-res version for event listener timestamps as
    // well.
    getNow = function () { return performance.now(); };
  }
}

/**
 * Flush both queues and run the watchers.
 */
function flushSchedulerQueue () {
  currentFlushTimestamp = getNow();
  flushing = true;
  var watcher, id;

  // Sort queue before flush.
  // This ensures that:
  // 1. Components are updated from parent to child. (because parent is always
  //    created before the child)
  // 2. A component's user watchers are run before its render watcher (because
  //    user watchers are created before the render watcher)
  // 3. If a component is destroyed during a parent component's watcher run,
  //    its watchers can be skipped.
  queue.sort(function (a, b) { return a.id - b.id; });

  // do not cache length because more watchers might be pushed
  // as we run existing watchers
  for (index = 0; index < queue.length; index++) {
    watcher = queue[index];
    if (watcher.before) {
      watcher.before();
    }
    id = watcher.id;
    has[id] = null;
    watcher.run();
    // in dev build, check and stop circular updates.
    if ( true && has[id] != null) {
      circular[id] = (circular[id] || 0) + 1;
      if (circular[id] > MAX_UPDATE_COUNT) {
        warn(
          'You may have an infinite update loop ' + (
            watcher.user
              ? ("in watcher with expression \"" + (watcher.expression) + "\"")
              : "in a component render function."
          ),
          watcher.vm
        );
        break
      }
    }
  }

  // keep copies of post queues before resetting state
  var activatedQueue = activatedChildren.slice();
  var updatedQueue = queue.slice();

  resetSchedulerState();

  // call component updated and activated hooks
  callActivatedHooks(activatedQueue);
  callUpdatedHooks(updatedQueue);

  // devtool hook
  /* istanbul ignore if */
  if (devtools && config.devtools) {
    devtools.emit('flush');
  }
}

function callUpdatedHooks (queue) {
  var i = queue.length;
  while (i--) {
    var watcher = queue[i];
    var vm = watcher.vm;
    if (vm._watcher === watcher && vm._isMounted && !vm._isDestroyed) {
      callHook(vm, 'updated');
    }
  }
}

/**
 * Queue a kept-alive component that was activated during patch.
 * The queue will be processed after the entire tree has been patched.
 */
function queueActivatedComponent (vm) {
  // setting _inactive to false here so that a render function can
  // rely on checking whether it's in an inactive tree (e.g. router-view)
  vm._inactive = false;
  activatedChildren.push(vm);
}

function callActivatedHooks (queue) {
  for (var i = 0; i < queue.length; i++) {
    queue[i]._inactive = true;
    activateChildComponent(queue[i], true /* true */);
  }
}

/**
 * Push a watcher into the watcher queue.
 * Jobs with duplicate IDs will be skipped unless it's
 * pushed when the queue is being flushed.
 */
function queueWatcher (watcher) {
  var id = watcher.id;
  if (has[id] == null) {
    has[id] = true;
    if (!flushing) {
      queue.push(watcher);
    } else {
      // if already flushing, splice the watcher based on its id
      // if already past its id, it will be run next immediately.
      var i = queue.length - 1;
      while (i > index && queue[i].id > watcher.id) {
        i--;
      }
      queue.splice(i + 1, 0, watcher);
    }
    // queue the flush
    if (!waiting) {
      waiting = true;

      if ( true && !config.async) {
        flushSchedulerQueue();
        return
      }
      nextTick(flushSchedulerQueue);
    }
  }
}

/*  */



var uid$2 = 0;

/**
 * A watcher parses an expression, collects dependencies,
 * and fires callback when the expression value changes.
 * This is used for both the $watch() api and directives.
 */
var Watcher = function Watcher (
  vm,
  expOrFn,
  cb,
  options,
  isRenderWatcher
) {
  this.vm = vm;
  if (isRenderWatcher) {
    vm._watcher = this;
  }
  vm._watchers.push(this);
  // options
  if (options) {
    this.deep = !!options.deep;
    this.user = !!options.user;
    this.lazy = !!options.lazy;
    this.sync = !!options.sync;
    this.before = options.before;
  } else {
    this.deep = this.user = this.lazy = this.sync = false;
  }
  this.cb = cb;
  this.id = ++uid$2; // uid for batching
  this.active = true;
  this.dirty = this.lazy; // for lazy watchers
  this.deps = [];
  this.newDeps = [];
  this.depIds = new _Set();
  this.newDepIds = new _Set();
  this.expression =  true
    ? expOrFn.toString()
    : undefined;
  // parse expression for getter
  if (typeof expOrFn === 'function') {
    this.getter = expOrFn;
  } else {
    this.getter = parsePath(expOrFn);
    if (!this.getter) {
      this.getter = noop;
       true && warn(
        "Failed watching path: \"" + expOrFn + "\" " +
        'Watcher only accepts simple dot-delimited paths. ' +
        'For full control, use a function instead.',
        vm
      );
    }
  }
  this.value = this.lazy
    ? undefined
    : this.get();
};

/**
 * Evaluate the getter, and re-collect dependencies.
 */
Watcher.prototype.get = function get () {
  pushTarget(this);
  var value;
  var vm = this.vm;
  try {
    value = this.getter.call(vm, vm);
  } catch (e) {
    if (this.user) {
      handleError(e, vm, ("getter for watcher \"" + (this.expression) + "\""));
    } else {
      throw e
    }
  } finally {
    // "touch" every property so they are all tracked as
    // dependencies for deep watching
    if (this.deep) {
      traverse(value);
    }
    popTarget();
    this.cleanupDeps();
  }
  return value
};

/**
 * Add a dependency to this directive.
 */
Watcher.prototype.addDep = function addDep (dep) {
  var id = dep.id;
  if (!this.newDepIds.has(id)) {
    this.newDepIds.add(id);
    this.newDeps.push(dep);
    if (!this.depIds.has(id)) {
      dep.addSub(this);
    }
  }
};

/**
 * Clean up for dependency collection.
 */
Watcher.prototype.cleanupDeps = function cleanupDeps () {
  var i = this.deps.length;
  while (i--) {
    var dep = this.deps[i];
    if (!this.newDepIds.has(dep.id)) {
      dep.removeSub(this);
    }
  }
  var tmp = this.depIds;
  this.depIds = this.newDepIds;
  this.newDepIds = tmp;
  this.newDepIds.clear();
  tmp = this.deps;
  this.deps = this.newDeps;
  this.newDeps = tmp;
  this.newDeps.length = 0;
};

/**
 * Subscriber interface.
 * Will be called when a dependency changes.
 */
Watcher.prototype.update = function update () {
  /* istanbul ignore else */
  if (this.lazy) {
    this.dirty = true;
  } else if (this.sync) {
    this.run();
  } else {
    queueWatcher(this);
  }
};

/**
 * Scheduler job interface.
 * Will be called by the scheduler.
 */
Watcher.prototype.run = function run () {
  if (this.active) {
    var value = this.get();
    if (
      value !== this.value ||
      // Deep watchers and watchers on Object/Arrays should fire even
      // when the value is the same, because the value may
      // have mutated.
      isObject(value) ||
      this.deep
    ) {
      // set new value
      var oldValue = this.value;
      this.value = value;
      if (this.user) {
        try {
          this.cb.call(this.vm, value, oldValue);
        } catch (e) {
          handleError(e, this.vm, ("callback for watcher \"" + (this.expression) + "\""));
        }
      } else {
        this.cb.call(this.vm, value, oldValue);
      }
    }
  }
};

/**
 * Evaluate the value of the watcher.
 * This only gets called for lazy watchers.
 */
Watcher.prototype.evaluate = function evaluate () {
  this.value = this.get();
  this.dirty = false;
};

/**
 * Depend on all deps collected by this watcher.
 */
Watcher.prototype.depend = function depend () {
  var i = this.deps.length;
  while (i--) {
    this.deps[i].depend();
  }
};

/**
 * Remove self from all dependencies' subscriber list.
 */
Watcher.prototype.teardown = function teardown () {
  if (this.active) {
    // remove self from vm's watcher list
    // this is a somewhat expensive operation so we skip it
    // if the vm is being destroyed.
    if (!this.vm._isBeingDestroyed) {
      remove(this.vm._watchers, this);
    }
    var i = this.deps.length;
    while (i--) {
      this.deps[i].removeSub(this);
    }
    this.active = false;
  }
};

/*  */

var sharedPropertyDefinition = {
  enumerable: true,
  configurable: true,
  get: noop,
  set: noop
};

function proxy (target, sourceKey, key) {
  sharedPropertyDefinition.get = function proxyGetter () {
    return this[sourceKey][key]
  };
  sharedPropertyDefinition.set = function proxySetter (val) {
    this[sourceKey][key] = val;
  };
  Object.defineProperty(target, key, sharedPropertyDefinition);
}

function initState (vm) {
  vm._watchers = [];
  var opts = vm.$options;
  if (opts.props) { initProps(vm, opts.props); }
  if (opts.methods) { initMethods(vm, opts.methods); }
  if (opts.data) {
    initData(vm);
  } else {
    observe(vm._data = {}, true /* asRootData */);
  }
  if (opts.computed) { initComputed(vm, opts.computed); }
  if (opts.watch && opts.watch !== nativeWatch) {
    initWatch(vm, opts.watch);
  }
}

function initProps (vm, propsOptions) {
  var propsData = vm.$options.propsData || {};
  var props = vm._props = {};
  // cache prop keys so that future props updates can iterate using Array
  // instead of dynamic object key enumeration.
  var keys = vm.$options._propKeys = [];
  var isRoot = !vm.$parent;
  // root instance props should be converted
  if (!isRoot) {
    toggleObserving(false);
  }
  var loop = function ( key ) {
    keys.push(key);
    var value = validateProp(key, propsOptions, propsData, vm);
    /* istanbul ignore else */
    if (true) {
      var hyphenatedKey = hyphenate(key);
      if (isReservedAttribute(hyphenatedKey) ||
          config.isReservedAttr(hyphenatedKey)) {
        warn(
          ("\"" + hyphenatedKey + "\" is a reserved attribute and cannot be used as component prop."),
          vm
        );
      }
      defineReactive$$1(props, key, value, function () {
        if (!isRoot && !isUpdatingChildComponent) {
          {
            if(vm.mpHost === 'mp-baidu'){//百度 observer 在 setData callback 之后触发，直接忽略该 warn
                return
            }
            //fixed by xxxxxx __next_tick_pending,uni://form-field 时不告警
            if(
                key === 'value' && 
                Array.isArray(vm.$options.behaviors) &&
                vm.$options.behaviors.indexOf('uni://form-field') !== -1
              ){
              return
            }
            if(vm._getFormData){
              return
            }
            var $parent = vm.$parent;
            while($parent){
              if($parent.__next_tick_pending){
                return  
              }
              $parent = $parent.$parent;
            }
          }
          warn(
            "Avoid mutating a prop directly since the value will be " +
            "overwritten whenever the parent component re-renders. " +
            "Instead, use a data or computed property based on the prop's " +
            "value. Prop being mutated: \"" + key + "\"",
            vm
          );
        }
      });
    } else {}
    // static props are already proxied on the component's prototype
    // during Vue.extend(). We only need to proxy props defined at
    // instantiation here.
    if (!(key in vm)) {
      proxy(vm, "_props", key);
    }
  };

  for (var key in propsOptions) loop( key );
  toggleObserving(true);
}

function initData (vm) {
  var data = vm.$options.data;
  data = vm._data = typeof data === 'function'
    ? getData(data, vm)
    : data || {};
  if (!isPlainObject(data)) {
    data = {};
     true && warn(
      'data functions should return an object:\n' +
      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',
      vm
    );
  }
  // proxy data on instance
  var keys = Object.keys(data);
  var props = vm.$options.props;
  var methods = vm.$options.methods;
  var i = keys.length;
  while (i--) {
    var key = keys[i];
    if (true) {
      if (methods && hasOwn(methods, key)) {
        warn(
          ("Method \"" + key + "\" has already been defined as a data property."),
          vm
        );
      }
    }
    if (props && hasOwn(props, key)) {
       true && warn(
        "The data property \"" + key + "\" is already declared as a prop. " +
        "Use prop default value instead.",
        vm
      );
    } else if (!isReserved(key)) {
      proxy(vm, "_data", key);
    }
  }
  // observe data
  observe(data, true /* asRootData */);
}

function getData (data, vm) {
  // #7573 disable dep collection when invoking data getters
  pushTarget();
  try {
    return data.call(vm, vm)
  } catch (e) {
    handleError(e, vm, "data()");
    return {}
  } finally {
    popTarget();
  }
}

var computedWatcherOptions = { lazy: true };

function initComputed (vm, computed) {
  // $flow-disable-line
  var watchers = vm._computedWatchers = Object.create(null);
  // computed properties are just getters during SSR
  var isSSR = isServerRendering();

  for (var key in computed) {
    var userDef = computed[key];
    var getter = typeof userDef === 'function' ? userDef : userDef.get;
    if ( true && getter == null) {
      warn(
        ("Getter is missing for computed property \"" + key + "\"."),
        vm
      );
    }

    if (!isSSR) {
      // create internal watcher for the computed property.
      watchers[key] = new Watcher(
        vm,
        getter || noop,
        noop,
        computedWatcherOptions
      );
    }

    // component-defined computed properties are already defined on the
    // component prototype. We only need to define computed properties defined
    // at instantiation here.
    if (!(key in vm)) {
      defineComputed(vm, key, userDef);
    } else if (true) {
      if (key in vm.$data) {
        warn(("The computed property \"" + key + "\" is already defined in data."), vm);
      } else if (vm.$options.props && key in vm.$options.props) {
        warn(("The computed property \"" + key + "\" is already defined as a prop."), vm);
      }
    }
  }
}

function defineComputed (
  target,
  key,
  userDef
) {
  var shouldCache = !isServerRendering();
  if (typeof userDef === 'function') {
    sharedPropertyDefinition.get = shouldCache
      ? createComputedGetter(key)
      : createGetterInvoker(userDef);
    sharedPropertyDefinition.set = noop;
  } else {
    sharedPropertyDefinition.get = userDef.get
      ? shouldCache && userDef.cache !== false
        ? createComputedGetter(key)
        : createGetterInvoker(userDef.get)
      : noop;
    sharedPropertyDefinition.set = userDef.set || noop;
  }
  if ( true &&
      sharedPropertyDefinition.set === noop) {
    sharedPropertyDefinition.set = function () {
      warn(
        ("Computed property \"" + key + "\" was assigned to but it has no setter."),
        this
      );
    };
  }
  Object.defineProperty(target, key, sharedPropertyDefinition);
}

function createComputedGetter (key) {
  return function computedGetter () {
    var watcher = this._computedWatchers && this._computedWatchers[key];
    if (watcher) {
      if (watcher.dirty) {
        watcher.evaluate();
      }
      if (Dep.SharedObject.target) {// fixed by xxxxxx
        watcher.depend();
      }
      return watcher.value
    }
  }
}

function createGetterInvoker(fn) {
  return function computedGetter () {
    return fn.call(this, this)
  }
}

function initMethods (vm, methods) {
  var props = vm.$options.props;
  for (var key in methods) {
    if (true) {
      if (typeof methods[key] !== 'function') {
        warn(
          "Method \"" + key + "\" has type \"" + (typeof methods[key]) + "\" in the component definition. " +
          "Did you reference the function correctly?",
          vm
        );
      }
      if (props && hasOwn(props, key)) {
        warn(
          ("Method \"" + key + "\" has already been defined as a prop."),
          vm
        );
      }
      if ((key in vm) && isReserved(key)) {
        warn(
          "Method \"" + key + "\" conflicts with an existing Vue instance method. " +
          "Avoid defining component methods that start with _ or $."
        );
      }
    }
    vm[key] = typeof methods[key] !== 'function' ? noop : bind(methods[key], vm);
  }
}

function initWatch (vm, watch) {
  for (var key in watch) {
    var handler = watch[key];
    if (Array.isArray(handler)) {
      for (var i = 0; i < handler.length; i++) {
        createWatcher(vm, key, handler[i]);
      }
    } else {
      createWatcher(vm, key, handler);
    }
  }
}

function createWatcher (
  vm,
  expOrFn,
  handler,
  options
) {
  if (isPlainObject(handler)) {
    options = handler;
    handler = handler.handler;
  }
  if (typeof handler === 'string') {
    handler = vm[handler];
  }
  return vm.$watch(expOrFn, handler, options)
}

function stateMixin (Vue) {
  // flow somehow has problems with directly declared definition object
  // when using Object.defineProperty, so we have to procedurally build up
  // the object here.
  var dataDef = {};
  dataDef.get = function () { return this._data };
  var propsDef = {};
  propsDef.get = function () { return this._props };
  if (true) {
    dataDef.set = function () {
      warn(
        'Avoid replacing instance root $data. ' +
        'Use nested data properties instead.',
        this
      );
    };
    propsDef.set = function () {
      warn("$props is readonly.", this);
    };
  }
  Object.defineProperty(Vue.prototype, '$data', dataDef);
  Object.defineProperty(Vue.prototype, '$props', propsDef);

  Vue.prototype.$set = set;
  Vue.prototype.$delete = del;

  Vue.prototype.$watch = function (
    expOrFn,
    cb,
    options
  ) {
    var vm = this;
    if (isPlainObject(cb)) {
      return createWatcher(vm, expOrFn, cb, options)
    }
    options = options || {};
    options.user = true;
    var watcher = new Watcher(vm, expOrFn, cb, options);
    if (options.immediate) {
      try {
        cb.call(vm, watcher.value);
      } catch (error) {
        handleError(error, vm, ("callback for immediate watcher \"" + (watcher.expression) + "\""));
      }
    }
    return function unwatchFn () {
      watcher.teardown();
    }
  };
}

/*  */

var uid$3 = 0;

function initMixin (Vue) {
  Vue.prototype._init = function (options) {
    var vm = this;
    // a uid
    vm._uid = uid$3++;

    var startTag, endTag;
    /* istanbul ignore if */
    if ( true && config.performance && mark) {
      startTag = "vue-perf-start:" + (vm._uid);
      endTag = "vue-perf-end:" + (vm._uid);
      mark(startTag);
    }

    // a flag to avoid this being observed
    vm._isVue = true;
    // merge options
    if (options && options._isComponent) {
      // optimize internal component instantiation
      // since dynamic options merging is pretty slow, and none of the
      // internal component options needs special treatment.
      initInternalComponent(vm, options);
    } else {
      vm.$options = mergeOptions(
        resolveConstructorOptions(vm.constructor),
        options || {},
        vm
      );
    }
    /* istanbul ignore else */
    if (true) {
      initProxy(vm);
    } else {}
    // expose real self
    vm._self = vm;
    initLifecycle(vm);
    initEvents(vm);
    initRender(vm);
    callHook(vm, 'beforeCreate');
    !vm._$fallback && initInjections(vm); // resolve injections before data/props  
    initState(vm);
    !vm._$fallback && initProvide(vm); // resolve provide after data/props
    !vm._$fallback && callHook(vm, 'created');      

    /* istanbul ignore if */
    if ( true && config.performance && mark) {
      vm._name = formatComponentName(vm, false);
      mark(endTag);
      measure(("vue " + (vm._name) + " init"), startTag, endTag);
    }

    if (vm.$options.el) {
      vm.$mount(vm.$options.el);
    }
  };
}

function initInternalComponent (vm, options) {
  var opts = vm.$options = Object.create(vm.constructor.options);
  // doing this because it's faster than dynamic enumeration.
  var parentVnode = options._parentVnode;
  opts.parent = options.parent;
  opts._parentVnode = parentVnode;

  var vnodeComponentOptions = parentVnode.componentOptions;
  opts.propsData = vnodeComponentOptions.propsData;
  opts._parentListeners = vnodeComponentOptions.listeners;
  opts._renderChildren = vnodeComponentOptions.children;
  opts._componentTag = vnodeComponentOptions.tag;

  if (options.render) {
    opts.render = options.render;
    opts.staticRenderFns = options.staticRenderFns;
  }
}

function resolveConstructorOptions (Ctor) {
  var options = Ctor.options;
  if (Ctor.super) {
    var superOptions = resolveConstructorOptions(Ctor.super);
    var cachedSuperOptions = Ctor.superOptions;
    if (superOptions !== cachedSuperOptions) {
      // super option changed,
      // need to resolve new options.
      Ctor.superOptions = superOptions;
      // check if there are any late-modified/attached options (#4976)
      var modifiedOptions = resolveModifiedOptions(Ctor);
      // update base extend options
      if (modifiedOptions) {
        extend(Ctor.extendOptions, modifiedOptions);
      }
      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);
      if (options.name) {
        options.components[options.name] = Ctor;
      }
    }
  }
  return options
}

function resolveModifiedOptions (Ctor) {
  var modified;
  var latest = Ctor.options;
  var sealed = Ctor.sealedOptions;
  for (var key in latest) {
    if (latest[key] !== sealed[key]) {
      if (!modified) { modified = {}; }
      modified[key] = latest[key];
    }
  }
  return modified
}

function Vue (options) {
  if ( true &&
    !(this instanceof Vue)
  ) {
    warn('Vue is a constructor and should be called with the `new` keyword');
  }
  this._init(options);
}

initMixin(Vue);
stateMixin(Vue);
eventsMixin(Vue);
lifecycleMixin(Vue);
renderMixin(Vue);

/*  */

function initUse (Vue) {
  Vue.use = function (plugin) {
    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));
    if (installedPlugins.indexOf(plugin) > -1) {
      return this
    }

    // additional parameters
    var args = toArray(arguments, 1);
    args.unshift(this);
    if (typeof plugin.install === 'function') {
      plugin.install.apply(plugin, args);
    } else if (typeof plugin === 'function') {
      plugin.apply(null, args);
    }
    installedPlugins.push(plugin);
    return this
  };
}

/*  */

function initMixin$1 (Vue) {
  Vue.mixin = function (mixin) {
    this.options = mergeOptions(this.options, mixin);
    return this
  };
}

/*  */

function initExtend (Vue) {
  /**
   * Each instance constructor, including Vue, has a unique
   * cid. This enables us to create wrapped "child
   * constructors" for prototypal inheritance and cache them.
   */
  Vue.cid = 0;
  var cid = 1;

  /**
   * Class inheritance
   */
  Vue.extend = function (extendOptions) {
    extendOptions = extendOptions || {};
    var Super = this;
    var SuperId = Super.cid;
    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});
    if (cachedCtors[SuperId]) {
      return cachedCtors[SuperId]
    }

    var name = extendOptions.name || Super.options.name;
    if ( true && name) {
      validateComponentName(name);
    }

    var Sub = function VueComponent (options) {
      this._init(options);
    };
    Sub.prototype = Object.create(Super.prototype);
    Sub.prototype.constructor = Sub;
    Sub.cid = cid++;
    Sub.options = mergeOptions(
      Super.options,
      extendOptions
    );
    Sub['super'] = Super;

    // For props and computed properties, we define the proxy getters on
    // the Vue instances at extension time, on the extended prototype. This
    // avoids Object.defineProperty calls for each instance created.
    if (Sub.options.props) {
      initProps$1(Sub);
    }
    if (Sub.options.computed) {
      initComputed$1(Sub);
    }

    // allow further extension/mixin/plugin usage
    Sub.extend = Super.extend;
    Sub.mixin = Super.mixin;
    Sub.use = Super.use;

    // create asset registers, so extended classes
    // can have their private assets too.
    ASSET_TYPES.forEach(function (type) {
      Sub[type] = Super[type];
    });
    // enable recursive self-lookup
    if (name) {
      Sub.options.components[name] = Sub;
    }

    // keep a reference to the super options at extension time.
    // later at instantiation we can check if Super's options have
    // been updated.
    Sub.superOptions = Super.options;
    Sub.extendOptions = extendOptions;
    Sub.sealedOptions = extend({}, Sub.options);

    // cache constructor
    cachedCtors[SuperId] = Sub;
    return Sub
  };
}

function initProps$1 (Comp) {
  var props = Comp.options.props;
  for (var key in props) {
    proxy(Comp.prototype, "_props", key);
  }
}

function initComputed$1 (Comp) {
  var computed = Comp.options.computed;
  for (var key in computed) {
    defineComputed(Comp.prototype, key, computed[key]);
  }
}

/*  */

function initAssetRegisters (Vue) {
  /**
   * Create asset registration methods.
   */
  ASSET_TYPES.forEach(function (type) {
    Vue[type] = function (
      id,
      definition
    ) {
      if (!definition) {
        return this.options[type + 's'][id]
      } else {
        /* istanbul ignore if */
        if ( true && type === 'component') {
          validateComponentName(id);
        }
        if (type === 'component' && isPlainObject(definition)) {
          definition.name = definition.name || id;
          definition = this.options._base.extend(definition);
        }
        if (type === 'directive' && typeof definition === 'function') {
          definition = { bind: definition, update: definition };
        }
        this.options[type + 's'][id] = definition;
        return definition
      }
    };
  });
}

/*  */



function getComponentName (opts) {
  return opts && (opts.Ctor.options.name || opts.tag)
}

function matches (pattern, name) {
  if (Array.isArray(pattern)) {
    return pattern.indexOf(name) > -1
  } else if (typeof pattern === 'string') {
    return pattern.split(',').indexOf(name) > -1
  } else if (isRegExp(pattern)) {
    return pattern.test(name)
  }
  /* istanbul ignore next */
  return false
}

function pruneCache (keepAliveInstance, filter) {
  var cache = keepAliveInstance.cache;
  var keys = keepAliveInstance.keys;
  var _vnode = keepAliveInstance._vnode;
  for (var key in cache) {
    var cachedNode = cache[key];
    if (cachedNode) {
      var name = getComponentName(cachedNode.componentOptions);
      if (name && !filter(name)) {
        pruneCacheEntry(cache, key, keys, _vnode);
      }
    }
  }
}

function pruneCacheEntry (
  cache,
  key,
  keys,
  current
) {
  var cached$$1 = cache[key];
  if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {
    cached$$1.componentInstance.$destroy();
  }
  cache[key] = null;
  remove(keys, key);
}

var patternTypes = [String, RegExp, Array];

var KeepAlive = {
  name: 'keep-alive',
  abstract: true,

  props: {
    include: patternTypes,
    exclude: patternTypes,
    max: [String, Number]
  },

  created: function created () {
    this.cache = Object.create(null);
    this.keys = [];
  },

  destroyed: function destroyed () {
    for (var key in this.cache) {
      pruneCacheEntry(this.cache, key, this.keys);
    }
  },

  mounted: function mounted () {
    var this$1 = this;

    this.$watch('include', function (val) {
      pruneCache(this$1, function (name) { return matches(val, name); });
    });
    this.$watch('exclude', function (val) {
      pruneCache(this$1, function (name) { return !matches(val, name); });
    });
  },

  render: function render () {
    var slot = this.$slots.default;
    var vnode = getFirstComponentChild(slot);
    var componentOptions = vnode && vnode.componentOptions;
    if (componentOptions) {
      // check pattern
      var name = getComponentName(componentOptions);
      var ref = this;
      var include = ref.include;
      var exclude = ref.exclude;
      if (
        // not included
        (include && (!name || !matches(include, name))) ||
        // excluded
        (exclude && name && matches(exclude, name))
      ) {
        return vnode
      }

      var ref$1 = this;
      var cache = ref$1.cache;
      var keys = ref$1.keys;
      var key = vnode.key == null
        // same constructor may get registered as different local components
        // so cid alone is not enough (#3269)
        ? componentOptions.Ctor.cid + (componentOptions.tag ? ("::" + (componentOptions.tag)) : '')
        : vnode.key;
      if (cache[key]) {
        vnode.componentInstance = cache[key].componentInstance;
        // make current key freshest
        remove(keys, key);
        keys.push(key);
      } else {
        cache[key] = vnode;
        keys.push(key);
        // prune oldest entry
        if (this.max && keys.length > parseInt(this.max)) {
          pruneCacheEntry(cache, keys[0], keys, this._vnode);
        }
      }

      vnode.data.keepAlive = true;
    }
    return vnode || (slot && slot[0])
  }
};

var builtInComponents = {
  KeepAlive: KeepAlive
};

/*  */

function initGlobalAPI (Vue) {
  // config
  var configDef = {};
  configDef.get = function () { return config; };
  if (true) {
    configDef.set = function () {
      warn(
        'Do not replace the Vue.config object, set individual fields instead.'
      );
    };
  }
  Object.defineProperty(Vue, 'config', configDef);

  // exposed util methods.
  // NOTE: these are not considered part of the public API - avoid relying on
  // them unless you are aware of the risk.
  Vue.util = {
    warn: warn,
    extend: extend,
    mergeOptions: mergeOptions,
    defineReactive: defineReactive$$1
  };

  Vue.set = set;
  Vue.delete = del;
  Vue.nextTick = nextTick;

  // 2.6 explicit observable API
  Vue.observable = function (obj) {
    observe(obj);
    return obj
  };

  Vue.options = Object.create(null);
  ASSET_TYPES.forEach(function (type) {
    Vue.options[type + 's'] = Object.create(null);
  });

  // this is used to identify the "base" constructor to extend all plain-object
  // components with in Weex's multi-instance scenarios.
  Vue.options._base = Vue;

  extend(Vue.options.components, builtInComponents);

  initUse(Vue);
  initMixin$1(Vue);
  initExtend(Vue);
  initAssetRegisters(Vue);
}

initGlobalAPI(Vue);

Object.defineProperty(Vue.prototype, '$isServer', {
  get: isServerRendering
});

Object.defineProperty(Vue.prototype, '$ssrContext', {
  get: function get () {
    /* istanbul ignore next */
    return this.$vnode && this.$vnode.ssrContext
  }
});

// expose FunctionalRenderContext for ssr runtime helper installation
Object.defineProperty(Vue, 'FunctionalRenderContext', {
  value: FunctionalRenderContext
});

Vue.version = '2.6.11';

/**
 * https://raw.githubusercontent.com/Tencent/westore/master/packages/westore/utils/diff.js
 */
var ARRAYTYPE = '[object Array]';
var OBJECTTYPE = '[object Object]';
// const FUNCTIONTYPE = '[object Function]'

function diff(current, pre) {
    var result = {};
    syncKeys(current, pre);
    _diff(current, pre, '', result);
    return result
}

function syncKeys(current, pre) {
    if (current === pre) { return }
    var rootCurrentType = type(current);
    var rootPreType = type(pre);
    if (rootCurrentType == OBJECTTYPE && rootPreType == OBJECTTYPE) {
        if(Object.keys(current).length >= Object.keys(pre).length){
            for (var key in pre) {
                var currentValue = current[key];
                if (currentValue === undefined) {
                    current[key] = null;
                } else {
                    syncKeys(currentValue, pre[key]);
                }
            }
        }
    } else if (rootCurrentType == ARRAYTYPE && rootPreType == ARRAYTYPE) {
        if (current.length >= pre.length) {
            pre.forEach(function (item, index) {
                syncKeys(current[index], item);
            });
        }
    }
}

function _diff(current, pre, path, result) {
    if (current === pre) { return }
    var rootCurrentType = type(current);
    var rootPreType = type(pre);
    if (rootCurrentType == OBJECTTYPE) {
        if (rootPreType != OBJECTTYPE || Object.keys(current).length < Object.keys(pre).length) {
            setResult(result, path, current);
        } else {
            var loop = function ( key ) {
                var currentValue = current[key];
                var preValue = pre[key];
                var currentType = type(currentValue);
                var preType = type(preValue);
                if (currentType != ARRAYTYPE && currentType != OBJECTTYPE) {
                    if (currentValue != pre[key]) {
                        setResult(result, (path == '' ? '' : path + ".") + key, currentValue);
                    }
                } else if (currentType == ARRAYTYPE) {
                    if (preType != ARRAYTYPE) {
                        setResult(result, (path == '' ? '' : path + ".") + key, currentValue);
                    } else {
                        if (currentValue.length < preValue.length) {
                            setResult(result, (path == '' ? '' : path + ".") + key, currentValue);
                        } else {
                            currentValue.forEach(function (item, index) {
                                _diff(item, preValue[index], (path == '' ? '' : path + ".") + key + '[' + index + ']', result);
                            });
                        }
                    }
                } else if (currentType == OBJECTTYPE) {
                    if (preType != OBJECTTYPE || Object.keys(currentValue).length < Object.keys(preValue).length) {
                        setResult(result, (path == '' ? '' : path + ".") + key, currentValue);
                    } else {
                        for (var subKey in currentValue) {
                            _diff(currentValue[subKey], preValue[subKey], (path == '' ? '' : path + ".") + key + '.' + subKey, result);
                        }
                    }
                }
            };

            for (var key in current) loop( key );
        }
    } else if (rootCurrentType == ARRAYTYPE) {
        if (rootPreType != ARRAYTYPE) {
            setResult(result, path, current);
        } else {
            if (current.length < pre.length) {
                setResult(result, path, current);
            } else {
                current.forEach(function (item, index) {
                    _diff(item, pre[index], path + '[' + index + ']', result);
                });
            }
        }
    } else {
        setResult(result, path, current);
    }
}

function setResult(result, k, v) {
    // if (type(v) != FUNCTIONTYPE) {
        result[k] = v;
    // }
}

function type(obj) {
    return Object.prototype.toString.call(obj)
}

/*  */

function flushCallbacks$1(vm) {
    if (vm.__next_tick_callbacks && vm.__next_tick_callbacks.length) {
        if (Object({"VUE_APP_NAME":"uni-doctor","VUE_APP_PLATFORM":"mp-weixin","NODE_ENV":"development","BASE_URL":"/"}).VUE_APP_DEBUG) {
            var mpInstance = vm.$scope;
            console.log('[' + (+new Date) + '][' + (mpInstance.is || mpInstance.route) + '][' + vm._uid +
                ']:flushCallbacks[' + vm.__next_tick_callbacks.length + ']');
        }
        var copies = vm.__next_tick_callbacks.slice(0);
        vm.__next_tick_callbacks.length = 0;
        for (var i = 0; i < copies.length; i++) {
            copies[i]();
        }
    }
}

function hasRenderWatcher(vm) {
    return queue.find(function (watcher) { return vm._watcher === watcher; })
}

function nextTick$1(vm, cb) {
    //1.nextTick 之前 已 setData 且 setData 还未回调完成
    //2.nextTick 之前存在 render watcher
    if (!vm.__next_tick_pending && !hasRenderWatcher(vm)) {
        if(Object({"VUE_APP_NAME":"uni-doctor","VUE_APP_PLATFORM":"mp-weixin","NODE_ENV":"development","BASE_URL":"/"}).VUE_APP_DEBUG){
            var mpInstance = vm.$scope;
            console.log('[' + (+new Date) + '][' + (mpInstance.is || mpInstance.route) + '][' + vm._uid +
                ']:nextVueTick');
        }
        return nextTick(cb, vm)
    }else{
        if(Object({"VUE_APP_NAME":"uni-doctor","VUE_APP_PLATFORM":"mp-weixin","NODE_ENV":"development","BASE_URL":"/"}).VUE_APP_DEBUG){
            var mpInstance$1 = vm.$scope;
            console.log('[' + (+new Date) + '][' + (mpInstance$1.is || mpInstance$1.route) + '][' + vm._uid +
                ']:nextMPTick');
        }
    }
    var _resolve;
    if (!vm.__next_tick_callbacks) {
        vm.__next_tick_callbacks = [];
    }
    vm.__next_tick_callbacks.push(function () {
        if (cb) {
            try {
                cb.call(vm);
            } catch (e) {
                handleError(e, vm, 'nextTick');
            }
        } else if (_resolve) {
            _resolve(vm);
        }
    });
    // $flow-disable-line
    if (!cb && typeof Promise !== 'undefined') {
        return new Promise(function (resolve) {
            _resolve = resolve;
        })
    }
}

/*  */

function cloneWithData(vm) {
  // 确保当前 vm 所有数据被同步
  var ret = Object.create(null);
  var dataKeys = [].concat(
    Object.keys(vm._data || {}),
    Object.keys(vm._computedWatchers || {}));

  dataKeys.reduce(function(ret, key) {
    ret[key] = vm[key];
    return ret
  }, ret);

  // vue-composition-api
  var compositionApiState = vm.__composition_api_state__ || vm.__secret_vfa_state__;
  var rawBindings = compositionApiState && compositionApiState.rawBindings;
  if (rawBindings) {
    Object.keys(rawBindings).forEach(function (key) {
      ret[key] = vm[key];
    });
  }

  //TODO 需要把无用数据处理掉，比如 list=>l0 则 list 需要移除，否则多传输一份数据
  Object.assign(ret, vm.$mp.data || {});
  if (
    Array.isArray(vm.$options.behaviors) &&
    vm.$options.behaviors.indexOf('uni://form-field') !== -1
  ) { //form-field
    ret['name'] = vm.name;
    ret['value'] = vm.value;
  }

  return JSON.parse(JSON.stringify(ret))
}

var patch = function(oldVnode, vnode) {
  var this$1 = this;

  if (vnode === null) { //destroy
    return
  }
  if (this.mpType === 'page' || this.mpType === 'component') {
    var mpInstance = this.$scope;
    var data = Object.create(null);
    try {
      data = cloneWithData(this);
    } catch (err) {
      console.error(err);
    }
    data.__webviewId__ = mpInstance.data.__webviewId__;
    var mpData = Object.create(null);
    Object.keys(data).forEach(function (key) { //仅同步 data 中有的数据
      mpData[key] = mpInstance.data[key];
    });
    var diffData = this.$shouldDiffData === false ? data : diff(data, mpData);
    if (Object.keys(diffData).length) {
      if (Object({"VUE_APP_NAME":"uni-doctor","VUE_APP_PLATFORM":"mp-weixin","NODE_ENV":"development","BASE_URL":"/"}).VUE_APP_DEBUG) {
        console.log('[' + (+new Date) + '][' + (mpInstance.is || mpInstance.route) + '][' + this._uid +
          ']差量更新',
          JSON.stringify(diffData));
      }
      this.__next_tick_pending = true;
      mpInstance.setData(diffData, function () {
        this$1.__next_tick_pending = false;
        flushCallbacks$1(this$1);
      });
    } else {
      flushCallbacks$1(this);
    }
  }
};

/*  */

function createEmptyRender() {

}

function mountComponent$1(
  vm,
  el,
  hydrating
) {
  if (!vm.mpType) {//main.js 中的 new Vue
    return vm
  }
  if (vm.mpType === 'app') {
    vm.$options.render = createEmptyRender;
  }
  if (!vm.$options.render) {
    vm.$options.render = createEmptyRender;
    if (true) {
      /* istanbul ignore if */
      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||
        vm.$options.el || el) {
        warn(
          'You are using the runtime-only build of Vue where the template ' +
          'compiler is not available. Either pre-compile the templates into ' +
          'render functions, or use the compiler-included build.',
          vm
        );
      } else {
        warn(
          'Failed to mount component: template or render function not defined.',
          vm
        );
      }
    }
  }
  
  !vm._$fallback && callHook(vm, 'beforeMount');

  var updateComponent = function () {
    vm._update(vm._render(), hydrating);
  };

  // we set this to vm._watcher inside the watcher's constructor
  // since the watcher's initial patch may call $forceUpdate (e.g. inside child
  // component's mounted hook), which relies on vm._watcher being already defined
  new Watcher(vm, updateComponent, noop, {
    before: function before() {
      if (vm._isMounted && !vm._isDestroyed) {
        callHook(vm, 'beforeUpdate');
      }
    }
  }, true /* isRenderWatcher */);
  hydrating = false;
  return vm
}

/*  */

function renderClass (
  staticClass,
  dynamicClass
) {
  if (isDef(staticClass) || isDef(dynamicClass)) {
    return concat(staticClass, stringifyClass(dynamicClass))
  }
  /* istanbul ignore next */
  return ''
}

function concat (a, b) {
  return a ? b ? (a + ' ' + b) : a : (b || '')
}

function stringifyClass (value) {
  if (Array.isArray(value)) {
    return stringifyArray(value)
  }
  if (isObject(value)) {
    return stringifyObject(value)
  }
  if (typeof value === 'string') {
    return value
  }
  /* istanbul ignore next */
  return ''
}

function stringifyArray (value) {
  var res = '';
  var stringified;
  for (var i = 0, l = value.length; i < l; i++) {
    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {
      if (res) { res += ' '; }
      res += stringified;
    }
  }
  return res
}

function stringifyObject (value) {
  var res = '';
  for (var key in value) {
    if (value[key]) {
      if (res) { res += ' '; }
      res += key;
    }
  }
  return res
}

/*  */

var parseStyleText = cached(function (cssText) {
  var res = {};
  var listDelimiter = /;(?![^(]*\))/g;
  var propertyDelimiter = /:(.+)/;
  cssText.split(listDelimiter).forEach(function (item) {
    if (item) {
      var tmp = item.split(propertyDelimiter);
      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());
    }
  });
  return res
});

// normalize possible array / string values into Object
function normalizeStyleBinding (bindingStyle) {
  if (Array.isArray(bindingStyle)) {
    return toObject(bindingStyle)
  }
  if (typeof bindingStyle === 'string') {
    return parseStyleText(bindingStyle)
  }
  return bindingStyle
}

/*  */

var MP_METHODS = ['createSelectorQuery', 'createIntersectionObserver', 'selectAllComponents', 'selectComponent'];

function getTarget(obj, path) {
  var parts = path.split('.');
  var key = parts[0];
  if (key.indexOf('__$n') === 0) { //number index
    key = parseInt(key.replace('__$n', ''));
  }
  if (parts.length === 1) {
    return obj[key]
  }
  return getTarget(obj[key], parts.slice(1).join('.'))
}

function internalMixin(Vue) {

  Vue.config.errorHandler = function(err, vm, info) {
    Vue.util.warn(("Error in " + info + ": \"" + (err.toString()) + "\""), vm);
    console.error(err);
    /* eslint-disable no-undef */
    var app = getApp();
    if (app && app.onError) {
      app.onError(err);
    }
  };

  var oldEmit = Vue.prototype.$emit;

  Vue.prototype.$emit = function(event) {
    if (this.$scope && event) {
      this.$scope['triggerEvent'](event, {
        __args__: toArray(arguments, 1)
      });
    }
    return oldEmit.apply(this, arguments)
  };

  Vue.prototype.$nextTick = function(fn) {
    return nextTick$1(this, fn)
  };

  MP_METHODS.forEach(function (method) {
    Vue.prototype[method] = function(args) {
      if (this.$scope && this.$scope[method]) {
        return this.$scope[method](args)
      }
      // mp-alipay
      if (typeof my === 'undefined') {
        return
      }
      if (method === 'createSelectorQuery') {
        /* eslint-disable no-undef */
        return my.createSelectorQuery(args)
      } else if (method === 'createIntersectionObserver') {
        /* eslint-disable no-undef */
        return my.createIntersectionObserver(args)
      }
      // TODO mp-alipay 暂不支持 selectAllComponents,selectComponent
    };
  });

  Vue.prototype.__init_provide = initProvide;

  Vue.prototype.__init_injections = initInjections;

  Vue.prototype.__call_hook = function(hook, args) {
    var vm = this;
    // #7573 disable dep collection when invoking lifecycle hooks
    pushTarget();
    var handlers = vm.$options[hook];
    var info = hook + " hook";
    var ret;
    if (handlers) {
      for (var i = 0, j = handlers.length; i < j; i++) {
        ret = invokeWithErrorHandling(handlers[i], vm, args ? [args] : null, vm, info);
      }
    }
    if (vm._hasHookEvent) {
      vm.$emit('hook:' + hook, args);
    }
    popTarget();
    return ret
  };

  Vue.prototype.__set_model = function(target, key, value, modifiers) {
    if (Array.isArray(modifiers)) {
      if (modifiers.indexOf('trim') !== -1) {
        value = value.trim();
      }
      if (modifiers.indexOf('number') !== -1) {
        value = this._n(value);
      }
    }
    if (!target) {
      target = this;
    }
    target[key] = value;
  };

  Vue.prototype.__set_sync = function(target, key, value) {
    if (!target) {
      target = this;
    }
    target[key] = value;
  };

  Vue.prototype.__get_orig = function(item) {
    if (isPlainObject(item)) {
      return item['$orig'] || item
    }
    return item
  };

  Vue.prototype.__get_value = function(dataPath, target) {
    return getTarget(target || this, dataPath)
  };


  Vue.prototype.__get_class = function(dynamicClass, staticClass) {
    return renderClass(staticClass, dynamicClass)
  };

  Vue.prototype.__get_style = function(dynamicStyle, staticStyle) {
    if (!dynamicStyle && !staticStyle) {
      return ''
    }
    var dynamicStyleObj = normalizeStyleBinding(dynamicStyle);
    var styleObj = staticStyle ? extend(staticStyle, dynamicStyleObj) : dynamicStyleObj;
    return Object.keys(styleObj).map(function (name) { return ((hyphenate(name)) + ":" + (styleObj[name])); }).join(';')
  };

  Vue.prototype.__map = function(val, iteratee) {
    //TODO 暂不考虑 string
    var ret, i, l, keys, key;
    if (Array.isArray(val)) {
      ret = new Array(val.length);
      for (i = 0, l = val.length; i < l; i++) {
        ret[i] = iteratee(val[i], i);
      }
      return ret
    } else if (isObject(val)) {
      keys = Object.keys(val);
      ret = Object.create(null);
      for (i = 0, l = keys.length; i < l; i++) {
        key = keys[i];
        ret[key] = iteratee(val[key], key, i);
      }
      return ret
    } else if (typeof val === 'number') {
      ret = new Array(val);
      for (i = 0, l = val; i < l; i++) {
        // 第一个参数暂时仍和小程序一致
        ret[i] = iteratee(i, i);
      }
      return ret
    }
    return []
  };

}

/*  */

var LIFECYCLE_HOOKS$1 = [
    //App
    'onLaunch',
    'onShow',
    'onHide',
    'onUniNViewMessage',
    'onPageNotFound',
    'onThemeChange',
    'onError',
    'onUnhandledRejection',
    //Page
    'onLoad',
    // 'onShow',
    'onReady',
    // 'onHide',
    'onUnload',
    'onPullDownRefresh',
    'onReachBottom',
    'onTabItemTap',
    'onAddToFavorites',
    'onShareTimeline',
    'onShareAppMessage',
    'onResize',
    'onPageScroll',
    'onNavigationBarButtonTap',
    'onBackPress',
    'onNavigationBarSearchInputChanged',
    'onNavigationBarSearchInputConfirmed',
    'onNavigationBarSearchInputClicked',
    //Component
    // 'onReady', // 兼容旧版本，应该移除该事件
    'onPageShow',
    'onPageHide',
    'onPageResize'
];
function lifecycleMixin$1(Vue) {

    //fixed vue-class-component
    var oldExtend = Vue.extend;
    Vue.extend = function(extendOptions) {
        extendOptions = extendOptions || {};

        var methods = extendOptions.methods;
        if (methods) {
            Object.keys(methods).forEach(function (methodName) {
                if (LIFECYCLE_HOOKS$1.indexOf(methodName)!==-1) {
                    extendOptions[methodName] = methods[methodName];
                    delete methods[methodName];
                }
            });
        }

        return oldExtend.call(this, extendOptions)
    };

    var strategies = Vue.config.optionMergeStrategies;
    var mergeHook = strategies.created;
    LIFECYCLE_HOOKS$1.forEach(function (hook) {
        strategies[hook] = mergeHook;
    });

    Vue.prototype.__lifecycle_hooks__ = LIFECYCLE_HOOKS$1;
}

/*  */

// install platform patch function
Vue.prototype.__patch__ = patch;

// public mount method
Vue.prototype.$mount = function(
    el ,
    hydrating 
) {
    return mountComponent$1(this, el, hydrating)
};

lifecycleMixin$1(Vue);
internalMixin(Vue);

/*  */

/* harmony default export */ __webpack_exports__["default"] = (Vue);

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../webpack/buildin/global.js */ 3)))

/***/ }),
/* 3 */
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || new Function("return this")();
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),
/* 4 */
/*!***********************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/pages.json ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {



/***/ }),
/* 5 */,
/* 6 */,
/* 7 */,
/* 8 */
/*!********************************************!*\
  !*** ./node_modules/vuex/dist/vuex.esm.js ***!
  \********************************************/
/*! exports provided: default, Store, createNamespacedHelpers, install, mapActions, mapGetters, mapMutations, mapState */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(global) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Store", function() { return Store; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createNamespacedHelpers", function() { return createNamespacedHelpers; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "install", function() { return install; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mapActions", function() { return mapActions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mapGetters", function() { return mapGetters; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mapMutations", function() { return mapMutations; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mapState", function() { return mapState; });
/*!
 * vuex v3.4.0
 * (c) 2020 Evan You
 * @license MIT
 */
function applyMixin (Vue) {
  var version = Number(Vue.version.split('.')[0]);

  if (version >= 2) {
    Vue.mixin({ beforeCreate: vuexInit });
  } else {
    // override init and inject vuex init procedure
    // for 1.x backwards compatibility.
    var _init = Vue.prototype._init;
    Vue.prototype._init = function (options) {
      if ( options === void 0 ) options = {};

      options.init = options.init
        ? [vuexInit].concat(options.init)
        : vuexInit;
      _init.call(this, options);
    };
  }

  /**
   * Vuex init hook, injected into each instances init hooks list.
   */

  function vuexInit () {
    var options = this.$options;
    // store injection
    if (options.store) {
      this.$store = typeof options.store === 'function'
        ? options.store()
        : options.store;
    } else if (options.parent && options.parent.$store) {
      this.$store = options.parent.$store;
    }
  }
}

var target = typeof window !== 'undefined'
  ? window
  : typeof global !== 'undefined'
    ? global
    : {};
var devtoolHook = target.__VUE_DEVTOOLS_GLOBAL_HOOK__;

function devtoolPlugin (store) {
  if (!devtoolHook) { return }

  store._devtoolHook = devtoolHook;

  devtoolHook.emit('vuex:init', store);

  devtoolHook.on('vuex:travel-to-state', function (targetState) {
    store.replaceState(targetState);
  });

  store.subscribe(function (mutation, state) {
    devtoolHook.emit('vuex:mutation', mutation, state);
  }, { prepend: true });

  store.subscribeAction(function (action, state) {
    devtoolHook.emit('vuex:action', action, state);
  }, { prepend: true });
}

/**
 * Get the first item that pass the test
 * by second argument function
 *
 * @param {Array} list
 * @param {Function} f
 * @return {*}
 */

/**
 * forEach for object
 */
function forEachValue (obj, fn) {
  Object.keys(obj).forEach(function (key) { return fn(obj[key], key); });
}

function isObject (obj) {
  return obj !== null && typeof obj === 'object'
}

function isPromise (val) {
  return val && typeof val.then === 'function'
}

function assert (condition, msg) {
  if (!condition) { throw new Error(("[vuex] " + msg)) }
}

function partial (fn, arg) {
  return function () {
    return fn(arg)
  }
}

// Base data struct for store's module, package with some attribute and method
var Module = function Module (rawModule, runtime) {
  this.runtime = runtime;
  // Store some children item
  this._children = Object.create(null);
  // Store the origin module object which passed by programmer
  this._rawModule = rawModule;
  var rawState = rawModule.state;

  // Store the origin module's state
  this.state = (typeof rawState === 'function' ? rawState() : rawState) || {};
};

var prototypeAccessors = { namespaced: { configurable: true } };

prototypeAccessors.namespaced.get = function () {
  return !!this._rawModule.namespaced
};

Module.prototype.addChild = function addChild (key, module) {
  this._children[key] = module;
};

Module.prototype.removeChild = function removeChild (key) {
  delete this._children[key];
};

Module.prototype.getChild = function getChild (key) {
  return this._children[key]
};

Module.prototype.hasChild = function hasChild (key) {
  return key in this._children
};

Module.prototype.update = function update (rawModule) {
  this._rawModule.namespaced = rawModule.namespaced;
  if (rawModule.actions) {
    this._rawModule.actions = rawModule.actions;
  }
  if (rawModule.mutations) {
    this._rawModule.mutations = rawModule.mutations;
  }
  if (rawModule.getters) {
    this._rawModule.getters = rawModule.getters;
  }
};

Module.prototype.forEachChild = function forEachChild (fn) {
  forEachValue(this._children, fn);
};

Module.prototype.forEachGetter = function forEachGetter (fn) {
  if (this._rawModule.getters) {
    forEachValue(this._rawModule.getters, fn);
  }
};

Module.prototype.forEachAction = function forEachAction (fn) {
  if (this._rawModule.actions) {
    forEachValue(this._rawModule.actions, fn);
  }
};

Module.prototype.forEachMutation = function forEachMutation (fn) {
  if (this._rawModule.mutations) {
    forEachValue(this._rawModule.mutations, fn);
  }
};

Object.defineProperties( Module.prototype, prototypeAccessors );

var ModuleCollection = function ModuleCollection (rawRootModule) {
  // register root module (Vuex.Store options)
  this.register([], rawRootModule, false);
};

ModuleCollection.prototype.get = function get (path) {
  return path.reduce(function (module, key) {
    return module.getChild(key)
  }, this.root)
};

ModuleCollection.prototype.getNamespace = function getNamespace (path) {
  var module = this.root;
  return path.reduce(function (namespace, key) {
    module = module.getChild(key);
    return namespace + (module.namespaced ? key + '/' : '')
  }, '')
};

ModuleCollection.prototype.update = function update$1 (rawRootModule) {
  update([], this.root, rawRootModule);
};

ModuleCollection.prototype.register = function register (path, rawModule, runtime) {
    var this$1 = this;
    if ( runtime === void 0 ) runtime = true;

  if ((true)) {
    assertRawModule(path, rawModule);
  }

  var newModule = new Module(rawModule, runtime);
  if (path.length === 0) {
    this.root = newModule;
  } else {
    var parent = this.get(path.slice(0, -1));
    parent.addChild(path[path.length - 1], newModule);
  }

  // register nested modules
  if (rawModule.modules) {
    forEachValue(rawModule.modules, function (rawChildModule, key) {
      this$1.register(path.concat(key), rawChildModule, runtime);
    });
  }
};

ModuleCollection.prototype.unregister = function unregister (path) {
  var parent = this.get(path.slice(0, -1));
  var key = path[path.length - 1];
  if (!parent.getChild(key).runtime) { return }

  parent.removeChild(key);
};

ModuleCollection.prototype.isRegistered = function isRegistered (path) {
  var parent = this.get(path.slice(0, -1));
  var key = path[path.length - 1];

  return parent.hasChild(key)
};

function update (path, targetModule, newModule) {
  if ((true)) {
    assertRawModule(path, newModule);
  }

  // update target module
  targetModule.update(newModule);

  // update nested modules
  if (newModule.modules) {
    for (var key in newModule.modules) {
      if (!targetModule.getChild(key)) {
        if ((true)) {
          console.warn(
            "[vuex] trying to add a new module '" + key + "' on hot reloading, " +
            'manual reload is needed'
          );
        }
        return
      }
      update(
        path.concat(key),
        targetModule.getChild(key),
        newModule.modules[key]
      );
    }
  }
}

var functionAssert = {
  assert: function (value) { return typeof value === 'function'; },
  expected: 'function'
};

var objectAssert = {
  assert: function (value) { return typeof value === 'function' ||
    (typeof value === 'object' && typeof value.handler === 'function'); },
  expected: 'function or object with "handler" function'
};

var assertTypes = {
  getters: functionAssert,
  mutations: functionAssert,
  actions: objectAssert
};

function assertRawModule (path, rawModule) {
  Object.keys(assertTypes).forEach(function (key) {
    if (!rawModule[key]) { return }

    var assertOptions = assertTypes[key];

    forEachValue(rawModule[key], function (value, type) {
      assert(
        assertOptions.assert(value),
        makeAssertionMessage(path, key, type, value, assertOptions.expected)
      );
    });
  });
}

function makeAssertionMessage (path, key, type, value, expected) {
  var buf = key + " should be " + expected + " but \"" + key + "." + type + "\"";
  if (path.length > 0) {
    buf += " in module \"" + (path.join('.')) + "\"";
  }
  buf += " is " + (JSON.stringify(value)) + ".";
  return buf
}

var Vue; // bind on install

var Store = function Store (options) {
  var this$1 = this;
  if ( options === void 0 ) options = {};

  // Auto install if it is not done yet and `window` has `Vue`.
  // To allow users to avoid auto-installation in some cases,
  // this code should be placed here. See #731
  if (!Vue && typeof window !== 'undefined' && window.Vue) {
    install(window.Vue);
  }

  if ((true)) {
    assert(Vue, "must call Vue.use(Vuex) before creating a store instance.");
    assert(typeof Promise !== 'undefined', "vuex requires a Promise polyfill in this browser.");
    assert(this instanceof Store, "store must be called with the new operator.");
  }

  var plugins = options.plugins; if ( plugins === void 0 ) plugins = [];
  var strict = options.strict; if ( strict === void 0 ) strict = false;

  // store internal state
  this._committing = false;
  this._actions = Object.create(null);
  this._actionSubscribers = [];
  this._mutations = Object.create(null);
  this._wrappedGetters = Object.create(null);
  this._modules = new ModuleCollection(options);
  this._modulesNamespaceMap = Object.create(null);
  this._subscribers = [];
  this._watcherVM = new Vue();
  this._makeLocalGettersCache = Object.create(null);

  // bind commit and dispatch to self
  var store = this;
  var ref = this;
  var dispatch = ref.dispatch;
  var commit = ref.commit;
  this.dispatch = function boundDispatch (type, payload) {
    return dispatch.call(store, type, payload)
  };
  this.commit = function boundCommit (type, payload, options) {
    return commit.call(store, type, payload, options)
  };

  // strict mode
  this.strict = strict;

  var state = this._modules.root.state;

  // init root module.
  // this also recursively registers all sub-modules
  // and collects all module getters inside this._wrappedGetters
  installModule(this, state, [], this._modules.root);

  // initialize the store vm, which is responsible for the reactivity
  // (also registers _wrappedGetters as computed properties)
  resetStoreVM(this, state);

  // apply plugins
  plugins.forEach(function (plugin) { return plugin(this$1); });

  var useDevtools = options.devtools !== undefined ? options.devtools : Vue.config.devtools;
  if (useDevtools) {
    devtoolPlugin(this);
  }
};

var prototypeAccessors$1 = { state: { configurable: true } };

prototypeAccessors$1.state.get = function () {
  return this._vm._data.$$state
};

prototypeAccessors$1.state.set = function (v) {
  if ((true)) {
    assert(false, "use store.replaceState() to explicit replace store state.");
  }
};

Store.prototype.commit = function commit (_type, _payload, _options) {
    var this$1 = this;

  // check object-style commit
  var ref = unifyObjectStyle(_type, _payload, _options);
    var type = ref.type;
    var payload = ref.payload;
    var options = ref.options;

  var mutation = { type: type, payload: payload };
  var entry = this._mutations[type];
  if (!entry) {
    if ((true)) {
      console.error(("[vuex] unknown mutation type: " + type));
    }
    return
  }
  this._withCommit(function () {
    entry.forEach(function commitIterator (handler) {
      handler(payload);
    });
  });

  this._subscribers
    .slice() // shallow copy to prevent iterator invalidation if subscriber synchronously calls unsubscribe
    .forEach(function (sub) { return sub(mutation, this$1.state); });

  if (
    ( true) &&
    options && options.silent
  ) {
    console.warn(
      "[vuex] mutation type: " + type + ". Silent option has been removed. " +
      'Use the filter functionality in the vue-devtools'
    );
  }
};

Store.prototype.dispatch = function dispatch (_type, _payload) {
    var this$1 = this;

  // check object-style dispatch
  var ref = unifyObjectStyle(_type, _payload);
    var type = ref.type;
    var payload = ref.payload;

  var action = { type: type, payload: payload };
  var entry = this._actions[type];
  if (!entry) {
    if ((true)) {
      console.error(("[vuex] unknown action type: " + type));
    }
    return
  }

  try {
    this._actionSubscribers
      .slice() // shallow copy to prevent iterator invalidation if subscriber synchronously calls unsubscribe
      .filter(function (sub) { return sub.before; })
      .forEach(function (sub) { return sub.before(action, this$1.state); });
  } catch (e) {
    if ((true)) {
      console.warn("[vuex] error in before action subscribers: ");
      console.error(e);
    }
  }

  var result = entry.length > 1
    ? Promise.all(entry.map(function (handler) { return handler(payload); }))
    : entry[0](payload);

  return new Promise(function (resolve, reject) {
    result.then(function (res) {
      try {
        this$1._actionSubscribers
          .filter(function (sub) { return sub.after; })
          .forEach(function (sub) { return sub.after(action, this$1.state); });
      } catch (e) {
        if ((true)) {
          console.warn("[vuex] error in after action subscribers: ");
          console.error(e);
        }
      }
      resolve(res);
    }, function (error) {
      try {
        this$1._actionSubscribers
          .filter(function (sub) { return sub.error; })
          .forEach(function (sub) { return sub.error(action, this$1.state, error); });
      } catch (e) {
        if ((true)) {
          console.warn("[vuex] error in error action subscribers: ");
          console.error(e);
        }
      }
      reject(error);
    });
  })
};

Store.prototype.subscribe = function subscribe (fn, options) {
  return genericSubscribe(fn, this._subscribers, options)
};

Store.prototype.subscribeAction = function subscribeAction (fn, options) {
  var subs = typeof fn === 'function' ? { before: fn } : fn;
  return genericSubscribe(subs, this._actionSubscribers, options)
};

Store.prototype.watch = function watch (getter, cb, options) {
    var this$1 = this;

  if ((true)) {
    assert(typeof getter === 'function', "store.watch only accepts a function.");
  }
  return this._watcherVM.$watch(function () { return getter(this$1.state, this$1.getters); }, cb, options)
};

Store.prototype.replaceState = function replaceState (state) {
    var this$1 = this;

  this._withCommit(function () {
    this$1._vm._data.$$state = state;
  });
};

Store.prototype.registerModule = function registerModule (path, rawModule, options) {
    if ( options === void 0 ) options = {};

  if (typeof path === 'string') { path = [path]; }

  if ((true)) {
    assert(Array.isArray(path), "module path must be a string or an Array.");
    assert(path.length > 0, 'cannot register the root module by using registerModule.');
  }

  this._modules.register(path, rawModule);
  installModule(this, this.state, path, this._modules.get(path), options.preserveState);
  // reset store to update getters...
  resetStoreVM(this, this.state);
};

Store.prototype.unregisterModule = function unregisterModule (path) {
    var this$1 = this;

  if (typeof path === 'string') { path = [path]; }

  if ((true)) {
    assert(Array.isArray(path), "module path must be a string or an Array.");
  }

  this._modules.unregister(path);
  this._withCommit(function () {
    var parentState = getNestedState(this$1.state, path.slice(0, -1));
    Vue.delete(parentState, path[path.length - 1]);
  });
  resetStore(this);
};

Store.prototype.hasModule = function hasModule (path) {
  if (typeof path === 'string') { path = [path]; }

  if ((true)) {
    assert(Array.isArray(path), "module path must be a string or an Array.");
  }

  return this._modules.isRegistered(path)
};

Store.prototype.hotUpdate = function hotUpdate (newOptions) {
  this._modules.update(newOptions);
  resetStore(this, true);
};

Store.prototype._withCommit = function _withCommit (fn) {
  var committing = this._committing;
  this._committing = true;
  fn();
  this._committing = committing;
};

Object.defineProperties( Store.prototype, prototypeAccessors$1 );

function genericSubscribe (fn, subs, options) {
  if (subs.indexOf(fn) < 0) {
    options && options.prepend
      ? subs.unshift(fn)
      : subs.push(fn);
  }
  return function () {
    var i = subs.indexOf(fn);
    if (i > -1) {
      subs.splice(i, 1);
    }
  }
}

function resetStore (store, hot) {
  store._actions = Object.create(null);
  store._mutations = Object.create(null);
  store._wrappedGetters = Object.create(null);
  store._modulesNamespaceMap = Object.create(null);
  var state = store.state;
  // init all modules
  installModule(store, state, [], store._modules.root, true);
  // reset vm
  resetStoreVM(store, state, hot);
}

function resetStoreVM (store, state, hot) {
  var oldVm = store._vm;

  // bind store public getters
  store.getters = {};
  // reset local getters cache
  store._makeLocalGettersCache = Object.create(null);
  var wrappedGetters = store._wrappedGetters;
  var computed = {};
  forEachValue(wrappedGetters, function (fn, key) {
    // use computed to leverage its lazy-caching mechanism
    // direct inline function use will lead to closure preserving oldVm.
    // using partial to return function with only arguments preserved in closure environment.
    computed[key] = partial(fn, store);
    Object.defineProperty(store.getters, key, {
      get: function () { return store._vm[key]; },
      enumerable: true // for local getters
    });
  });

  // use a Vue instance to store the state tree
  // suppress warnings just in case the user has added
  // some funky global mixins
  var silent = Vue.config.silent;
  Vue.config.silent = true;
  store._vm = new Vue({
    data: {
      $$state: state
    },
    computed: computed
  });
  Vue.config.silent = silent;

  // enable strict mode for new vm
  if (store.strict) {
    enableStrictMode(store);
  }

  if (oldVm) {
    if (hot) {
      // dispatch changes in all subscribed watchers
      // to force getter re-evaluation for hot reloading.
      store._withCommit(function () {
        oldVm._data.$$state = null;
      });
    }
    Vue.nextTick(function () { return oldVm.$destroy(); });
  }
}

function installModule (store, rootState, path, module, hot) {
  var isRoot = !path.length;
  var namespace = store._modules.getNamespace(path);

  // register in namespace map
  if (module.namespaced) {
    if (store._modulesNamespaceMap[namespace] && ("development" !== 'production')) {
      console.error(("[vuex] duplicate namespace " + namespace + " for the namespaced module " + (path.join('/'))));
    }
    store._modulesNamespaceMap[namespace] = module;
  }

  // set state
  if (!isRoot && !hot) {
    var parentState = getNestedState(rootState, path.slice(0, -1));
    var moduleName = path[path.length - 1];
    store._withCommit(function () {
      if ((true)) {
        if (moduleName in parentState) {
          console.warn(
            ("[vuex] state field \"" + moduleName + "\" was overridden by a module with the same name at \"" + (path.join('.')) + "\"")
          );
        }
      }
      Vue.set(parentState, moduleName, module.state);
    });
  }

  var local = module.context = makeLocalContext(store, namespace, path);

  module.forEachMutation(function (mutation, key) {
    var namespacedType = namespace + key;
    registerMutation(store, namespacedType, mutation, local);
  });

  module.forEachAction(function (action, key) {
    var type = action.root ? key : namespace + key;
    var handler = action.handler || action;
    registerAction(store, type, handler, local);
  });

  module.forEachGetter(function (getter, key) {
    var namespacedType = namespace + key;
    registerGetter(store, namespacedType, getter, local);
  });

  module.forEachChild(function (child, key) {
    installModule(store, rootState, path.concat(key), child, hot);
  });
}

/**
 * make localized dispatch, commit, getters and state
 * if there is no namespace, just use root ones
 */
function makeLocalContext (store, namespace, path) {
  var noNamespace = namespace === '';

  var local = {
    dispatch: noNamespace ? store.dispatch : function (_type, _payload, _options) {
      var args = unifyObjectStyle(_type, _payload, _options);
      var payload = args.payload;
      var options = args.options;
      var type = args.type;

      if (!options || !options.root) {
        type = namespace + type;
        if (( true) && !store._actions[type]) {
          console.error(("[vuex] unknown local action type: " + (args.type) + ", global type: " + type));
          return
        }
      }

      return store.dispatch(type, payload)
    },

    commit: noNamespace ? store.commit : function (_type, _payload, _options) {
      var args = unifyObjectStyle(_type, _payload, _options);
      var payload = args.payload;
      var options = args.options;
      var type = args.type;

      if (!options || !options.root) {
        type = namespace + type;
        if (( true) && !store._mutations[type]) {
          console.error(("[vuex] unknown local mutation type: " + (args.type) + ", global type: " + type));
          return
        }
      }

      store.commit(type, payload, options);
    }
  };

  // getters and state object must be gotten lazily
  // because they will be changed by vm update
  Object.defineProperties(local, {
    getters: {
      get: noNamespace
        ? function () { return store.getters; }
        : function () { return makeLocalGetters(store, namespace); }
    },
    state: {
      get: function () { return getNestedState(store.state, path); }
    }
  });

  return local
}

function makeLocalGetters (store, namespace) {
  if (!store._makeLocalGettersCache[namespace]) {
    var gettersProxy = {};
    var splitPos = namespace.length;
    Object.keys(store.getters).forEach(function (type) {
      // skip if the target getter is not match this namespace
      if (type.slice(0, splitPos) !== namespace) { return }

      // extract local getter type
      var localType = type.slice(splitPos);

      // Add a port to the getters proxy.
      // Define as getter property because
      // we do not want to evaluate the getters in this time.
      Object.defineProperty(gettersProxy, localType, {
        get: function () { return store.getters[type]; },
        enumerable: true
      });
    });
    store._makeLocalGettersCache[namespace] = gettersProxy;
  }

  return store._makeLocalGettersCache[namespace]
}

function registerMutation (store, type, handler, local) {
  var entry = store._mutations[type] || (store._mutations[type] = []);
  entry.push(function wrappedMutationHandler (payload) {
    handler.call(store, local.state, payload);
  });
}

function registerAction (store, type, handler, local) {
  var entry = store._actions[type] || (store._actions[type] = []);
  entry.push(function wrappedActionHandler (payload) {
    var res = handler.call(store, {
      dispatch: local.dispatch,
      commit: local.commit,
      getters: local.getters,
      state: local.state,
      rootGetters: store.getters,
      rootState: store.state
    }, payload);
    if (!isPromise(res)) {
      res = Promise.resolve(res);
    }
    if (store._devtoolHook) {
      return res.catch(function (err) {
        store._devtoolHook.emit('vuex:error', err);
        throw err
      })
    } else {
      return res
    }
  });
}

function registerGetter (store, type, rawGetter, local) {
  if (store._wrappedGetters[type]) {
    if ((true)) {
      console.error(("[vuex] duplicate getter key: " + type));
    }
    return
  }
  store._wrappedGetters[type] = function wrappedGetter (store) {
    return rawGetter(
      local.state, // local state
      local.getters, // local getters
      store.state, // root state
      store.getters // root getters
    )
  };
}

function enableStrictMode (store) {
  store._vm.$watch(function () { return this._data.$$state }, function () {
    if ((true)) {
      assert(store._committing, "do not mutate vuex store state outside mutation handlers.");
    }
  }, { deep: true, sync: true });
}

function getNestedState (state, path) {
  return path.reduce(function (state, key) { return state[key]; }, state)
}

function unifyObjectStyle (type, payload, options) {
  if (isObject(type) && type.type) {
    options = payload;
    payload = type;
    type = type.type;
  }

  if ((true)) {
    assert(typeof type === 'string', ("expects string as the type, but found " + (typeof type) + "."));
  }

  return { type: type, payload: payload, options: options }
}

function install (_Vue) {
  if (Vue && _Vue === Vue) {
    if ((true)) {
      console.error(
        '[vuex] already installed. Vue.use(Vuex) should be called only once.'
      );
    }
    return
  }
  Vue = _Vue;
  applyMixin(Vue);
}

/**
 * Reduce the code which written in Vue.js for getting the state.
 * @param {String} [namespace] - Module's namespace
 * @param {Object|Array} states # Object's item can be a function which accept state and getters for param, you can do something for state and getters in it.
 * @param {Object}
 */
var mapState = normalizeNamespace(function (namespace, states) {
  var res = {};
  if (( true) && !isValidMap(states)) {
    console.error('[vuex] mapState: mapper parameter must be either an Array or an Object');
  }
  normalizeMap(states).forEach(function (ref) {
    var key = ref.key;
    var val = ref.val;

    res[key] = function mappedState () {
      var state = this.$store.state;
      var getters = this.$store.getters;
      if (namespace) {
        var module = getModuleByNamespace(this.$store, 'mapState', namespace);
        if (!module) {
          return
        }
        state = module.context.state;
        getters = module.context.getters;
      }
      return typeof val === 'function'
        ? val.call(this, state, getters)
        : state[val]
    };
    // mark vuex getter for devtools
    res[key].vuex = true;
  });
  return res
});

/**
 * Reduce the code which written in Vue.js for committing the mutation
 * @param {String} [namespace] - Module's namespace
 * @param {Object|Array} mutations # Object's item can be a function which accept `commit` function as the first param, it can accept anthor params. You can commit mutation and do any other things in this function. specially, You need to pass anthor params from the mapped function.
 * @return {Object}
 */
var mapMutations = normalizeNamespace(function (namespace, mutations) {
  var res = {};
  if (( true) && !isValidMap(mutations)) {
    console.error('[vuex] mapMutations: mapper parameter must be either an Array or an Object');
  }
  normalizeMap(mutations).forEach(function (ref) {
    var key = ref.key;
    var val = ref.val;

    res[key] = function mappedMutation () {
      var args = [], len = arguments.length;
      while ( len-- ) args[ len ] = arguments[ len ];

      // Get the commit method from store
      var commit = this.$store.commit;
      if (namespace) {
        var module = getModuleByNamespace(this.$store, 'mapMutations', namespace);
        if (!module) {
          return
        }
        commit = module.context.commit;
      }
      return typeof val === 'function'
        ? val.apply(this, [commit].concat(args))
        : commit.apply(this.$store, [val].concat(args))
    };
  });
  return res
});

/**
 * Reduce the code which written in Vue.js for getting the getters
 * @param {String} [namespace] - Module's namespace
 * @param {Object|Array} getters
 * @return {Object}
 */
var mapGetters = normalizeNamespace(function (namespace, getters) {
  var res = {};
  if (( true) && !isValidMap(getters)) {
    console.error('[vuex] mapGetters: mapper parameter must be either an Array or an Object');
  }
  normalizeMap(getters).forEach(function (ref) {
    var key = ref.key;
    var val = ref.val;

    // The namespace has been mutated by normalizeNamespace
    val = namespace + val;
    res[key] = function mappedGetter () {
      if (namespace && !getModuleByNamespace(this.$store, 'mapGetters', namespace)) {
        return
      }
      if (( true) && !(val in this.$store.getters)) {
        console.error(("[vuex] unknown getter: " + val));
        return
      }
      return this.$store.getters[val]
    };
    // mark vuex getter for devtools
    res[key].vuex = true;
  });
  return res
});

/**
 * Reduce the code which written in Vue.js for dispatch the action
 * @param {String} [namespace] - Module's namespace
 * @param {Object|Array} actions # Object's item can be a function which accept `dispatch` function as the first param, it can accept anthor params. You can dispatch action and do any other things in this function. specially, You need to pass anthor params from the mapped function.
 * @return {Object}
 */
var mapActions = normalizeNamespace(function (namespace, actions) {
  var res = {};
  if (( true) && !isValidMap(actions)) {
    console.error('[vuex] mapActions: mapper parameter must be either an Array or an Object');
  }
  normalizeMap(actions).forEach(function (ref) {
    var key = ref.key;
    var val = ref.val;

    res[key] = function mappedAction () {
      var args = [], len = arguments.length;
      while ( len-- ) args[ len ] = arguments[ len ];

      // get dispatch function from store
      var dispatch = this.$store.dispatch;
      if (namespace) {
        var module = getModuleByNamespace(this.$store, 'mapActions', namespace);
        if (!module) {
          return
        }
        dispatch = module.context.dispatch;
      }
      return typeof val === 'function'
        ? val.apply(this, [dispatch].concat(args))
        : dispatch.apply(this.$store, [val].concat(args))
    };
  });
  return res
});

/**
 * Rebinding namespace param for mapXXX function in special scoped, and return them by simple object
 * @param {String} namespace
 * @return {Object}
 */
var createNamespacedHelpers = function (namespace) { return ({
  mapState: mapState.bind(null, namespace),
  mapGetters: mapGetters.bind(null, namespace),
  mapMutations: mapMutations.bind(null, namespace),
  mapActions: mapActions.bind(null, namespace)
}); };

/**
 * Normalize the map
 * normalizeMap([1, 2, 3]) => [ { key: 1, val: 1 }, { key: 2, val: 2 }, { key: 3, val: 3 } ]
 * normalizeMap({a: 1, b: 2, c: 3}) => [ { key: 'a', val: 1 }, { key: 'b', val: 2 }, { key: 'c', val: 3 } ]
 * @param {Array|Object} map
 * @return {Object}
 */
function normalizeMap (map) {
  if (!isValidMap(map)) {
    return []
  }
  return Array.isArray(map)
    ? map.map(function (key) { return ({ key: key, val: key }); })
    : Object.keys(map).map(function (key) { return ({ key: key, val: map[key] }); })
}

/**
 * Validate whether given map is valid or not
 * @param {*} map
 * @return {Boolean}
 */
function isValidMap (map) {
  return Array.isArray(map) || isObject(map)
}

/**
 * Return a function expect two param contains namespace and map. it will normalize the namespace and then the param's function will handle the new namespace and the map.
 * @param {Function} fn
 * @return {Function}
 */
function normalizeNamespace (fn) {
  return function (namespace, map) {
    if (typeof namespace !== 'string') {
      map = namespace;
      namespace = '';
    } else if (namespace.charAt(namespace.length - 1) !== '/') {
      namespace += '/';
    }
    return fn(namespace, map)
  }
}

/**
 * Search a special module from store by namespace. if module not exist, print error message.
 * @param {Object} store
 * @param {String} helper
 * @param {String} namespace
 * @return {Object}
 */
function getModuleByNamespace (store, helper, namespace) {
  var module = store._modulesNamespaceMap[namespace];
  if (( true) && !module) {
    console.error(("[vuex] module namespace not found in " + helper + "(): " + namespace));
  }
  return module
}

var index = {
  Store: Store,
  install: install,
  version: '3.4.0',
  mapState: mapState,
  mapMutations: mapMutations,
  mapGetters: mapGetters,
  mapActions: mapActions,
  createNamespacedHelpers: createNamespacedHelpers
};

/* harmony default export */ __webpack_exports__["default"] = (index);


/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/global.js */ 3)))

/***/ }),
/* 9 */
/*!**********************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/utils/imRong/index.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(uni) {Object.defineProperty(exports, "__esModule", { value: true });exports.imLogin = imLogin;exports.imWatch = imWatch;exports.imDisconnect = imDisconnect;exports.imGetTotalUnreadCount = imGetTotalUnreadCount;exports.imGetConversationList = imGetConversationList;exports.im = void 0;var _store = _interopRequireDefault(__webpack_require__(/*! @/store */ 10));
var _imWeb = _interopRequireDefault(__webpack_require__(/*! ./imWeb.js */ 14));
var _commonJs = __webpack_require__(/*! @/utils/commonJs */ 17);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

var PROD_IM_APP_KEY = '8brlm7uf8z9j3'; //线上IM环境
var DEV_IM_APP_KEY = '8luwapkv8jotl'; //测试IM环境

var imRongInfo = { //定义全局存放字段
  totalUnreadCount: 0, //未读总数
  conversationList: [] //会话列表
};
var isStatus = false; //记录未登录操作状态（防止重复触发）

/* 注册IM */
var im = _imWeb.default.init({ appkey: getAppKey() });

/* 获取AppKey */exports.im = im;
function getAppKey() {
  if (false) {} else {
    return DEV_IM_APP_KEY;
  }
}

/* IM登录 */
function imLogin(imTokens) {
  if (!imTokens) return;
  imDisconnect(); //IM断开链接
  im.connect({
    token: imTokens }).
  then(function (res) {
    console.log('链接成功, 链接用户 id 为: ', res.id);
    imGetTotalUnreadCount(); //获取单聊的我未读数
    imGetConversationList(); //获取会话列表 
    imWatch(); //IM设置监听
  }).catch(function (error) {
    console.log('链接失败: ', error.code, error.msg);
  });
}

/* IM设置监听 */
function imWatch() {
  im.watch({
    conversation: function conversation(event) {
      var updatedConversationList = event.updatedConversationList; // 更新的会话列表
      console.log(updatedConversationList);
    },
    message: function message(event) {
      var message = event.message;
      console.log('收到新消息:', message);
    },
    status: function status(event) {
      var status = event.status;
      switch (status) {
        case 0:
          console.log('连接状态:链接成功');
          break;
        case 1:
          console.log('连接状态:正在连接中');
          break;
        case 2:
          console.log('连接状态:用户主动断开链接');
          break;
        case 3:
          console.log('连接状态:网络不可用, SDK 内部会自动重连');
          break;
        case 4:
          console.log('连接状态:Socket 不可用, SDK 内部会自动重连');
          break;
        case 6:
          if (!isStatus) {
            console.log('连接状态:被其他端踢掉');
            isStatus = true;
            _store.default.commit("SET_TOKEN", '');
            _store.default.commit("SET_INFO", '');
            (0, _commonJs.showModal)({
              content: "该账号在别处登录~",
              showCancel: false,
              confirmText: "去登录" }).
            then(function () {
              isStatus = false;
              uni.redirectTo({
                url: "/pages/login/login" });

            });
          }
          break;
        case 12:
          console.log('连接状态:用户被封禁');
          break;
        default:
          console.log("\u8FDE\u63A5\u72B6\u6001:\u672A\u77E5\u72B6\u6001\u7801".concat(status));
          break;}

    } });

}

/* IM重连链接 */
// export function imReconnect() { 
// 	im.reconnect().then((res) => {
// 	  console.log('重新链接成功, 链接用户 id 为: ', res.id)
// 	}).catch((error) => {
// 	  console.log('链接失败: ', error.code, error.msg)
// 	})
// }

/* IM断开链接 */
function imDisconnect() {
  _store.default.commit('SET_IM_RONG', imRongInfo);
  im.disconnect().then(function () {
    console.log('断开链接成功');
  });
}

/* 获取单聊的我未读数 */
function imGetTotalUnreadCount() {
  im.Conversation.getTotalUnreadCount().then(function (totalUnreadCount) {
    // console.log('获取未读总数成功', totalUnreadCount)
    imRongInfo.totalUnreadCount = totalUnreadCount;
    _store.default.commit('SET_IM_RONG', imRongInfo);
  });
}


/* 获取会话列表 */
function imGetConversationList() {
  im.Conversation.getList().then(function (conversationList) {
    // console.log('获取会话列表成功', conversationList)
    imRongInfo.conversationList = conversationList;
    _store.default.commit('SET_IM_RONG', imRongInfo);
  });
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 1)["default"]))

/***/ }),
/* 10 */
/*!***************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/store/index.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;var _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 2));
var _vuex = _interopRequireDefault(__webpack_require__(/*! vuex */ 8));
var _state = _interopRequireDefault(__webpack_require__(/*! ./state */ 11));
var _actions = _interopRequireDefault(__webpack_require__(/*! ./actions */ 12));
var _mutations = _interopRequireDefault(__webpack_require__(/*! ./mutations */ 13));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

_vue.default.use(_vuex.default);var _default =

new _vuex.default.Store({
  state: _state.default,
  actions: _actions.default,
  mutations: _mutations.default });exports.default = _default;

/***/ }),
/* 11 */
/*!***************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/store/state.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(uni) {Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;var token = uni.getStorageSync('token') || ''; //获取token
var info = uni.getStorageSync('info') || ''; //获取用户信息
var imRong = uni.getStorageSync('imRong') || '';var _default =

{
  token: token,
  info: info,
  imRong: imRong };exports.default = _default;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 1)["default"]))

/***/ }),
/* 12 */
/*!*****************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/store/actions.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {



/***/ }),
/* 13 */
/*!*******************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/store/mutations.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(uni) {Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;var _default = {
  SET_TOKEN: function SET_TOKEN(state, value) {//设置token
    state.token = value;
    uni.setStorageSync('token', value);
  },
  SET_INFO: function SET_INFO(state, value) {//设置用户信息
    state.info = value;
    uni.setStorageSync('info', value);
  },
  SET_IM_RONG: function SET_IM_RONG(state, value) {//设置融云信息
    state.imRong = value;
    uni.setStorageSync('imRong', value);
  } };exports.default = _default;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 1)["default"]))

/***/ }),
/* 14 */
/*!**********************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/utils/imRong/imWeb.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(uni, process, global) {/*
* RongIMLib.js v3.0.7-dev
* CodeVersion: 9d43ebdbb9b3719a2a9b2b30d67c82758a96e645
* Release Date: Wed Oct 14 2020 09:43:37 GMT+0800 (GMT+08:00)
* Copyright 2020 RongCloud
*/
(function (global, factory) {
   true ? module.exports = factory() :
  undefined;
})(this, function () {'use strict';

  var versionToServer = "3.0.7.1";

  var SDK_VERSION = versionToServer;

  var ERROR_INFO = {
    TIMEOUT: {
      code: -1,
      msg: 'Network timeout' },

    SDK_INTERNAL_ERROR: {
      code: -2,
      msg: 'SDK internal error' },

    PARAMETER_ERROR: {
      code: -3,
      msg: 'Please check the parameters, the {param} expected a value of {expect} but received {current}' },

    REJECTED_BY_BLACKLIST: {
      code: 405,
      msg: 'Blacklisted by the other party' },

    SEND_TOO_FAST: {
      code: 20604,
      msg: 'Sending messages too quickly' },

    NOT_IN_GROUP: {
      code: 22406,
      msg: 'Not in group' },

    FORBIDDEN_IN_GROUP: {
      code: 22408,
      msg: 'Forbbiden from speaking in the group' },

    NOT_IN_CHATROOM: {
      code: 23406,
      msg: 'Not in chatRoom' },

    FORBIDDEN_IN_CHATROOM: {
      code: 23408,
      msg: 'Forbbiden from speaking in the chatRoom' },

    KICKED_FROM_CHATROOM: {
      code: 23409,
      msg: 'Kicked out and forbbiden from joining the chatRoom' },

    CHATROOM_NOT_EXIST: {
      code: 23410,
      msg: 'ChatRoom does not exist' },

    CHATROOM_IS_FULL: {
      code: 23411,
      msg: 'ChatRoom members exceeded' },

    PARAMETER_INVALID_CHATROOM: {
      code: 23412,
      msg: 'Invalid chatRoom parameters' },

    ROAMING_SERVICE_UNAVAILABLE_CHATROOM: {
      code: 23414,
      msg: 'ChatRoom message roaming service is not open, Please go to the developer to open this service' },

    RECALLMESSAGE_PARAMETER_INVALID: {
      code: 25101,
      msg: 'Invalid recall message parameter' },

    PUSHSETTING_PARAMETER_INVALID: {
      code: 26001,
      msg: 'Invalid push parameter' },

    OPERATION_BLOCKED: {
      code: 20605,
      msg: 'Operation is blocked' },

    OPERATION_NOT_SUPPORT: {
      code: 20606,
      msg: 'Operation is not supported' },

    MSG_BLOCKED_SENSITIVE_WORD: {
      code: 21501,
      msg: 'The sent message contains sensitive words' },

    REPLACED_SENSITIVE_WORD: {
      code: 21502,
      msg: 'Sensitive words in the message have been replaced' },

    NOT_CONNECTED: {
      code: 30001,
      msg: 'Please connect successfully first' },

    NAVI_REQUEST_ERROR: {
      code: 30007,
      msg: 'Navigation http request failed' },

    CMP_REQUEST_ERROR: {
      code: 30010,
      msg: 'CMP sniff http request failed' },

    MSG_CONTENT_EXCEED_LIMIT: {
      code: 30016,
      msg: 'Message content size exceeds limit' },

    CONN_APPKEY_FAKE: {
      code: 31002,
      msg: 'Your appkey is fake' },

    CONN_MINI_SERVICE_NOT_OPEN: {
      code: 31003,
      msg: 'Mini program service is not open, Please go to the developer to open this service' },

    CONN_ACK_TIMEOUT: {
      code: 31000,
      msg: 'Connection ACK timeout' },

    CONN_TOKEN_INCORRECT: {
      code: 31004,
      msg: 'Your token is not valid or expired' },

    CONN_NOT_AUTHRORIZED: {
      code: 31005,
      msg: 'AppKey and Token do not match' },

    CONN_REDIRECTED: {
      code: 31006,
      msg: 'Connection redirection' },

    CONN_APP_BLOCKED_OR_DELETED: {
      code: 31008,
      msg: 'AppKey is banned or deleted' },

    CONN_USER_BLOCKED: {
      code: 31009,
      msg: 'User blocked' },

    CONN_DOMAIN_INCORRECT: {
      code: 31012,
      msg: 'Connect domain error, Please check the set security domain' },

    ROAMING_SERVICE_UNAVAILABLE: {
      code: 33007,
      msg: 'Roaming service cloud is not open, Please go to the developer to open this service' },

    RC_CONNECTION_EXIST: {
      code: 34001,
      msg: 'Connection already exists' },

    CHATROOM_KV_EXCEED: {
      code: 23423,
      msg: 'ChatRoom KV setting exceeds maximum' },

    CHATROOM_KV_OVERWRITE_INVALID: {
      code: 23424,
      msg: 'ChatRoom KV already exists' },

    CHATROOM_KV_STORE_NOT_OPEN: {
      code: 23426,
      msg: 'ChatRoom KV storage service is not open, Please go to the developer to open this service' },

    CHATROOM_KEY_NOT_EXIST: {
      code: 23427,
      msg: 'ChatRoom key does not exist' },

    MSG_KV_NOT_SUPPORT: {
      code: 34008,
      msg: 'The message cannot be extended' },

    SEND_MESSAGE_KV_FAIL: {
      code: 34009,
      msg: 'Sending RC expansion message fail' },

    EXPANSION_LIMIT_EXCEET: {
      code: 34010,
      msg: 'The message expansion size is beyond the limit' },

    ILLGAL_PARAMS: {
      code: 33003,
      msg: 'Incorrect parameters passed in while calling the interface' } };


  var ERROR_CODE = {};
  var ERROR_CODE_TO_INFO = {};

  for (var name$1 in ERROR_INFO) {
    var info = ERROR_INFO[name$1];
    var code = info.code;
    ERROR_CODE[name$1] = code;
    ERROR_CODE[code] = name$1;
    ERROR_CODE_TO_INFO[code] = info;
  }

  var SERVER_ERROR_TO_CODE = {
    '1': ERROR_INFO.ROAMING_SERVICE_UNAVAILABLE.code };


  var _CONNECT_SERVER_STATU, _SERVER_DISCONNECT_ST, _TRANSPORTER_STATUS_T;
  var NAVI_ERROR_INFO = {
    '401': ERROR_INFO.CONN_TOKEN_INCORRECT,
    '403': ERROR_INFO.CONN_APPKEY_FAKE };

  var CONNECTION_STATUS = {
    CONNECTED: 0,
    CONNECTING: 1,
    DISCONNECTED: 2,
    NETWORK_UNAVAILABLE: 3,
    SOCKET_ERROR: 4,
    KICKED_OFFLINE_BY_OTHER_CLIENT: 6,
    BLOCKED: 12 };

  var SERVER_DISCONNECT_STATUS = {
    KICKED_OFFLINE_BY_OTHER_CLIENT: 1,
    BLOCKED: 2 };

  var CONNECT_SERVER_STATUS = {
    IDENTIFIER_REJECTED: 2,
    CONN_MINI_SERVICE_NOT_OPEN: 3,
    TOKEN_INCORRECT: 4,
    NOT_AUTHORIZED: 5,
    REDIRECT: 6,
    PACKAGE_ERROR: 7,
    APP_BLOCK_OR_DELETE: 8,
    BLOCK: 9,
    TOKEN_EXPIRE: 10,
    DEVICE_ERROR: 11,
    DOMAIN_INCORRECT: 12 };

  var TRANSPORTER_STATUS = {
    CONNECTED: CONNECTION_STATUS.CONNECTED,
    KICKED_OFFLINE_BY_OTHER_CLIENT: CONNECTION_STATUS.KICKED_OFFLINE_BY_OTHER_CLIENT,
    BLOCKED: CONNECTION_STATUS.BLOCKED,
    CLOSE_NORMAL: 1000,
    CLOSE_GOING_AWAY: 1001,
    CLOSE_PROTOCOL_ERROR: 1002,
    CLOSE_UNSUPPORTED: 1003,
    CLOSE_NO_STATUS: 1005,
    CLOSE_ABNORMAL: 1006,
    UNSUPPORTED_DATA: 1007,
    POLICY_VIOLATION: 1008,
    CLOSE_TOO_LARGE: 1009,
    MISSING_EXTENSION: 1010,
    INTERNAL_ERROR: 1011,
    SERVICE_RESTART: 1012,
    TRY_AGAIN_LATER: 1013,
    TSL_HANDSHAKE: 1015,
    PING_FIRST_TIMEOUT: 2001,
    PING_TIMEOUT: 2002,
    DISCONNECT_TOO_FAST: 2003,
    EXCEED_MESSAGE_ID_LIMIT: 2004,
    COMET_REQUEST_ERROR: 2005,
    MINI_URL_NOT_IN_DOMAIN_LIST: 2006,
    CMP_CONNECTION_TIMEOUT: 2007 };

  var CONNECT_SERVER_STATUS_MAP_ERROR_INFO = (_CONNECT_SERVER_STATU = {}, _CONNECT_SERVER_STATU[CONNECT_SERVER_STATUS.IDENTIFIER_REJECTED] = ERROR_INFO.CONN_APPKEY_FAKE, _CONNECT_SERVER_STATU[CONNECT_SERVER_STATUS.CONN_MINI_SERVICE_NOT_OPEN] = ERROR_INFO.CONN_MINI_SERVICE_NOT_OPEN, _CONNECT_SERVER_STATU[CONNECT_SERVER_STATUS.TOKEN_INCORRECT] = ERROR_INFO.CONN_TOKEN_INCORRECT, _CONNECT_SERVER_STATU[CONNECT_SERVER_STATUS.NOT_AUTHORIZED] = ERROR_INFO.CONN_NOT_AUTHRORIZED, _CONNECT_SERVER_STATU[CONNECT_SERVER_STATUS.REDIRECT] = ERROR_INFO.CONN_REDIRECTED, _CONNECT_SERVER_STATU[CONNECT_SERVER_STATUS.APP_BLOCK_OR_DELETE] = ERROR_INFO.CONN_APP_BLOCKED_OR_DELETED, _CONNECT_SERVER_STATU[CONNECT_SERVER_STATUS.BLOCK] = ERROR_INFO.CONN_USER_BLOCKED, _CONNECT_SERVER_STATU[CONNECT_SERVER_STATUS.TOKEN_EXPIRE] = ERROR_INFO.CONN_TOKEN_INCORRECT, _CONNECT_SERVER_STATU[CONNECT_SERVER_STATUS.DOMAIN_INCORRECT] = ERROR_INFO.CONN_DOMAIN_INCORRECT, _CONNECT_SERVER_STATU[TRANSPORTER_STATUS.CMP_CONNECTION_TIMEOUT] = ERROR_INFO.CONN_ACK_TIMEOUT, _CONNECT_SERVER_STATU);
  var MINI_ERROR_MSG_TO_STATUS = {
    'url not in domain list': TRANSPORTER_STATUS.MINI_URL_NOT_IN_DOMAIN_LIST };

  var SERVER_DISCONNECT_STATUS_TO_TRANSPORTER_STATUS = (_SERVER_DISCONNECT_ST = {}, _SERVER_DISCONNECT_ST[SERVER_DISCONNECT_STATUS.KICKED_OFFLINE_BY_OTHER_CLIENT] = TRANSPORTER_STATUS.KICKED_OFFLINE_BY_OTHER_CLIENT, _SERVER_DISCONNECT_ST[SERVER_DISCONNECT_STATUS.BLOCKED] = TRANSPORTER_STATUS.BLOCKED, _SERVER_DISCONNECT_ST);
  var TRANSPORTER_STATUS_NEED_UPDATE_CMP = [TRANSPORTER_STATUS.CLOSE_NORMAL, TRANSPORTER_STATUS.CLOSE_GOING_AWAY, TRANSPORTER_STATUS.CLOSE_PROTOCOL_ERROR, TRANSPORTER_STATUS.CLOSE_UNSUPPORTED, TRANSPORTER_STATUS.UNSUPPORTED_DATA, TRANSPORTER_STATUS.POLICY_VIOLATION, TRANSPORTER_STATUS.MISSING_EXTENSION, TRANSPORTER_STATUS.INTERNAL_ERROR, TRANSPORTER_STATUS.SERVICE_RESTART, TRANSPORTER_STATUS.TRY_AGAIN_LATER, TRANSPORTER_STATUS.TSL_HANDSHAKE, TRANSPORTER_STATUS.PING_FIRST_TIMEOUT, TRANSPORTER_STATUS.DISCONNECT_TOO_FAST, TRANSPORTER_STATUS.COMET_REQUEST_ERROR];
  var TRANSPORTER_STATUS_NEED_RECONNECT = TRANSPORTER_STATUS_NEED_UPDATE_CMP.concat([TRANSPORTER_STATUS.PING_TIMEOUT, TRANSPORTER_STATUS.CLOSE_ABNORMAL, TRANSPORTER_STATUS.EXCEED_MESSAGE_ID_LIMIT, TRANSPORTER_STATUS.COMET_REQUEST_ERROR]);
  var TRANSPORTER_STATUS_TO_CONNECTION_STATUS = (_TRANSPORTER_STATUS_T = {}, _TRANSPORTER_STATUS_T[TRANSPORTER_STATUS.CLOSE_GOING_AWAY] = CONNECTION_STATUS.SOCKET_ERROR, _TRANSPORTER_STATUS_T[TRANSPORTER_STATUS.CLOSE_PROTOCOL_ERROR] = CONNECTION_STATUS.SOCKET_ERROR, _TRANSPORTER_STATUS_T[TRANSPORTER_STATUS.CLOSE_UNSUPPORTED] = CONNECTION_STATUS.SOCKET_ERROR, _TRANSPORTER_STATUS_T[TRANSPORTER_STATUS.CLOSE_NO_STATUS] = CONNECTION_STATUS.DISCONNECTED, _TRANSPORTER_STATUS_T[TRANSPORTER_STATUS.CLOSE_ABNORMAL] = CONNECTION_STATUS.NETWORK_UNAVAILABLE, _TRANSPORTER_STATUS_T[TRANSPORTER_STATUS.DISCONNECT_TOO_FAST] = CONNECTION_STATUS.NETWORK_UNAVAILABLE, _TRANSPORTER_STATUS_T[TRANSPORTER_STATUS.UNSUPPORTED_DATA] = CONNECTION_STATUS.SOCKET_ERROR, _TRANSPORTER_STATUS_T[TRANSPORTER_STATUS.POLICY_VIOLATION] = CONNECTION_STATUS.SOCKET_ERROR, _TRANSPORTER_STATUS_T[TRANSPORTER_STATUS.CLOSE_TOO_LARGE] = CONNECTION_STATUS.SOCKET_ERROR, _TRANSPORTER_STATUS_T[TRANSPORTER_STATUS.MISSING_EXTENSION] = CONNECTION_STATUS.SOCKET_ERROR, _TRANSPORTER_STATUS_T[TRANSPORTER_STATUS.INTERNAL_ERROR] = CONNECTION_STATUS.SOCKET_ERROR, _TRANSPORTER_STATUS_T[TRANSPORTER_STATUS.SERVICE_RESTART] = CONNECTION_STATUS.SOCKET_ERROR, _TRANSPORTER_STATUS_T[TRANSPORTER_STATUS.TRY_AGAIN_LATER] = CONNECTION_STATUS.SOCKET_ERROR, _TRANSPORTER_STATUS_T[TRANSPORTER_STATUS.TSL_HANDSHAKE] = CONNECTION_STATUS.SOCKET_ERROR, _TRANSPORTER_STATUS_T[TRANSPORTER_STATUS.PING_FIRST_TIMEOUT] = CONNECTION_STATUS.NETWORK_UNAVAILABLE, _TRANSPORTER_STATUS_T[TRANSPORTER_STATUS.PING_TIMEOUT] = CONNECTION_STATUS.NETWORK_UNAVAILABLE, _TRANSPORTER_STATUS_T[TRANSPORTER_STATUS.COMET_REQUEST_ERROR] = CONNECTION_STATUS.NETWORK_UNAVAILABLE, _TRANSPORTER_STATUS_T);

  var CONNECT_TYPE = {
    COMET: 'comet',
    WEBSOCKET: 'websocket' };

  var CONVERSATION_TYPE = {
    PRIVATE: 1,
    GROUP: 3,
    CHATROOM: 4,
    CUSTOMER_SERVICE: 5,
    SYSTEM: 6,
    RTC_ROOM: 12 };

  var MESSAGE_DIRECTION = {
    SEND: 1,
    RECEIVE: 2 };

  var MESSAGS_TIME_ORDER = {
    DESC: 0,
    ASC: 1 };

  var CHATROOM_ORDER = {
    ASC: 1,
    DESC: 2 };

  var RECALL_MESSAGE_TYPE = 'RC:RcCmd';
  var MENTIOND_TYPE = {
    ALL: 1,
    SINGAL: 2 };

  var MESSAGE_TYPE = {
    TEXT: 'RC:TxtMsg',
    VOICE: 'RC:VcMsg',
    HQ_VOICE: 'RC:HQVCMsg',
    IMAGE: 'RC:ImgMsg',
    GIF: 'RC:GIFMsg',
    RICH_CONTENT: 'RC:ImgTextMsg',
    LOCATION: 'RC:LBSMsg',
    FILE: 'RC:FileMsg',
    SIGHT: 'RC:SightMsg',
    COMBINE: 'RC:CombineMsg',
    CHRM_KV_NOTIFY: 'RC:chrmKVNotiMsg',
    LOG_COMMAND: 'RC:LogCmdMsg',
    EXPANSION_NOTIFY: 'RC:MsgExMsg',
    REFERENCE: 'RC:ReferenceMsg' };

  var RTC_API_TYPE = {
    ROOM: 1,
    PERSON: 2 };

  var FILE_TYPE = {
    IMAGE: 1,
    AUDIO: 2,
    VIDEO: 3,
    FILE: 4 };

  var CHATROOM_ENTRY_TYPE = {
    UPDATE: 1,
    DELETE: 2 };

  var NOTIFICATION_STATUS = {
    DO_NOT_DISTURB: 1,
    NOTIFY: 2 };

  var RECEIVED_STATUS = {
    READ: 0x1,
    LISTENED: 0x2,
    DOWNLOADED: 0x4,
    RETRIEVED: 0x8,
    UNREAD: 0 };

  var product = {
    CONNECT_TYPE: CONNECT_TYPE,
    CONNECTION_STATUS: CONNECTION_STATUS,
    CONVERSATION_TYPE: CONVERSATION_TYPE,
    MESSAGE_DIRECTION: MESSAGE_DIRECTION,
    MESSAGS_TIME_ORDER: MESSAGS_TIME_ORDER,
    CHATROOM_ORDER: CHATROOM_ORDER,
    RECALL_MESSAGE_TYPE: RECALL_MESSAGE_TYPE,
    MESSAGE_TYPE: MESSAGE_TYPE,
    MENTIOND_TYPE: MENTIOND_TYPE,
    SDK_VERSION: SDK_VERSION,
    FILE_TYPE: FILE_TYPE,
    CHATROOM_ENTRY_TYPE: CHATROOM_ENTRY_TYPE,
    NOTIFICATION_STATUS: NOTIFICATION_STATUS,
    RECEIVED_STATUS: RECEIVED_STATUS };


  var IM_TIMEOUT = 30000;
  var IM_PING_INTERVAL_TIME = 30000;
  var IM_COMET_PULLMSG_TIMEOUT = 45000;
  var IM_PING_MAX_TIMEOUT = 6000;
  var IM_PING_MIN_TIMEOUT = 2000;
  var PULL_MSG_TIME = 180000;
  var NAVI_EXPIRED_TIME = 7200000;
  var CMP_SNIFF_INTERNAL_TIME = 1000;
  var CMP_CONNECT_TIMEOUT_TIME = 10000;
  var FIRST_PING_TIMEOUT = 1000;
  var NAVI_REQUEST_SUCCESS_CODE = 200;
  var NAVI_SEPARATOR_IN_TOKEN = '@';
  var NAVI_REQUEST_TIMEOUT = 10000;
  var DOMAIN_SEPARATOR_IN_NAVLIST = ';';
  var DOMAIN_SEPARATOR_IN_CMPLIST = ',';
  var MAX_SINGAL_ID = 65535;
  var MINIMUM_CONNECT_DURATION = 5000;
  var CHATROOM_KEY_LENGTH = {
    MAX: 128,
    MIN: 1 };

  var CHATROOM_VALUE_LENGTH = {
    MAX: 4096,
    MIN: 1 };

  var MAX_MESSAGE_CONTENT_BYTES = 131072;
  var TYPE_HAS_CONVERSATION = [CONVERSATION_TYPE.PRIVATE, CONVERSATION_TYPE.GROUP, CONVERSATION_TYPE.SYSTEM];
  var PLATFORM = {
    WEB: 'web',
    WX: 'wx',
    ZFB: 'zfb',
    TT: 'tt',
    BAIDU: 'baidu',
    QUICK_APP: 'quick_app',
    UNI: 'uni' };

  var REQUEST_METHOD = {
    POST: 'post',
    GET: 'get' };

  var STORAGE_ROOT_KEY = 'rc-';
  var STORAGE_DEVICE_ID_KEY = STORAGE_ROOT_KEY + 'deviceId';
  var STORAGE_SESSION_ID_KEY = STORAGE_ROOT_KEY + 'sessionId';
  var STORAGE_NAVI = {
    ROOT_KEY_TPL: 'nav-{appkey}-{UID}',
    SUB_KEY: {
      CONNECT_TYPE: 'connettype',
      TIME_WHEN_SAVED: 'time',
      RESPONSE: 'resp' } };


  var STORAGE_SYNC_TIME = {
    ROOT_KEY_TPL: 'sync-{appkey}-{userId}',
    SUB_KEY: {
      SENDBOX: 'send',
      INBOX: 'in' } };


  var SESSION_SYNC_TIME = {
    ROOT_KEY_TPL: 'sync-{appkey}-{userId}',
    SUB_KEY: {
      TIME: 't' } };


  var STORAGE_CONVERSATION = {
    ROOT_KEY_TPL: 'con-{appkey}-{userId}',
    SUB_KEY: {
      ROOT_TPL: '{type}-{id}',
      UNREAD_COUNT: 'c',
      UNREAD_LAST_TIME: 't',
      HAS_MENTIOND: 'hm',
      MENTIOND_INFO: 'm',
      NOTIFICATION: 'no',
      TOP: 'to' } };


  var STORAGE_CONVERSATION_STATUS = {
    ROOT_KEY_TPL: 'con-s-{appkey}-{userId}',
    SUB_KEY: {
      TIME: 't' } };


  var STORAGE_USER_SETTING = {
    ROOT_KEY_TPL: 'sett-{appkey}-{userId}',
    SUB_KEY: {
      VERSION: 'v',
      SETTINGS: 's' } };


  var HTTP_PROTOCOL = {
    HTTP: 'http:',
    HTTPS: 'https:',
    FILE: 'file:' };

  var WS_PROTOCOL = {
    WSS: 'wss:',
    WS: 'ws:' };

  var NAVI_CALLBACK_NAME = 'getServerEndpoint';
  var NAVI_TYPE = {
    COMET: 'cometnavi',
    WEBSOCKET: 'navi' };

  var NAVI_URL_TPL = '{url}/{type}.js?appId={appkey}&token={token}&callBack=' + NAVI_CALLBACK_NAME + '&r={random}&v=' + SDK_VERSION;
  var CMP_URL_TPL = '{protocol}//{domain}/websocket?appId={appkey}&token={token}&apiVer={apiVer}&sdkVer=' + SDK_VERSION;
  var CMP_URL_TPL_POLLING = '{protocol}//{domain}/websocket?appId={appkey}&token={token}&apiVer={apiVer}&sdkVer=' + SDK_VERSION + '&pid={pid}';
  var MINI_CMP_URL_TPL = '{protocol}//{domain}/websocket?appId={appkey}&token={token}&apiVer={apiVer}&sdkVer=' + SDK_VERSION + '&platform=WEB';
  var COMET_REQ_HAS_TOPIC_URL_TPL = '{protocol}//{domain}/websocket?messageid={messageId}&header={headerCode}&sessionid={sessionId}&topic={topic}&targetid={targetId}&pid={pid}';
  var COMET_REQ_NO_TOPIC_URL_TPL = '{protocol}//{domain}/websocket?messageid={messageId}&header={headerCode}&sessionid={sessionId}&pid={pid}';
  var COMET_PULL_URL_TPL = '{protocol}//{domain}/pullmsg.js?sessionid={sessionId}&timestrap={timestamp}&pid={pid}';
  var TIMER_TYPE = {
    INTERVAL: 'interval',
    TIMEOUT: 'timeout' };

  var TIMER_STATUS = {
    PENNDING: 'pendding',
    BUSY: 'busy',
    ENDING: 'ending' };

  var PLATFORM_TYPE = {
    MINI: 'MiniProgram',
    WEB: 'Web' };

  var SESSION_SYNC_CHATROOM = {
    ROOT_KEY_TPL: 'sync-chrm-{appkey}-{userId}' };

  var CALLLIB_MSG_TYPE = ['RC:VCAccept', 'RC:VCRinging', 'RC:VCSummary', 'RC:VCHangup', 'RC:VCInvite', 'RC:VCModifyMedia', 'RC:VCModifyMem'];
  var MSG_EXPANSION_LENGTH = {
    TOTAL: 300,
    MSG: 20,
    KEY: 32,
    VALUE: 64 };


  var UnKown = 'UnKown';

  var hasMiniBaseEvent = function hasMiniBaseEvent(miniGlobal) {
    var baseMiniEventNames = ['canIUse', 'getSystemInfo'];

    for (var i = 0, max = baseMiniEventNames.length; i < max; i++) {
      var baseEventName = baseMiniEventNames[i];

      if (!miniGlobal[baseEventName]) {
        return false;
      }
    }

    return true;
  };

  var isFromUniappEnv = function isFromUniappEnv() {
    if (typeof uni !== 'undefined' && hasMiniBaseEvent(uni)) {
      return true;
    }

    return false;
  };

  var isFromUniapp = isFromUniappEnv();
  var isAppPlus = false;

  var isMiniEnv = function isMiniEnv(global) {
    if (isAppPlus) {
      return false;
    }

    return global !== window;
  };

  var getEnvInfo = function getEnvInfo() {
    if (typeof swan !== 'undefined' && hasMiniBaseEvent(swan)) {
      return {
        platform: PLATFORM.BAIDU,
        global: swan };

    } else if (typeof tt !== 'undefined' && hasMiniBaseEvent(tt)) {
      return {
        platform: PLATFORM.TT,
        global: tt };

    } else if (typeof my !== 'undefined' && hasMiniBaseEvent(my)) {
      return {
        platform: PLATFORM.ZFB,
        global: my };

    } else if (typeof wx !== 'undefined' && hasMiniBaseEvent(wx)) {
      return {
        platform: PLATFORM.WX,
        global: wx };

    } else {
      return {
        platform: PLATFORM.WEB,
        global: window };

    }
  };

  var getFromUniEnvInfo = function getFromUniEnvInfo() {
    var uniPlatform = "mp-weixin";

    switch (uniPlatform) {
      case 'app-plus':
        isAppPlus = true;
        return {
          platform: PLATFORM.UNI,
          global: uni };


      case 'mp-baidu':
        return {
          platform: PLATFORM.BAIDU,
          global: swan };


      case 'mp-toutiao':
        return {
          platform: PLATFORM.TT,
          global: tt };


      case 'mp-alipay':
        return {
          platform: PLATFORM.ZFB,
          global: my };


      case 'mp-weixin':
        return {
          platform: PLATFORM.WX,
          global: wx };


      case 'h5':
        return {
          platform: PLATFORM.WEB,
          global: window };


      default:
        return {
          platform: 'not included platform',
          global: window };}


  };

  var getWebSystemInfo = function getWebSystemInfo() {
    var userAgent = navigator.userAgent;
    var version, type;
    var condition = {
      IE: /rv:([\d.]+)\) like Gecko|MSIE ([\d.]+)/,
      Edge: /Edge\/([\d.]+)/,
      Firefox: /Firefox\/([\d.]+)/,
      Opera: /(?:OPERA|OPR).([\d.]+)/,
      WeiXin: /MicroMessenger\/([\d.]+)/,
      QQBrowser: /QQBrowser\/([\d.]+)/,
      Chrome: /Chrome\/([\d.]+)/,
      Safari: /Version\/([\d.]+).*Safari/ };


    for (var key in condition) {
      if (!condition.hasOwnProperty(key)) continue;
      var browserContent = userAgent.match(condition[key]);

      if (browserContent) {
        type = key;
        version = browserContent[1] || browserContent[2];
        break;
      }
    }

    return {
      model: type || UnKown,
      version: version || UnKown };

  };

  var getMiniSystemInfo = function getMiniSystemInfo(global) {
    var systemInfo = global.getSystemInfoSync() || {};
    var model = systemInfo.model,
    brand = systemInfo.brand;

    if (model && brand) {
      model = model + ' ' + brand;
    }

    systemInfo.model = model;
    return systemInfo;
  };

  var getProtocol = function getProtocol(global) {
    var location = global.location || {};
    var isHttp = location.protocol === HTTP_PROTOCOL.HTTP || location.protocol === HTTP_PROTOCOL.FILE;
    var protocol = {
      http: isHttp ? HTTP_PROTOCOL.HTTP : HTTP_PROTOCOL.HTTPS,
      ws: WS_PROTOCOL.WSS };


    if (isHttp) {
      protocol.ws = WS_PROTOCOL.WS;
    }

    return protocol;
  };

  var adaptGlobalObjectCreate = function adaptGlobalObjectCreate(global, isMini) {
    if (!isMini && !isAppPlus && !global.Object.create) {
      global.Object.create = function (o, properties) {
        if (typeof o !== 'object' && typeof o !== 'function') throw new TypeError('Object prototype may only be an Object: ' + o);else if (o === null) throw new Error('This browser\'s implementation of Object.create is a shim and doesn\'t support \'null\' as the first argument.');
        if (typeof properties !== 'undefined') throw new Error('This browser\'s implementation of Object.create is a shim and doesn\'t support a second argument.');

        function F() {}

        F.prototype = o;
        return new F();
      };
    }
  };

  var getMiniGlobal = function getMiniGlobal(global) {
    return Object.assign(global, {
      JSON: JSON,
      Promise: Promise,
      setTimeout: setTimeout,
      setInterval: setInterval,
      encodeURIComponent: encodeURIComponent,
      clearTimeout: function (_clearTimeout) {
        function clearTimeout(_x) {
          return _clearTimeout.apply(this, arguments);
        }

        clearTimeout.toString = function () {
          return _clearTimeout.toString();
        };

        return clearTimeout;
      }(function (id) {
        clearTimeout(id);
      }),
      clearInterval: function (_clearInterval) {
        function clearInterval(_x2) {
          return _clearInterval.apply(this, arguments);
        }

        clearInterval.toString = function () {
          return _clearInterval.toString();
        };

        return clearInterval;
      }(function (id) {
        clearInterval(id);
      }) });

  };

  var envInfo = isFromUniapp ? getFromUniEnvInfo() : getEnvInfo();
  var platform = envInfo.platform,
  global$1 = envInfo.global;
  var isMini = isMiniEnv(global$1);
  var protocol = getProtocol(global$1);
  var system = isMini || isAppPlus ? getMiniSystemInfo(global$1) : getWebSystemInfo();
  system.name = platform;
  adaptGlobalObjectCreate(global$1, isMini);
  global$1 = isMini || isAppPlus ? getMiniGlobal(global$1) : global$1;
  var env = {
    global: global$1,
    system: system,
    isMini: isMini,
    protocol: protocol,
    isAppPlus: isAppPlus,
    isFromUniapp: isFromUniapp };


  var global$2 = env.global,
  system$1 = env.system;
  var isZFB = system$1.name === PLATFORM.ZFB;

  var ZFBStorage = function () {
    function ZFBStorage() {}

    var _proto = ZFBStorage.prototype;

    _proto.set = function set(key, value) {
      global$2.setStorageSync({
        key: key,
        data: value });

    };

    _proto.get = function get(key) {
      return global$2.getStorageSync({
        key: key });

    };

    _proto.remove = function remove(key) {
      return global$2.removeStorageSync({
        key: key });

    };

    _proto.getKeys = function getKeys() {
      var res = my.getStorageInfoSync();
      return res.keys;
    };

    return ZFBStorage;
  }();

  var MiniStorage = function () {
    function MiniStorage() {}

    var _proto2 = MiniStorage.prototype;

    _proto2.set = function set(key, value) {
      global$2.setStorageSync(key, value);
    };

    _proto2.get = function get(key) {
      try {
        return global$2.getStorageSync(key);
      } catch (e) {
        return null;
      }
    };

    _proto2.remove = function remove(key) {
      try {
        return global$2.removeStorageSync(key);
      } catch (e) {
        return null;
      }
    };

    _proto2.getKeys = function getKeys() {
      try {
        var res = global$2.getStorageInfoSync();
        return res.keys;
      } catch (e) {
        return [];
      }
    };

    return MiniStorage;
  }();

  var storage = isZFB ? ZFBStorage : MiniStorage;

  var JSON$1 = {
    parse: function parse(sJSON) {
      return new Function('', 'return (' + sJSON + ')')();
    },
    stringify: function stringify(value) {
      return JSON$1.str('', {
        '': value });

    },
    str: function str(key, holder) {
      var i,
      k,
      v,
      length,
      partial,
      value = holder[key],
      self = JSON$1;

      if (value && typeof value === 'object' && typeof value.toJSON === 'function') {
        value = value.toJSON(key);
      }

      switch (typeof value) {
        case 'string':
          return self.quote(value);

        case 'number':
          return isFinite(value) ? String(value) : 'null';

        case 'boolean':
          return String(value);

        case 'object':
          if (!value) {
            return 'null';
          }

          partial = [];

          if (Object.prototype.toString.apply(value) === '[object Array]') {
            length = value.length;

            for (i = 0; i < length; i += 1) {
              partial[i] = self.str(i, value) || 'null';
            }

            v = partial.length === 0 ? '[]' : '[' + partial.join(',') + ']';
            return v;
          }

          for (k in value) {
            if (Object.prototype.hasOwnProperty.call(value, k)) {
              v = self.str(k, value);

              if (v) {
                partial.push(self.quote(k) + ':' + v);
              }
            }
          }

          v = partial.length === 0 ? '{}' : '{' + partial.join(',') + '}';
          return v;}

    },
    quote: function quote(string) {
      var self = JSON$1;
      self.rx_escapable.lastIndex = 0;
      return self.rx_escapable.test(string) ? '"' + string.replace(self.rx_escapable, function (a) {
        var c = self.meta[a];
        return typeof c === 'string' ? c : "\\u" + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);
      }) + '"' : '"' + string + '"';
    },
    rx_escapable: new RegExp("[\\\"\\\\\"\0-\x1F\x7F-\x9F\xAD\u0600-\u0604\u070F\u17B4\u17B5\u200C-\u200F\u2028-\u202F\u2060-\u206F\uFEFF\uFFF0-\uFFFF]", 'g'),
    meta: {
      '\b': '\\b',
      '	': '\\t',
      '\n': '\\n',
      '\f': '\\f',
      '\r': '\\r',
      '"': '\\"',
      '\'\'': '\\\'\'',
      '\\': '\\\\' } };



  var CacheStorage = function () {
    function CacheStorage(values) {
      this.caches = {};

      if (values) {
        this.caches = values;
      }
    }

    var _proto = CacheStorage.prototype;

    _proto.set = function set(key, value) {
      this.caches[key] = value;
    };

    _proto.remove = function remove(key) {
      var val = this.get(key);
      delete this.caches[key];
      return val;
    };

    _proto.get = function get(key) {
      return this.caches[key];
    };

    _proto.getKeys = function getKeys() {
      var keys = [];

      for (var key in this.caches) {
        keys.push(key);
      }

      return keys;
    };

    return CacheStorage;
  }();

  var global$3 = env.global;
  var TEST_KEY = 'RC_TEST_KEY';
  var TEST_VALUE = 'RC_TEST_VALUE';

  var isSupportLocalStorage = function isSupportLocalStorage() {
    var isSupport = false;
    var localStorage = global$3.localStorage;

    if (localStorage) {
      try {
        localStorage.setItem(TEST_KEY, TEST_VALUE);
        var testVal = localStorage.getItem(TEST_KEY);

        if (testVal === TEST_VALUE) {
          isSupport = true;
        }

        localStorage.removeItem(TEST_KEY);
      } catch (e) {}
    }

    return isSupport;
  };

  var WebStorage = function () {
    function WebStorage() {}

    var _proto = WebStorage.prototype;

    _proto.set = function set(key, value) {
      global$3.localStorage.setItem(key, JSON$1.stringify({
        d: value }));

    };

    _proto.get = function get(key) {
      var value;
      var localValue = global$3.localStorage.getItem(key);

      try {
        localValue = JSON$1.parse(localValue);
      } catch (e) {
        localValue = {};
      }

      if (localValue && localValue.d) {
        value = localValue.d;
      }

      return value;
    };

    _proto.remove = function remove(key) {
      return global$3.localStorage.removeItem(key);
    };

    _proto.getKeys = function getKeys() {
      var keyList = [];

      for (var key in global$3.localStorage) {
        keyList.push(key);
      }

      return keyList;
    };

    return WebStorage;
  }();

  var WebStorage$1 = isSupportLocalStorage() ? WebStorage : CacheStorage;

  var isMini$1 = env.isMini,
  isAppPlus$1 = env.isAppPlus;
  var Storage = isMini$1 || isAppPlus$1 ? storage : WebStorage$1,
  storage$1 = new Storage();

  var global$4 = env.global;
  var TEST_KEY$1 = 'RC_TEST_KEY';
  var TEST_VALUE$1 = 'RC_TEST_VALUE';

  var isSupportSessionStorage = function isSupportSessionStorage() {
    var isSupport = false;
    var sessionStorage = global$4.sessionStorage;

    if (sessionStorage) {
      try {
        sessionStorage.setItem(TEST_KEY$1, TEST_VALUE$1);
        var testVal = sessionStorage.getItem(TEST_KEY$1);

        if (testVal === TEST_VALUE$1) {
          isSupport = true;
        }

        sessionStorage.removeItem(TEST_KEY$1);
      } catch (e) {}
    }

    return isSupport;
  };

  var WebSession = function () {
    function WebSession() {}

    var _proto = WebSession.prototype;

    _proto.set = function set(key, value) {
      global$4.sessionStorage.setItem(key, JSON$1.stringify({
        d: value }));

    };

    _proto.get = function get(key) {
      var value;
      var localValue = global$4.sessionStorage.getItem(key);

      try {
        localValue = JSON$1.parse(localValue);
      } catch (e) {
        localValue = {};
      }

      if (localValue && localValue.d) {
        value = localValue.d;
      }

      return value;
    };

    _proto.remove = function remove(key) {
      return global$4.sessionStorage.removeItem(key);
    };

    _proto.getKeys = function getKeys() {
      var keyList = [];

      for (var key in global$4.sessionStorage) {
        keyList.push(key);
      }

      return keyList;
    };

    return WebSession;
  }();

  var WebSession$1 = isSupportSessionStorage() ? WebSession : CacheStorage;

  var isMini$2 = env.isMini,
  isAppPlus$2 = env.isAppPlus;
  var Session = isMini$2 || isAppPlus$2 ? CacheStorage : WebSession$1,
  session = new Session();

  var global$5 = env.global,
  isAppPlus$3 = env.isAppPlus;

  var Socket = function () {
    function Socket(options) {
      this.socket = void 0;

      if (isAppPlus$3) {
        options['complete'] = function () {};
      }

      this.socket = global$5.connectSocket(options);
    }

    var _proto = Socket.prototype;

    _proto.send = function send(data) {
      this.socket.send({
        data: data });

    };

    _proto.close = function close() {
      this.socket.close();
    };

    _proto.onOpen = function onOpen(callback) {
      this.socket.onOpen(callback);
    };

    _proto.onMessage = function onMessage(callback) {
      this.socket.onMessage(callback);
    };

    _proto.onError = function onError(callback) {
      this.socket.onError(callback);
    };

    _proto.onClose = function onClose(callback) {
      this.socket.onClose(callback);
    };

    return Socket;
  }();

  var Socket$1 = function () {
    function Socket(options) {
      this.socket = void 0;
      var url = options.url;
      this.socket = new WebSocket(url);
      this.socket.binaryType = 'arraybuffer';
      return this;
    }

    var _proto = Socket.prototype;

    _proto.send = function send(data) {
      return this.socket.send(data);
    };

    _proto.close = function close() {
      this.socket.close();
    };

    _proto.onOpen = function onOpen(callback) {
      this.socket.addEventListener('open', callback);
    };

    _proto.onMessage = function onMessage(callback) {
      this.socket.addEventListener('message', callback);
    };

    _proto.onError = function onError(callback) {
      this.socket.addEventListener('error', callback);
    };

    _proto.onClose = function onClose(callback) {
      this.socket.addEventListener('close', callback);
    };

    return Socket;
  }();

  var isMini$3 = env.isMini,
  isAppPlus$4 = env.isAppPlus;
  var Socket$2 = isMini$3 || isAppPlus$4 ? Socket : Socket$1;

  /*!
                                                               基于 es6-promise
                                                               * Github: https://github.com/stefanpenner/es6-promise
                                                               * @overview es6-promise - a tiny implementation of Promises/A+.
                                                               * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)
                                                               * @license   Licensed under MIT license
                                                               *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE
                                                               * @version   v4.2.8+1e68dce6
                                                               */
  var SparePromise = function () {function a(a) {var b = typeof a;return null !== a && ("object" === b || "function" === b);}function b(a) {return "function" == typeof a;}function c(a) {P = a;}function d(a) {Q = a;}function e() {return function () {return process.nextTick(j);};}function f() {return "undefined" != typeof O ? function () {O(j);} : i();}function g() {var a = 0,b = new T(j),c = document.createTextNode("");return b.observe(c, { characterData: !0 }), function () {c.data = a = ++a % 2;};}function h() {var a = new MessageChannel();return a.port1.onmessage = j, function () {return a.port2.postMessage(0);};}function i() {var a = setTimeout;return function () {return a(j, 1);};}function j() {var a, b, c;for (a = 0; N > a; a += 2) {b = W[a], c = W[a + 1], b(c), W[a] = void 0, W[a + 1] = void 0;}N = 0;}function k() {try {var a = Function("return this")().require("vertx");return O = a.runOnLoop || a.runOnContext, f();} catch (b) {return i();}}function l(a, b) {var e,f,c = this,d = new this.constructor(n);return void 0 === d[Y] && D(d), e = c._state, e ? (f = arguments[e - 1], Q(function () {return A(e, d, f, c._result);})) : y(c, d, a, b), d;}function m(a) {var c,b = this;return a && "object" == typeof a && a.constructor === b ? a : (c = new b(n), u(c, a), c);}function n() {}function o() {return new TypeError("You cannot resolve a promise with itself");}function p() {return new TypeError("A promises callback cannot return that same promise.");}function q(a, b, c, d) {try {a.call(b, c, d);} catch (e) {return e;}}function r(a, b, c) {Q(function (a) {var d = !1,e = q(c, b, function (c) {d || (d = !0, b !== c ? u(a, c) : w(a, c));}, function (b) {d || (d = !0, x(a, b));}, "Settle: " + (a._label || " unknown promise"));!d && e && (d = !0, x(a, e));}, a);}function s(a, b) {b._state === $ ? w(a, b._result) : b._state === _ ? x(a, b._result) : y(b, void 0, function (b) {return u(a, b);}, function (b) {return x(a, b);});}function t(a, c, d) {c.constructor === a.constructor && d === l && c.constructor.resolve === m ? s(a, c) : void 0 === d ? w(a, c) : b(d) ? r(a, c, d) : w(a, c);}function u(b, c) {if (b === c) x(b, o());else if (a(c)) {var d = void 0;try {d = c.then;} catch (e) {return void x(b, e);}t(b, c, d);} else w(b, c);}function v(a) {a._onerror && a._onerror(a._result), z(a);}function w(a, b) {a._state === Z && (a._result = b, a._state = $, 0 !== a._subscribers.length && Q(z, a));}function x(a, b) {a._state === Z && (a._state = _, a._result = b, Q(v, a));}function y(a, b, c, d) {var e = a._subscribers,f = e.length;a._onerror = null, e[f] = b, e[f + $] = c, e[f + _] = d, 0 === f && a._state && Q(z, a);}function z(a) {var d,e,f,g,b = a._subscribers,c = a._state;if (0 !== b.length) {for (d = void 0, e = void 0, f = a._result, g = 0; g < b.length; g += 3) {d = b[g], e = b[g + c], d ? A(c, d, e, f) : e(f);}a._subscribers.length = 0;}}function A(a, c, d, e) {var f = b(d),g = void 0,h = void 0,i = !0;if (f) {try {g = d(e);} catch (j) {i = !1, h = j;}if (c === g) return void x(c, p());} else g = e;c._state !== Z || (f && i ? u(c, g) : i === !1 ? x(c, h) : a === $ ? w(c, g) : a === _ && x(c, g));}function B(a, b) {try {b(function (b) {u(a, b);}, function (b) {x(a, b);});} catch (c) {x(a, c);}}function C() {return ab++;}function D(a) {a[Y] = ab++, a._state = void 0, a._result = void 0, a._subscribers = [];}function E() {return new Error("Array Methods must be provided an Array");}function F(a) {return new bb(this, a).promise;}function G(a) {var b = this;return new b(M(a) ? function (c, d) {for (var e = a.length, f = 0; e > f; f++) {b.resolve(a[f]).then(c, d);}} : function (a, b) {return b(new TypeError("You must pass an array to race."));});}function H(a) {var b = this,c = new b(n);return x(c, a), c;}function I() {throw new TypeError("You must pass a resolver function as the first argument to the promise constructor");}function J() {throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.");}function K() {var c,d,a = void 0;if ("undefined" != typeof global) a = global;else if ("undefined" != typeof self) a = self;else try {a = Function("return this")();} catch (b) {throw new Error("polyfill failed because global object is unavailable in this environment");}if (c = a.Promise) {d = null;try {d = Object.prototype.toString.call(c.resolve());} catch (b) {}if ("[object Promise]" === d && !c.cast) return;}a.Promise = cb;}var M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,$,_,ab,bb,cb,L = void 0;return L = Array.isArray ? Array.isArray : function (a) {return "[object Array]" === Object.prototype.toString.call(a);}, M = L, N = 0, O = void 0, P = void 0, Q = function Q(a, b) {W[N] = a, W[N + 1] = b, N += 2, 2 === N && (P ? P(j) : X());}, R = "undefined" != typeof window ? window : void 0, S = R || {}, T = S.MutationObserver || S.WebKitMutationObserver, U = "undefined" == typeof self && "undefined" != typeof process && "[object process]" === {}.toString.call(process), V = "undefined" != typeof Uint8ClampedArray && "undefined" != typeof importScripts && "undefined" != typeof MessageChannel, W = new Array(1e3), X = void 0, X = U ? e() : T ? g() : V ? h() : void 0 === R && "function" == "function" ? k() : i(), Y = Math.random().toString(36).substring(2), Z = void 0, $ = 1, _ = 2, ab = 0, bb = function () {function a(a, b) {this._instanceConstructor = a, this.promise = new a(n), this.promise[Y] || D(this.promise), M(b) ? (this.length = b.length, this._remaining = b.length, this._result = new Array(this.length), 0 === this.length ? w(this.promise, this._result) : (this.length = this.length || 0, this._enumerate(b), 0 === this._remaining && w(this.promise, this._result))) : x(this.promise, E());}return a.prototype._enumerate = function (a) {for (var b = 0; this._state === Z && b < a.length; b++) {this._eachEntry(a[b], b);}}, a.prototype._eachEntry = function (a, b) {var e,f,g,i,c = this._instanceConstructor,d = c.resolve;if (d === m) {e = void 0, f = void 0, g = !1;try {e = a.then;} catch (h) {g = !0, f = h;}e === l && a._state !== Z ? this._settledAt(a._state, b, a._result) : "function" != typeof e ? (this._remaining--, this._result[b] = a) : c === cb ? (i = new c(n), g ? x(i, f) : t(i, a, e), this._willSettleAt(i, b)) : this._willSettleAt(new c(function (b) {return b(a);}), b);} else this._willSettleAt(d(a), b);}, a.prototype._settledAt = function (a, b, c) {var d = this.promise;d._state === Z && (this._remaining--, a === _ ? x(d, c) : this._result[b] = c), 0 === this._remaining && w(d, this._result);}, a.prototype._willSettleAt = function (a, b) {var c = this;y(a, void 0, function (a) {return c._settledAt($, b, a);}, function (a) {return c._settledAt(_, b, a);});}, a;}(), cb = function () {function a(b) {this[Y] = C(), this._result = this._state = void 0, this._subscribers = [], n !== b && ("function" != typeof b && I(), this instanceof a ? B(this, b) : J());}return a.prototype["catch"] = function (a) {return this.then(null, a);}, a.prototype["finally"] = function (a) {var c = this,d = c.constructor;return b(a) ? c.then(function (b) {return d.resolve(a()).then(function () {return b;});}, function (b) {return d.resolve(a()).then(function () {throw b;});}) : c.then(a, a);}, a;}(), cb.prototype.then = l, cb.all = F, cb.race = G, cb.resolve = m, cb.reject = H, cb._setScheduler = c, cb._setAsap = d, cb._asap = Q, cb.polyfill = K, cb.Promise = cb, cb;}();

  var global$6 = env.global;
  var MiniRequest = function MiniRequest(option) {
    var success = option.success,
    fail = option.fail,
    body = option.body;
    option.data = option.data || body;
    var xhr;

    option.success = function (result) {
      success(result.data, '', result.statusCode || result.status);
    };

    option.fail = function (result) {
      fail(result.data, '', result.statusCode || result.status);
    };

    xhr = global$6.request(option);
    return xhr;
  };

  var global$7 = env.global;

  var isXDomainRequest = function isXDomainRequest(xhr) {
    return Object.prototype.toString.call(xhr) === '[object XDomainRequest]' || typeof XDomainRequest === 'object';
  };

  var isValidRequest = function isValidRequest(obj) {
    return typeof obj === 'function' || typeof obj === 'object';
  };

  var createXHR = function createXHR() {
    var item = {
      XMLHttpRequest: function (_XMLHttpRequest) {
        function XMLHttpRequest() {
          return _XMLHttpRequest.apply(this, arguments);
        }

        XMLHttpRequest.toString = function () {
          return _XMLHttpRequest.toString();
        };

        return XMLHttpRequest;
      }(function () {
        return new XMLHttpRequest();
      }),
      XDomainRequest: function (_XDomainRequest) {
        function XDomainRequest() {
          return _XDomainRequest.apply(this, arguments);
        }

        XDomainRequest.toString = function () {
          return _XDomainRequest.toString();
        };

        return XDomainRequest;
      }(function () {
        return new XDomainRequest();
      }),
      ActiveXObject: function (_ActiveXObject) {
        function ActiveXObject() {
          return _ActiveXObject.apply(this, arguments);
        }

        ActiveXObject.toString = function () {
          return _ActiveXObject.toString();
        };

        return ActiveXObject;
      }(function () {
        return new ActiveXObject('Microsoft.XMLHTTP');
      }) };

    var isXHR = isValidRequest(global$7.XMLHttpRequest) && 'withCredentials' in new XMLHttpRequest();
    var isXDR = isValidRequest(global$7.XDomainRequest);
    var key = isXHR ? 'XMLHttpRequest' : isXDR ? 'XDomainRequest' : 'ActiveXObject';
    return item[key]();
  };

  var request = function request(option) {
    var url = option.url,
    method = option.method,
    body = option.body,
    headers = option.headers,
    success = option.success,
    fail = option.fail,
    timeout = option.timeout;
    method = method || REQUEST_METHOD.GET;
    var xhr = createXHR();
    xhr.open(method, url);

    if (headers && xhr.setRequestHeader) {
      for (var key in headers) {
        xhr.setRequestHeader(key, headers[key]);
      }
    }

    if ('onload' in xhr) {
      xhr.onload = function () {
        success(xhr.responseText, xhr);
      };

      xhr.onerror = function () {
        fail(xhr.responseText, xhr);
      };
    } else {
      xhr.onreadystatechange = function () {
        if (xhr.readyState === 4) {
          var result = xhr.responseText,
          status = xhr.status;

          if (status === 0) {
            fail(result, xhr, status);
          } else {
            success(result, xhr, status);
          }
        }
      };
    }

    if ('ontimeout' in xhr) {
      xhr.ontimeout = function () {
        fail(xhr.responseText, xhr);
      };
    }

    if (timeout) {
      xhr.timeout = timeout;
    }

    if (isXDomainRequest(xhr) && typeof body === 'object') {
      body = JSON$1.stringify(body);
    }

    xhr.send(body);
    return xhr;
  };

  var request$1 = env.isMini || env.isAppPlus ? MiniRequest : request;

  /*
                                                                        * JavaScript MD5
                                                                        * https://github.com/blueimp/JavaScript-MD5
                                                                        *
                                                                        * Copyright 2011, Sebastian Tschan
                                                                        * https://blueimp.net
                                                                        *
                                                                        * Licensed under the MIT license:
                                                                        * https://opensource.org/licenses/MIT
                                                                        *
                                                                        * Based on
                                                                        * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message
                                                                        * Digest Algorithm, as defined in RFC 1321.
                                                                        * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009
                                                                        * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
                                                                        * Distributed under the BSD License
                                                                        * See http://pajhome.org.uk/crypt/md5 for more info.
                                                                        */
  var md5 = function () {function a(a, b) {var c = (65535 & a) + (65535 & b),d = (a >> 16) + (b >> 16) + (c >> 16);return d << 16 | 65535 & c;}function b(a, b) {return a << b | a >>> 32 - b;}function c(c, d, e, f, g, h) {return a(b(a(a(d, c), a(f, h)), g), e);}function d(a, b, d, e, f, g, h) {return c(b & d | ~b & e, a, b, f, g, h);}function e(a, b, d, e, f, g, h) {return c(b & e | d & ~e, a, b, f, g, h);}function f(a, b, d, e, f, g, h) {return c(b ^ d ^ e, a, b, f, g, h);}function g(a, b, d, e, f, g, h) {return c(d ^ (b | ~e), a, b, f, g, h);}function h(b, c) {var h, i, j, k, l, m, n, o, p;for (b[c >> 5] |= 128 << c % 32, b[(c + 64 >>> 9 << 4) + 14] = c, m = 1732584193, n = -271733879, o = -1732584194, p = 271733878, h = 0; h < b.length; h += 16) {i = m, j = n, k = o, l = p, m = d(m, n, o, p, b[h], 7, -680876936), p = d(p, m, n, o, b[h + 1], 12, -389564586), o = d(o, p, m, n, b[h + 2], 17, 606105819), n = d(n, o, p, m, b[h + 3], 22, -1044525330), m = d(m, n, o, p, b[h + 4], 7, -176418897), p = d(p, m, n, o, b[h + 5], 12, 1200080426), o = d(o, p, m, n, b[h + 6], 17, -1473231341), n = d(n, o, p, m, b[h + 7], 22, -45705983), m = d(m, n, o, p, b[h + 8], 7, 1770035416), p = d(p, m, n, o, b[h + 9], 12, -1958414417), o = d(o, p, m, n, b[h + 10], 17, -42063), n = d(n, o, p, m, b[h + 11], 22, -1990404162), m = d(m, n, o, p, b[h + 12], 7, 1804603682), p = d(p, m, n, o, b[h + 13], 12, -40341101), o = d(o, p, m, n, b[h + 14], 17, -1502002290), n = d(n, o, p, m, b[h + 15], 22, 1236535329), m = e(m, n, o, p, b[h + 1], 5, -165796510), p = e(p, m, n, o, b[h + 6], 9, -1069501632), o = e(o, p, m, n, b[h + 11], 14, 643717713), n = e(n, o, p, m, b[h], 20, -373897302), m = e(m, n, o, p, b[h + 5], 5, -701558691), p = e(p, m, n, o, b[h + 10], 9, 38016083), o = e(o, p, m, n, b[h + 15], 14, -660478335), n = e(n, o, p, m, b[h + 4], 20, -405537848), m = e(m, n, o, p, b[h + 9], 5, 568446438), p = e(p, m, n, o, b[h + 14], 9, -1019803690), o = e(o, p, m, n, b[h + 3], 14, -187363961), n = e(n, o, p, m, b[h + 8], 20, 1163531501), m = e(m, n, o, p, b[h + 13], 5, -1444681467), p = e(p, m, n, o, b[h + 2], 9, -51403784), o = e(o, p, m, n, b[h + 7], 14, 1735328473), n = e(n, o, p, m, b[h + 12], 20, -1926607734), m = f(m, n, o, p, b[h + 5], 4, -378558), p = f(p, m, n, o, b[h + 8], 11, -2022574463), o = f(o, p, m, n, b[h + 11], 16, 1839030562), n = f(n, o, p, m, b[h + 14], 23, -35309556), m = f(m, n, o, p, b[h + 1], 4, -1530992060), p = f(p, m, n, o, b[h + 4], 11, 1272893353), o = f(o, p, m, n, b[h + 7], 16, -155497632), n = f(n, o, p, m, b[h + 10], 23, -1094730640), m = f(m, n, o, p, b[h + 13], 4, 681279174), p = f(p, m, n, o, b[h], 11, -358537222), o = f(o, p, m, n, b[h + 3], 16, -722521979), n = f(n, o, p, m, b[h + 6], 23, 76029189), m = f(m, n, o, p, b[h + 9], 4, -640364487), p = f(p, m, n, o, b[h + 12], 11, -421815835), o = f(o, p, m, n, b[h + 15], 16, 530742520), n = f(n, o, p, m, b[h + 2], 23, -995338651), m = g(m, n, o, p, b[h], 6, -198630844), p = g(p, m, n, o, b[h + 7], 10, 1126891415), o = g(o, p, m, n, b[h + 14], 15, -1416354905), n = g(n, o, p, m, b[h + 5], 21, -57434055), m = g(m, n, o, p, b[h + 12], 6, 1700485571), p = g(p, m, n, o, b[h + 3], 10, -1894986606), o = g(o, p, m, n, b[h + 10], 15, -1051523), n = g(n, o, p, m, b[h + 1], 21, -2054922799), m = g(m, n, o, p, b[h + 8], 6, 1873313359), p = g(p, m, n, o, b[h + 15], 10, -30611744), o = g(o, p, m, n, b[h + 6], 15, -1560198380), n = g(n, o, p, m, b[h + 13], 21, 1309151649), m = g(m, n, o, p, b[h + 4], 6, -145523070), p = g(p, m, n, o, b[h + 11], 10, -1120210379), o = g(o, p, m, n, b[h + 2], 15, 718787259), n = g(n, o, p, m, b[h + 9], 21, -343485551), m = a(m, i), n = a(n, j), o = a(o, k), p = a(p, l);}return [m, n, o, p];}function i(a) {var b,c = "",d = 32 * a.length;for (b = 0; d > b; b += 8) {c += String.fromCharCode(255 & a[b >> 5] >>> b % 32);}return c;}function j(a) {var b,d,c = [];for (c[(a.length >> 2) - 1] = void 0, b = 0; b < c.length; b += 1) {c[b] = 0;}for (d = 8 * a.length, b = 0; d > b; b += 8) {c[b >> 5] |= (255 & a.charCodeAt(b / 8)) << b % 32;}return c;}function k(a) {return i(h(j(a), 8 * a.length));}function l(a, b) {var c,g,d = j(a),e = [],f = [];for (e[15] = f[15] = void 0, d.length > 16 && (d = h(d, 8 * a.length)), c = 0; 16 > c; c += 1) {e[c] = 909522486 ^ d[c], f[c] = 1549556828 ^ d[c];}return g = h(e.concat(j(b)), 512 + 8 * b.length), i(h(f.concat(g), 640));}function m(a) {var d,e,b = "0123456789abcdef",c = "";for (e = 0; e < a.length; e += 1) {d = a.charCodeAt(e), c += b.charAt(15 & d >>> 4) + b.charAt(15 & d);}return c;}function n(a) {return unescape(encodeURIComponent(a));}function o(a) {return k(n(a));}function p(a) {return m(o(a));}function q(a, b) {return l(n(a), n(b));}function r(a, b) {return m(q(a, b));}function s(a, b, c) {return b ? c ? q(b, a) : r(b, a) : c ? o(a) : p(a);}return s;}();

  var global$8 = env.global,
  system$2 = env.system;
  var Promise$1 = global$8.Promise;

  var isSupportPromise = function isSupportPromise() {
    if (!global$8.Promise) return false;

    var defer = function () {
      return global$8.Promise.resolve();
    }();

    return defer.then && defer["catch"] && defer["finally"];
  };

  var setTimeout$1 = function setTimeout(event, timeout) {
    return global$8.setTimeout(event, timeout);
  };

  var clearTimeout$1 = function clearTimeout(id) {
    return global$8.clearTimeout(id);
  };

  var setInterval$1 = function setInterval(event, timeout) {
    return global$8.setInterval(event, timeout);
  };

  var clearInterval$1 = function clearInterval(id) {
    return global$8.clearInterval(id);
  };

  var Defer = isSupportPromise() ? global$8.Promise : SparePromise;

  var noop = function noop(data) {
    return data;
  };

  var deferNoop = function deferNoop(data) {
    return Promise$1.resolve(data);
  };

  var JSON$2 = global$8.JSON || JSON$1;

  var allowError = function allowError(event) {
    var result;

    try {
      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      result = event.apply(void 0, args);
    } catch (e) {
      result = null;
    }

    return result;
  };

  var toJSON = function toJSON(val) {
    return allowError(JSON$2.stringify, val);
  };

  var parseJSON = function parseJSON(val) {
    return allowError(JSON$2.parse, val);
  };

  var copy = function copy(val) {
    return parseJSON(toJSON(val));
  };

  var isObject = function isObject(val) {
    return Object.prototype.toString.call(val) === '[object Object]';
  };

  var isArray = function isArray(val) {
    return Object.prototype.toString.call(val).indexOf('Array') !== -1;
  };

  var isFunction = function isFunction(val) {
    return Object.prototype.toString.call(val) === '[object Function]';
  };

  var isString = function isString(val) {
    return Object.prototype.toString.call(val) === '[object String]';
  };

  var isBoolean = function isBoolean(val) {
    return Object.prototype.toString.call(val) === '[object Boolean]';
  };

  var isUndefined = function isUndefined(val) {
    return val === undefined || Object.prototype.toString.call(val) === '[object Undefined]';
  };

  var isNull = function isNull(val) {
    return Object.prototype.toString.call(val) === '[object Null]';
  };

  var isNumber = function isNumber(val) {
    return Object.prototype.toString.call(val) === '[object Number]';
  };

  var isArrayBuffer = function isArrayBuffer(val) {
    return Object.prototype.toString.call(val) === '[object ArrayBuffer]';
  };

  var isPromise = function isPromise(val) {
    var isTrue = false;

    try {
      isTrue = Object.prototype.toString.call(val) === '[object Promise]' || val && val.then && val["catch"] && val["finally"];
    } catch (e) {
      isTrue = false;
    }

    return isTrue;
  };

  var getTypeName = function getTypeName(data) {
    var typeName = Object.prototype.toString.call(data);
    return typeName.substring(8, typeName.length - 1);
  };

  var isEqual = function isEqual(source, target) {
    return source === target;
  };

  var ArrayBufferToArray = function ArrayBufferToArray(data) {
    if (isArrayBuffer(data)) {
      return [].slice.call(new Int8Array(data));
    }

    return data;
  };

  var ArrayBufferToUint8Array = function ArrayBufferToUint8Array(data) {
    if (isArrayBuffer(data)) {
      return new Uint8Array(data);
    }

    return data;
  };

  var forEach = function forEach(source, event, options) {
    options = options || {};
    event = event || noop;
    var _options = options,
    isReverse = _options.isReverse;

    var loopObj = function loopObj() {
      for (var key in source) {
        event(source[key], key, source);
      }
    };

    var loopArr = function loopArr() {
      if (isReverse) {
        for (var i = source.length - 1; i >= 0; i--) {
          event(source[i], i);
        }
      } else {
        for (var j = 0, len = source.length; j < len; j++) {
          event(source[j], j);
        }
      }
    };

    if (isObject(source)) {
      loopObj();
    }

    if (isArray(source) || isString(source)) {
      loopArr();
    }
  };

  var isFalse = function isFalse(val) {
    return val === false;
  };

  var isEmpty = function isEmpty(val) {
    var result = true;

    if (isObject(val)) {
      forEach(val, function () {
        result = false;
      });
    }

    if (isString(val) || isArray(val)) {
      result = val.length === 0;
    }

    if (isNumber(val)) {
      result = val === 0;
    }

    return result;
  };

  var isNumberData = function isNumberData(val) {
    var isEmptyVal = isEmpty(val);
    val = Number(val);
    return isNumber(val) && !isEmptyVal;
  };

  var getKeys = function getKeys(obj) {
    var keyList = [];
    forEach(obj, function (val, key) {
      keyList.push(key);
    });
    return keyList;
  };

  var getValues = function getValues(obj) {
    var valList = [];
    forEach(obj, function (val) {
      valList.push(val);
    });
    return valList;
  };

  var getTimestamp = function getTimestamp(time) {
    return new Date(time).getTime();
  };

  var getCurrentTimestamp = function getCurrentTimestamp() {
    return new Date().getTime();
  };

  var formatTime = function formatTime(timestamp, options) {
    timestamp = timestamp || getCurrentTimestamp();
    options = options || {};
    var temp = options.temp;
    var date = new Date(timestamp),
    formateds = {};
    formateds['YY'] = date.getFullYear();
    formateds['MM'] = date.getMonth() + 1;
    formateds['DD'] = date.getDate();
    formateds['hh'] = date.getHours();
    formateds['mm'] = date.getMinutes();
    formateds['ss'] = date.getSeconds();
    forEach(formateds, function (val, key) {
      formateds[key] = val >= 10 ? val : '0' + val;
    });

    if (temp) {
      var formatedText = temp;
      forEach(formateds, function (val, key) {
        formatedText = formatedText.replace(key, val);
      });
      return formatedText;
    }

    return formateds.YY + '-' + formateds.MM + '-' + formateds.DD + ' ' + formateds.hh + ':' + formateds.mm + ':' + formateds.ss;
  };

  var isValidJSON = function isValidJSON(jsonStr) {
    if (isObject(jsonStr)) {
      return true;
    }

    var isValid = false;

    try {
      var obj = JSON$2.parse(jsonStr);
      var str = JSON$2.stringify(obj);
      isValid = str === jsonStr;
    } catch (e) {
      isValid = false;
    }

    return isValid;
  };

  var isSupportSocket = function isSupportSocket() {
    var isMini = env.isMini;
    var isAppPlus = env.isAppPlus;

    if (isMini || isAppPlus) {
      return true;
    }

    var Socket = global$8.WebSocket;

    if (isUndefined(Socket)) {
      return false;
    }

    var hasWS = false,
    isIntegrity = false;

    try {
      hasWS = typeof Socket === 'object' || typeof Socket === 'function';
      isIntegrity = typeof Socket.OPEN === 'number';
    } catch (e) {}

    return hasWS && isIntegrity;
  };

  var indexOf = function indexOf(source, searchVal) {
    if (source.indexOf) {
      return source.indexOf(searchVal);
    }

    var index = -1;
    forEach(source, function (sub, i) {
      if (searchVal === sub) {
        index = i;
        return;
      }
    });
    return index;
  };

  var lastIndexOf = function lastIndexOf(source, searchVal) {
    if (source.lastIndexOf) {
      return source.lastIndexOf(searchVal);
    }

    var index = -1;
    forEach(source, function (sub, i) {
      if (searchVal === sub) {
        index = i;
        return;
      }
    }, {
      isReverse: true });

    return index;
  };

  var isInclude = function isInclude(source, searchVal) {
    if (isObject(source)) {
      var arr = [];
      forEach(source, function (val) {
        arr.push(val);
      });
      source = arr;
    }

    var index = indexOf(source, searchVal);
    return index !== -1;
  };

  var substring = function substring(source, start, end) {
    return source.substring(start, end);
  };

  var spliceByChild = function spliceByChild(arr, item) {
    forEach(arr, function (child, index) {
      if (isEqual(child, item)) {
        arr.splice(index, 1);
      }
    }, {
      isReverse: true });

  };

  var parse16To10 = function parse16To10(num) {
    return parseInt(num, 16);
  };

  var isPlus = function isPlus(num) {
    return +num === num;
  };

  var filter = function filter(source, event) {
    var newArr = [];

    for (var i = 0, max = source.length; i < max; i++) {
      var data = source[i];

      if (event(data, i)) {
        newArr.push(data);
      }
    }

    return newArr;
  };

  var map = function map(source, event) {
    forEach(source, function (item, index) {
      source[index] = event(item, index);
    });
    return source;
  };

  var extend = function extend(destination, sources, option) {
    option = option || {};
    var _option2 = option,
    isAllowNull = _option2.isAllowNull;
    destination = destination || {};
    sources = sources || {};

    for (var key in sources) {
      var value = sources[key];

      if (!isUndefined(value) || isAllowNull) {
        destination[key] = value;
      }
    }

    return destination;
  };

  var extendAllowNull = function extendAllowNull(destination, sources) {
    return extend(destination, sources, {
      isAllowNull: true });

  };

  var extendInShallow = function extendInShallow(destination, sources) {
    destination = destination || {};
    sources = sources || {};
    destination = copy(destination);
    sources = copy(sources);
    return extend(destination, sources);
  };

  var deferred = function deferred(callbacks) {
    return new Defer(callbacks);
  };

  var deferTimeout = function deferTimeout(timeout, callback) {
    if (callback === void 0) {
      callback = noop;
    }

    return deferred(function (resolve) {
      var timeouter = setTimeout$1(function () {
        resolve(timeouter);
      }, timeout);
      callback(timeouter);
    });
  };

  var tplEngine = function tplEngine(temp, data, regexp) {
    var replaceAction = function replaceAction(obj) {
      return temp.replace(regexp || /{([^}]+)}/g, function (match, name) {
        if (match.charAt(0) === '\\') {
          return match.slice(1);
        }

        return obj[name] !== undefined ? obj[name] : '{' + name + '}';
      });
    };

    if (!isArray(data)) {
      data = [data];
    }

    var ret = [];
    forEach(data, function (item) {
      ret.push(replaceAction(item));
    });
    return ret.join('');
  };

  var getRandomNum = function getRandomNum(max, min) {
    min = min || 0;
    var range = max - min,
    random = Math.random();
    return min + Math.round(random * range);
  };

  var Timer = function () {
    function Timer(options) {
      this._timerId = void 0;
      this._timerEvent = void 0;
      this._timerClearEvent = void 0;
      this.timeout = 0;
      this.type = TIMER_TYPE.TIMEOUT;
      this.status = TIMER_STATUS.PENNDING;
      var self = this;
      extend(self, options);
      var type = self.type;
      var isTimeout = type === TIMER_TYPE.TIMEOUT;

      if (isTimeout) {
        self._timerEvent = setTimeout$1;
        self._timerClearEvent = clearTimeout$1;
      } else {
        self._timerEvent = setInterval$1;
        self._timerClearEvent = clearInterval$1;
      }

      return self;
    }

    var _proto = Timer.prototype;

    _proto.start = function start(event, options) {
      options = options || {};
      var self = this,
      isTimeout = self.type === TIMER_TYPE.TIMEOUT;
      var _options2 = options,
      args = _options2.args,
      thisArg = _options2.thisArg;
      self.stop();
      self._timerId = self._timerEvent.call(global$8, function () {
        isTimeout && self.stop();

        if (thisArg) {
          event.apply(thisArg, args);
        } else {
          event(args);
        }
      }, self.timeout);
      self.status = TIMER_STATUS.BUSY;
    };

    _proto.stop = function stop() {
      var self = this;

      if (self._timerId) {
        self._timerClearEvent.call(global$8, self._timerId);

        self.status = TIMER_STATUS.ENDING;
      }
    };

    return Timer;
  }();

  var DeferHandler = function () {
    function DeferHandler(options) {
      this._list = {};
      this.timeout = IM_TIMEOUT;
      extend(this, options);
    }

    var _proto2 = DeferHandler.prototype;

    _proto2._isInvalid = function _isInvalid(id) {
      var handlers = this._list[id];
      return !isArray(handlers) || isEmpty(handlers);
    };

    _proto2._exec = function _exec(id, isError, data) {
      var self = this;

      if (self._isInvalid(id)) {
        return;
      }

      var handlers = self._list[id],
      handler = handlers[0];
      isError ? handler.reject(data) : handler.resolve(data);
      handlers.splice(0, 1);
    };

    _proto2.add = function add(id, defer, options) {
      options = options || {};
      var self = this;
      var resolve = defer.resolve,
      reject = defer.reject;
      var timeout = options.timeout || self.timeout;

      if (self._isInvalid(id)) {
        self._list[id] = [];
      }

      var timer = new Timer({
        timeout: timeout });

      timer.start(function () {
        self.reject(id, ERROR_INFO.TIMEOUT.code);
      });

      self._list[id].push({
        resolve: resolve,
        reject: reject,
        timer: timer });

    };

    _proto2.resolve = function resolve(id, data) {
      this._exec(id, false, data);
    };

    _proto2.reject = function reject(id, error) {
      this._exec(id, true, error);
    };

    return DeferHandler;
  }();

  var EventEmitter = function () {
    function EventEmitter() {
      this._events = void 0;
      this._events = {};
    }

    var _proto3 = EventEmitter.prototype;

    _proto3.on = function on(name, event) {
      var _events = this._events[name] || [];

      _events.push(event);

      this._events[name] = _events;
    };

    _proto3.off = function off(name, offEvent) {
      if (offEvent) {
        var _events = this._events[name] || [];

        spliceByChild(_events, offEvent);
      } else {
        delete this._events[name];
      }
    };

    _proto3.emit = function emit(name, data, error) {
      var _events = this._events[name];
      forEach(_events, function (event) {
        isFunction(event) && event(data, error);
      });
    };

    _proto3.clear = function clear() {
      this._events = {};
    };

    return EventEmitter;
  }();

  var decodeURI = function decodeURI(uri) {
    return global$8.decodeURIComponent(uri);
  };

  var encodeURI = function encodeURI(uri) {
    return global$8.encodeURIComponent(uri);
  };

  var int64ToTimestamp = function int64ToTimestamp(obj) {
    if (!isObject(obj) || obj.low === undefined || obj.high === undefined) {
      return obj;
    }

    var low = obj.low;

    if (low < 0) {
      low += 0xffffffff + 1;
    }

    low = low.toString(16);
    var timestamp = parseInt(obj.high.toString(16) + '00000000'.replace(new RegExp('0{' + low.length + '}$'), low), 16);
    return timestamp;
  };

  var batchInt64ToTimestamp = function batchInt64ToTimestamp(data) {
    forEach(data, function (item, key) {
      if (isObject(item)) {
        data[key] = int64ToTimestamp(item);
      }
    });
    return data;
  };

  var Queue = function () {
    function Queue(defaultConfig) {
      this._isRunning = false;
      this._list = [];
      this._defaultConfig = void 0;
      this._defaultConfig = defaultConfig;
    }

    var _proto4 = Queue.prototype;

    _proto4.add = function add(params) {
      params = params || this._defaultConfig;

      this._list.push(params);

      this.run();
    };

    _proto4.run = function run() {
      var self = this;
      var _isRunning = self._isRunning,
      _list = self._list;
      var isFinished = isEmpty(_list);

      if (_isRunning || isFinished) {
        return;
      }

      var firstItem = _list.splice(0, 1)[0];

      var event = firstItem.event,
      args = firstItem.args,
      thisArg = firstItem.thisArg;

      var next = function next() {
        self._isRunning = false;
        self.run();
      };

      if (!event) {
        return next();
      }

      self._isRunning = true;
      event.apply(thisArg, args).then(next)["catch"](next);
    };

    return Queue;
  }();

  var secondsToMilliseconds = function secondsToMilliseconds(seconds) {
    return seconds * 1000;
  };

  var request$2 = function request(url, options) {
    options = options || {};
    return deferred(function (resolve, reject) {
      options = extend(options, {
        url: url,
        success: function success(responseText, xhr, status) {
          if (system$2.name === PLATFORM.ZFB && !status) {
            reject({
              responseText: responseText,
              xhr: xhr,
              status: status });

            return;
          }

          resolve({
            responseText: responseText,
            xhr: xhr,
            status: status });

        },
        fail: function fail(result, xhr, status) {
          reject({
            result: result,
            xhr: xhr,
            status: status });

        } });

      request$1(options);
    });
  };

  var requestByUrlList = function requestByUrlList(urlList, options) {
    if (isEmpty(urlList)) {
      return Defer.reject();
    }

    var url = urlList[0];
    return request$2(url, options).then(function (result) {
      result = result || {};
      result.urlList = urlList;
      return result;
    })["catch"](function (error) {
      urlList.splice(0, 1);

      if (isEmpty(urlList)) {
        return Defer.reject(error);
      } else {
        return requestByUrlList(urlList, options);
      }
    });
  };

  var requestForFaster = function requestForFaster(urlList, option) {
    option = option || {};
    var timeInterval = option.timeInterval || 0;
    var faildCount = 0,
    totalCount = urlList.length;
    var requestXhrs = [];
    var totalTimer = new Timer({
      timeout: 15 * 1000 });

    var reqCountdownTimers = [];

    var clearAll = function clearAll() {
      forEach(reqCountdownTimers, function (timer) {
        timer.stop();
      });
      forEach(requestXhrs, function (xhr) {
        xhr.abort();
      });
      reqCountdownTimers.length = 0;
      requestXhrs.length = 0;
    };

    var isAllFaild = function isAllFaild() {
      return faildCount === totalCount;
    };

    return deferred(function (resolve, reject) {
      var _success = function success(url, index) {
        clearAll();
        resolve({
          url: url,
          index: index });

      };

      var _fail = function fail() {
        clearAll();
        reject();
      };

      forEach(urlList, function (url, index) {
        var timer = new Timer({
          timeout: timeInterval * index });

        timer.start(function () {
          var xhr;
          var opt = extend({
            url: url,
            success: function success() {
              _success(url, index);
            },
            fail: function fail() {
              faildCount++;
              isAllFaild() && _fail();
            } },
          option);
          xhr = request$1(opt);
          requestXhrs.push(xhr);
        });
        reqCountdownTimers.push(timer);
      });
      totalTimer.start(_fail);
    });
  };

  var NetworkDetecter = function () {
    function NetworkDetecter(option) {
      this._option = void 0;
      this._detectCount = 0;
      this._timeoutId = void 0;
      this._option = option;
    }

    var _proto5 = NetworkDetecter.prototype;

    _proto5._detect = function _detect() {
      var self = this;
      var _detectCount = self._detectCount,
      _option = self._option;
      var url = _option.url,
      timeout = _option.intervalTime,
      max = _option.max;
      _detectCount++;
      return request$2(url).then(function () {
        return;
      }, function (_ref) {
        var status = _ref.status;

        if (isEqual(status, 404)) {
          return;
        }

        var isAlreadyMax = max && isEqual(max, _detectCount);

        if (isAlreadyMax) {
          return Defer.reject();
        }

        return deferTimeout(timeout, function (timeoutId) {
          self._timeoutId = timeoutId;
        }).then(function () {
          self._detectCount = _detectCount;
          return self._detect();
        });
      });
    };

    _proto5.start = function start() {
      return this._detect();
    };

    _proto5.stop = function stop() {
      var timeoutId = this._timeoutId;

      if (timeoutId) {
        clearTimeout$1(timeoutId);
      }
    };

    return NetworkDetecter;
  }();

  var toUpperCase = function toUpperCase(str, startIndex, endIndex) {
    if (isUndefined(startIndex) || isUndefined(endIndex)) {
      return str.toUpperCase();
    }

    var sliceStr = str.slice(startIndex, endIndex);
    str = str.replace(sliceStr, function (text) {
      return text.toUpperCase();
    });
    return str;
  };

  var getDomainByUrl = function getDomainByUrl(url) {
    var StartMark = '://',
    EndMark = '/';
    var urlProtocolIndex = indexOf(url, StartMark);
    var hasProtocol = urlProtocolIndex > -1;

    if (hasProtocol) {
      urlProtocolIndex = urlProtocolIndex + StartMark.length;
      url = substring(url, urlProtocolIndex, url.length);
    }

    var urlPathIndex = indexOf(url, EndMark);
    var hasPath = urlPathIndex > -1;

    if (hasPath) {
      url = substring(url, 0, urlPathIndex);
    }

    return url;
  };

  var getValidUrl = function getValidUrl(url, option) {
    option = option || {};
    var ProtocolMark = '://';
    var hasProtocol = isInclude(url, ProtocolMark);
    var localProtocol = env.protocol.http;
    var _option3 = option,
    protocol = _option3.protocol;

    if (protocol) {
      var domain = getDomainByUrl(url);
      url = protocol + "//" + domain;
    }

    if (hasProtocol) {
      var urlProtocolIndex = indexOf(url, ProtocolMark) + 1;
      var urlProtocol = substring(url, 0, urlProtocolIndex);
      var isHttpUrl = urlProtocol === HTTP_PROTOCOL.HTTP;
      var isLocalHttps = localProtocol === HTTP_PROTOCOL.HTTPS;

      if (isHttpUrl && isLocalHttps) {
        var _domain = getDomainByUrl(url);

        return HTTP_PROTOCOL.HTTPS + "//" + _domain;
      } else {
        return url;
      }
    } else {
      return localProtocol + "//" + url;
    }
  };

  var quickSort = function quickSort(arr, event) {
    var sort = function sort(array, left, right, event) {
      event = event || function (a, b) {
        return a <= b;
      };

      if (left < right) {
        var x = array[right],
        i = left - 1,
        temp;

        for (var j = left; j <= right; j++) {
          if (event(array[j], x)) {
            i++;
            temp = array[i];
            array[i] = array[j];
            array[j] = temp;
          }
        }

        sort(array, left, i - 1, event);
        sort(array, i + 1, right, event);
      }

      return array;
    };

    return sort(arr, 0, arr.length - 1, event);
  };

  var unique = function unique(arr, event) {
    var keyEvent = event || function (data) {
      return data;
    };

    var hashTable = {};
    var newArr = [];
    forEach(arr, function (data) {
      var key = keyEvent(data);

      if (!hashTable[key]) {
        hashTable[key] = true;
        newArr.push(data);
      }
    });
    return newArr;
  };

  var isStackError = function isStackError(error) {
    error = error || {};
    return error.stack && error.stack.toString;
  };

  var consoleError = function consoleError() {
    var _console;

    return (_console = console).error.apply(_console, arguments);
  };

  var consoleLog = function consoleLog() {
    var _console2;

    return (_console2 = console).log.apply(_console2, arguments);
  };

  var string10to64 = function string10to64(number) {
    var chars = '0123456789abcdefghigklmnopqrstuvwxyzABCDEFGHIGKLMNOPQRSTUVWXYZa0'.split(''),
    radix = chars.length + 1,
    qutient = +number,
    arr = [];

    do {
      var mod = qutient % radix;
      qutient = (qutient - mod) / radix;
      arr.unshift(chars[mod]);
    } while (qutient);

    return arr.join('');
  };

  var getUUID = function getUUID() {
    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
      var r = Math.random() * 16 | 0,
      v = c === 'x' ? r : r & 0x3 | 0x8;
      return v.toString(16);
    });
  };

  var getUUID22 = function getUUID22() {
    var uuid = getUUID();
    uuid = uuid.replace(/-/g, '') + 'a';
    uuid = parseInt(uuid, 16);
    uuid = string10to64(uuid);

    if (uuid.length > 22) {
      uuid = uuid.slice(0, 22);
    } else {
      var len = 22 - uuid.length;

      for (var i = 0; i < len; i++) {
        uuid = uuid + '0';
      }
    }

    return uuid;
  };

  var isValidTimestamp = function isValidTimestamp(time) {
    return isNumber(time) && time !== 0;
  };

  var formateDate = function formateDate(seperator) {
    var date = new Date();
    var year = date.getFullYear();
    var month = date.getMonth() + 1;
    var day = date.getDate();
    return tplEngine('{year}{seperator}{month}{seperator}{day}', {
      year: year,
      month: month,
      day: day,
      seperator: seperator });

  };

  var getByteLength = function getByteLength(str, charset) {
    charset = charset || 'utf-8';
    var total = 0,
    chatCode;

    if (charset === 'utf-16') {
      for (var i = 0, max = str.length; i < max; i++) {
        chatCode = str.charCodeAt(i);

        if (chatCode <= 0xffff) {
          total += 2;
        } else {
          total += 4;
        }
      }
    } else {
      for (var _i = 0, _max = str.length; _i < _max; _i++) {
        chatCode = str.charCodeAt(_i);

        if (chatCode < 0x007f) {
          total += 1;
        } else if (chatCode <= 0x07ff) {
          total += 2;
        } else if (chatCode <= 0xffff) {
          total += 3;
        } else {
          total += 4;
        }
      }
    }

    return total;
  };

  var getObjectKeys = function getObjectKeys(source) {
    var obj = copy(source),
    keys = [];

    for (var key in obj) {
      keys.push(key);
    }

    return keys;
  };

  var utils = {
    Storage: storage$1,
    Session: session,
    Socket: Socket$2,
    Cache: CacheStorage,
    JSON: JSON$2,
    Defer: Defer,
    httpRequest: request$1,
    request: request$2,
    requestByUrlList: requestByUrlList,
    requestForFaster: requestForFaster,
    md5: md5,
    DeferHandler: DeferHandler,
    EventEmitter: EventEmitter,
    Timer: Timer,
    Queue: Queue,
    consoleError: consoleError,
    consoleLog: consoleLog,
    noop: noop,
    deferNoop: deferNoop,
    setTimeout: setTimeout$1,
    toJSON: toJSON,
    parseJSON: parseJSON,
    copy: copy,
    isObject: isObject,
    isArray: isArray,
    isFunction: isFunction,
    isArrayBuffer: isArrayBuffer,
    isString: isString,
    isBoolean: isBoolean,
    isUndefined: isUndefined,
    isNull: isNull,
    isNumber: isNumber,
    isNumberData: isNumberData,
    isPromise: isPromise,
    getTypeName: getTypeName,
    isPlus: isPlus,
    isEmpty: isEmpty,
    isFalse: isFalse,
    isEqual: isEqual,
    isValidJSON: isValidJSON,
    isSupportSocket: isSupportSocket,
    ArrayBufferToArray: ArrayBufferToArray,
    ArrayBufferToUint8Array: ArrayBufferToUint8Array,
    indexOf: indexOf,
    lastIndexOf: lastIndexOf,
    isInclude: isInclude,
    substring: substring,
    getKeys: getKeys,
    getValues: getValues,
    getTimestamp: getTimestamp,
    getCurrentTimestamp: getCurrentTimestamp,
    formatTime: formatTime,
    parse16To10: parse16To10,
    forEach: forEach,
    map: map,
    filter: filter,
    extend: extend,
    extendAllowNull: extendAllowNull,
    extendInShallow: extendInShallow,
    deferred: deferred,
    tplEngine: tplEngine,
    getRandomNum: getRandomNum,
    int64ToTimestamp: int64ToTimestamp,
    batchInt64ToTimestamp: batchInt64ToTimestamp,
    encodeURI: encodeURI,
    decodeURI: decodeURI,
    secondsToMilliseconds: secondsToMilliseconds,
    NetworkDetecter: NetworkDetecter,
    toUpperCase: toUpperCase,
    getDomainByUrl: getDomainByUrl,
    getValidUrl: getValidUrl,
    quickSort: quickSort,
    unique: unique,
    isStackError: isStackError,
    getUUID: getUUID,
    getUUID22: getUUID22,
    isValidTimestamp: isValidTimestamp,
    formateDate: formateDate,
    getByteLength: getByteLength,
    getObjectKeys: getObjectKeys };


  function _inheritsLoose(subClass, superClass) {
    subClass.prototype = Object.create(superClass.prototype);
    subClass.prototype.constructor = subClass;
    subClass.__proto__ = superClass;
  }

  var _PUBLISH_TOPIC_TO_CON, _CONVERSATION_TYPE_TO, _CONVERSATION_TYPE_TO2, _CONVERSATION_TYPE_TO3, _CONVERSATION_TYPE_TO4;
  var SUCCESS_CODE = 0;
  var PULL_MSG_TYPE = {
    NORMAL: 1,
    CHATROOM: 2 };

  var MESSAGE_NAME = {
    CONN_ACK: 'ConnAckMessage',
    DISCONNECT: 'DisconnectMessage',
    PING_REQ: 'PingReqMessage',
    PING_RESP: 'PingRespMessage',
    PUBLISH: 'PublishMessage',
    PUB_ACK: 'PubAckMessage',
    QUERY: 'QueryMessage',
    QUERY_CON: 'QueryConMessage',
    QUERY_ACK: 'QueryAckMessage' };

  var QOS = {
    AT_MOST_ONCE: 0,
    AT_LEAST_ONCE: 1,
    EXACTLY_ONCE: 2,
    DEFAULT: 3,
    '0': 'AT_MOST_ONCE',
    '1': 'AT_LEAST_ONCE',
    '2': 'EXACTLY_ONCE',
    '3': 'DEFAULT' };

  var OPERATE_TYPE = {
    CONNECT: 1,
    '1': 'CONNECT',
    CONNACK: 2,
    '2': 'CONNACK',
    PUBLISH: 3,
    '3': 'PUBLISH',
    PUBACK: 4,
    '4': 'PUBACK',
    QUERY: 5,
    '5': 'QUERY',
    QUERYACK: 6,
    '6': 'QUERYACK',
    QUERYCON: 7,
    '7': 'QUERYCON',
    SUBSCRIBE: 8,
    '8': 'SUBSCRIBE',
    SUBACK: 9,
    '9': 'SUBACK',
    UNSUBSCRIBE: 10,
    '10': 'UNSUBSCRIBE',
    UNSUBACK: 11,
    '11': 'UNSUBACK',
    PINGREQ: 12,
    '12': 'PINGREQ',
    PINGRESP: 13,
    '13': 'PINGRESP',
    DISCONNECT: 14,
    '14': 'DISCONNECT' };

  var PUBLISH_TOPIC = {
    PRIVATE: 'ppMsgP',
    GROUP: 'pgMsgP',
    CHATROOM: 'chatMsg',
    CUSTOMER_SERVICE: 'pcMsgP',
    RECALL: 'recallMsg',
    RTC_MSG: 'prMsgS',
    NOTIFY_PULL_MSG: 's_ntf',
    RECEIVE_MSG: 's_msg',
    SYNC_STATUS: 's_stat',
    SERVER_NOTIFY: 's_cmd',
    SETTING_NOTIFY: 's_us' };

  var PUBLISH_STATUS_TOPIC = {
    PRIVATE: 'ppMsgS',
    GROUP: 'pgMsgS',
    CHATROOM: 'chatMsgS' };

  var QUERY_TOPIC = {
    GET_SYNC_TIME: 'qrySessionsAtt',
    PULL_MSG: 'pullMsg',
    GET_CONVERSATION_LIST: 'qrySessions',
    REMOVE_CONVERSATION_LIST: 'delSessions',
    DELETE_MESSAGES: 'delMsg',
    CLEAR_UNREAD_COUNT: 'updRRTime',
    PULL_USER_SETTING: 'pullUS',
    PULL_CHRM_MSG: 'chrmPull',
    JOIN_CHATROOM: 'joinChrm',
    JOIN_EXIST_CHATROOM: 'joinChrmR',
    QUIT_CHATROOM: 'exitChrm',
    GET_CHATROOM_INFO: 'queryChrmI',
    UPDATE_CHATROOM_KV: 'setKV',
    DELETE_CHATROOM_KV: 'delKV',
    PULL_CHATROOM_KV: 'pullKV',
    GET_OLD_CONVERSATION_LIST: 'qryRelationR',
    REMOVE_OLD_CONVERSATION: 'delRelation',
    GET_CONVERSATION_STATUS: 'pullSeAtts',
    SET_CONVERSATION_STATUS: 'setSeAtt',
    GET_UPLOAD_FILE_TOKEN: 'qnTkn',
    GET_UPLOAD_FILE_URL: 'qnUrl',
    CLEAR_MESSAGES: {
      PRIVATE: 'cleanPMsg',
      GROUP: 'cleanGMsg',
      CUSTOMER_SERVICE: 'cleanCMsg',
      SYSTEM: 'cleanSMsg' },

    JOIN_RTC_ROOM: 'rtcRJoin_data',
    QUIT_RTC_ROOM: 'rtcRExit',
    PING_RTC: 'rtcPing',
    SET_RTC_DATA: 'rtcSetData',
    USER_SET_RTC_DATA: 'userSetData',
    GET_RTC_DATA: 'rtcQryData',
    DEL_RTC_DATA: 'rtcDelData',
    SET_RTC_OUT_DATA: 'rtcSetOutData',
    GET_RTC_OUT_DATA: 'rtcQryUserOutData',
    GET_RTC_TOKEN: 'rtcToken',
    SET_RTC_STATE: 'rtcUserState',
    GET_RTC_ROOM_INFO: 'rtcRInfo',
    GET_RTC_USER_INFO_LIST: 'rtcUData',
    SET_RTC_USER_INFO: 'rtcUPut',
    DEL_RTC_USER_INFO: 'rtcUDel',
    GET_RTC_USER_LIST: 'rtcUList' };

  var QUERY_HISTORY_TOPIC = {
    PRIVATE: 'qryPMsg',
    GROUP: 'qryGMsg',
    CHATROOM: 'qryCHMsg',
    CUSTOMER_SERVICE: 'qryCMsg',
    SYSTEM: 'qrySMsg' };

  var SERVER_NOTIFY_TYPE = {
    KV_CHANGED: 2,
    CONVERSATION_STATUS_CHANGED: 3 };

  var CHATROOM_KV_STATUS_CODE = {
    AUTO_DELETE: 0x0001,
    OVERWRITE: 0x0002,
    OPERATE: 0x0004 };

  var PUBLISH_TOPIC_TO_CONVERSATION_TYPE = (_PUBLISH_TOPIC_TO_CON = {}, _PUBLISH_TOPIC_TO_CON[PUBLISH_TOPIC.PRIVATE] = CONVERSATION_TYPE.PRIVATE, _PUBLISH_TOPIC_TO_CON[PUBLISH_TOPIC.GROUP] = CONVERSATION_TYPE.GROUP, _PUBLISH_TOPIC_TO_CON[PUBLISH_TOPIC.CHATROOM] = CONVERSATION_TYPE.CHATROOM, _PUBLISH_TOPIC_TO_CON[PUBLISH_TOPIC.CUSTOMER_SERVICE] = CONVERSATION_TYPE.CUSTOMER_SERVICE, _PUBLISH_TOPIC_TO_CON[PUBLISH_STATUS_TOPIC.PRIVATE] = CONVERSATION_TYPE.PRIVATE, _PUBLISH_TOPIC_TO_CON[PUBLISH_STATUS_TOPIC.GROUP] = CONVERSATION_TYPE.GROUP, _PUBLISH_TOPIC_TO_CON[PUBLISH_STATUS_TOPIC.CHATROOM] = CONVERSATION_TYPE.CHATROOM, _PUBLISH_TOPIC_TO_CON);
  var CONVERSATION_TYPE_TO_PUBLISH_TOPIC = (_CONVERSATION_TYPE_TO = {}, _CONVERSATION_TYPE_TO[CONVERSATION_TYPE.PRIVATE] = PUBLISH_TOPIC.PRIVATE, _CONVERSATION_TYPE_TO[CONVERSATION_TYPE.GROUP] = PUBLISH_TOPIC.GROUP, _CONVERSATION_TYPE_TO[CONVERSATION_TYPE.CHATROOM] = PUBLISH_TOPIC.CHATROOM, _CONVERSATION_TYPE_TO[CONVERSATION_TYPE.CUSTOMER_SERVICE] = PUBLISH_TOPIC.CUSTOMER_SERVICE, _CONVERSATION_TYPE_TO[CONVERSATION_TYPE.RTC_ROOM] = PUBLISH_TOPIC.RTC_MSG, _CONVERSATION_TYPE_TO);
  var CONVERSATION_TYPE_TO_PUBLISH_STATUS_TOPIC = (_CONVERSATION_TYPE_TO2 = {}, _CONVERSATION_TYPE_TO2[CONVERSATION_TYPE.PRIVATE] = PUBLISH_STATUS_TOPIC.PRIVATE, _CONVERSATION_TYPE_TO2[CONVERSATION_TYPE.GROUP] = PUBLISH_STATUS_TOPIC.GROUP, _CONVERSATION_TYPE_TO2);
  var CONVERSATION_TYPE_TO_QUERY_HISTORY_TOPIC = (_CONVERSATION_TYPE_TO3 = {}, _CONVERSATION_TYPE_TO3[CONVERSATION_TYPE.PRIVATE] = QUERY_HISTORY_TOPIC.PRIVATE, _CONVERSATION_TYPE_TO3[CONVERSATION_TYPE.GROUP] = QUERY_HISTORY_TOPIC.GROUP, _CONVERSATION_TYPE_TO3[CONVERSATION_TYPE.CHATROOM] = QUERY_HISTORY_TOPIC.CHATROOM, _CONVERSATION_TYPE_TO3[CONVERSATION_TYPE.CUSTOMER_SERVICE] = QUERY_HISTORY_TOPIC.CUSTOMER_SERVICE, _CONVERSATION_TYPE_TO3[CONVERSATION_TYPE.SYSTEM] = QUERY_HISTORY_TOPIC.SYSTEM, _CONVERSATION_TYPE_TO3);
  var CONVERSATION_TYPE_TO_CLEAR_MESSAGE_TOPIC = (_CONVERSATION_TYPE_TO4 = {}, _CONVERSATION_TYPE_TO4[CONVERSATION_TYPE.PRIVATE] = QUERY_TOPIC.CLEAR_MESSAGES.PRIVATE, _CONVERSATION_TYPE_TO4[CONVERSATION_TYPE.GROUP] = QUERY_TOPIC.CLEAR_MESSAGES.GROUP, _CONVERSATION_TYPE_TO4[CONVERSATION_TYPE.CUSTOMER_SERVICE] = QUERY_TOPIC.CLEAR_MESSAGES.CUSTOMER_SERVICE, _CONVERSATION_TYPE_TO4[CONVERSATION_TYPE.SYSTEM] = QUERY_TOPIC.CLEAR_MESSAGES.SYSTEM, _CONVERSATION_TYPE_TO4);
  var USER_SETTING_STATUS = {
    ADD: 1,
    UPDATE: 2,
    DELETE: 3 };

  var CONVERSATION_STATUS_CONFIG = {
    ENABLED: '1',
    DISABLED: '0' };

  var CONVERSATION_STATUS_TYPE = {
    DO_NOT_DISTURB: 1,
    TOP: 2 };


  var Header = function () {
    function Header(_type, _retain, _qos, _dup) {
      this.type = void 0;
      this.retain = false;
      this.qos = QOS.AT_LEAST_ONCE;
      this.dup = false;
      this.syncMsg = false;
      var isPlusType = utils.isPlus(_type);

      if (_type && isPlusType && arguments.length === 1) {
        this.retain = (_type & 1) > 0;
        this.qos = (_type & 6) >> 1;
        this.dup = (_type & 8) > 0;
        this.type = _type >> 4 & 15;
        this.syncMsg = (_type & 8) === 8;
      } else {
        this.type = _type;
        this.retain = _retain === undefined ? false : _retain;
        this.qos = _qos === undefined ? QOS.AT_LEAST_ONCE : _qos;
        this.dup = _dup === undefined ? false : _dup;
      }
    }

    var _proto = Header.prototype;

    _proto.encode = function encode() {
      var self = this;
      var validQosList = [QOS.AT_MOST_ONCE, QOS.AT_LEAST_ONCE, QOS.EXACTLY_ONCE, QOS.DEFAULT];
      utils.forEach(validQosList, function (qos) {
        if (self.qos === QOS[qos]) {
          self.qos = qos;
        }
      });

      var _byte = self.type << 4;

      _byte |= self.retain ? 1 : 0;
      _byte |= self.qos << 1;
      _byte |= self.dup ? 8 : 0;
      return _byte;
    };

    return Header;
  }();

  var BinaryHelper = {
    writeUTF: function writeUTF(str, isGetBytes) {
      var back = [],
      byteSize = 0;
      utils.forEach(str, function (_char, i) {
        var code = str.charCodeAt(i);

        if (code >= 0 && code <= 127) {
          byteSize += 1;
          back.push(code);
        } else if (code >= 128 && code <= 2047) {
          byteSize += 2;
          back.push(192 | 31 & code >> 6);
          back.push(128 | 63 & code);
        } else if (code >= 2048 && code <= 65535) {
          byteSize += 3;
          back.push(224 | 15 & code >> 12);
          back.push(128 | 63 & code >> 6);
          back.push(128 | 63 & code);
        }
      });
      utils.forEach(back, function (_char2, i) {
        if (_char2 > 255) {
          back[i] &= 255;
        }
      });

      if (isGetBytes) {
        return back;
      }

      if (byteSize <= 255) {
        return [0, byteSize].concat(back);
      } else {
        return [byteSize >> 8, byteSize & 255].concat(back);
      }
    },
    readUTF: function readUTF(arr) {
      var MAX_SIZE = 0x4000;
      var codeUnits = [];
      var highSurrogate;
      var lowSurrogate;
      var index = -1;
      var strBytes = arr;
      var result = '';

      while (++index < strBytes.length) {
        var codePoint = Number(strBytes[index]);

        if (codePoint === (codePoint & 0x7F)) ;else if (0xF0 === (codePoint & 0xF0)) {
          codePoint ^= 0xF0;
          codePoint = codePoint << 6 | strBytes[++index] ^ 0x80;
          codePoint = codePoint << 6 | strBytes[++index] ^ 0x80;
          codePoint = codePoint << 6 | strBytes[++index] ^ 0x80;
        } else if (0xE0 === (codePoint & 0xE0)) {
          codePoint ^= 0xE0;
          codePoint = codePoint << 6 | strBytes[++index] ^ 0x80;
          codePoint = codePoint << 6 | strBytes[++index] ^ 0x80;
        } else if (0xC0 === (codePoint & 0xC0)) {
          codePoint ^= 0xC0;
          codePoint = codePoint << 6 | strBytes[++index] ^ 0x80;
        }

        if (!isFinite(codePoint) || codePoint < 0 || codePoint > 0x10FFFF || Math.floor(codePoint) !== codePoint) throw RangeError('Invalid code point: ' + codePoint);
        if (codePoint <= 0xFFFF) codeUnits.push(codePoint);else {
          codePoint -= 0x10000;
          highSurrogate = codePoint >> 10 | 0xD800;
          lowSurrogate = codePoint % 0x400 | 0xDC00;
          codeUnits.push(highSurrogate, lowSurrogate);
        }

        if (index + 1 === strBytes.length || codeUnits.length > MAX_SIZE) {
          result += String.fromCharCode.apply(null, codeUnits);
          codeUnits.length = 0;
        }
      }

      return result;
    } };


  var RongStreamReader = function () {
    function RongStreamReader(arr) {
      this.pool = void 0;
      this.position = 0;
      this.poolLen = 0;
      this.pool = arr;
      this.poolLen = arr.length;
    }

    var _proto2 = RongStreamReader.prototype;

    _proto2.check = function check() {
      return this.position >= this.pool.length;
    };

    _proto2.readInt = function readInt() {
      var self = this;

      if (self.check()) {
        return -1;
      }

      var end = '';

      for (var i = 0; i < 4; i++) {
        var t = self.pool[self.position++].toString(16);

        if (t.length === 1) {
          t = '0' + t;
        }

        end += t.toString();
      }

      return utils.parse16To10(end);
    };

    _proto2.readLong = function readLong() {
      var self = this;

      if (self.check()) {
        return -1;
      }

      var end = '';

      for (var i = 0; i < 8; i++) {
        var t = self.pool[self.position++].toString(16);

        if (t.length === 1) {
          t = '0' + t;
        }

        end += t;
      }

      return utils.parse16To10(end);
    };

    _proto2.readByte = function readByte() {
      if (this.check()) {
        return -1;
      }

      var val = this.pool[this.position++];

      if (val > 255) {
        val &= 255;
      }

      return val;
    };

    _proto2.readUTF = function readUTF() {
      if (this.check()) {
        return '';
      }

      var big = this.readByte() << 8 | this.readByte();
      var pool = this.pool.subarray(this.position, this.position += big);
      return BinaryHelper.readUTF(pool);
    };

    _proto2.readAll = function readAll() {
      return this.pool.subarray(this.position, this.poolLen);
    };

    return RongStreamReader;
  }();

  var RongStreamWriter = function () {
    function RongStreamWriter() {
      this.pool = [];
      this.position = 0;
      this.writen = 0;
    }

    var _proto3 = RongStreamWriter.prototype;

    _proto3.write = function write(_byte2) {
      if (utils.isArray(_byte2)) {
        this.pool = this.pool.concat(_byte2);
      } else if (utils.isPlus(_byte2)) {
        if (_byte2 > 255) {
          _byte2 &= 255;
        }

        this.pool.push(_byte2);
        this.writen++;
      }

      return _byte2;
    };

    _proto3.writeArr = function writeArr(_byte3) {
      this.pool = this.pool.concat(_byte3);
      return _byte3;
    };

    _proto3.writeUTF = function writeUTF(str) {
      var val = BinaryHelper.writeUTF(str);
      this.pool = this.pool.concat(val);
      this.writen += val.length;
    };

    _proto3.getBytesArray = function getBytesArray() {
      return this.pool;
    };

    return RongStreamWriter;
  }();

  var IDENTIFIER = {
    PUB: 'pub',
    QUERY: 'qry' };


  var _getIdentifier = function getIdentifier(messageId, identifier) {
    if (messageId && identifier) {
      return identifier + '_' + messageId;
    } else if (messageId) {
      return messageId;
    } else {
      return utils.getCurrentTimestamp();
    }
  };

  var BaseReader = function () {
    function BaseReader(header) {
      this._name = void 0;
      this._header = void 0;
      this.lengthSize = 0;
      this.messageId = void 0;
      this.timestamp = void 0;
      this.identifier = void 0;
      this._header = header;
    }

    var _proto = BaseReader.prototype;

    _proto.getIdentifier = function getIdentifier() {
      var messageId = this.messageId,
      identifier = this.identifier;
      return _getIdentifier(messageId, identifier);
    };

    _proto.read = function read(stream, length) {
      this.readMessage(stream, length);
    };

    _proto.readMessage = function readMessage(stream, length) {
      return {
        stream: stream,
        length: length };

    };

    return BaseReader;
  }();

  var BaseWriter = function () {
    function BaseWriter(headerType) {
      this._header = void 0;
      this.lengthSize = 0;
      this.data = void 0;
      this.messageId = void 0;
      this.topic = void 0;
      this.targetId = void 0;
      this.identifier = void 0;
      this._header = new Header(headerType, false, QOS.AT_MOST_ONCE, false);
    }

    var _proto2 = BaseWriter.prototype;

    _proto2.getIdentifier = function getIdentifier() {
      var messageId = this.messageId,
      identifier = this.identifier;
      return _getIdentifier(messageId, identifier);
    };

    _proto2.write = function write(stream) {
      var headerCode = this.getHeaderFlag();
      stream.write(headerCode);
      this.writeMessage(stream);
    };

    _proto2.writeMessage = function writeMessage(stream) {
      return stream;
    };

    _proto2.setHeaderQos = function setHeaderQos(qos) {
      this._header.qos = qos;
    };

    _proto2.getHeaderFlag = function getHeaderFlag() {
      return this._header.encode();
    };

    _proto2.getLengthSize = function getLengthSize() {
      return this.lengthSize;
    };

    _proto2.getBufferData = function getBufferData() {
      var stream = new RongStreamWriter();
      this.write(stream);
      var val = stream.getBytesArray();
      var binary = new Int8Array(val);
      return binary;
    };

    _proto2.getCometData = function getCometData() {
      var data = this.data || {};
      return utils.toJSON(data);
    };

    return BaseWriter;
  }();

  var ConnAckReader = function (_BaseReader) {
    _inheritsLoose(ConnAckReader, _BaseReader);

    function ConnAckReader() {
      var _this;

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = _BaseReader.call.apply(_BaseReader, [this].concat(args)) || this;
      _this._name = MESSAGE_NAME.CONN_ACK;
      _this.status = void 0;
      _this.userId = void 0;
      _this.timestamp = void 0;
      return _this;
    }

    var _proto3 = ConnAckReader.prototype;

    _proto3.readMessage = function readMessage(stream, msgLength) {
      stream.readByte();
      this.status = +stream.readByte();

      if (msgLength > ConnAckReader.MESSAGE_LENGTH) {
        this.userId = stream.readUTF();
        stream.readUTF();
        this.timestamp = stream.readLong();
      }
    };

    return ConnAckReader;
  }(BaseReader);

  ConnAckReader.MESSAGE_LENGTH = 2;

  var DisconnectReader = function (_BaseReader2) {
    _inheritsLoose(DisconnectReader, _BaseReader2);

    function DisconnectReader() {
      var _this2;

      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }

      _this2 = _BaseReader2.call.apply(_BaseReader2, [this].concat(args)) || this;
      _this2._name = MESSAGE_NAME.DISCONNECT;
      _this2.status = void 0;
      return _this2;
    }

    var _proto4 = DisconnectReader.prototype;

    _proto4.readMessage = function readMessage(stream) {
      stream.readByte();
      this.status = +stream.readByte();
    };

    return DisconnectReader;
  }(BaseReader);

  DisconnectReader.MESSAGE_LENGTH = 2;

  var PingReqWriter = function (_BaseWriter) {
    _inheritsLoose(PingReqWriter, _BaseWriter);

    function PingReqWriter() {
      var _this3;

      _this3 = _BaseWriter.call(this, OPERATE_TYPE.PINGREQ) || this;
      _this3._name = MESSAGE_NAME.PING_REQ;
      return _this3;
    }

    return PingReqWriter;
  }(BaseWriter);

  var PingRespReader = function (_BaseReader3) {
    _inheritsLoose(PingRespReader, _BaseReader3);

    function PingRespReader() {
      var _this4;

      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        args[_key3] = arguments[_key3];
      }

      _this4 = _BaseReader3.call.apply(_BaseReader3, [this].concat(args)) || this;
      _this4._name = MESSAGE_NAME.PING_RESP;
      return _this4;
    }

    return PingRespReader;
  }(BaseReader);

  var RetryableReader = function (_BaseReader4) {
    _inheritsLoose(RetryableReader, _BaseReader4);

    function RetryableReader() {
      var _this5;

      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
        args[_key4] = arguments[_key4];
      }

      _this5 = _BaseReader4.call.apply(_BaseReader4, [this].concat(args)) || this;
      _this5.messageId = void 0;
      return _this5;
    }

    var _proto5 = RetryableReader.prototype;

    _proto5.readMessage = function readMessage(stream) {
      var msgId = stream.readByte() * 256 + stream.readByte();
      this.messageId = parseInt(msgId, 10);
    };

    return RetryableReader;
  }(BaseReader);

  var RetryableWriter = function (_BaseWriter2) {
    _inheritsLoose(RetryableWriter, _BaseWriter2);

    function RetryableWriter() {
      var _this6;

      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
        args[_key5] = arguments[_key5];
      }

      _this6 = _BaseWriter2.call.apply(_BaseWriter2, [this].concat(args)) || this;
      _this6.messageId = void 0;
      return _this6;
    }

    var _proto6 = RetryableWriter.prototype;

    _proto6.writeMessage = function writeMessage(stream) {
      var id = this.messageId;
      var lsb = id & 255;
      var msb = (id & 65280) >> 8;
      stream.write(msb);
      stream.write(lsb);
    };

    return RetryableWriter;
  }(BaseWriter);

  var PublishReader = function (_RetryableReader) {
    _inheritsLoose(PublishReader, _RetryableReader);

    function PublishReader() {
      var _this7;

      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
        args[_key6] = arguments[_key6];
      }

      _this7 = _RetryableReader.call.apply(_RetryableReader, [this].concat(args)) || this;
      _this7._name = MESSAGE_NAME.PUBLISH;
      _this7.topic = void 0;
      _this7.data = void 0;
      _this7.targetId = void 0;
      _this7.date = void 0;
      _this7.syncMsg = false;
      _this7.identifier = IDENTIFIER.PUB;
      return _this7;
    }

    var _proto7 = PublishReader.prototype;

    _proto7.readMessage = function readMessage(stream) {
      this.date = stream.readInt();
      this.topic = stream.readUTF();
      this.targetId = stream.readUTF();
      RetryableReader.prototype.readMessage.apply(this, arguments);
      this.data = stream.readAll();
    };

    return PublishReader;
  }(RetryableReader);

  var PublishWriter = function (_RetryableWriter) {
    _inheritsLoose(PublishWriter, _RetryableWriter);

    function PublishWriter(topic, data, targetId) {
      var _this8;

      _this8 = _RetryableWriter.call(this, OPERATE_TYPE.PUBLISH) || this;
      _this8._name = MESSAGE_NAME.PUBLISH;
      _this8.topic = void 0;
      _this8.data = void 0;
      _this8.targetId = void 0;
      _this8.date = void 0;
      _this8.syncMsg = false;
      _this8.identifier = IDENTIFIER.PUB;
      _this8.topic = topic;
      _this8.data = utils.isString(data) ? BinaryHelper.writeUTF(data) : data;
      _this8.targetId = targetId;
      return _this8;
    }

    var _proto8 = PublishWriter.prototype;

    _proto8.writeMessage = function writeMessage(stream) {
      stream.writeUTF(this.topic);
      stream.writeUTF(this.targetId);
      RetryableWriter.prototype.writeMessage.apply(this, arguments);
      stream.write(this.data);
    };

    return PublishWriter;
  }(RetryableWriter);

  var PubAckReader = function (_RetryableReader2) {
    _inheritsLoose(PubAckReader, _RetryableReader2);

    function PubAckReader() {
      var _this9;

      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
        args[_key7] = arguments[_key7];
      }

      _this9 = _RetryableReader2.call.apply(_RetryableReader2, [this].concat(args)) || this;
      _this9._name = MESSAGE_NAME.PUB_ACK;
      _this9.status = void 0;
      _this9.date = 0;
      _this9.data = void 0;
      _this9.millisecond = 0;
      _this9.messageUId = void 0;
      _this9.timestamp = 0;
      _this9.identifier = IDENTIFIER.PUB;
      return _this9;
    }

    var _proto9 = PubAckReader.prototype;

    _proto9.readMessage = function readMessage(stream) {
      RetryableReader.prototype.readMessage.call(this, stream);
      this.date = stream.readInt();
      this.status = stream.readByte() * 256 + stream.readByte();
      this.millisecond = stream.readByte() * 256 + stream.readByte();
      this.timestamp = this.date * 1000 + this.millisecond;
      this.messageUId = stream.readUTF();
    };

    return PubAckReader;
  }(RetryableReader);

  var PubAckWriter = function (_RetryableWriter2) {
    _inheritsLoose(PubAckWriter, _RetryableWriter2);

    function PubAckWriter(messageId) {
      var _this10;

      _this10 = _RetryableWriter2.call(this, OPERATE_TYPE.PUBACK) || this;
      _this10._name = MESSAGE_NAME.PUB_ACK;
      _this10.status = void 0;
      _this10.date = 0;
      _this10.millisecond = 0;
      _this10.messageUId = void 0;
      _this10.timestamp = 0;
      _this10.messageId = messageId;
      return _this10;
    }

    var _proto10 = PubAckWriter.prototype;

    _proto10.writeMessage = function writeMessage(stream) {
      RetryableWriter.prototype.writeMessage.call(this, stream);
    };

    return PubAckWriter;
  }(RetryableWriter);

  var QueryWriter = function (_RetryableWriter3) {
    _inheritsLoose(QueryWriter, _RetryableWriter3);

    function QueryWriter(topic, data, targetId) {
      var _this11;

      _this11 = _RetryableWriter3.call(this, OPERATE_TYPE.QUERY) || this;
      _this11._name = MESSAGE_NAME.QUERY;
      _this11.topic = void 0;
      _this11.data = void 0;
      _this11.targetId = void 0;
      _this11.identifier = IDENTIFIER.QUERY;
      _this11.topic = topic;
      _this11.data = utils.isString(data) ? BinaryHelper.writeUTF(data) : data;
      _this11.targetId = targetId;
      return _this11;
    }

    var _proto11 = QueryWriter.prototype;

    _proto11.writeMessage = function writeMessage(stream) {
      stream.writeUTF(this.topic);
      stream.writeUTF(this.targetId);
      RetryableWriter.prototype.writeMessage.call(this, stream);
      stream.write(this.data);
    };

    return QueryWriter;
  }(RetryableWriter);

  var QueryConWriter = function (_RetryableWriter4) {
    _inheritsLoose(QueryConWriter, _RetryableWriter4);

    function QueryConWriter(messageId) {
      var _this12;

      _this12 = _RetryableWriter4.call(this, OPERATE_TYPE.QUERYCON) || this;
      _this12._name = MESSAGE_NAME.QUERY_CON;
      _this12.messageId = messageId;
      return _this12;
    }

    return QueryConWriter;
  }(RetryableWriter);

  var QueryAckReader = function (_RetryableReader3) {
    _inheritsLoose(QueryAckReader, _RetryableReader3);

    function QueryAckReader() {
      var _this13;

      for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {
        args[_key8] = arguments[_key8];
      }

      _this13 = _RetryableReader3.call.apply(_RetryableReader3, [this].concat(args)) || this;
      _this13._name = MESSAGE_NAME.QUERY_ACK;
      _this13.data = void 0;
      _this13.status = void 0;
      _this13.date = void 0;
      _this13.identifier = IDENTIFIER.QUERY;
      return _this13;
    }

    var _proto12 = QueryAckReader.prototype;

    _proto12.readMessage = function readMessage(stream) {
      RetryableReader.prototype.readMessage.call(this, stream);
      this.date = stream.readInt();
      this.status = stream.readByte() * 256 + stream.readByte();
      this.data = stream.readAll();
    };

    return QueryAckReader;
  }(RetryableReader);

  var getReaderByHeader = function getReaderByHeader(header) {
    var type = header.type,
    msg = new BaseReader(header);

    switch (type) {
      case OPERATE_TYPE.CONNACK:
        msg = new ConnAckReader(header);
        break;

      case OPERATE_TYPE.PUBLISH:
        msg = new PublishReader(header);
        msg.syncMsg = header.syncMsg;
        break;

      case OPERATE_TYPE.PUBACK:
        msg = new PubAckReader(header);
        break;

      case OPERATE_TYPE.QUERYACK:
        msg = new QueryAckReader(header);
        break;

      case OPERATE_TYPE.SUBACK:
      case OPERATE_TYPE.UNSUBACK:
      case OPERATE_TYPE.PINGRESP:
        msg = new PingRespReader(header);
        break;

      case OPERATE_TYPE.DISCONNECT:
        msg = new DisconnectReader(header);
        break;

      default:
        throw new Error('No support for deserializing ' + type + ' messages');}


    return msg;
  };

  var readWSBuffer = function readWSBuffer(data) {
    var arr = new Uint8Array(data);
    var stream = new RongStreamReader(arr);
    var flags = stream.readByte(),
    header = new Header(flags);
    var msg = getReaderByHeader(header);
    msg.read(stream, arr.length - 1);
    return msg;
  };

  var readCometData = function readCometData(data) {
    var flags = data.headerCode,
    header = new Header(flags);
    var msg = getReaderByHeader(header);
    utils.forEach(data, function (item, key) {
      if (key in msg) {
        msg[key] = item;
      }
    });
    return msg;
  };

  var ENGINE_EVENT = {
    WATCH: 'watch',
    UN_WATCH: 'unwatch',
    CONNECT: 'connect',
    RECONNECT: 'reconnect',
    DISCONNECT: 'disconnect',
    CHANGE_USER: 'changeUser',
    GET_CONNECTION_STATUS: 'getConnectionStatus',
    GET_CONNECTION_USER_ID: 'getConnectionUserId',
    GET_CONNECTED_TIME: 'getConnectedTime',
    GET_APP_INFO: 'getAppInfo',
    GET_CONVERSATION_LIST: 'getConversationList',
    REMOVE_CONVERSATION_LIST: 'removeConversationList',
    REMOVE_CONVERSATION: 'removeConversation',
    GET_TOTAL_UNREAD_COUNT: 'getTotalUnreadCount',
    CLEAR_UNREAD_COUNT: 'clearUnreadCount',
    GET_UNREAD_COUNT: 'getUnreadCount',
    GET_LOCAL_CONVERSATION: 'getLocalConversation',
    SET_CONVERSATION_STATUS_LIST: 'setConversationStatusList',
    SEND_MESSAGE: 'sendMessage',
    GET_HISTORY_MSGS: 'getHistoryMessages',
    DELETE_MESSAGES: 'deleteHistoryMessages',
    CLEAR_MESSAGES: 'clearHistoryMessages',
    RECALL_MESSAGE: 'recallMessage',
    UPDATE_EXPANSION_MESSAGE: 'updateExpansionMessage',
    JOIN_CHATROOM: 'joinChatRoom',
    QUIT_CHATROOM: 'quitChatRoom',
    GET_CHATROOM_INFO: 'getChatRoomInfo',
    GET_CHATROOM_MSGS: 'getChatRoomHistoryMessages',
    SET_KV: 'setChatRoomKV',
    FORCE_SET_KV: 'forceSetChatRoomKV',
    DEL_KV: 'removeChatRoomKV',
    FORCE_DEL_KV: 'forceRemoveChatRoomKV',
    GET_KV: 'getChatRoomKV',
    GET_ALL_KV: 'getAllChatRoomKV',
    RTC_INNER_WATCH: 'rtcInnerWatch',
    RTC_INNER_UNWATCH: 'rtcInnerUnwatch',
    JOIN_RTC: 'joinRTCRoom',
    QUIT_RTC: 'quitRTCRoom',
    PING_RTC: 'RTCPing',
    GET_RTC_ROOM_INFO: 'getRTCRoomInfo',
    SET_RTC_DATA: 'setRTCData',
    SET_RTC_USER_DATA: 'setRTCUserData',
    GET_RTC_DATA: 'getRTCData',
    DEL_RTC_DATA: 'removeRTCData',
    SET_RTC_OUT_DATA: 'setRTCOutData',
    GET_RTC_OUT_DATA: 'getRTCOutData',
    GET_RTC_TOKEN: 'getRTCToken',
    SET_RTC_STATE: 'setRTCState',
    GET_RTC_USER_INFO_LIST: 'getRTCUserInfoList',
    SET_RTC_USER_INFO: 'setRTCUserInfo',
    DEL_RTC_USER_INFO: 'removeRTCUserInfo',
    GET_RTC_USER_LIST: 'getRTCUserList',
    GET_UPLOAD_TOKEN: 'getFileToken',
    GET_UPLOAD_URL: 'getFileUrl' };

  var ENGINE_EVENT_NEED_CONNECTED = [ENGINE_EVENT.GET_CONVERSATION_LIST, ENGINE_EVENT.REMOVE_CONVERSATION_LIST, ENGINE_EVENT.REMOVE_CONVERSATION, ENGINE_EVENT.GET_TOTAL_UNREAD_COUNT, ENGINE_EVENT.CLEAR_UNREAD_COUNT, ENGINE_EVENT.SEND_MESSAGE, ENGINE_EVENT.GET_HISTORY_MSGS, ENGINE_EVENT.DELETE_MESSAGES, ENGINE_EVENT.CLEAR_MESSAGES, ENGINE_EVENT.RECALL_MESSAGE, ENGINE_EVENT.JOIN_CHATROOM, ENGINE_EVENT.QUIT_CHATROOM, ENGINE_EVENT.GET_CHATROOM_INFO, ENGINE_EVENT.GET_CHATROOM_MSGS, ENGINE_EVENT.UPDATE_EXPANSION_MESSAGE];
  var ENGINE_EVENT_NEED_DISCONNECTED = [ENGINE_EVENT.CONNECT, ENGINE_EVENT.RECONNECT];
  var IM_EVENT = {
    STATUS: 'status',
    MESSAGE: 'message',
    CONVERSATION: 'conversation',
    SETTING: 'setting',
    CHATROOM: 'chatroom',
    EXPANSION: 'expansion' };

  var RTC_EVENT = {
    STATUS: 'status',
    MESSAGE: 'message' };

  var TRANSPORT_EVENT = {
    SIGNAL: 'signal',
    STATUS: 'status' };

  var SERVER_EVENT_NAME = {
    STATUS: 'status',
    NOTIFY_PULL: 'notifyPull',
    DIRECT_MSG: 'directMessage',
    CHRM_KV_CHANGED: 'chatRoomKV',
    CHRM_KV_SET: 'chatRoomKVSet',
    MESSAGE_SEND: 'sendMessage',
    JOIN_CHATROOM: 'joinChatRoom',
    BEFORE_JOIN_CHATROOM: 'beforeJoinChatRoom',
    USER_SETTING_CHANGED: 'userSetting',
    CONVERSATION_STATUS_CHANGED: 'converStatusChanged',
    CONVERSATION_STATUS_SETED: 'converStatusSeted' };


  var _APP_ENGINE_EVENT_LOG;
  var PLATFORM$1 = 'Web';
  var LEVEL = {
    FATAL: 0,
    ERROR: 1,
    WARN: 2,
    INFO: 3,
    DEBUG: 4 };

  var STORE_SIZE = {
    ADVANCED: 500,
    LOW: 500 };

  var LOG_TYPE = {
    'IM': 'IM',
    'RTC': 'RTC' };

  var TAG = {
    L_GET_NAVI_T: 'L-get_navi-T',
    L_GET_NAVI_R: 'L-get_navi-R',
    L_PING_WS_T: 'L-ping_ws-T',
    L_PING_WS_R: 'L-ping_ws-R',
    L_NETWORK_CHANGED_S: 'L-network_changed-S',
    L_DECODE_MSG_E: 'L-decode_msg-E',
    L_RECONNECT_T: 'L-reconnect-T',
    L_RECONNECT_R: 'L-reconnect-R',
    L_PULL_CHRM_KV_T: 'L-pull-chrm-kv-T',
    L_PULL_CHRM_KV_R: 'L-pull-chrm-kv-R',
    L_PING_S: 'L-ping-S',
    L_CRASH_E: 'L-crash-E',
    L_COMET_SEND_SIGNAL_E: 'L-comet_send_signal-E',
    A_INIT_O: 'A-init-O',
    A_CONNECT_T: 'A-connect-T',
    A_CONNECT_R: 'A-connect-R',
    A_DISCONNECT_T: 'A-disconnect-T',
    A_DISCONNECT_R: 'A-disconnect-R',
    A_RECONNECT_T: 'A-reconnect-T',
    A_RECONNECT_R: 'A-reconnect-R',
    A_JOIN_CHATROOM_T: 'A-join_chatroom-T',
    A_JOIN_CHATROOM_R: 'A-join_chatroom-R',
    A_QUIT_CHATROOM_T: 'A-quit_chatroom-T',
    A_QUIT_CHATROOM_R: 'A-quit_chatroom-R',
    P_NOTIFY_CHRM_KV_S: 'P-notify-chrm-kv-R',
    G_CRASH_E: 'G-crash-E',
    G_UPLOAD_LOG_S: 'G-upload_log-S',
    G_UPLOAD_LOG_E: 'G-upload_log-E' };

  var APP_ENGINE_EVENT_LOG_TAG = (_APP_ENGINE_EVENT_LOG = {}, _APP_ENGINE_EVENT_LOG[ENGINE_EVENT.CONNECT] = {
    req: TAG.A_CONNECT_T,
    resp: TAG.A_CONNECT_R },
  _APP_ENGINE_EVENT_LOG[ENGINE_EVENT.DISCONNECT] = {
    req: TAG.A_DISCONNECT_T,
    resp: TAG.A_DISCONNECT_R },
  _APP_ENGINE_EVENT_LOG[ENGINE_EVENT.RECONNECT] = {
    req: TAG.A_RECONNECT_T,
    resp: TAG.A_RECONNECT_R },
  _APP_ENGINE_EVENT_LOG[ENGINE_EVENT.JOIN_CHATROOM] = {
    req: TAG.A_JOIN_CHATROOM_T,
    resp: TAG.A_JOIN_CHATROOM_R },
  _APP_ENGINE_EVENT_LOG[ENGINE_EVENT.QUIT_CHATROOM] = {
    req: TAG.A_QUIT_CHATROOM_T,
    resp: TAG.A_QUIT_CHATROOM_R },
  _APP_ENGINE_EVENT_LOG);
  var REPORT_TYPE = {
    REALTIME: 0,
    FULL: 1 };

  var CSV_LOG_TPL = '{sessionId},{time},{type},{level},{tag},{content}\n';
  var REALTIME_URL_TPL = '{protocol}{url}?version={version}&appkey={appkey}&userId={userId}&deviceId={deviceId}&deviceInfo={deviceInfo}&platform={platform}';
  var MSGNOTIF_URL_TPL = '{protocol}{url}?version={version}&appkey={appkey}&userId={userId}&logId={logId}&deviceId={deviceId}&deviceInfo={deviceInfo}&platform={platform}';
  var LOG_CMD_MSG_SENDER = 'rongcloudsystem';
  var NO_FULL_LOG = 'nodata';
  var REQUEST_TIMEOUT = 15000;
  var DEFAULT_SERVER_OPTION = {
    isOpen: true,
    url: 'logcollection.ronghub.com',
    realtimeLevel: LEVEL.ERROR,
    realtimeInterval: 20000,
    realtimeMaxTimes: 5,
    fullInterval: 5000,
    fullMaxTimes: 3,
    fullLevel: LEVEL.DEBUG };

  var IGNORE_ERROR_CODE = [ERROR_CODE.RC_CONNECTION_EXIST];

  var isEmpty$1 = utils.isEmpty,
  tplEngine$1 = utils.tplEngine;

  var getTransporterUrl = function getTransporterUrl(option) {
    var domain = option.domain,
    appkey = option.appkey,
    token = option.token,
    connectType = option.connectType,
    protocol = option.protocol,
    pid = option.pid;
    var isComet = connectType === CONNECT_TYPE.COMET;
    var cmpTpl = isComet ? CMP_URL_TPL_POLLING : CMP_URL_TPL;

    if (isEmpty$1(protocol)) {
      protocol = isComet ? env.protocol.http : env.protocol.ws;
    }

    var tplOption = {
      domain: domain,
      appkey: appkey,
      protocol: protocol,
      apiVer: env.isFromUniapp ? 'uniapp' : 'normal',
      token: utils.encodeURI(token) };


    if (isComet) {
      utils.extend(tplOption, {
        pid: pid });

    }

    if (env.isMini) {
      cmpTpl = MINI_CMP_URL_TPL;
      utils.extend(tplOption, {
        platform: PLATFORM_TYPE.MINI });

    }

    return tplEngine$1(cmpTpl, tplOption);
  };

  var isGroup = function isGroup(type) {
    return type === CONVERSATION_TYPE.GROUP;
  };

  var isChatRoom = function isChatRoom(type) {
    return type === CONVERSATION_TYPE.CHATROOM;
  };

  var getConversationTypeList = function getConversationTypeList() {
    return utils.getValues(CONVERSATION_TYPE);
  };

  var isValidConversationType = function isValidConversationType(type) {
    var conversationTypeList = getConversationTypeList();
    return utils.isNumber(type) && utils.isInclude(conversationTypeList, type);
  };

  var getSessionId = function getSessionId(option) {
    var isStatusMessage = option.isStatusMessage;
    var isPersited = option.isPersited,
    isCounted = option.isCounted,
    isMentiond = option.isMentiond,
    disableNotification = option.disableNotification,
    canIncludeExpansion = option.canIncludeExpansion;

    if (isStatusMessage) {
      isPersited = isCounted = false;
    }

    var sessionId = 0;

    if (isPersited) {
      sessionId = sessionId | 0x01;
    }

    if (isCounted) {
      sessionId = sessionId | 0x02;
    }

    if (isMentiond) {
      sessionId = sessionId | 0x04;
    }

    if (disableNotification) {
      sessionId = sessionId | 0x20;
    }

    if (canIncludeExpansion) {
      sessionId = sessionId | 0x40;
    }

    return sessionId;
  };

  var getUpMessageOptionBySessionId = function getUpMessageOptionBySessionId(sessionId) {
    var isPersited = false,
    isCounted = false,
    disableNotification = false,
    canIncludeExpansion = false;
    isPersited = !!(sessionId & 0x01);
    isCounted = !!(sessionId & 0x02);
    disableNotification = !!(sessionId & 0x10);
    canIncludeExpansion = !!(sessionId & 0x40);
    return {
      isPersited: isPersited,
      isCounted: isCounted,
      disableNotification: disableNotification,
      canIncludeExpansion: canIncludeExpansion };

  };

  var getMessageOptionByStatus = function getMessageOptionByStatus(status) {
    var isPersited = true,
    isCounted = true,
    isMentiond = false,
    disableNotification = false,
    receivedStatus = RECEIVED_STATUS.READ,
    canIncludeExpansion = false;
    var isReceivedByOtherClient = false;
    isPersited = !!(status & 0x10);
    isCounted = !!(status & 0x20);
    isMentiond = !!(status & 0x40);
    disableNotification = !!(status & 0x100);
    isReceivedByOtherClient = !!(status & 0x02);
    receivedStatus = isReceivedByOtherClient ? RECEIVED_STATUS.RETRIEVED : receivedStatus;
    canIncludeExpansion = !!(status & 0x400);
    return {
      isPersited: isPersited,
      isCounted: isCounted,
      isMentiond: isMentiond,
      disableNotification: disableNotification,
      receivedStatus: receivedStatus,
      canIncludeExpansion: canIncludeExpansion };

  };

  var SignalId = {
    ids: {},
    temp: '{appkey}_{userId}',
    get: function get(option) {
      var key = utils.tplEngine(SignalId.temp, option);
      var id = SignalId.ids[key] || 0;
      id++;
      SignalId.ids[key] = id;
      return id;
    },
    clear: function clear(option) {
      var key = utils.tplEngine(SignalId.temp, option);
      SignalId.ids[key] = 0;
    },
    isExceedLimit: function isExceedLimit(id) {
      return id > MAX_SINGAL_ID;
    } };


  var RCSocket = function () {
    function RCSocket(options) {
      this._socket = void 0;
      this.eventEmitter = new utils.EventEmitter();
      this.KEY = {
        OPEN: 'open',
        MSG: 'msg',
        ERROR: 'error',
        CLOSE: 'close' };

      var self = this;
      var KEY = self.KEY;
      self._socket = new utils.Socket(options);

      self._socket.onOpen(function (data) {
        self.eventEmitter.emit(KEY.OPEN, data);
      });

      self._socket.onMessage(function (data) {
        self.eventEmitter.emit(KEY.MSG, data);
      });

      self._socket.onError(function (data) {
        data = self._formatCloseData(data);
        self.eventEmitter.emit(KEY.ERROR, data);
      });

      self._socket.onClose(function (data) {
        data = self._formatCloseData(data);
        self.eventEmitter.emit(KEY.CLOSE, data);
      });
    }

    var _proto = RCSocket.prototype;

    _proto._formatCloseData = function _formatCloseData(data) {
      if (env.isMini || env.isAppPlus) {
        data = data || {};
        var _data = data,
        errMsg = _data.errMsg;
        data.code = MINI_ERROR_MSG_TO_STATUS[errMsg];
      }

      return data;
    };

    _proto.send = function send(data) {
      return this._socket.send(data);
    };

    _proto.close = function close() {
      this.eventEmitter.clear();

      this._socket.close();
    };

    _proto.onOpen = function onOpen(event) {
      this.eventEmitter.on(this.KEY.OPEN, event);
    };

    _proto.onMessage = function onMessage(event) {
      this.eventEmitter.on(this.KEY.MSG, event);
    };

    _proto.onError = function onError(event) {
      this.eventEmitter.on(this.KEY.ERROR, event);
    };

    _proto.onClose = function onClose(event) {
      this.eventEmitter.on(this.KEY.CLOSE, event);
    };

    return RCSocket;
  }();

  var RCStorage = function () {
    function RCStorage(suffix) {
      var _utils$Cache;

      this._cache = void 0;
      this.STORAGE_KEY = void 0;
      var storageKey = suffix ? STORAGE_ROOT_KEY + suffix : STORAGE_ROOT_KEY;
      var localCache = utils.Storage.get(storageKey) || {};
      this._cache = new utils.Cache((_utils$Cache = {}, _utils$Cache[storageKey] = localCache, _utils$Cache));
      this.STORAGE_KEY = storageKey;
    }

    var _proto2 = RCStorage.prototype;

    _proto2._get = function _get() {
      var KEY = this.STORAGE_KEY;
      return this._cache.get(KEY) || {};
    };

    _proto2._set = function _set(cache) {
      var KEY = this.STORAGE_KEY;
      cache = cache || {};

      this._cache.set(KEY, cache);

      utils.Storage.set(KEY, cache);
    };

    _proto2.set = function set(key, value) {
      var localValue = this._get();

      localValue[key] = value;

      this._set(localValue);
    };

    _proto2.remove = function remove(key) {
      var localValue = this._get();

      delete localValue[key];

      this._set(localValue);
    };

    _proto2.clear = function clear() {
      var KEY = this.STORAGE_KEY;
      utils.Storage.remove(KEY);

      this._cache.remove(KEY);
    };

    _proto2.get = function get(key) {
      var localValue = this._get();

      return localValue[key];
    };

    _proto2.getKeys = function getKeys() {
      var localValue = this._get();

      return utils.getKeys(localValue);
    };

    _proto2.getValues = function getValues() {
      return this._get() || {};
    };

    return RCStorage;
  }();

  var formatSyncTime = function formatSyncTime(_syncTime) {
    _syncTime = _syncTime || {};
    _syncTime.inboxTime = _syncTime.inboxTime || 0;
    _syncTime.sendboxTime = _syncTime.sendboxTime || 0;
    return _syncTime;
  };

  var MessageTimeSyner = function () {
    function MessageTimeSyner(option) {
      this._syncTime = void 0;
      this._storage = void 0;
      option = option || {};
      var _option = option,
      startSyncTime = _option.startSyncTime;

      this._initStorage(option);

      if (startSyncTime) {
        this._syncTime = formatSyncTime(startSyncTime);
      }
    }

    var _proto3 = MessageTimeSyner.prototype;

    _proto3._initStorage = function _initStorage(option) {
      var appkey = option.appkey,
      userId = option.userId;
      var ROOT_KEY = utils.tplEngine(STORAGE_SYNC_TIME.ROOT_KEY_TPL, {
        appkey: appkey,
        userId: userId });

      var storage = new RCStorage(ROOT_KEY);
      var syncTime = {
        sendboxTime: storage.get(STORAGE_SYNC_TIME.SUB_KEY.SENDBOX),
        inboxTime: storage.get(STORAGE_SYNC_TIME.SUB_KEY.INBOX) };

      this._storage = storage;
      this._syncTime = formatSyncTime(syncTime);
    };

    _proto3.setInbox = function setInbox(time) {
      var beforeTime = this._syncTime.inboxTime || 0;

      if (beforeTime < time) {
        this._syncTime.inboxTime = time;

        this._storage.set(STORAGE_SYNC_TIME.SUB_KEY.INBOX, time);
      }
    };

    _proto3.setSendbox = function setSendbox(time) {
      var beforeTime = this._syncTime.sendboxTime || 0;

      if (beforeTime < time) {
        this._syncTime.sendboxTime = time;

        this._storage.set(STORAGE_SYNC_TIME.SUB_KEY.SENDBOX, time);
      }
    };

    _proto3.setByMessage = function setByMessage(msg) {
      var messageDirection = msg.messageDirection,
      sentTime = msg.sentTime;
      var isSelfSend = messageDirection === MESSAGE_DIRECTION.SEND;
      isSelfSend ? this.setSendbox(sentTime) : this.setInbox(sentTime);
    };

    _proto3.get = function get() {
      return formatSyncTime(this._syncTime);
    };

    return MessageTimeSyner;
  }();

  var ChatRoomMessageTimeSyner = function () {
    function ChatRoomMessageTimeSyner(option) {
      this._rootKey = void 0;
      this._pullTimes = {};
      option = option || {};
      var _option2 = option,
      appkey = _option2.appkey,
      userId = _option2.userId;
      this._rootKey = utils.tplEngine(SESSION_SYNC_TIME.ROOT_KEY_TPL, {
        appkey: appkey,
        userId: userId });

    }

    var _proto4 = ChatRoomMessageTimeSyner.prototype;

    _proto4.set = function set(chrmId, time) {
      this._pullTimes[chrmId] = time;
      utils.Session.set(this._rootKey, this._pullTimes);
    };

    _proto4.get = function get(chrmId) {
      var pullTimes;

      if (utils.isEmpty(this._pullTimes)) {
        pullTimes = utils.Session.get(this._rootKey) || {};
      } else {
        pullTimes = this._pullTimes;
      }

      return pullTimes[chrmId] || 0;
    };

    _proto4.setByMessage = function setByMessage(msg) {
      var sentTime = msg.sentTime;
      var chrmId = msg.targetId;
      var beforeTime = this.get(chrmId);

      if (beforeTime < sentTime) {
        this.set(chrmId, sentTime);
      }
    };

    return ChatRoomMessageTimeSyner;
  }();

  var JoinedChatRoomSyner = function () {
    function JoinedChatRoomSyner(option) {
      this._rootKey = void 0;
      this._joinedChatRoomInfos = [];
      option = option || {};
      var _option3 = option,
      appkey = _option3.appkey,
      userId = _option3.userId;
      this._rootKey = utils.tplEngine(SESSION_SYNC_CHATROOM.ROOT_KEY_TPL, {
        appkey: appkey,
        userId: userId });

    }

    var _proto5 = JoinedChatRoomSyner.prototype;

    _proto5.set = function set(option) {
      var _this = this;

      var chrmId = option.chrmId,
      count = option.count,
      isOpenJoinMulitpleChrmService = option.isOpenJoinMulitpleChrmService;
      var backupJoinedChatRoomInfos = utils.copy(this._joinedChatRoomInfos);

      if (isOpenJoinMulitpleChrmService) {
        utils.forEach(backupJoinedChatRoomInfos, function (chrmInfo, index) {
          if (chrmInfo.chrmId === option.chrmId) {
            _this._joinedChatRoomInfos.splice(index, 1);
          }
        });

        this._joinedChatRoomInfos.push({
          chrmId: chrmId,
          count: count });

      } else {
        this._joinedChatRoomInfos = [{
          chrmId: chrmId,
          count: count }];

      }

      utils.Session.set(this._rootKey, this._joinedChatRoomInfos);
    };

    _proto5.get = function get() {
      if (utils.isEmpty(this._joinedChatRoomInfos)) {
        return utils.Session.get(this._rootKey) || [];
      } else {
        return this._joinedChatRoomInfos;
      }
    };

    _proto5.remove = function remove(chrmId) {
      var _this2 = this;

      var joinedChatRoom = utils.isEmpty(this._joinedChatRoomInfos) ? utils.Session.get(this._rootKey) : this._joinedChatRoomInfos;
      if (utils.isEmpty(joinedChatRoom)) return;
      utils.forEach(joinedChatRoom, function (chrmInfo, index) {
        if (chrmInfo.chrmId === chrmId) {
          _this2._joinedChatRoomInfos.splice(index, 1);

          return joinedChatRoom.splice(index, 1);
        }
      });
      utils.Session.set(this._rootKey, joinedChatRoom);
    };

    _proto5.clear = function clear() {
      this._joinedChatRoomInfos = [];
      utils.Session.remove(this._rootKey);
    };

    return JoinedChatRoomSyner;
  }();

  var getUIDByToken = function getUIDByToken(token) {
    return utils.md5(token).slice(8, 16);
  };

  var isIncludeNavi = function isIncludeNavi(token) {
    return utils.isInclude(token, NAVI_SEPARATOR_IN_TOKEN);
  };

  var getNaviListByToken = function getNaviListByToken(token) {
    var navDomainList = [];

    if (isIncludeNavi(token)) {
      var separatorIndex = utils.indexOf(token, NAVI_SEPARATOR_IN_TOKEN);
      var navsText = token.substring(separatorIndex + 1, token.length);
      var domainList = navsText.split(DOMAIN_SEPARATOR_IN_NAVLIST);
      utils.forEach(domainList, function (domain) {
        if (!isEmpty$1(domain)) {
          navDomainList.push(domain);
        }
      });
    }

    return navDomainList;
  };

  var getCMPDomainList = function getCMPDomainList(option, customOption) {
    var server = option.server,
    backupServer = option.backupServer;
    server = server || '';
    backupServer = backupServer || '';
    var backupCMPList = backupServer.split(DOMAIN_SEPARATOR_IN_CMPLIST);
    var cmpList = [];

    if (!utils.isEmpty(server)) {
      cmpList.push(server);
    }

    utils.forEach(backupCMPList, function (cmp) {
      if (!utils.isEmpty(cmp)) {
        cmpList.push(cmp);
      }
    });

    if (!utils.isUndefined(customOption.customCMP) && !utils.isEmpty(customOption.customCMP)) {
      cmpList = customOption.customCMP;
    }

    return cmpList;
  };

  var getValidToken = function getValidToken(token) {
    if (isIncludeNavi(token)) {
      var separatorIndex = utils.indexOf(token, NAVI_SEPARATOR_IN_TOKEN);
      token = token.substring(0, separatorIndex + 1);
    }

    return token;
  };

  var getConnectType = function getConnectType(option) {
    var connectType = option.connectType;
    var isSpecifiedSocket = connectType === CONNECT_TYPE.WEBSOCKET;
    var isSocket = isSpecifiedSocket && utils.isSupportSocket();
    return isSocket ? CONNECT_TYPE.WEBSOCKET : CONNECT_TYPE.COMET;
  };

  var isConnected = function isConnected(status) {
    return utils.isEqual(status, CONNECTION_STATUS.CONNECTED);
  };

  var isConnecting = function isConnecting(status) {
    return utils.isEqual(status, CONNECTION_STATUS.CONNECTING);
  };

  var isDisconnected = function isDisconnected(status) {
    return !isConnected(status) && !isConnecting(status);
  };

  var getNavReqOption = function getNavReqOption(option, user) {
    option = utils.copy(option);
    option.token = user.token;
    return option;
  };

  var getPingTimeout = function getPingTimeout(timeSpentConnect) {
    var timeout = timeSpentConnect * 3;

    if (timeout < IM_PING_MIN_TIMEOUT) {
      return IM_PING_MIN_TIMEOUT;
    }

    if (timeout > IM_PING_MAX_TIMEOUT) {
      return IM_PING_MAX_TIMEOUT;
    }

    return timeout;
  };

  var DelayTimer = {
    _delayTime: 0,
    setTime: function setTime(time) {
      var currentTime = utils.getCurrentTimestamp();
      DelayTimer._delayTime = currentTime - time;
    },
    getTime: function getTime() {
      var delayTime = DelayTimer._delayTime;
      var currentTime = utils.getCurrentTimestamp();
      return currentTime - delayTime;
    } };


  var isInValidConversationData = function isInValidConversationData(conversation) {
    return !conversation.type || !conversation.targetId || !utils.isObject(conversation.latestMessage) || utils.isUndefined(conversation.unreadMessageCount);
  };

  var fixConversationData = function fixConversationData(conversation) {
    conversation = conversation || {};
    var _conversation = conversation,
    targetId = _conversation.targetId,
    type = _conversation.type;
    var defaultType = CONVERSATION_TYPE.PRIVATE,
    defaultId = '',
    defaultMsg = {
      messageType: MESSAGE_TYPE.TEXT,
      sentTime: DelayTimer.getTime(),
      content: {
        content: '' },

      senderUserId: targetId,
      targetId: targetId,
      type: type };

    conversation.type = type || defaultType;
    conversation.targetId = targetId || defaultId;
    conversation.latestMessage = conversation.latestMessage || defaultMsg;
    return conversation;
  };

  var sortConversationList = function sortConversationList(conversationList) {
    if (utils.isEmpty(conversationList)) {
      return [];
    }

    return utils.quickSort(conversationList, function (before, after) {
      before = before || {};
      after = after || {};
      var beforeLatestMessage = before.latestMessage || {},
      afterLatestMessage = after.latestMessage || {},
      beforeLatestSentTime = beforeLatestMessage.sentTime || 0,
      afterLatestSentTime = afterLatestMessage.sentTime || 0;
      var flag = false;

      if (before.isTop && !after.isTop) {
        flag = false;
      } else if (!before.isTop && after.isTop) {
        flag = true;
      } else {
        flag = afterLatestSentTime <= beforeLatestSentTime;
      }

      return flag;
    });
  };

  var splitConversationListByIsTop = function splitConversationListByIsTop(conversationList) {
    var topConversationList = [],
    unToppedConversationList = [];
    utils.forEach(conversationList, function (conversation) {
      var hasMentiond = conversation.hasMentiond,
      mentiondInfo = conversation.mentiondInfo;
      conversation.hasMentioned = hasMentiond;
      conversation.mentionedInfo = mentiondInfo;
      var isTop = conversation.isTop || false;

      if (isTop) {
        topConversationList.push(conversation);
      } else {
        unToppedConversationList.push(conversation);
      }
    });
    return {
      topConversationList: topConversationList || [],
      unToppedConversationList: unToppedConversationList || [] };

  };

  var sortConList = function sortConList(conversationList) {
    if (utils.isEmpty(conversationList)) {
      return [];
    }

    var splitConversationList = splitConversationListByIsTop(conversationList);

    var _sortListBySentTime = function _sortListBySentTime(convers) {
      return utils.quickSort(convers, function (before, after) {
        before = before || {};
        after = after || {};
        var beforeLatestMessage = before.latestMessage || {},
        afterLatestMessage = after.latestMessage || {},
        beforeLatestSentTime = beforeLatestMessage.sentTime || 0,
        afterLatestSentTime = afterLatestMessage.sentTime || 0;
        return afterLatestSentTime <= beforeLatestSentTime;
      });
    };

    var topConversationList = _sortListBySentTime(splitConversationList.topConversationList);

    var unToppedConversationList = _sortListBySentTime(splitConversationList.unToppedConversationList);

    topConversationList.push.apply(topConversationList, unToppedConversationList);
    return topConversationList;
  };

  var isSupportStatusMessage = function isSupportStatusMessage(type) {
    return !!CONVERSATION_TYPE_TO_PUBLISH_STATUS_TOPIC[type];
  };

  var getConversationKey = function getConversationKey(option) {
    var type = option.type,
    targetId = option.targetId;
    return type + '_' + targetId;
  };

  var getConversationByKey = function getConversationByKey(key) {
    key = key || '';
    var arr = key.split('_');

    if (arr.length === 2) {
      return {
        type: arr[0],
        targetId: arr[1] };

    } else {
      return {
        type: CONVERSATION_TYPE.PRIVATE,
        targetId: '' };

    }
  };

  var getChatRoomKVOptStatus = function getChatRoomKVOptStatus(entity, action) {
    var status = 0;

    if (entity.isAutoDelete) {
      status = status | CHATROOM_KV_STATUS_CODE.AUTO_DELETE;
    }

    if (entity.isOverwrite) {
      status = status | CHATROOM_KV_STATUS_CODE.OVERWRITE;
    }

    if (utils.isEqual(action, CHATROOM_ENTRY_TYPE.DELETE)) {
      status = status | CHATROOM_KV_STATUS_CODE.OPERATE;
    }

    return status;
  };

  var getChatRoomKVByStatus = function getChatRoomKVByStatus(status) {
    var isDeleteOpt = !!(status & CHATROOM_KV_STATUS_CODE.OPERATE);
    return {
      isAutoDelete: !!(status & CHATROOM_KV_STATUS_CODE.AUTO_DELETE),
      isOverwrite: !!(status & CHATROOM_KV_STATUS_CODE.OVERWRITE),
      type: isDeleteOpt ? CHATROOM_ENTRY_TYPE.DELETE : CHATROOM_ENTRY_TYPE.UPDATE };

  };

  var TextCompressor = {
    _dataType: {
      Tail: 0x30,
      Compressed: 0x40,
      NormalExt: 0x50,
      Normal: 0x60,
      Mark: 0x70 },

    _chars: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz',
    _scale: 62,
    _max: 238327,
    _indexOf: function _indexOf(map, source, fromIndex) {
      var result = {
        length: 0,
        offset: -1 };


      if (fromIndex >= source.length - 1) {
        return result;
      }

      var c1 = source.charAt(fromIndex);
      var c2 = source.charAt(fromIndex + 1);
      var items = map[c1 + c2];

      if (items[0] === fromIndex) {
        return result;
      }

      var space1 = source.length - fromIndex;

      for (var i = 0, len = items.length; i < len; i++) {
        var item = items[i];
        var space2 = fromIndex - item;

        if (space2 > TextCompressor._max) {
          continue;
        }

        var end = Math.min(space1, space2);

        if (end <= result.length) {
          break;
        }

        if (result.length > 2) {
          if (source.charAt(item + result.length - 1) !== source.charAt(fromIndex + result.length - 1)) {
            continue;
          }
        }

        var m = 2;

        for (var j = m; j < end; j++) {
          if (source.charAt(item + j) === source.charAt(fromIndex + j)) {
            m++;
          } else {
            break;
          }
        }

        if (m >= result.length) {
          result.length = m;
          result.offset = item;
        }
      }

      return result;
    },
    _numberEncode: function _numberEncode(num) {
      var result = [],
      remainder = 0;

      do {
        remainder = num % TextCompressor._scale;
        result.push(TextCompressor._chars.charAt(remainder));
        num = (num - remainder) / TextCompressor._scale;
      } while (num > 0);

      return result.join('');
    },
    _numberDecode: function _numberDecode(str) {
      var num = 0,
      index = 0;

      for (var i = str.length - 1; i >= 0; i--) {
        index = TextCompressor._chars.indexOf(str.charAt(i));

        if (index === -1) {
          throw new Error('decode number error, data is \'' + str + '\'');
        }

        num = num * TextCompressor._scale + index;
      }

      return num;
    },
    compress: function compress(data) {
      var map = {};

      for (var p = 0; p < data.length - 1; p++) {
        var c1 = data.charAt(p);
        var c2 = data.charAt(p + 1);
        var c = c1 + c2;

        if (!map.hasOwnProperty(c)) {
          map[c] = [p];
          continue;
        }

        map[c].push(p);
      }

      var compressedData = [],
      normalBlockBuffer = [];

      var encodeNormalBlock = function encodeNormalBlock() {
        if (normalBlockBuffer.length > 0) {
          var normalBlock = normalBlockBuffer.join('');
          normalBlockBuffer = [];

          if (normalBlock.length > 26) {
            var normalExtBlockLength = TextCompressor._numberEncode(normalBlock.length);

            var normalExtBlockHeader = String.fromCharCode(TextCompressor._dataType.NormalExt | normalExtBlockLength.length);
            compressedData.push(normalExtBlockHeader + normalExtBlockLength);
          } else {
            var normalBlockHeader = String.fromCharCode(TextCompressor._dataType.Normal | normalBlock.length);
            compressedData.push(normalBlockHeader);
          }

          compressedData.push(normalBlock);
        }
      };

      var i = 0;

      while (i < data.length) {
        var r = TextCompressor._indexOf(map, data, i);

        if (r.length < 2) {
          normalBlockBuffer.push(data.charAt(i++));
          continue;
        }

        if (r.length < 4) {
          normalBlockBuffer.push(data.substr(i, r.length));
          i += r.length;
          continue;
        }

        var offset = TextCompressor._numberEncode(i - r.offset);

        var length = TextCompressor._numberEncode(r.length);

        if (offset.length + length.length >= r.length) {
          normalBlockBuffer.push(data.substr(i, r.length));
          i += r.length;
          continue;
        }

        encodeNormalBlock();
        var compressedBlockHeader = String.fromCharCode(TextCompressor._dataType.Compressed | offset.length << 2 | length.length);
        compressedData.push(compressedBlockHeader + offset + length);
        i += r.length;
      }

      encodeNormalBlock();

      var dataLengthTo62 = TextCompressor._numberEncode(data.length);

      var tailBlockHeader = String.fromCharCode(TextCompressor._dataType.Tail | dataLengthTo62.length);
      compressedData.push(tailBlockHeader + dataLengthTo62);
      return compressedData.join('');
    },
    uncompress: function uncompress(data) {
      var i = 0;
      var result = '';

      label1: do {
        var header = data.charCodeAt(i++);
        var headerType = header & TextCompressor._dataType.Mark;
        var headerVal = header & 0xF;

        switch (headerType) {
          case TextCompressor._dataType.Compressed:
            var p1 = headerVal >> 2;
            var p2 = headerVal & 3;

            if (p1 === 0 || p2 === 0) {
              throw new Error('Data parsing error,at ' + i);
            }

            var offset = TextCompressor._numberDecode(data.substr(i, p1));

            var len = TextCompressor._numberDecode(data.substr(i += p1, p2));

            offset = result.length - offset;

            if (offset + len > result.length) {
              throw new Error('Data parsing error,at ' + i);
            }

            i += p2;
            result += result.substr(offset, len);
            break;

          case TextCompressor._dataType.Tail:
            var num = TextCompressor._numberDecode(data.substr(i, headerVal));

            if (num !== result.length) {
              throw new Error('Data parsing error,at ' + i);
            }

            i += headerVal;
            break label1;

          case TextCompressor._dataType.NormalExt:
            var normalNum = TextCompressor._numberDecode(data.substr(i, headerVal));

            result += data.substr(i += headerVal, normalNum);
            i += normalNum;
            break;

          case TextCompressor._dataType.Normal:
            result += data.substr(i, headerVal);
            i += headerVal;
            break;

          case TextCompressor._dataType.Mark:
            if (headerVal > 10) {
              throw new Error('Data parsing error,at ' + i);
            }

            result += data.substr(i, 16 + headerVal);
            i += 16 + headerVal;
            break;

          default:
            throw new Error('Data parsing error,at ' + i + ' header:' + headerType);}

      } while (i < data.length);

      return result;
    } };


  var isBelowIE = function isBelowIE(version) {
    var system = env.system;
    var flag = system.model === 'IE' && Number(system.version) < version ? true : false;
    return flag;
  };

  var stringToCsv = function stringToCsv(str) {
    var csvStr = str.replace(/"/g, '""');
    var tpl = '"{csvStr}"';
    return tplEngine$1(tpl, {
      csvStr: csvStr });

  };

  var getWebSessionId = function getWebSessionId() {
    var sessionId = utils.Session.get(STORAGE_SESSION_ID_KEY);

    if (utils.isEmpty(sessionId)) {
      sessionId = utils.getUUID22().slice(0, 10);
      utils.Session.set(STORAGE_SESSION_ID_KEY, sessionId);
    }

    return sessionId;
  };

  var getDeviceId = function getDeviceId() {
    var deviceId = utils.Storage.get(STORAGE_DEVICE_ID_KEY);

    if (utils.isEmpty(deviceId)) {
      deviceId = utils.getUUID22();
      utils.Storage.set(STORAGE_DEVICE_ID_KEY, deviceId);
    }

    return deviceId;
  };

  var getDeviceInfo = function getDeviceInfo() {
    var tpl = '{brower}|{version}|{sessionId}';
    return tplEngine$1(tpl, {
      brower: env.system.model,
      version: env.system.version,
      sessionId: getWebSessionId() });

  };

  var getReportLogUrl = function getReportLogUrl(params) {
    var entireUrl = '',
    protocol = env.protocol.http + '//';
    var urlConf = {
      protocol: protocol,
      url: params.url,
      version: SDK_VERSION,
      appkey: params.appkey,
      deviceId: getDeviceId(),
      deviceInfo: getDeviceInfo(),
      platform: PLATFORM$1,
      userId: params.userId };


    switch (params.type) {
      case REPORT_TYPE.REALTIME:
        entireUrl = tplEngine$1(REALTIME_URL_TPL, urlConf);
        break;

      case REPORT_TYPE.FULL:
        entireUrl = tplEngine$1(MSGNOTIF_URL_TPL, utils.extend(urlConf, {
          logId: params.logId }));

        break;

      default:
        break;}


    return entireUrl;
  };

  var isLogCommandMsg = function isLogCommandMsg(msg) {
    var content = msg.content;
    return msg.messageType === MESSAGE_TYPE.LOG_COMMAND && msg.senderUserId === LOG_CMD_MSG_SENDER && content.platform === 'Web';
  };

  var isValidChatRoomKey = function isValidChatRoomKey(key) {
    if (!utils.isString(key)) {
      return;
    }

    var isValid = /^[A-Za-z0-9_=+-]+$/.test(key),
    keyLen = key.length,
    isLimit = keyLen <= CHATROOM_KEY_LENGTH.MAX && keyLen >= CHATROOM_KEY_LENGTH.MIN;
    return isValid && isLimit;
  };

  var isValidChatRoomValue = function isValidChatRoomValue(value) {
    if (!utils.isString(value)) {
      return;
    }

    var valLen = value.length;
    return valLen <= CHATROOM_VALUE_LENGTH.MAX && valLen >= CHATROOM_VALUE_LENGTH.MIN;
  };

  var genUploadFileName = function genUploadFileName(type, fileName) {
    var tpl = '{type}__RC-{date}_{random}_{timestamp}{uuid}{extension}';
    var random = Math.floor(Math.random() * 1000 % 10000);
    var uuid = utils.getUUID();
    var fileNameArr, extension;

    if (fileName) {
      fileNameArr = fileName.split('.');
      extension = '.' + fileNameArr[fileNameArr.length - 1];
    }

    return tplEngine$1(tpl, {
      type: type,
      date: utils.formateDate('-'),
      random: random,
      uuid: uuid,
      timestamp: DelayTimer.getTime(),
      extension: extension || '' });

  };

  var getUploadFileDomains = function getUploadFileDomains(navi) {
    var uploadServer = navi.uploadServer,
    bosAddr = navi.bosAddr;
    return {
      qiniu: uploadServer,
      bos: bosAddr };

  };

  var mergeConversationList = function mergeConversationList(option) {
    option = option || {};
    var _option4 = option,
    conversationList = _option4.conversationList,
    updatedConversationList = _option4.updatedConversationList;
    var allConversationList = updatedConversationList.concat(conversationList);
    var hashTable = {};
    var newList = [];
    var invalidDataIndexList = [];
    utils.forEach(allConversationList, function (conversation) {
      if (!utils.isObject(conversation)) {
        return;
      }

      var key = getConversationKey(conversation),
      hashItem = hashTable[key] || {},
      hashIndex = utils.isUndefined(hashItem.index) ? newList.length : hashItem.index,
      hashVal = hashItem.val || {},
      cacheUpdatedItems = hashVal.updatedItems || {},
      updatedItems = conversation.updatedItems || {};
      conversation = utils.extend(conversation, hashVal);
      utils.forEach(cacheUpdatedItems, function (item, key) {
        conversation[key] = item.val;
      });
      utils.forEach(updatedItems, function (item, key) {
        var cacheItem = cacheUpdatedItems[key] || {},
        cacheItemUpdatedTime = cacheItem.time || 0;

        if (item.time > cacheItemUpdatedTime) {
          conversation[key] = item.val;
        }
      });
      hashTable[key] = {
        index: hashIndex,
        val: conversation };

      newList[hashIndex] = conversation;
      isInValidConversationData(conversation) && invalidDataIndexList.push(hashIndex);
    });
    utils.forEach(invalidDataIndexList, function (invalidIndex) {
      var conversation = newList[invalidIndex];
      newList[invalidIndex] = fixConversationData(conversation);
    });
    newList = sortConList(newList);
    return utils.map(newList, function (item) {
      delete item.updatedItems;
      return item;
    });
  };

  var isVoipMessage = function isVoipMessage(message) {
    var flag = false;
    var type = message.type,
    messageType = message.messageType;

    if (type === 12 || CALLLIB_MSG_TYPE.indexOf(messageType) > -1) {
      flag = true;
    }

    return flag;
  };

  var isExpansionNotifyMsg = function isExpansionNotifyMsg(message) {
    return message.messageType === MESSAGE_TYPE.EXPANSION_NOTIFY;
  };

  var validateExpansion = function validateExpansion(expansion) {
    var REGEXP_EXPANSION_KEY = /^[A-Za-z0-9_=+-]+$/;
    var expansionKeysLength = utils.getObjectKeys(expansion).length;

    if (utils.isEmpty(expansion) || !utils.isObject(expansion)) {
      return ERROR_INFO.ILLGAL_PARAMS;
    }

    if (expansionKeysLength > MSG_EXPANSION_LENGTH.MSG) {
      return ERROR_INFO.EXPANSION_LIMIT_EXCEET;
    }

    var error = void 0;
    utils.forEach(expansion, function (val, key) {
      if (!utils.isString(val)) {
        return;
      }

      if (key.length > MSG_EXPANSION_LENGTH.KEY || val.length > MSG_EXPANSION_LENGTH.VALUE) {
        return error = ERROR_INFO.EXPANSION_LIMIT_EXCEET;
      }

      if (!REGEXP_EXPANSION_KEY.test(key)) {
        return error = ERROR_INFO.ILLGAL_PARAMS;
      }
    });
    return error;
  };

  var formatExtraContent = function formatExtraContent(extraContent) {
    var expansion = {};
    var parseExtraContent = utils.parseJSON(extraContent);
    utils.forEach(parseExtraContent, function (value, key) {
      expansion[key] = value.v;
    });
    return expansion;
  };

  var common = {
    isConnected: isConnected,
    isConnecting: isConnecting,
    isDisconnected: isDisconnected,
    getConnectType: getConnectType,
    getTransporterUrl: getTransporterUrl,
    isGroup: isGroup,
    isChatRoom: isChatRoom,
    getConversationTypeList: getConversationTypeList,
    isValidConversationType: isValidConversationType,
    getUIDByToken: getUIDByToken,
    getSessionId: getSessionId,
    getMessageOptionByStatus: getMessageOptionByStatus,
    SignalId: SignalId,
    MessageTimeSyner: MessageTimeSyner,
    ChatRoomMessageTimeSyner: ChatRoomMessageTimeSyner,
    JoinedChatRoomSyner: JoinedChatRoomSyner,
    getCMPDomainList: getCMPDomainList,
    getNaviListByToken: getNaviListByToken,
    getValidToken: getValidToken,
    RCSocket: RCSocket,
    RCStorage: RCStorage,
    getNavReqOption: getNavReqOption,
    getPingTimeout: getPingTimeout,
    fixConversationData: fixConversationData,
    sortConversationList: sortConversationList,
    DelayTimer: DelayTimer,
    isSupportStatusMessage: isSupportStatusMessage,
    getConversationKey: getConversationKey,
    getConversationByKey: getConversationByKey,
    getChatRoomKVOptStatus: getChatRoomKVOptStatus,
    getChatRoomKVByStatus: getChatRoomKVByStatus,
    TextCompressor: TextCompressor,
    isBelowIE: isBelowIE,
    getReportLogUrl: getReportLogUrl,
    isLogCommandMsg: isLogCommandMsg,
    getWebSessionId: getWebSessionId,
    getDeviceId: getDeviceId,
    stringToCsv: stringToCsv,
    isValidChatRoomKey: isValidChatRoomKey,
    isValidChatRoomValue: isValidChatRoomValue,
    genUploadFileName: genUploadFileName,
    getUploadFileDomains: getUploadFileDomains,
    mergeConversationList: mergeConversationList,
    sortConList: sortConList,
    getUpMessageOptionBySessionId: getUpMessageOptionBySessionId,
    isVoipMessage: isVoipMessage,
    isExpansionNotifyMsg: isExpansionNotifyMsg,
    validateExpansion: validateExpansion,
    formatExtraContent: formatExtraContent };


  var EventEmitter$1 = utils.EventEmitter,
  DeferHandler$1 = utils.DeferHandler,
  Timer$1 = utils.Timer;
  var RCSocket$1 = common.RCSocket;
  var TransHandlerID = {
    CONNECT: 'connect',
    PING: 'ping' };


  var Heartbeat = function () {
    function Heartbeat(transporter, option) {
      this._transporter = void 0;
      this._timer = void 0;
      option = option || {};
      var timeout = option.timeout;
      this._transporter = transporter;
      this._timer = new Timer$1({
        type: TIMER_TYPE.INTERVAL,
        timeout: timeout });

    }

    var _proto = Heartbeat.prototype;

    _proto.check = function check(timeout) {
      var _transporter = this._transporter;
      var _deferHandler = _transporter._deferHandler;
      var pingReqSignal = new PingReqWriter();

      _transporter.sendSignal(pingReqSignal);

      return utils.deferred(function (resolve, reject) {
        _deferHandler.add(TransHandlerID.PING, {
          resolve: resolve,
          reject: reject },
        {
          timeout: timeout });

      });
    };

    _proto.start = function start(timeout, onError) {
      var self = this;

      self._timer.start(function () {
        self.check(timeout).then(utils.noop)["catch"](onError);
      });
    };

    _proto.stop = function stop() {
      this._timer && this._timer.stop();
    };

    return Heartbeat;
  }();

  var SocketTransporter = function () {
    function SocketTransporter(option) {
      this._socket = void 0;
      this._option = void 0;
      this._transporterEventEmiiter = new EventEmitter$1();
      this._deferHandler = new DeferHandler$1();
      this._heartbeat = new Heartbeat(this, {
        timeout: IM_PING_INTERVAL_TIME });

      this._connectedTime = void 0;
      this._timer = void 0;
      this._option = option;
      this._timer = new Timer$1({
        type: TIMER_TYPE.TIMEOUT,
        timeout: CMP_CONNECT_TIMEOUT_TIME });

    }

    var _proto2 = SocketTransporter.prototype;

    _proto2._createSocket = function _createSocket(url) {
      var self = this;
      var _transporterEventEmiiter = self._transporterEventEmiiter;
      var socket = new RCSocket$1({
        url: url });


      var onClose = function onClose(event) {
        event = event || {};
        var code = event.code || TRANSPORTER_STATUS.CLOSE_ABNORMAL;

        _transporterEventEmiiter.emit(TRANSPORT_EVENT.STATUS, code);

        self.disconnect();
      };

      socket.onMessage(function (msg) {
        var data = msg.data;

        if (!utils.isArrayBuffer(data)) {
          throw new Error('Error socket signal');
        }

        var signal = readWSBuffer(data);
        self.handleSignal(signal);
      });
      socket.onError(onClose);
      socket.onClose(onClose);
      return socket;
    };

    _proto2._startHeartbeat = function _startHeartbeat(timeSpentConnect) {
      var self = this;
      var _heartbeat = self._heartbeat,
      _transporterEventEmiiter = self._transporterEventEmiiter;

      _heartbeat.check(FIRST_PING_TIMEOUT).then(utils.noop)["catch"](function () {
        _transporterEventEmiiter.emit(TRANSPORT_EVENT.STATUS, TRANSPORTER_STATUS.PING_FIRST_TIMEOUT);

        self.disconnect();
      });

      var pingTimeout = common.getPingTimeout(timeSpentConnect);

      _heartbeat.start(pingTimeout, function () {
        _transporterEventEmiiter.emit(TRANSPORT_EVENT.STATUS, TRANSPORTER_STATUS.PING_TIMEOUT);

        self.disconnect();
      });
    };

    _proto2._stopHeartbeat = function _stopHeartbeat() {
      this._heartbeat.stop();
    };

    _proto2.watchSignal = function watchSignal(watcher) {
      this._transporterEventEmiiter.on(TRANSPORT_EVENT.SIGNAL, watcher);
    };

    _proto2.watchStatus = function watchStatus(watcher) {
      this._transporterEventEmiiter.on(TRANSPORT_EVENT.STATUS, watcher);
    };

    _proto2.connect = function connect(user, option) {
      var self = this;
      var _self$_option = self._option,
      appkey = _self$_option.appkey,
      connectType = _self$_option.connectType,
      _deferHandler = self._deferHandler;
      var token = user.token;
      var domain = option.domain;
      var url = common.getTransporterUrl({
        domain: domain,
        appkey: appkey,
        connectType: connectType,
        token: token });

      var timeBeforeConnect = utils.getCurrentTimestamp();
      self._socket = this._createSocket(url);

      self._timer.start(function () {
        self.disconnect();

        _deferHandler.reject(TransHandlerID.CONNECT, {
          status: TRANSPORTER_STATUS.CMP_CONNECTION_TIMEOUT });

      });

      return utils.deferred(function (resolve, reject) {
        _deferHandler.add(TransHandlerID.CONNECT, {
          resolve: resolve,
          reject: reject });

      }).then(function (result) {
        var timeAfterConnect = utils.getCurrentTimestamp();
        var timeSpentConnect = timeAfterConnect - timeBeforeConnect;

        self._startHeartbeat(timeSpentConnect);

        self._timer.stop();

        return result;
      });
    };

    _proto2.sendSignal = function sendSignal(writer) {
      var binary = writer.getBufferData();

      this._socket.send(binary.buffer);
    };

    _proto2.handleSignal = function handleSignal(signal) {
      var _transporterEventEmiiter = this._transporterEventEmiiter,
      _deferHandler = this._deferHandler;

      if (signal instanceof ConnAckReader) {
        this.handleConnAck(signal);
      } else if (signal instanceof PingRespReader) {
        _deferHandler.resolve(TransHandlerID.PING);
      } else {
        _transporterEventEmiiter.emit(TRANSPORT_EVENT.SIGNAL, signal);
      }

      if (signal && utils.isValidTimestamp(signal.timestamp)) {
        common.DelayTimer.setTime(signal.timestamp);
      }
    };

    _proto2.handleConnAck = function handleConnAck(signal) {
      var self = this;
      var _deferHandler = self._deferHandler;
      var status = signal.status;
      var isConnected = status === SUCCESS_CODE;
      var event = isConnected ? _deferHandler.resolve : _deferHandler.reject;
      event.call(_deferHandler, TransHandlerID.CONNECT, signal);

      if (isConnected) {
        self._connectedTime = utils.getCurrentTimestamp();
      }
    };

    _proto2.disconnect = function disconnect() {
      this._stopHeartbeat();

      this._socket && this._socket.close();
    };

    return SocketTransporter;
  }();

  var logEventEmitter = new utils.EventEmitter();
  var LogEventName = 'log';
  var LocalLogPrefix = '[Rong]';
  var ServerOption = DEFAULT_SERVER_OPTION;
  var Option = {
    isDebug: false,
    isUploadToServer: true,
    appkey: '',
    userId: '',
    isNetworkUnavailable: true };

  var realTimeUploadHasStarted = false,
  RealtimeUploadTimes = 1,
  isRealtimeUploading = false,
  fullLogId = '';

  var isFirstDefaultUpload = function isFirstDefaultUpload(interval) {
    return interval === 20000;
  };

  var getRealtimeUploadInterval = function getRealtimeUploadInterval(uploadTimes) {
    var realtimeInterval = ServerOption.realtimeInterval;
    return realtimeInterval * Math.pow(2, uploadTimes - 1);
  };

  var getFullUploadInterval = function getFullUploadInterval(uploadTimes) {
    var fullInterval = ServerOption.fullInterval;
    return fullInterval * Math.pow(2, uploadTimes - 1);
  };

  var getCSVForLog = function getCSVForLog(log) {
    log = log || {};
    var content = log.content || {};
    utils.forEach(content, function (val, key) {
      if (utils.isObject(val) || utils.isArray(val)) {
        content[key] = utils.toJSON(val);
      }
    });
    content = utils.toJSON(content) || '""';
    content = common.stringToCsv(content);
    return utils.tplEngine(CSV_LOG_TPL, {
      sessionId: common.getWebSessionId(),
      time: log.time,
      type: log.type,
      level: log.level,
      tag: log.tag,
      content: content });

  };

  var setServerOption = function setServerOption(serverData) {
    var logSwitch = serverData.logSwitch,
    logPolicy = serverData.logPolicy;
    var isOpen = !!logSwitch;
    if (utils.isEmpty(serverData)) return;
    ServerOption.isOpen = isOpen;

    if (!isOpen) {
      return;
    }

    var logConf = utils.parseJSON(logPolicy || '') || {};
    var url = logConf.url,
    level = logConf.level,
    itv = logConf.itv,
    times = logConf.times;
    utils.extend(ServerOption, {
      url: url,
      realtimeLevel: Number(level),
      realtimeInterval: Number(itv) * 1000,
      realtimeMaxTimes: Number(times) });

  };

  var setServerResponseOption = function setServerResponseOption(resText) {
    var resConf = utils.parseJSON(resText || '');
    var nextTime = resConf.nextTime,
    level = resConf.level,
    logSwitch = resConf.logSwitch;
    if (utils.isEmpty(resConf)) return;
    var isOpen = !!logSwitch;
    ServerOption.isOpen = isOpen;
    if (!isOpen) return;
    utils.extend(ServerOption, {
      realtimeLevel: Number(level),
      realtimeInterval: Number(nextTime) * 1000 });

  };

  var getLogLevel = function getLogLevel(log) {
    log = log || {};
    var _Option = Option,
    isNetworkUnavailable = _Option.isNetworkUnavailable,
    _log = log,
    level = _log.level,
    isLevelToDegrad = utils.isEqual(level, LEVEL.ERROR) || utils.isEqual(level, LEVEL.WARN);

    if (isNetworkUnavailable && isLevelToDegrad) {
      log.level = LEVEL.INFO;
    }

    return log;
  };

  var LogStore = {
    _list: [],
    MaxSize: common.isBelowIE(9) ? STORE_SIZE.LOW : STORE_SIZE.ADVANCED,
    add: function add(log) {
      log = getLogLevel(log);

      LogStore._list.push(log);

      var currentSize = LogStore._list.length,
      maxSize = LogStore.MaxSize;

      if (currentSize > maxSize) {
        LogStore._list.splice(0, currentSize - maxSize);
      }
    },
    get: function get(option) {
      var type = option.type,
      uploadLevel = option.level;
      var _list = LogStore._list;
      var uploadList = [];
      utils.forEach(_list, function (log, index) {
        var logTime = log.time || 0,
        logLevel = log.level || LEVEL.DEBUG,
        isUploadLevel = logLevel <= uploadLevel,
        fullUploadOption = option.fullUploadOption || {},
        startTime = fullUploadOption.startTime || 0,
        endTime = fullUploadOption.endTime || common.DelayTimer.getTime();
        var isUpload = isUploadLevel;

        switch (type) {
          case REPORT_TYPE.REALTIME:
            isUpload = isUpload && !log.isUploaded;
            isUpload && (LogStore._list[index].isUploaded = true);
            break;

          case REPORT_TYPE.FULL:
            isUpload = isUpload && logTime >= startTime && logTime <= endTime;
            break;

          default:}


        if (isUpload) {
          uploadList.push(log);
        }
      });
      return uploadList;
    },
    clear: function clear() {
      LogStore._list = [];
    } };


  var upload = function upload(option) {
    var url = option.url,
    logList = option.logList,
    type = option.type;
    var requestUrl = common.getReportLogUrl({
      type: type,
      appkey: Option.appkey || '',
      userId: Option.userId || '',
      url: url || ServerOption.url || DEFAULT_SERVER_OPTION.url,
      logId: option.logId });

    var csvLog = '';
    utils.forEach(logList, function (log) {
      csvLog += getCSVForLog(log);
    });

    if (utils.isEmpty(csvLog) && type === REPORT_TYPE.REALTIME) {
      return utils.Defer.reject();
    }

    if (utils.isEmpty(csvLog) && type === REPORT_TYPE.FULL) {
      csvLog = NO_FULL_LOG;
    }

    csvLog = common.TextCompressor.compress(csvLog);
    return utils.request(requestUrl, {
      method: REQUEST_METHOD.POST,
      body: csvLog,
      timeout: REQUEST_TIMEOUT });

  };

  var uploadRealtime = function uploadRealtime() {
    if (isRealtimeUploading) {
      return;
    }

    var interval = getRealtimeUploadInterval(RealtimeUploadTimes);
    var realtimeMaxTimes = ServerOption.realtimeMaxTimes,
    realtimeLevel = ServerOption.realtimeLevel;

    if (RealtimeUploadTimes < realtimeMaxTimes) {
      RealtimeUploadTimes++;
    }

    if (isFirstDefaultUpload(interval)) {
      RealtimeUploadTimes = 1;
    }

    utils.setTimeout(function () {
      var logList = LogStore.get({
        type: REPORT_TYPE.REALTIME,
        level: realtimeLevel });

      isRealtimeUploading = true;
      upload({
        logList: logList,
        type: REPORT_TYPE.REALTIME }).
      then(function (response) {
        isRealtimeUploading = false;
        var responseText = response.responseText || '{}';
        var conf = response.responseText || {};
        setServerResponseOption(responseText);

        if (ServerOption.isOpen) {
          RealtimeUploadTimes = utils.isEmpty(conf) ? RealtimeUploadTimes : 1;
          uploadRealtime();
        }
      })["catch"](function () {
        isRealtimeUploading = false;
        uploadRealtime();
      });
    }, interval);
  };

  var uploadFull = function uploadFull(uploadTimes, option, connectedTime) {
    if (!Option.isUploadToServer || env.isMini) {
      return;
    }

    uploadTimes = uploadTimes || 0;
    option = option || {};
    var _option = option,
    uri = _option.uri,
    logId = _option.logId;
    var isFirst = uploadTimes === 0;
    var interval = isFirst ? 0 : getFullUploadInterval(uploadTimes);
    var fullMaxTimes = ServerOption.fullMaxTimes,
    fullLevel = ServerOption.fullLevel;
    if (fullLogId === logId) return;

    if (uploadTimes <= fullMaxTimes) {
      uploadTimes++;
    } else {
      return;
    }

    fullLogId = logId;

    (function (option) {
      utils.setTimeout(function () {
        var logList = LogStore.get({
          type: REPORT_TYPE.FULL,
          level: fullLevel,
          fullUploadOption: option });

        if (logList.length === 0 && Number(option.endTime) < connectedTime) return;
        upload({
          logId: logId,
          url: uri,
          logList: logList,
          type: REPORT_TYPE.FULL }).
        then(function () {})["catch"](function () {
          uploadFull(uploadTimes, option, connectedTime);
        });
      }, interval);
    })(option);
  };

  var writeLocalLog = function writeLocalLog(log) {
    var time = log.time;
    var formatedTime = utils.formatTime(time);
    var localLog = LocalLogPrefix + ":" + formatedTime + ": " + utils.toJSON(log);
    logEventEmitter.emit(LogEventName, localLog);

    if (Option.isDebug) {
      utils.consoleLog(localLog);
    }
  };

  var isIgnoreErrorCode = function isIgnoreErrorCode(code) {
    return utils.indexOf(IGNORE_ERROR_CODE, code) > -1;
  };

  var Logger = {
    _events: [],
    LogStore: LogStore,
    setOption: function setOption(option) {
      Option = utils.extend(Option, option);
    },
    setServerOption: setServerOption,
    watchLog: function watchLog(event) {
      logEventEmitter.on(LogEventName, event);

      Logger._events.push(event);
    },
    write: function write(log) {
      log = log || {};
      log.tag = log.tag || TAG.L_CRASH_E;
      log.time = log.time || common.DelayTimer.getTime();
      log.type = log.type || LOG_TYPE.IM;
      LogStore.add(log);
      writeLocalLog(log);
    },
    fatal: function fatal(tag, content) {
      Logger.write({
        tag: tag,
        content: content,
        level: LEVEL.FATAL });

    },
    error: function error(tag, content) {
      Logger.write({
        tag: tag,
        content: content,
        level: LEVEL.ERROR });

    },
    warn: function warn(tag, content) {
      Logger.write({
        tag: tag,
        content: content,
        level: LEVEL.WARN });

    },
    info: function info(tag, content) {
      Logger.write({
        tag: tag,
        content: content,
        level: LEVEL.INFO });

    },
    debug: function debug(tag, content) {
      Logger.write({
        tag: tag,
        content: content,
        level: LEVEL.DEBUG });

    },
    startRealtimeUpload: function startRealtimeUpload() {
      if (realTimeUploadHasStarted) return;

      if (Option.isUploadToServer && !env.isMini) {
        uploadRealtime();
      }

      realTimeUploadHasStarted = true;
    },
    resetRealtimeUpload: function resetRealtimeUpload() {
      RealtimeUploadTimes = 1;
    },
    uploadFull: uploadFull,
    isIgnoreErrorCode: isIgnoreErrorCode };


  var EventEmitter$2 = utils.EventEmitter,
  DeferHandler$2 = utils.DeferHandler,
  httpRequest = utils.httpRequest,
  request$3 = utils.request,
  Defer$1 = utils.Defer;

  var CometTransporter = function () {
    function CometTransporter(option) {
      this._option = void 0;
      this._transporterEventEmiiter = new EventEmitter$2();
      this._deferHandler = new DeferHandler$2();
      this._pid = utils.encodeURI(utils.getCurrentTimestamp() + Math.random() + '');
      this._domain = void 0;
      this._sessionid = void 0;
      this._xhrCache = new utils.Cache();
      this._pullSignalTimer = new utils.Timer({
        timeout: IM_COMET_PULLMSG_TIMEOUT });

      this._isDisconnected = true;
      this._option = option;
    }

    var _proto = CometTransporter.prototype;

    _proto._startPullSignal = function _startPullSignal() {
      var self = this;
      var _domain = self._domain,
      _sessionid = self._sessionid,
      _pid = self._pid,
      _transporterEventEmiiter = self._transporterEventEmiiter,
      _pullSignalTimer = self._pullSignalTimer;
      var timestamp = utils.getCurrentTimestamp();
      var protocol = env.protocol.http;
      var url = utils.tplEngine(COMET_PULL_URL_TPL, {
        protocol: protocol,
        timestamp: timestamp,
        domain: _domain,
        sessionId: _sessionid,
        pid: _pid });

      var xhr = httpRequest({
        url: url,
        body: {
          pid: _pid },

        timeout: IM_COMET_PULLMSG_TIMEOUT,
        success: function success(responseText) {
          _pullSignalTimer.stop();

          var isSuccess = self.handleCometResponse(responseText);

          if (isSuccess) {
            !self._isDisconnected && self._startPullSignal();
          } else if (!self._isDisconnected) {
            _transporterEventEmiiter.emit(TRANSPORT_EVENT.STATUS, TRANSPORTER_STATUS.COMET_REQUEST_ERROR);
          }

          self._xhrCache.remove(url);
        },
        fail: function fail() {
          _pullSignalTimer.stop();

          if (!self._isDisconnected) {
            _transporterEventEmiiter.emit(TRANSPORT_EVENT.STATUS, TRANSPORTER_STATUS.COMET_REQUEST_ERROR);
          }

          self._xhrCache.remove(url);
        } });


      _pullSignalTimer.start(function () {
        if (!self._isDisconnected) {
          _transporterEventEmiiter.emit(TRANSPORT_EVENT.STATUS, TRANSPORTER_STATUS.PING_TIMEOUT);

          self.disconnect();
        }
      });

      self._xhrCache.set(url, xhr);
    };

    _proto.watchSignal = function watchSignal(event) {
      this._transporterEventEmiiter.on(TRANSPORT_EVENT.SIGNAL, event);
    };

    _proto.watchStatus = function watchStatus(event) {
      this._transporterEventEmiiter.on(TRANSPORT_EVENT.STATUS, function (status) {
        event && event(status);
      });
    };

    _proto.connect = function connect(user, option) {
      var self = this;
      var _pid = self._pid,
      _self$_option = self._option,
      appkey = _self$_option.appkey,
      connectType = _self$_option.connectType;
      var token = user.token;
      var domain = option.domain;
      var url = common.getTransporterUrl({
        domain: domain,
        appkey: appkey,
        token: token,
        connectType: connectType,
        pid: _pid });

      self._domain = domain;
      self._isDisconnected = false;

      var success = function success(_ref) {
        var responseText = _ref.responseText;

        if (!utils.isValidJSON(responseText)) {
          return Defer$1.reject();
        }

        var response = utils.isObject(responseText) ? responseText : utils.parseJSON(responseText);
        var isConnectSuccess = utils.isEqual(response.status, SUCCESS_CODE);

        if (isConnectSuccess && utils.isObject(response) && utils.isValidTimestamp(response.timestamp)) {
          common.DelayTimer.setTime(response.timestamp);
        }

        return isConnectSuccess ? Defer$1.resolve(response) : Defer$1.reject(response);
      };

      return request$3(url, {
        body: {
          pid: _pid } }).

      then(success).then(function (response) {
        self._sessionid = response.sessionid;

        self._startPullSignal();

        return response;
      });
    };

    _proto.sendSignal = function sendSignal(writer) {
      var self = this;
      var _domain = self._domain,
      _sessionid = self._sessionid,
      _pid = self._pid;
      var messageId = writer.messageId,
      topic = writer.topic,
      targetId = writer.targetId;
      var headerCode = writer.getHeaderFlag();
      var protocol = env.protocol.http;
      var TPL = topic ? COMET_REQ_HAS_TOPIC_URL_TPL : COMET_REQ_NO_TOPIC_URL_TPL;
      var url = utils.tplEngine(TPL, {
        protocol: protocol,
        messageId: messageId,
        headerCode: headerCode,
        topic: topic,
        targetId: targetId,
        pid: _pid,
        sessionId: _sessionid,
        domain: _domain });

      var currentTime = utils.getCurrentTimestamp() + '';
      var xhr = httpRequest({
        url: url,
        method: REQUEST_METHOD.POST,
        body: writer.getCometData(),
        success: function success(responseText) {
          var isSuccess = self.handleCometResponse(responseText);

          if (!isSuccess) {
            self.handleError(messageId);
          }

          self._xhrCache.remove(currentTime);
        },
        fail: function fail(error) {
          self.handleError(messageId);

          self._xhrCache.remove(currentTime);

          Logger.error(TAG.L_COMET_SEND_SIGNAL_E, {
            content: {
              info: 'comet error',
              error: error } });


        } });


      self._xhrCache.set(currentTime, xhr);
    };

    _proto.handleCometResponse = function handleCometResponse(responseText) {
      var self = this;
      var _transporterEventEmiiter = self._transporterEventEmiiter;
      var response = utils.isString(responseText) ? utils.parseJSON(responseText) : responseText;

      if (!response) {
        return false;
      }

      if (!response || !utils.isArray(response)) {
        return true;
      }

      utils.forEach(response, function (data) {
        var sessionid = data.sessionid;

        if (sessionid) {
          self._sessionid = sessionid;
        }

        var signal = readCometData(data);

        _transporterEventEmiiter.emit(TRANSPORT_EVENT.SIGNAL, signal);

        if (signal && utils.isValidTimestamp(signal.timestamp)) {
          common.DelayTimer.setTime(signal.timestamp);
        }
      });
      return true;
    };

    _proto.handleError = function handleError(messageId, status) {
      var signal = {
        messageId: messageId,
        status: status || ERROR_CODE.TIMEOUT };


      this._transporterEventEmiiter.emit(TRANSPORT_EVENT.SIGNAL, signal);
    };

    _proto.disconnect = function disconnect() {
      var self = this;
      self._isDisconnected = true;
      var _xhrCache = self._xhrCache,
      _pullSignalTimer = self._pullSignalTimer;

      var xhrKeys = _xhrCache.getKeys();

      _pullSignalTimer.stop();

      utils.forEach(xhrKeys, function (key) {
        var xhr = _xhrCache.get(key);

        xhr.abort();

        _xhrCache.remove(key);
      });
    };

    return CometTransporter;
  }();

  var Transporter = function Transporter(option) {
    var connectType = option.connectType;
    var isSocket = connectType === CONNECT_TYPE.WEBSOCKET;
    var Transporter = isSocket ? SocketTransporter : CometTransporter;
    return new Transporter(option);
  };

  var PBName = {
    UpStreamMessage: 'UpStreamMessage',
    DownStreamMessage: 'DownStreamMessage',
    DownStreamMessages: 'DownStreamMessages',
    SessionsAttQryInput: 'SessionsAttQryInput',
    SessionsAttOutput: 'SessionsAttOutput',
    SyncRequestMsg: 'SyncRequestMsg',
    ChrmPullMsg: 'ChrmPullMsg',
    NotifyMsg: 'NotifyMsg',
    HistoryMsgInput: 'HistoryMsgInput',
    HistoryMsgOuput: 'HistoryMsgOuput',
    RelationQryInput: 'RelationQryInput',
    RelationsOutput: 'RelationsOutput',
    DeleteSessionsInput: 'DeleteSessionsInput',
    SessionInfo: 'SessionInfo',
    DeleteSessionsOutput: 'DeleteSessionsOutput',
    DeleteMsgInput: 'DeleteMsgInput',
    CleanHisMsgInput: 'CleanHisMsgInput',
    SessionMsgReadInput: 'SessionMsgReadInput',
    ChrmInput: 'ChrmInput',
    QueryChatRoomInfoInput: 'QueryChatRoomInfoInput',
    QueryChatRoomInfoOutput: 'QueryChatRoomInfoOutput',
    RtcInput: 'RtcInput',
    RtcUserListOutput: 'RtcUserListOutput',
    SetUserStatusInput: 'SetUserStatusInput',
    RtcSetDataInput: 'RtcSetDataInput',
    RtcUserSetDataInput: 'RtcUserSetDataInput',
    RtcDataInput: 'RtcDataInput',
    RtcSetOutDataInput: 'RtcSetOutDataInput',
    MCFollowInput: 'MCFollowInput',
    RtcTokenOutput: 'RtcTokenOutput',
    RtcQryOutput: 'RtcQryOutput',
    RtcQryUserOutDataInput: 'RtcQryUserOutDataInput',
    RtcUserOutDataOutput: 'RtcUserOutDataOutput',
    RtcQueryListInput: 'RtcQueryListInput',
    RtcRoomInfoOutput: 'RtcRoomInfoOutput',
    RtcValueInfo: 'RtcValueInfo',
    RtcKeyDeleteInput: 'RtcKeyDeleteInput',
    GetQNupTokenInput: 'GetQNupTokenInput',
    GetQNupTokenOutput: 'GetQNupTokenOutput',
    GetQNdownloadUrlInput: 'GetQNdownloadUrlInput',
    GetQNdownloadUrlOutput: 'GetQNdownloadUrlOutput',
    SetChrmKV: 'SetChrmKV',
    ChrmKVOutput: 'ChrmKVOutput',
    QueryChrmKV: 'QueryChrmKV',
    ChrmNotifyMsg: 'ChrmNotifyMsg',
    SetUserSettingInput: 'SetUserSettingInput',
    SetUserSettingOutput: 'SetUserSettingOutput',
    PullUserSettingInput: 'PullUserSettingInput',
    PullUserSettingOutput: 'PullUserSettingOutput',
    UserSettingNotification: 'UserSettingNotification',
    SessionReq: 'SessionReq',
    SessionStates: 'SessionStates',
    SessionState: 'SessionState',
    SessionStateItem: 'SessionStateItem',
    SessionStateModifyReq: 'SessionStateModifyReq',
    SessionStateModifyResp: 'SessionStateModifyResp' };


  var _SSMsg;
  var SSMsg = (_SSMsg = {}, _SSMsg[PBName.UpStreamMessage] = ['sessionId', 'classname', 'content', 'pushText', 'userId', 'configFlag', 'appData', 'extraContent'], _SSMsg[PBName.DownStreamMessages] = ['list', 'syncTime', 'finished'], _SSMsg[PBName.DownStreamMessage] = ['fromUserId', 'type', 'groupId', 'classname', 'content', 'dataTime', 'status', 'msgId', 'extraContent'], _SSMsg[PBName.SessionsAttQryInput] = ['nothing'], _SSMsg[PBName.SessionsAttOutput] = ['inboxTime', 'sendboxTime', 'totalUnreadCount'], _SSMsg[PBName.SyncRequestMsg] = ['syncTime', 'ispolling', 'isweb', 'isPullSend', 'isKeeping', 'sendBoxSyncTime'], _SSMsg[PBName.ChrmPullMsg] = ['syncTime', 'count'], _SSMsg[PBName.NotifyMsg] = ['type', 'time', 'chrmId'], _SSMsg[PBName.HistoryMsgInput] = ['targetId', 'time', 'count', 'order'], _SSMsg[PBName.HistoryMsgOuput] = ['list', 'syncTime', 'hasMsg'], _SSMsg[PBName.RelationQryInput] = ['type', 'count', 'startTime', 'order'], _SSMsg[PBName.RelationsOutput] = ['info'], _SSMsg[PBName.DeleteSessionsInput] = ['sessions'], _SSMsg[PBName.SessionInfo] = ['type', 'channelId'], _SSMsg[PBName.DeleteSessionsOutput] = ['nothing'], _SSMsg[PBName.DeleteMsgInput] = ['type', 'conversationId', 'msgs'], _SSMsg[PBName.CleanHisMsgInput] = ['targetId', 'dataTime', 'conversationType'], _SSMsg[PBName.SessionMsgReadInput] = ['type', 'msgTime', 'channelId'], _SSMsg[PBName.ChrmInput] = ['nothing'], _SSMsg[PBName.QueryChatRoomInfoInput] = ['count', 'order'], _SSMsg[PBName.QueryChatRoomInfoOutput] = ['userTotalNums', 'userInfos'], _SSMsg[PBName.GetQNupTokenInput] = ['type', 'key'], _SSMsg[PBName.GetQNdownloadUrlInput] = ['type', 'key', 'fileName'], _SSMsg[PBName.GetQNupTokenOutput] = ['deadline', 'token', 'bosToken', 'bosDate', 'path'], _SSMsg[PBName.GetQNdownloadUrlOutput] = ['downloadUrl'], _SSMsg[PBName.SetChrmKV] = ['entry', 'bNotify', 'notification', 'type'], _SSMsg[PBName.ChrmKVOutput] = ['entries', 'bFullUpdate', 'syncTime'], _SSMsg[PBName.QueryChrmKV] = ['timestamp'], _SSMsg[PBName.ChrmNotifyMsg] = ['type', 'time', 'chrmId'], _SSMsg[PBName.SetUserSettingInput] = ['version', 'value'], _SSMsg[PBName.SetUserSettingOutput] = ['version', 'reserve'], _SSMsg[PBName.PullUserSettingInput] = ['version', 'reserve'], _SSMsg[PBName.PullUserSettingOutput] = ['items', 'version'], _SSMsg[PBName.SessionReq] = ['time'], _SSMsg[PBName.SessionStates] = ['version', 'state'], _SSMsg[PBName.SessionState] = ['type', 'channelId', 'time', 'stateItem'], _SSMsg[PBName.SessionStateItem] = ['sessionStateType', 'value'], _SSMsg[PBName.SessionStateModifyReq] = ['version', 'state'], _SSMsg[PBName.SessionStateModifyResp] = ['version'], _SSMsg);

  var Codec = {};
  utils.forEach(SSMsg, function (paramList, name) {
    Codec[name] = function () {
      this.data = {};
    };

    Codec[name].prototype.getData = function () {
      return this.data;
    };

    utils.forEach(paramList, function (param) {
      var setEventName = 'set' + utils.toUpperCase(param, 0, 1);

      Codec[name].prototype[setEventName] = function (item) {
        this.data[param] = item;
      };
    });

    Codec[name].decode = function (data) {
      var decodeResult = {};

      if (utils.isString(data)) {
        data = utils.parseJSON(data);
      }

      var _loop = function _loop(key) {
        var getEventName = 'get' + utils.toUpperCase(key, 0, 1);
        decodeResult[key] = data[key];

        decodeResult[getEventName] = function () {
          return data[key];
        };
      };

      for (var key in data) {
        _loop(key);
      }

      return decodeResult;
    };
  });

  Codec.getModule = function (pbName) {
    var modules = new Codec[pbName]();

    modules.getArrayData = function () {
      return modules.getData();
    };

    return modules;
  };

  function protobuf(a) {var b = void 0,c = function () {function a(a, b, c) {this.low = 0 | a, this.high = 0 | b, this.unsigned = !!c;}function b(a) {return (a && a.__isLong__) === !0;}function e(a, b) {var e, f, h;return b ? (a >>>= 0, (h = a >= 0 && 256 > a) && (f = d[a]) ? f : (e = g(a, 0 > (0 | a) ? -1 : 0, !0), h && (d[a] = e), e)) : (a |= 0, (h = a >= -128 && 128 > a) && (f = c[a]) ? f : (e = g(a, 0 > a ? -1 : 0, !1), h && (c[a] = e), e));}function f(a, b) {if (isNaN(a) || !isFinite(a)) return b ? r : q;if (b) {if (0 > a) return r;if (a >= n) return w;} else {if (-o >= a) return x;if (a + 1 >= o) return v;}return 0 > a ? f(-a, b).neg() : g(0 | a % m, 0 | a / m, b);}function g(b, c, d) {return new a(b, c, d);}function i(a, b, c) {var d, e, g, j, k, l, m;if (0 === a.length) throw Error("empty string");if ("NaN" === a || "Infinity" === a || "+Infinity" === a || "-Infinity" === a) return q;if ("number" == typeof b ? (c = b, b = !1) : b = !!b, c = c || 10, 2 > c || c > 36) throw RangeError("radix");if ((d = a.indexOf("-")) > 0) throw Error("interior hyphen");if (0 === d) return i(a.substring(1), b, c).neg();for (e = f(h(c, 8)), g = q, j = 0; j < a.length; j += 8) {k = Math.min(8, a.length - j), l = parseInt(a.substring(j, j + k), c), 8 > k ? (m = f(h(c, k)), g = g.mul(m).add(f(l))) : (g = g.mul(e), g = g.add(f(l)));}return g.unsigned = b, g;}function j(b) {return b instanceof a ? b : "number" == typeof b ? f(b) : "string" == typeof b ? i(b) : g(b.low, b.high, b.unsigned);}var c, d, h, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y;return Object.defineProperty(a.prototype, "__isLong__", { value: !0, enumerable: !1, configurable: !1 }), a.isLong = b, c = {}, d = {}, a.fromInt = e, a.fromNumber = f, a.fromBits = g, h = Math.pow, a.fromString = i, a.fromValue = j, k = 65536, l = 1 << 24, m = k * k, n = m * m, o = n / 2, p = e(l), q = e(0), a.ZERO = q, r = e(0, !0), a.UZERO = r, s = e(1), a.ONE = s, t = e(1, !0), a.UONE = t, u = e(-1), a.NEG_ONE = u, v = g(-1, 2147483647, !1), a.MAX_VALUE = v, w = g(-1, -1, !0), a.MAX_UNSIGNED_VALUE = w, x = g(0, -2147483648, !1), a.MIN_VALUE = x, y = a.prototype, y.toInt = function () {return this.unsigned ? this.low >>> 0 : this.low;}, y.toNumber = function () {return this.unsigned ? (this.high >>> 0) * m + (this.low >>> 0) : this.high * m + (this.low >>> 0);}, y.toString = function (a) {var b, c, d, e, g, i, j, k, l;if (a = a || 10, 2 > a || a > 36) throw RangeError("radix");if (this.isZero()) return "0";if (this.isNegative()) return this.eq(x) ? (b = f(a), c = this.div(b), d = c.mul(b).sub(this), c.toString(a) + d.toInt().toString(a)) : "-" + this.neg().toString(a);for (e = f(h(a, 6), this.unsigned), g = this, i = "";;) {if (j = g.div(e), k = g.sub(j.mul(e)).toInt() >>> 0, l = k.toString(a), g = j, g.isZero()) return l + i;for (; l.length < 6;) {l = "0" + l;}i = "" + l + i;}}, y.getHighBits = function () {return this.high;}, y.getHighBitsUnsigned = function () {return this.high >>> 0;}, y.getLowBits = function () {return this.low;}, y.getLowBitsUnsigned = function () {return this.low >>> 0;}, y.getNumBitsAbs = function () {var a, b;if (this.isNegative()) return this.eq(x) ? 64 : this.neg().getNumBitsAbs();for (a = 0 != this.high ? this.high : this.low, b = 31; b > 0 && 0 == (a & 1 << b); b--) {;}return 0 != this.high ? b + 33 : b + 1;}, y.isZero = function () {return 0 === this.high && 0 === this.low;}, y.isNegative = function () {return !this.unsigned && this.high < 0;}, y.isPositive = function () {return this.unsigned || this.high >= 0;}, y.isOdd = function () {return 1 === (1 & this.low);}, y.isEven = function () {return 0 === (1 & this.low);}, y.equals = function (a) {return b(a) || (a = j(a)), this.unsigned !== a.unsigned && 1 === this.high >>> 31 && 1 === a.high >>> 31 ? !1 : this.high === a.high && this.low === a.low;}, y.eq = y.equals, y.notEquals = function (a) {return !this.eq(a);}, y.neq = y.notEquals, y.lessThan = function (a) {return this.comp(a) < 0;}, y.lt = y.lessThan, y.lessThanOrEqual = function (a) {return this.comp(a) <= 0;}, y.lte = y.lessThanOrEqual, y.greaterThan = function (a) {return this.comp(a) > 0;}, y.gt = y.greaterThan, y.greaterThanOrEqual = function (a) {return this.comp(a) >= 0;}, y.gte = y.greaterThanOrEqual, y.compare = function (a) {if (b(a) || (a = j(a)), this.eq(a)) return 0;var c = this.isNegative(),d = a.isNegative();return c && !d ? -1 : !c && d ? 1 : this.unsigned ? a.high >>> 0 > this.high >>> 0 || a.high === this.high && a.low >>> 0 > this.low >>> 0 ? -1 : 1 : this.sub(a).isNegative() ? -1 : 1;}, y.comp = y.compare, y.negate = function () {return !this.unsigned && this.eq(x) ? x : this.not().add(s);}, y.neg = y.negate, y.add = function (a) {var c, d, e, f, h, i, k, l, m, n, o, p;return b(a) || (a = j(a)), c = this.high >>> 16, d = 65535 & this.high, e = this.low >>> 16, f = 65535 & this.low, h = a.high >>> 16, i = 65535 & a.high, k = a.low >>> 16, l = 65535 & a.low, m = 0, n = 0, o = 0, p = 0, p += f + l, o += p >>> 16, p &= 65535, o += e + k, n += o >>> 16, o &= 65535, n += d + i, m += n >>> 16, n &= 65535, m += c + h, m &= 65535, g(o << 16 | p, m << 16 | n, this.unsigned);}, y.subtract = function (a) {return b(a) || (a = j(a)), this.add(a.neg());}, y.sub = y.subtract, y.multiply = function (a) {var c, d, e, h, i, k, l, m, n, o, r, s;return this.isZero() ? q : (b(a) || (a = j(a)), a.isZero() ? q : this.eq(x) ? a.isOdd() ? x : q : a.eq(x) ? this.isOdd() ? x : q : this.isNegative() ? a.isNegative() ? this.neg().mul(a.neg()) : this.neg().mul(a).neg() : a.isNegative() ? this.mul(a.neg()).neg() : this.lt(p) && a.lt(p) ? f(this.toNumber() * a.toNumber(), this.unsigned) : (c = this.high >>> 16, d = 65535 & this.high, e = this.low >>> 16, h = 65535 & this.low, i = a.high >>> 16, k = 65535 & a.high, l = a.low >>> 16, m = 65535 & a.low, n = 0, o = 0, r = 0, s = 0, s += h * m, r += s >>> 16, s &= 65535, r += e * m, o += r >>> 16, r &= 65535, r += h * l, o += r >>> 16, r &= 65535, o += d * m, n += o >>> 16, o &= 65535, o += e * l, n += o >>> 16, o &= 65535, o += h * k, n += o >>> 16, o &= 65535, n += c * m + d * l + e * k + h * i, n &= 65535, g(r << 16 | s, n << 16 | o, this.unsigned)));}, y.mul = y.multiply, y.divide = function (a) {var c, d, e, g, i, k, l, m;if (b(a) || (a = j(a)), a.isZero()) throw Error("division by zero");if (this.isZero()) return this.unsigned ? r : q;if (this.unsigned) {if (a.unsigned || (a = a.toUnsigned()), a.gt(this)) return r;if (a.gt(this.shru(1))) return t;e = r;} else {if (this.eq(x)) return a.eq(s) || a.eq(u) ? x : a.eq(x) ? s : (g = this.shr(1), c = g.div(a).shl(1), c.eq(q) ? a.isNegative() ? s : u : (d = this.sub(a.mul(c)), e = c.add(d.div(a))));if (a.eq(x)) return this.unsigned ? r : q;if (this.isNegative()) return a.isNegative() ? this.neg().div(a.neg()) : this.neg().div(a).neg();if (a.isNegative()) return this.div(a.neg()).neg();e = q;}for (d = this; d.gte(a);) {for (c = Math.max(1, Math.floor(d.toNumber() / a.toNumber())), i = Math.ceil(Math.log(c) / Math.LN2), k = 48 >= i ? 1 : h(2, i - 48), l = f(c), m = l.mul(a); m.isNegative() || m.gt(d);) {c -= k, l = f(c, this.unsigned), m = l.mul(a);}l.isZero() && (l = s), e = e.add(l), d = d.sub(m);}return e;}, y.div = y.divide, y.modulo = function (a) {return b(a) || (a = j(a)), this.sub(this.div(a).mul(a));}, y.mod = y.modulo, y.not = function () {return g(~this.low, ~this.high, this.unsigned);}, y.and = function (a) {return b(a) || (a = j(a)), g(this.low & a.low, this.high & a.high, this.unsigned);}, y.or = function (a) {return b(a) || (a = j(a)), g(this.low | a.low, this.high | a.high, this.unsigned);}, y.xor = function (a) {return b(a) || (a = j(a)), g(this.low ^ a.low, this.high ^ a.high, this.unsigned);}, y.shiftLeft = function (a) {return b(a) && (a = a.toInt()), 0 === (a &= 63) ? this : 32 > a ? g(this.low << a, this.high << a | this.low >>> 32 - a, this.unsigned) : g(0, this.low << a - 32, this.unsigned);}, y.shl = y.shiftLeft, y.shiftRight = function (a) {return b(a) && (a = a.toInt()), 0 === (a &= 63) ? this : 32 > a ? g(this.low >>> a | this.high << 32 - a, this.high >> a, this.unsigned) : g(this.high >> a - 32, this.high >= 0 ? 0 : -1, this.unsigned);}, y.shr = y.shiftRight, y.shiftRightUnsigned = function (a) {var c, d;return b(a) && (a = a.toInt()), a &= 63, 0 === a ? this : (c = this.high, 32 > a ? (d = this.low, g(d >>> a | c << 32 - a, c >>> a, this.unsigned)) : 32 === a ? g(c, 0, this.unsigned) : g(c >>> a - 32, 0, this.unsigned));}, y.shru = y.shiftRightUnsigned, y.toSigned = function () {return this.unsigned ? g(this.low, this.high, !1) : this;}, y.toUnsigned = function () {return this.unsigned ? this : g(this.low, this.high, !0);}, y.toBytes = function (a) {return a ? this.toBytesLE() : this.toBytesBE();}, y.toBytesLE = function () {var a = this.high,b = this.low;return [255 & b, 255 & b >>> 8, 255 & b >>> 16, 255 & b >>> 24, 255 & a, 255 & a >>> 8, 255 & a >>> 16, 255 & a >>> 24];}, y.toBytesBE = function () {var a = this.high,b = this.low;return [255 & a >>> 24, 255 & a >>> 16, 255 & a >>> 8, 255 & a, 255 & b >>> 24, 255 & b >>> 16, 255 & b >>> 8, 255 & b];}, a;}(),d = function (a) {function f(a) {var b = 0;return function () {return b < a.length ? a.charCodeAt(b++) : null;};}function g() {var a = [],b = [];return function () {return 0 === arguments.length ? b.join("") + e.apply(String, a) : (a.length + arguments.length > 1024 && (b.push(e.apply(String, a)), a.length = 0), Array.prototype.push.apply(a, arguments), void 0);};}function h(a, b, c, d, e) {var f,g,h = 8 * e - d - 1,i = (1 << h) - 1,j = i >> 1,k = -7,l = c ? e - 1 : 0,m = c ? -1 : 1,n = a[b + l];for (l += m, f = n & (1 << -k) - 1, n >>= -k, k += h; k > 0; f = 256 * f + a[b + l], l += m, k -= 8) {;}for (g = f & (1 << -k) - 1, f >>= -k, k += d; k > 0; g = 256 * g + a[b + l], l += m, k -= 8) {;}if (0 === f) f = 1 - j;else {if (f === i) return g ? 0 / 0 : 1 / 0 * (n ? -1 : 1);g += Math.pow(2, d), f -= j;}return (n ? -1 : 1) * g * Math.pow(2, f - d);}function i(a, b, c, d, e, f) {var g,h,i,j = 8 * f - e - 1,k = (1 << j) - 1,l = k >> 1,m = 23 === e ? Math.pow(2, -24) - Math.pow(2, -77) : 0,n = d ? 0 : f - 1,o = d ? 1 : -1,p = 0 > b || 0 === b && 0 > 1 / b ? 1 : 0;for (b = Math.abs(b), isNaN(b) || 1 / 0 === b ? (h = isNaN(b) ? 1 : 0, g = k) : (g = Math.floor(Math.log(b) / Math.LN2), b * (i = Math.pow(2, -g)) < 1 && (g--, i *= 2), b += g + l >= 1 ? m / i : m * Math.pow(2, 1 - l), b * i >= 2 && (g++, i /= 2), g + l >= k ? (h = 0, g = k) : g + l >= 1 ? (h = (b * i - 1) * Math.pow(2, e), g += l) : (h = b * Math.pow(2, l - 1) * Math.pow(2, e), g = 0)); e >= 8; a[c + n] = 255 & h, n += o, h /= 256, e -= 8) {;}for (g = g << e | h, j += e; j > 0; a[c + n] = 255 & g, n += o, g /= 256, j -= 8) {;}a[c + n - o] |= 128 * p;}var c,d,e,j,k,b = function b(a, c, e) {if ("undefined" == typeof a && (a = b.DEFAULT_CAPACITY), "undefined" == typeof c && (c = b.DEFAULT_ENDIAN), "undefined" == typeof e && (e = b.DEFAULT_NOASSERT), !e) {if (a = 0 | a, 0 > a) throw RangeError("Illegal capacity");c = !!c, e = !!e;}this.buffer = 0 === a ? d : new ArrayBuffer(a), this.view = 0 === a ? null : new Uint8Array(this.buffer), this.offset = 0, this.markedOffset = -1, this.limit = a, this.littleEndian = c, this.noAssert = e;};return b.VERSION = "5.0.1", b.LITTLE_ENDIAN = !0, b.BIG_ENDIAN = !1, b.DEFAULT_CAPACITY = 16, b.DEFAULT_ENDIAN = b.BIG_ENDIAN, b.DEFAULT_NOASSERT = !1, b.Long = a || null, c = b.prototype, c.__isByteBuffer__, Object.defineProperty(c, "__isByteBuffer__", { value: !0, enumerable: !1, configurable: !1 }), d = new ArrayBuffer(0), e = String.fromCharCode, b.accessor = function () {return Uint8Array;}, b.allocate = function (a, c, d) {return new b(a, c, d);}, b.concat = function (a, c, d, e) {var f, i, g, h, k, j;for (("boolean" == typeof c || "string" != typeof c) && (e = d, d = c, c = void 0), f = 0, g = 0, h = a.length; h > g; ++g) {b.isByteBuffer(a[g]) || (a[g] = b.wrap(a[g], c)), i = a[g].limit - a[g].offset, i > 0 && (f += i);}if (0 === f) return new b(0, d, e);for (j = new b(f, d, e), g = 0; h > g;) {k = a[g++], i = k.limit - k.offset, 0 >= i || (j.view.set(k.view.subarray(k.offset, k.limit), j.offset), j.offset += i);}return j.limit = j.offset, j.offset = 0, j;}, b.isByteBuffer = function (a) {return (a && a.__isByteBuffer__) === !0;}, b.type = function () {return ArrayBuffer;}, b.wrap = function (a, d, e, f) {var g, h;if ("string" != typeof d && (f = e, e = d, d = void 0), "string" == typeof a) switch ("undefined" == typeof d && (d = "utf8"), d) {case "base64":return b.fromBase64(a, e);case "hex":return b.fromHex(a, e);case "binary":return b.fromBinary(a, e);case "utf8":return b.fromUTF8(a, e);case "debug":return b.fromDebug(a, e);default:throw Error("Unsupported encoding: " + d);}if (null === a || "object" != typeof a) throw TypeError("Illegal buffer");if (b.isByteBuffer(a)) return g = c.clone.call(a), g.markedOffset = -1, g;if (a instanceof Uint8Array) g = new b(0, e, f), a.length > 0 && (g.buffer = a.buffer, g.offset = a.byteOffset, g.limit = a.byteOffset + a.byteLength, g.view = new Uint8Array(a.buffer));else if (a instanceof ArrayBuffer) g = new b(0, e, f), a.byteLength > 0 && (g.buffer = a, g.offset = 0, g.limit = a.byteLength, g.view = a.byteLength > 0 ? new Uint8Array(a) : null);else {if ("[object Array]" !== Object.prototype.toString.call(a)) throw TypeError("Illegal buffer");for (g = new b(a.length, e, f), g.limit = a.length, h = 0; h < a.length; ++h) {g.view[h] = a[h];}}return g;}, c.writeBitSet = function (a, b) {var h,d,e,f,g,i,c = "undefined" == typeof b;if (c && (b = this.offset), !this.noAssert) {if (!(a instanceof Array)) throw TypeError("Illegal BitSet: Not an array");if ("number" != typeof b || 0 !== b % 1) throw TypeError("Illegal offset: " + b + " (not an integer)");if (b >>>= 0, 0 > b || b + 0 > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + b + " (+" + 0 + ") <= " + this.buffer.byteLength);}for (d = b, e = a.length, f = e >> 3, g = 0, b += this.writeVarint32(e, b); f--;) {h = 1 & !!a[g++] | (1 & !!a[g++]) << 1 | (1 & !!a[g++]) << 2 | (1 & !!a[g++]) << 3 | (1 & !!a[g++]) << 4 | (1 & !!a[g++]) << 5 | (1 & !!a[g++]) << 6 | (1 & !!a[g++]) << 7, this.writeByte(h, b++);}if (e > g) {for (i = 0, h = 0; e > g;) {h |= (1 & !!a[g++]) << i++;}this.writeByte(h, b++);}return c ? (this.offset = b, this) : b - d;}, c.readBitSet = function (a) {var h,c,d,e,f,g,i,b = "undefined" == typeof a;for (b && (a = this.offset), c = this.readVarint32(a), d = c.value, e = d >> 3, f = 0, g = [], a += c.length; e--;) {h = this.readByte(a++), g[f++] = !!(1 & h), g[f++] = !!(2 & h), g[f++] = !!(4 & h), g[f++] = !!(8 & h), g[f++] = !!(16 & h), g[f++] = !!(32 & h), g[f++] = !!(64 & h), g[f++] = !!(128 & h);}if (d > f) for (i = 0, h = this.readByte(a++); d > f;) {g[f++] = !!(1 & h >> i++);}return b && (this.offset = a), g;}, c.readBytes = function (a, b) {var d,c = "undefined" == typeof b;if (c && (b = this.offset), !this.noAssert) {if ("number" != typeof b || 0 !== b % 1) throw TypeError("Illegal offset: " + b + " (not an integer)");if (b >>>= 0, 0 > b || b + a > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + b + " (+" + a + ") <= " + this.buffer.byteLength);}return d = this.slice(b, b + a), c && (this.offset += a), d;}, c.writeBytes = c.append, c.writeInt8 = function (a, b) {var d,c = "undefined" == typeof b;if (c && (b = this.offset), !this.noAssert) {if ("number" != typeof a || 0 !== a % 1) throw TypeError("Illegal value: " + a + " (not an integer)");if (a |= 0, "number" != typeof b || 0 !== b % 1) throw TypeError("Illegal offset: " + b + " (not an integer)");if (b >>>= 0, 0 > b || b + 0 > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + b + " (+" + 0 + ") <= " + this.buffer.byteLength);}return b += 1, d = this.buffer.byteLength, b > d && this.resize((d *= 2) > b ? d : b), b -= 1, this.view[b] = a, c && (this.offset += 1), this;}, c.writeByte = c.writeInt8, c.readInt8 = function (a) {var c,b = "undefined" == typeof a;if (b && (a = this.offset), !this.noAssert) {if ("number" != typeof a || 0 !== a % 1) throw TypeError("Illegal offset: " + a + " (not an integer)");if (a >>>= 0, 0 > a || a + 1 > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + a + " (+" + 1 + ") <= " + this.buffer.byteLength);}return c = this.view[a], 128 === (128 & c) && (c = -(255 - c + 1)), b && (this.offset += 1), c;}, c.readByte = c.readInt8, c.writeUint8 = function (a, b) {var d,c = "undefined" == typeof b;if (c && (b = this.offset), !this.noAssert) {if ("number" != typeof a || 0 !== a % 1) throw TypeError("Illegal value: " + a + " (not an integer)");if (a >>>= 0, "number" != typeof b || 0 !== b % 1) throw TypeError("Illegal offset: " + b + " (not an integer)");if (b >>>= 0, 0 > b || b + 0 > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + b + " (+" + 0 + ") <= " + this.buffer.byteLength);}return b += 1, d = this.buffer.byteLength, b > d && this.resize((d *= 2) > b ? d : b), b -= 1, this.view[b] = a, c && (this.offset += 1), this;}, c.writeUInt8 = c.writeUint8, c.readUint8 = function (a) {var c,b = "undefined" == typeof a;if (b && (a = this.offset), !this.noAssert) {if ("number" != typeof a || 0 !== a % 1) throw TypeError("Illegal offset: " + a + " (not an integer)");if (a >>>= 0, 0 > a || a + 1 > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + a + " (+" + 1 + ") <= " + this.buffer.byteLength);}return c = this.view[a], b && (this.offset += 1), c;}, c.readUInt8 = c.readUint8, c.writeInt16 = function (a, b) {var d,c = "undefined" == typeof b;if (c && (b = this.offset), !this.noAssert) {if ("number" != typeof a || 0 !== a % 1) throw TypeError("Illegal value: " + a + " (not an integer)");if (a |= 0, "number" != typeof b || 0 !== b % 1) throw TypeError("Illegal offset: " + b + " (not an integer)");if (b >>>= 0, 0 > b || b + 0 > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + b + " (+" + 0 + ") <= " + this.buffer.byteLength);}return b += 2, d = this.buffer.byteLength, b > d && this.resize((d *= 2) > b ? d : b), b -= 2, this.littleEndian ? (this.view[b + 1] = (65280 & a) >>> 8, this.view[b] = 255 & a) : (this.view[b] = (65280 & a) >>> 8, this.view[b + 1] = 255 & a), c && (this.offset += 2), this;}, c.writeShort = c.writeInt16, c.readInt16 = function (a) {var c,b = "undefined" == typeof a;if (b && (a = this.offset), !this.noAssert) {if ("number" != typeof a || 0 !== a % 1) throw TypeError("Illegal offset: " + a + " (not an integer)");if (a >>>= 0, 0 > a || a + 2 > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + a + " (+" + 2 + ") <= " + this.buffer.byteLength);}return c = 0, this.littleEndian ? (c = this.view[a], c |= this.view[a + 1] << 8) : (c = this.view[a] << 8, c |= this.view[a + 1]), 32768 === (32768 & c) && (c = -(65535 - c + 1)), b && (this.offset += 2), c;}, c.readShort = c.readInt16, c.writeUint16 = function (a, b) {var d,c = "undefined" == typeof b;if (c && (b = this.offset), !this.noAssert) {if ("number" != typeof a || 0 !== a % 1) throw TypeError("Illegal value: " + a + " (not an integer)");if (a >>>= 0, "number" != typeof b || 0 !== b % 1) throw TypeError("Illegal offset: " + b + " (not an integer)");if (b >>>= 0, 0 > b || b + 0 > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + b + " (+" + 0 + ") <= " + this.buffer.byteLength);}return b += 2, d = this.buffer.byteLength, b > d && this.resize((d *= 2) > b ? d : b), b -= 2, this.littleEndian ? (this.view[b + 1] = (65280 & a) >>> 8, this.view[b] = 255 & a) : (this.view[b] = (65280 & a) >>> 8, this.view[b + 1] = 255 & a), c && (this.offset += 2), this;}, c.writeUInt16 = c.writeUint16, c.readUint16 = function (a) {var c,b = "undefined" == typeof a;if (b && (a = this.offset), !this.noAssert) {if ("number" != typeof a || 0 !== a % 1) throw TypeError("Illegal offset: " + a + " (not an integer)");if (a >>>= 0, 0 > a || a + 2 > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + a + " (+" + 2 + ") <= " + this.buffer.byteLength);}return c = 0, this.littleEndian ? (c = this.view[a], c |= this.view[a + 1] << 8) : (c = this.view[a] << 8, c |= this.view[a + 1]), b && (this.offset += 2), c;}, c.readUInt16 = c.readUint16, c.writeInt32 = function (a, b) {var d,c = "undefined" == typeof b;if (c && (b = this.offset), !this.noAssert) {if ("number" != typeof a || 0 !== a % 1) throw TypeError("Illegal value: " + a + " (not an integer)");if (a |= 0, "number" != typeof b || 0 !== b % 1) throw TypeError("Illegal offset: " + b + " (not an integer)");if (b >>>= 0, 0 > b || b + 0 > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + b + " (+" + 0 + ") <= " + this.buffer.byteLength);}return b += 4, d = this.buffer.byteLength, b > d && this.resize((d *= 2) > b ? d : b), b -= 4, this.littleEndian ? (this.view[b + 3] = 255 & a >>> 24, this.view[b + 2] = 255 & a >>> 16, this.view[b + 1] = 255 & a >>> 8, this.view[b] = 255 & a) : (this.view[b] = 255 & a >>> 24, this.view[b + 1] = 255 & a >>> 16, this.view[b + 2] = 255 & a >>> 8, this.view[b + 3] = 255 & a), c && (this.offset += 4), this;}, c.writeInt = c.writeInt32, c.readInt32 = function (a) {var c,b = "undefined" == typeof a;if (b && (a = this.offset), !this.noAssert) {if ("number" != typeof a || 0 !== a % 1) throw TypeError("Illegal offset: " + a + " (not an integer)");if (a >>>= 0, 0 > a || a + 4 > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + a + " (+" + 4 + ") <= " + this.buffer.byteLength);}return c = 0, this.littleEndian ? (c = this.view[a + 2] << 16, c |= this.view[a + 1] << 8, c |= this.view[a], c += this.view[a + 3] << 24 >>> 0) : (c = this.view[a + 1] << 16, c |= this.view[a + 2] << 8, c |= this.view[a + 3], c += this.view[a] << 24 >>> 0), c |= 0, b && (this.offset += 4), c;}, c.readInt = c.readInt32, c.writeUint32 = function (a, b) {var d,c = "undefined" == typeof b;if (c && (b = this.offset), !this.noAssert) {if ("number" != typeof a || 0 !== a % 1) throw TypeError("Illegal value: " + a + " (not an integer)");if (a >>>= 0, "number" != typeof b || 0 !== b % 1) throw TypeError("Illegal offset: " + b + " (not an integer)");if (b >>>= 0, 0 > b || b + 0 > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + b + " (+" + 0 + ") <= " + this.buffer.byteLength);}return b += 4, d = this.buffer.byteLength, b > d && this.resize((d *= 2) > b ? d : b), b -= 4, this.littleEndian ? (this.view[b + 3] = 255 & a >>> 24, this.view[b + 2] = 255 & a >>> 16, this.view[b + 1] = 255 & a >>> 8, this.view[b] = 255 & a) : (this.view[b] = 255 & a >>> 24, this.view[b + 1] = 255 & a >>> 16, this.view[b + 2] = 255 & a >>> 8, this.view[b + 3] = 255 & a), c && (this.offset += 4), this;}, c.writeUInt32 = c.writeUint32, c.readUint32 = function (a) {var c,b = "undefined" == typeof a;if (b && (a = this.offset), !this.noAssert) {if ("number" != typeof a || 0 !== a % 1) throw TypeError("Illegal offset: " + a + " (not an integer)");if (a >>>= 0, 0 > a || a + 4 > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + a + " (+" + 4 + ") <= " + this.buffer.byteLength);}return c = 0, this.littleEndian ? (c = this.view[a + 2] << 16, c |= this.view[a + 1] << 8, c |= this.view[a], c += this.view[a + 3] << 24 >>> 0) : (c = this.view[a + 1] << 16, c |= this.view[a + 2] << 8, c |= this.view[a + 3], c += this.view[a] << 24 >>> 0), b && (this.offset += 4), c;}, c.readUInt32 = c.readUint32, a && (c.writeInt64 = function (b, c) {var e,f,g,d = "undefined" == typeof c;if (d && (c = this.offset), !this.noAssert) {if ("number" == typeof b) b = a.fromNumber(b);else if ("string" == typeof b) b = a.fromString(b);else if (!(b && b instanceof a)) throw TypeError("Illegal value: " + b + " (not an integer or Long)");if ("number" != typeof c || 0 !== c % 1) throw TypeError("Illegal offset: " + c + " (not an integer)");if (c >>>= 0, 0 > c || c + 0 > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + c + " (+" + 0 + ") <= " + this.buffer.byteLength);}return "number" == typeof b ? b = a.fromNumber(b) : "string" == typeof b && (b = a.fromString(b)), c += 8, e = this.buffer.byteLength, c > e && this.resize((e *= 2) > c ? e : c), c -= 8, f = b.low, g = b.high, this.littleEndian ? (this.view[c + 3] = 255 & f >>> 24, this.view[c + 2] = 255 & f >>> 16, this.view[c + 1] = 255 & f >>> 8, this.view[c] = 255 & f, c += 4, this.view[c + 3] = 255 & g >>> 24, this.view[c + 2] = 255 & g >>> 16, this.view[c + 1] = 255 & g >>> 8, this.view[c] = 255 & g) : (this.view[c] = 255 & g >>> 24, this.view[c + 1] = 255 & g >>> 16, this.view[c + 2] = 255 & g >>> 8, this.view[c + 3] = 255 & g, c += 4, this.view[c] = 255 & f >>> 24, this.view[c + 1] = 255 & f >>> 16, this.view[c + 2] = 255 & f >>> 8, this.view[c + 3] = 255 & f), d && (this.offset += 8), this;}, c.writeLong = c.writeInt64, c.readInt64 = function (b) {var d,e,f,c = "undefined" == typeof b;if (c && (b = this.offset), !this.noAssert) {if ("number" != typeof b || 0 !== b % 1) throw TypeError("Illegal offset: " + b + " (not an integer)");if (b >>>= 0, 0 > b || b + 8 > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + b + " (+" + 8 + ") <= " + this.buffer.byteLength);}return d = 0, e = 0, this.littleEndian ? (d = this.view[b + 2] << 16, d |= this.view[b + 1] << 8, d |= this.view[b], d += this.view[b + 3] << 24 >>> 0, b += 4, e = this.view[b + 2] << 16, e |= this.view[b + 1] << 8, e |= this.view[b], e += this.view[b + 3] << 24 >>> 0) : (e = this.view[b + 1] << 16, e |= this.view[b + 2] << 8, e |= this.view[b + 3], e += this.view[b] << 24 >>> 0, b += 4, d = this.view[b + 1] << 16, d |= this.view[b + 2] << 8, d |= this.view[b + 3], d += this.view[b] << 24 >>> 0), f = new a(d, e, !1), c && (this.offset += 8), f;}, c.readLong = c.readInt64, c.writeUint64 = function (b, c) {var e,f,g,d = "undefined" == typeof c;if (d && (c = this.offset), !this.noAssert) {if ("number" == typeof b) b = a.fromNumber(b);else if ("string" == typeof b) b = a.fromString(b);else if (!(b && b instanceof a)) throw TypeError("Illegal value: " + b + " (not an integer or Long)");if ("number" != typeof c || 0 !== c % 1) throw TypeError("Illegal offset: " + c + " (not an integer)");if (c >>>= 0, 0 > c || c + 0 > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + c + " (+" + 0 + ") <= " + this.buffer.byteLength);}return "number" == typeof b ? b = a.fromNumber(b) : "string" == typeof b && (b = a.fromString(b)), c += 8, e = this.buffer.byteLength, c > e && this.resize((e *= 2) > c ? e : c), c -= 8, f = b.low, g = b.high, this.littleEndian ? (this.view[c + 3] = 255 & f >>> 24, this.view[c + 2] = 255 & f >>> 16, this.view[c + 1] = 255 & f >>> 8, this.view[c] = 255 & f, c += 4, this.view[c + 3] = 255 & g >>> 24, this.view[c + 2] = 255 & g >>> 16, this.view[c + 1] = 255 & g >>> 8, this.view[c] = 255 & g) : (this.view[c] = 255 & g >>> 24, this.view[c + 1] = 255 & g >>> 16, this.view[c + 2] = 255 & g >>> 8, this.view[c + 3] = 255 & g, c += 4, this.view[c] = 255 & f >>> 24, this.view[c + 1] = 255 & f >>> 16, this.view[c + 2] = 255 & f >>> 8, this.view[c + 3] = 255 & f), d && (this.offset += 8), this;}, c.writeUInt64 = c.writeUint64, c.readUint64 = function (b) {var d,e,f,c = "undefined" == typeof b;if (c && (b = this.offset), !this.noAssert) {if ("number" != typeof b || 0 !== b % 1) throw TypeError("Illegal offset: " + b + " (not an integer)");if (b >>>= 0, 0 > b || b + 8 > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + b + " (+" + 8 + ") <= " + this.buffer.byteLength);}return d = 0, e = 0, this.littleEndian ? (d = this.view[b + 2] << 16, d |= this.view[b + 1] << 8, d |= this.view[b], d += this.view[b + 3] << 24 >>> 0, b += 4, e = this.view[b + 2] << 16, e |= this.view[b + 1] << 8, e |= this.view[b], e += this.view[b + 3] << 24 >>> 0) : (e = this.view[b + 1] << 16, e |= this.view[b + 2] << 8, e |= this.view[b + 3], e += this.view[b] << 24 >>> 0, b += 4, d = this.view[b + 1] << 16, d |= this.view[b + 2] << 8, d |= this.view[b + 3], d += this.view[b] << 24 >>> 0), f = new a(d, e, !0), c && (this.offset += 8), f;}, c.readUInt64 = c.readUint64), c.writeFloat32 = function (a, b) {var d,c = "undefined" == typeof b;if (c && (b = this.offset), !this.noAssert) {if ("number" != typeof a) throw TypeError("Illegal value: " + a + " (not a number)");if ("number" != typeof b || 0 !== b % 1) throw TypeError("Illegal offset: " + b + " (not an integer)");if (b >>>= 0, 0 > b || b + 0 > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + b + " (+" + 0 + ") <= " + this.buffer.byteLength);}return b += 4, d = this.buffer.byteLength, b > d && this.resize((d *= 2) > b ? d : b), b -= 4, i(this.view, a, b, this.littleEndian, 23, 4), c && (this.offset += 4), this;}, c.writeFloat = c.writeFloat32, c.readFloat32 = function (a) {var c,b = "undefined" == typeof a;if (b && (a = this.offset), !this.noAssert) {if ("number" != typeof a || 0 !== a % 1) throw TypeError("Illegal offset: " + a + " (not an integer)");if (a >>>= 0, 0 > a || a + 4 > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + a + " (+" + 4 + ") <= " + this.buffer.byteLength);}return c = h(this.view, a, this.littleEndian, 23, 4), b && (this.offset += 4), c;}, c.readFloat = c.readFloat32, c.writeFloat64 = function (a, b) {var d,c = "undefined" == typeof b;if (c && (b = this.offset), !this.noAssert) {if ("number" != typeof a) throw TypeError("Illegal value: " + a + " (not a number)");if ("number" != typeof b || 0 !== b % 1) throw TypeError("Illegal offset: " + b + " (not an integer)");if (b >>>= 0, 0 > b || b + 0 > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + b + " (+" + 0 + ") <= " + this.buffer.byteLength);}return b += 8, d = this.buffer.byteLength, b > d && this.resize((d *= 2) > b ? d : b), b -= 8, i(this.view, a, b, this.littleEndian, 52, 8), c && (this.offset += 8), this;}, c.writeDouble = c.writeFloat64, c.readFloat64 = function (a) {var c,b = "undefined" == typeof a;if (b && (a = this.offset), !this.noAssert) {if ("number" != typeof a || 0 !== a % 1) throw TypeError("Illegal offset: " + a + " (not an integer)");if (a >>>= 0, 0 > a || a + 8 > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + a + " (+" + 8 + ") <= " + this.buffer.byteLength);}return c = h(this.view, a, this.littleEndian, 52, 8), b && (this.offset += 8), c;}, c.readDouble = c.readFloat64, b.MAX_VARINT32_BYTES = 5, b.calculateVarint32 = function (a) {return a >>>= 0, 128 > a ? 1 : 16384 > a ? 2 : 1 << 21 > a ? 3 : 1 << 28 > a ? 4 : 5;}, b.zigZagEncode32 = function (a) {return ((a |= 0) << 1 ^ a >> 31) >>> 0;}, b.zigZagDecode32 = function (a) {return 0 | a >>> 1 ^ -(1 & a);}, c.writeVarint32 = function (a, c) {var f,e,g,d = "undefined" == typeof c;if (d && (c = this.offset), !this.noAssert) {if ("number" != typeof a || 0 !== a % 1) throw TypeError("Illegal value: " + a + " (not an integer)");if (a |= 0, "number" != typeof c || 0 !== c % 1) throw TypeError("Illegal offset: " + c + " (not an integer)");if (c >>>= 0, 0 > c || c + 0 > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + c + " (+" + 0 + ") <= " + this.buffer.byteLength);}for (e = b.calculateVarint32(a), c += e, g = this.buffer.byteLength, c > g && this.resize((g *= 2) > c ? g : c), c -= e, a >>>= 0; a >= 128;) {f = 128 | 127 & a, this.view[c++] = f, a >>>= 7;}return this.view[c++] = a, d ? (this.offset = c, this) : e;}, c.writeVarint32ZigZag = function (a, c) {return this.writeVarint32(b.zigZagEncode32(a), c);}, c.readVarint32 = function (a) {var e,c,d,f,b = "undefined" == typeof a;if (b && (a = this.offset), !this.noAssert) {if ("number" != typeof a || 0 !== a % 1) throw TypeError("Illegal offset: " + a + " (not an integer)");if (a >>>= 0, 0 > a || a + 1 > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + a + " (+" + 1 + ") <= " + this.buffer.byteLength);}c = 0, d = 0;do {if (!this.noAssert && a > this.limit) throw f = Error("Truncated"), f.truncated = !0, f;e = this.view[a++], 5 > c && (d |= (127 & e) << 7 * c), ++c;} while (0 !== (128 & e));return d |= 0, b ? (this.offset = a, d) : { value: d, length: c };}, c.readVarint32ZigZag = function (a) {var c = this.readVarint32(a);return "object" == typeof c ? c.value = b.zigZagDecode32(c.value) : c = b.zigZagDecode32(c), c;}, a && (b.MAX_VARINT64_BYTES = 10, b.calculateVarint64 = function (b) {"number" == typeof b ? b = a.fromNumber(b) : "string" == typeof b && (b = a.fromString(b));var c = b.toInt() >>> 0,d = b.shiftRightUnsigned(28).toInt() >>> 0,e = b.shiftRightUnsigned(56).toInt() >>> 0;return 0 == e ? 0 == d ? 16384 > c ? 128 > c ? 1 : 2 : 1 << 21 > c ? 3 : 4 : 16384 > d ? 128 > d ? 5 : 6 : 1 << 21 > d ? 7 : 8 : 128 > e ? 9 : 10;}, b.zigZagEncode64 = function (b) {return "number" == typeof b ? b = a.fromNumber(b, !1) : "string" == typeof b ? b = a.fromString(b, !1) : b.unsigned !== !1 && (b = b.toSigned()), b.shiftLeft(1).xor(b.shiftRight(63)).toUnsigned();}, b.zigZagDecode64 = function (b) {return "number" == typeof b ? b = a.fromNumber(b, !1) : "string" == typeof b ? b = a.fromString(b, !1) : b.unsigned !== !1 && (b = b.toSigned()), b.shiftRightUnsigned(1).xor(b.and(a.ONE).toSigned().negate()).toSigned();}, c.writeVarint64 = function (c, d) {var f,g,h,i,j,e = "undefined" == typeof d;if (e && (d = this.offset), !this.noAssert) {if ("number" == typeof c) c = a.fromNumber(c);else if ("string" == typeof c) c = a.fromString(c);else if (!(c && c instanceof a)) throw TypeError("Illegal value: " + c + " (not an integer or Long)");if ("number" != typeof d || 0 !== d % 1) throw TypeError("Illegal offset: " + d + " (not an integer)");if (d >>>= 0, 0 > d || d + 0 > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + d + " (+" + 0 + ") <= " + this.buffer.byteLength);}switch ("number" == typeof c ? c = a.fromNumber(c, !1) : "string" == typeof c ? c = a.fromString(c, !1) : c.unsigned !== !1 && (c = c.toSigned()), f = b.calculateVarint64(c), g = c.toInt() >>> 0, h = c.shiftRightUnsigned(28).toInt() >>> 0, i = c.shiftRightUnsigned(56).toInt() >>> 0, d += f, j = this.buffer.byteLength, d > j && this.resize((j *= 2) > d ? j : d), d -= f, f) {case 10:this.view[d + 9] = 1 & i >>> 7;case 9:this.view[d + 8] = 9 !== f ? 128 | i : 127 & i;case 8:this.view[d + 7] = 8 !== f ? 128 | h >>> 21 : 127 & h >>> 21;case 7:this.view[d + 6] = 7 !== f ? 128 | h >>> 14 : 127 & h >>> 14;case 6:this.view[d + 5] = 6 !== f ? 128 | h >>> 7 : 127 & h >>> 7;case 5:this.view[d + 4] = 5 !== f ? 128 | h : 127 & h;case 4:this.view[d + 3] = 4 !== f ? 128 | g >>> 21 : 127 & g >>> 21;case 3:this.view[d + 2] = 3 !== f ? 128 | g >>> 14 : 127 & g >>> 14;case 2:this.view[d + 1] = 2 !== f ? 128 | g >>> 7 : 127 & g >>> 7;case 1:this.view[d] = 1 !== f ? 128 | g : 127 & g;}return e ? (this.offset += f, this) : f;}, c.writeVarint64ZigZag = function (a, c) {return this.writeVarint64(b.zigZagEncode64(a), c);}, c.readVarint64 = function (b) {var d,e,f,g,h,i,c = "undefined" == typeof b;if (c && (b = this.offset), !this.noAssert) {if ("number" != typeof b || 0 !== b % 1) throw TypeError("Illegal offset: " + b + " (not an integer)");if (b >>>= 0, 0 > b || b + 1 > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + b + " (+" + 1 + ") <= " + this.buffer.byteLength);}if (d = b, e = 0, f = 0, g = 0, h = 0, h = this.view[b++], e = 127 & h, 128 & h && (h = this.view[b++], e |= (127 & h) << 7, (128 & h || this.noAssert && "undefined" == typeof h) && (h = this.view[b++], e |= (127 & h) << 14, (128 & h || this.noAssert && "undefined" == typeof h) && (h = this.view[b++], e |= (127 & h) << 21, (128 & h || this.noAssert && "undefined" == typeof h) && (h = this.view[b++], f = 127 & h, (128 & h || this.noAssert && "undefined" == typeof h) && (h = this.view[b++], f |= (127 & h) << 7, (128 & h || this.noAssert && "undefined" == typeof h) && (h = this.view[b++], f |= (127 & h) << 14, (128 & h || this.noAssert && "undefined" == typeof h) && (h = this.view[b++], f |= (127 & h) << 21, (128 & h || this.noAssert && "undefined" == typeof h) && (h = this.view[b++], g = 127 & h, (128 & h || this.noAssert && "undefined" == typeof h) && (h = this.view[b++], g |= (127 & h) << 7, 128 & h || this.noAssert && "undefined" == typeof h)))))))))) throw Error("Buffer overrun");return i = a.fromBits(e | f << 28, f >>> 4 | g << 24, !1), c ? (this.offset = b, i) : { value: i, length: b - d };}, c.readVarint64ZigZag = function (c) {var d = this.readVarint64(c);return d && d.value instanceof a ? d.value = b.zigZagDecode64(d.value) : d = b.zigZagDecode64(d), d;}), c.writeCString = function (a, b) {var d,e,g,c = "undefined" == typeof b;if (c && (b = this.offset), e = a.length, !this.noAssert) {if ("string" != typeof a) throw TypeError("Illegal str: Not a string");for (d = 0; e > d; ++d) {if (0 === a.charCodeAt(d)) throw RangeError("Illegal str: Contains NULL-characters");}if ("number" != typeof b || 0 !== b % 1) throw TypeError("Illegal offset: " + b + " (not an integer)");if (b >>>= 0, 0 > b || b + 0 > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + b + " (+" + 0 + ") <= " + this.buffer.byteLength);}return e = k.calculateUTF16asUTF8(f(a))[1], b += e + 1, g = this.buffer.byteLength, b > g && this.resize((g *= 2) > b ? g : b), b -= e + 1, k.encodeUTF16toUTF8(f(a), function (a) {this.view[b++] = a;}.bind(this)), this.view[b++] = 0, c ? (this.offset = b, this) : e;}, c.readCString = function (a) {var c,e,f,b = "undefined" == typeof a;if (b && (a = this.offset), !this.noAssert) {if ("number" != typeof a || 0 !== a % 1) throw TypeError("Illegal offset: " + a + " (not an integer)");if (a >>>= 0, 0 > a || a + 1 > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + a + " (+" + 1 + ") <= " + this.buffer.byteLength);}return c = a, f = -1, k.decodeUTF8toUTF16(function () {if (0 === f) return null;if (a >= this.limit) throw RangeError("Illegal range: Truncated data, " + a + " < " + this.limit);return f = this.view[a++], 0 === f ? null : f;}.bind(this), e = g(), !0), b ? (this.offset = a, e()) : { string: e(), length: a - c };}, c.writeIString = function (a, b) {var e,d,g,c = "undefined" == typeof b;if (c && (b = this.offset), !this.noAssert) {if ("string" != typeof a) throw TypeError("Illegal str: Not a string");if ("number" != typeof b || 0 !== b % 1) throw TypeError("Illegal offset: " + b + " (not an integer)");if (b >>>= 0, 0 > b || b + 0 > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + b + " (+" + 0 + ") <= " + this.buffer.byteLength);}if (d = b, e = k.calculateUTF16asUTF8(f(a), this.noAssert)[1], b += 4 + e, g = this.buffer.byteLength, b > g && this.resize((g *= 2) > b ? g : b), b -= 4 + e, this.littleEndian ? (this.view[b + 3] = 255 & e >>> 24, this.view[b + 2] = 255 & e >>> 16, this.view[b + 1] = 255 & e >>> 8, this.view[b] = 255 & e) : (this.view[b] = 255 & e >>> 24, this.view[b + 1] = 255 & e >>> 16, this.view[b + 2] = 255 & e >>> 8, this.view[b + 3] = 255 & e), b += 4, k.encodeUTF16toUTF8(f(a), function (a) {this.view[b++] = a;}.bind(this)), b !== d + 4 + e) throw RangeError("Illegal range: Truncated data, " + b + " == " + (b + 4 + e));return c ? (this.offset = b, this) : b - d;}, c.readIString = function (a) {var d,e,f,c = "undefined" == typeof a;
        if (c && (a = this.offset), !this.noAssert) {if ("number" != typeof a || 0 !== a % 1) throw TypeError("Illegal offset: " + a + " (not an integer)");if (a >>>= 0, 0 > a || a + 4 > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + a + " (+" + 4 + ") <= " + this.buffer.byteLength);}return d = a, e = this.readUint32(a), f = this.readUTF8String(e, b.METRICS_BYTES, a += 4), a += f.length, c ? (this.offset = a, f.string) : { string: f.string, length: a - d };}, b.METRICS_CHARS = "c", b.METRICS_BYTES = "b", c.writeUTF8String = function (a, b) {var d,e,g,c = "undefined" == typeof b;if (c && (b = this.offset), !this.noAssert) {if ("number" != typeof b || 0 !== b % 1) throw TypeError("Illegal offset: " + b + " (not an integer)");if (b >>>= 0, 0 > b || b + 0 > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + b + " (+" + 0 + ") <= " + this.buffer.byteLength);}return e = b, d = k.calculateUTF16asUTF8(f(a))[1], b += d, g = this.buffer.byteLength, b > g && this.resize((g *= 2) > b ? g : b), b -= d, k.encodeUTF16toUTF8(f(a), function (a) {this.view[b++] = a;}.bind(this)), c ? (this.offset = b, this) : b - e;}, c.writeString = c.writeUTF8String, b.calculateUTF8Chars = function (a) {return k.calculateUTF16asUTF8(f(a))[0];}, b.calculateUTF8Bytes = function (a) {return k.calculateUTF16asUTF8(f(a))[1];}, b.calculateString = b.calculateUTF8Bytes, c.readUTF8String = function (a, c, d) {var e, i, f, h, j;if ("number" == typeof c && (d = c, c = void 0), e = "undefined" == typeof d, e && (d = this.offset), "undefined" == typeof c && (c = b.METRICS_CHARS), !this.noAssert) {if ("number" != typeof a || 0 !== a % 1) throw TypeError("Illegal length: " + a + " (not an integer)");if (a |= 0, "number" != typeof d || 0 !== d % 1) throw TypeError("Illegal offset: " + d + " (not an integer)");if (d >>>= 0, 0 > d || d + 0 > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + d + " (+" + 0 + ") <= " + this.buffer.byteLength);}if (f = 0, h = d, c === b.METRICS_CHARS) {if (i = g(), k.decodeUTF8(function () {return a > f && d < this.limit ? this.view[d++] : null;}.bind(this), function (a) {++f, k.UTF8toUTF16(a, i);}), f !== a) throw RangeError("Illegal range: Truncated data, " + f + " == " + a);return e ? (this.offset = d, i()) : { string: i(), length: d - h };}if (c === b.METRICS_BYTES) {if (!this.noAssert) {if ("number" != typeof d || 0 !== d % 1) throw TypeError("Illegal offset: " + d + " (not an integer)");if (d >>>= 0, 0 > d || d + a > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + d + " (+" + a + ") <= " + this.buffer.byteLength);}if (j = d + a, k.decodeUTF8toUTF16(function () {return j > d ? this.view[d++] : null;}.bind(this), i = g(), this.noAssert), d !== j) throw RangeError("Illegal range: Truncated data, " + d + " == " + j);return e ? (this.offset = d, i()) : { string: i(), length: d - h };}throw TypeError("Unsupported metrics: " + c);}, c.readString = c.readUTF8String, c.writeVString = function (a, c) {var g,h,e,i,d = "undefined" == typeof c;if (d && (c = this.offset), !this.noAssert) {if ("string" != typeof a) throw TypeError("Illegal str: Not a string");if ("number" != typeof c || 0 !== c % 1) throw TypeError("Illegal offset: " + c + " (not an integer)");if (c >>>= 0, 0 > c || c + 0 > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + c + " (+" + 0 + ") <= " + this.buffer.byteLength);}if (e = c, g = k.calculateUTF16asUTF8(f(a), this.noAssert)[1], h = b.calculateVarint32(g), c += h + g, i = this.buffer.byteLength, c > i && this.resize((i *= 2) > c ? i : c), c -= h + g, c += this.writeVarint32(g, c), k.encodeUTF16toUTF8(f(a), function (a) {this.view[c++] = a;}.bind(this)), c !== e + g + h) throw RangeError("Illegal range: Truncated data, " + c + " == " + (c + g + h));return d ? (this.offset = c, this) : c - e;}, c.readVString = function (a) {var d,e,f,c = "undefined" == typeof a;if (c && (a = this.offset), !this.noAssert) {if ("number" != typeof a || 0 !== a % 1) throw TypeError("Illegal offset: " + a + " (not an integer)");if (a >>>= 0, 0 > a || a + 1 > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + a + " (+" + 1 + ") <= " + this.buffer.byteLength);}return d = a, e = this.readVarint32(a), f = this.readUTF8String(e.value, b.METRICS_BYTES, a += e.length), a += f.length, c ? (this.offset = a, f.string) : { string: f.string, length: a - d };}, c.append = function (a, c, d) {var e, f, g;if (("number" == typeof c || "string" != typeof c) && (d = c, c = void 0), e = "undefined" == typeof d, e && (d = this.offset), !this.noAssert) {if ("number" != typeof d || 0 !== d % 1) throw TypeError("Illegal offset: " + d + " (not an integer)");if (d >>>= 0, 0 > d || d + 0 > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + d + " (+" + 0 + ") <= " + this.buffer.byteLength);}return a instanceof b || (a = b.wrap(a, c)), f = a.limit - a.offset, 0 >= f ? this : (d += f, g = this.buffer.byteLength, d > g && this.resize((g *= 2) > d ? g : d), d -= f, this.view.set(a.view.subarray(a.offset, a.limit), d), a.offset += f, e && (this.offset += f), this);}, c.appendTo = function (a, b) {return a.append(this, b), this;}, c.assert = function (a) {return this.noAssert = !a, this;}, c.capacity = function () {return this.buffer.byteLength;}, c.clear = function () {return this.offset = 0, this.limit = this.buffer.byteLength, this.markedOffset = -1, this;}, c.clone = function (a) {var c = new b(0, this.littleEndian, this.noAssert);return a ? (c.buffer = new ArrayBuffer(this.buffer.byteLength), c.view = new Uint8Array(c.buffer)) : (c.buffer = this.buffer, c.view = this.view), c.offset = this.offset, c.markedOffset = this.markedOffset, c.limit = this.limit, c;}, c.compact = function (a, b) {var c, e, f;if ("undefined" == typeof a && (a = this.offset), "undefined" == typeof b && (b = this.limit), !this.noAssert) {if ("number" != typeof a || 0 !== a % 1) throw TypeError("Illegal begin: Not an integer");if (a >>>= 0, "number" != typeof b || 0 !== b % 1) throw TypeError("Illegal end: Not an integer");if (b >>>= 0, 0 > a || a > b || b > this.buffer.byteLength) throw RangeError("Illegal range: 0 <= " + a + " <= " + b + " <= " + this.buffer.byteLength);}return 0 === a && b === this.buffer.byteLength ? this : (c = b - a, 0 === c ? (this.buffer = d, this.view = null, this.markedOffset >= 0 && (this.markedOffset -= a), this.offset = 0, this.limit = 0, this) : (e = new ArrayBuffer(c), f = new Uint8Array(e), f.set(this.view.subarray(a, b)), this.buffer = e, this.view = f, this.markedOffset >= 0 && (this.markedOffset -= a), this.offset = 0, this.limit = c, this));}, c.copy = function (a, c) {if ("undefined" == typeof a && (a = this.offset), "undefined" == typeof c && (c = this.limit), !this.noAssert) {if ("number" != typeof a || 0 !== a % 1) throw TypeError("Illegal begin: Not an integer");if (a >>>= 0, "number" != typeof c || 0 !== c % 1) throw TypeError("Illegal end: Not an integer");if (c >>>= 0, 0 > a || a > c || c > this.buffer.byteLength) throw RangeError("Illegal range: 0 <= " + a + " <= " + c + " <= " + this.buffer.byteLength);}if (a === c) return new b(0, this.littleEndian, this.noAssert);var d = c - a,e = new b(d, this.littleEndian, this.noAssert);return e.offset = 0, e.limit = d, e.markedOffset >= 0 && (e.markedOffset -= a), this.copyTo(e, 0, a, c), e;}, c.copyTo = function (a, c, d, e) {var f, g, h;if (!this.noAssert && !b.isByteBuffer(a)) throw TypeError("Illegal target: Not a ByteBuffer");if (c = (g = "undefined" == typeof c) ? a.offset : 0 | c, d = (f = "undefined" == typeof d) ? this.offset : 0 | d, e = "undefined" == typeof e ? this.limit : 0 | e, 0 > c || c > a.buffer.byteLength) throw RangeError("Illegal target range: 0 <= " + c + " <= " + a.buffer.byteLength);if (0 > d || e > this.buffer.byteLength) throw RangeError("Illegal source range: 0 <= " + d + " <= " + this.buffer.byteLength);return h = e - d, 0 === h ? a : (a.ensureCapacity(c + h), a.view.set(this.view.subarray(d, e), c), f && (this.offset += h), g && (a.offset += h), this);}, c.ensureCapacity = function (a) {var b = this.buffer.byteLength;return a > b ? this.resize((b *= 2) > a ? b : a) : this;}, c.fill = function (a, b, c) {var d = "undefined" == typeof b;if (d && (b = this.offset), "string" == typeof a && a.length > 0 && (a = a.charCodeAt(0)), "undefined" == typeof b && (b = this.offset), "undefined" == typeof c && (c = this.limit), !this.noAssert) {if ("number" != typeof a || 0 !== a % 1) throw TypeError("Illegal value: " + a + " (not an integer)");if (a |= 0, "number" != typeof b || 0 !== b % 1) throw TypeError("Illegal begin: Not an integer");if (b >>>= 0, "number" != typeof c || 0 !== c % 1) throw TypeError("Illegal end: Not an integer");if (c >>>= 0, 0 > b || b > c || c > this.buffer.byteLength) throw RangeError("Illegal range: 0 <= " + b + " <= " + c + " <= " + this.buffer.byteLength);}if (b >= c) return this;for (; c > b;) {this.view[b++] = a;}return d && (this.offset = b), this;}, c.flip = function () {return this.limit = this.offset, this.offset = 0, this;}, c.mark = function (a) {if (a = "undefined" == typeof a ? this.offset : a, !this.noAssert) {if ("number" != typeof a || 0 !== a % 1) throw TypeError("Illegal offset: " + a + " (not an integer)");if (a >>>= 0, 0 > a || a + 0 > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + a + " (+" + 0 + ") <= " + this.buffer.byteLength);}return this.markedOffset = a, this;}, c.order = function (a) {if (!this.noAssert && "boolean" != typeof a) throw TypeError("Illegal littleEndian: Not a boolean");return this.littleEndian = !!a, this;}, c.LE = function (a) {return this.littleEndian = "undefined" != typeof a ? !!a : !0, this;}, c.BE = function (a) {return this.littleEndian = "undefined" != typeof a ? !a : !1, this;}, c.prepend = function (a, c, d) {var e, f, g, h, i;if (("number" == typeof c || "string" != typeof c) && (d = c, c = void 0), e = "undefined" == typeof d, e && (d = this.offset), !this.noAssert) {if ("number" != typeof d || 0 !== d % 1) throw TypeError("Illegal offset: " + d + " (not an integer)");if (d >>>= 0, 0 > d || d + 0 > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + d + " (+" + 0 + ") <= " + this.buffer.byteLength);}return a instanceof b || (a = b.wrap(a, c)), f = a.limit - a.offset, 0 >= f ? this : (g = f - d, g > 0 ? (h = new ArrayBuffer(this.buffer.byteLength + g), i = new Uint8Array(h), i.set(this.view.subarray(d, this.buffer.byteLength), f), this.buffer = h, this.view = i, this.offset += g, this.markedOffset >= 0 && (this.markedOffset += g), this.limit += g, d += g) : new Uint8Array(this.buffer), this.view.set(a.view.subarray(a.offset, a.limit), d - f), a.offset = a.limit, e && (this.offset -= f), this);}, c.prependTo = function (a, b) {return a.prepend(this, b), this;}, c.printDebug = function (a) {"function" != typeof a && (a = console.log.bind(console)), a(this.toString() + "\n-------------------------------------------------------------------\n" + this.toDebug(!0));}, c.remaining = function () {return this.limit - this.offset;}, c.reset = function () {return this.markedOffset >= 0 ? (this.offset = this.markedOffset, this.markedOffset = -1) : this.offset = 0, this;}, c.resize = function (a) {var b, c;if (!this.noAssert) {if ("number" != typeof a || 0 !== a % 1) throw TypeError("Illegal capacity: " + a + " (not an integer)");if (a |= 0, 0 > a) throw RangeError("Illegal capacity: 0 <= " + a);}return this.buffer.byteLength < a && (b = new ArrayBuffer(a), c = new Uint8Array(b), c.set(this.view), this.buffer = b, this.view = c), this;}, c.reverse = function (a, b) {if ("undefined" == typeof a && (a = this.offset), "undefined" == typeof b && (b = this.limit), !this.noAssert) {if ("number" != typeof a || 0 !== a % 1) throw TypeError("Illegal begin: Not an integer");if (a >>>= 0, "number" != typeof b || 0 !== b % 1) throw TypeError("Illegal end: Not an integer");if (b >>>= 0, 0 > a || a > b || b > this.buffer.byteLength) throw RangeError("Illegal range: 0 <= " + a + " <= " + b + " <= " + this.buffer.byteLength);}return a === b ? this : (Array.prototype.reverse.call(this.view.subarray(a, b)), this);}, c.skip = function (a) {if (!this.noAssert) {if ("number" != typeof a || 0 !== a % 1) throw TypeError("Illegal length: " + a + " (not an integer)");a |= 0;}var b = this.offset + a;if (!this.noAssert && (0 > b || b > this.buffer.byteLength)) throw RangeError("Illegal length: 0 <= " + this.offset + " + " + a + " <= " + this.buffer.byteLength);return this.offset = b, this;}, c.slice = function (a, b) {if ("undefined" == typeof a && (a = this.offset), "undefined" == typeof b && (b = this.limit), !this.noAssert) {if ("number" != typeof a || 0 !== a % 1) throw TypeError("Illegal begin: Not an integer");if (a >>>= 0, "number" != typeof b || 0 !== b % 1) throw TypeError("Illegal end: Not an integer");if (b >>>= 0, 0 > a || a > b || b > this.buffer.byteLength) throw RangeError("Illegal range: 0 <= " + a + " <= " + b + " <= " + this.buffer.byteLength);}var c = this.clone();return c.offset = a, c.limit = b, c;}, c.toBuffer = function (a) {var e,b = this.offset,c = this.limit;if (!this.noAssert) {if ("number" != typeof b || 0 !== b % 1) throw TypeError("Illegal offset: Not an integer");if (b >>>= 0, "number" != typeof c || 0 !== c % 1) throw TypeError("Illegal limit: Not an integer");if (c >>>= 0, 0 > b || b > c || c > this.buffer.byteLength) throw RangeError("Illegal range: 0 <= " + b + " <= " + c + " <= " + this.buffer.byteLength);}return a || 0 !== b || c !== this.buffer.byteLength ? b === c ? d : (e = new ArrayBuffer(c - b), new Uint8Array(e).set(new Uint8Array(this.buffer).subarray(b, c), 0), e) : this.buffer;}, c.toArrayBuffer = c.toBuffer, c.toString = function (a, b, c) {if ("undefined" == typeof a) return "ByteBufferAB(offset=" + this.offset + ",markedOffset=" + this.markedOffset + ",limit=" + this.limit + ",capacity=" + this.capacity() + ")";switch ("number" == typeof a && (a = "utf8", b = a, c = b), a) {case "utf8":return this.toUTF8(b, c);case "base64":return this.toBase64(b, c);case "hex":return this.toHex(b, c);case "binary":return this.toBinary(b, c);case "debug":return this.toDebug();case "columns":return this.toColumns();default:throw Error("Unsupported encoding: " + a);}}, j = function () {var d,e,a = {},b = [65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 43, 47],c = [];for (d = 0, e = b.length; e > d; ++d) {c[b[d]] = d;}return a.encode = function (a, c) {for (var d, e; null !== (d = a());) {c(b[63 & d >> 2]), e = (3 & d) << 4, null !== (d = a()) ? (e |= 15 & d >> 4, c(b[63 & (e | 15 & d >> 4)]), e = (15 & d) << 2, null !== (d = a()) ? (c(b[63 & (e | 3 & d >> 6)]), c(b[63 & d])) : (c(b[63 & e]), c(61))) : (c(b[63 & e]), c(61), c(61));}}, a.decode = function (a, b) {function g(a) {throw Error("Illegal character code: " + a);}for (var d, e, f; null !== (d = a());) {if (e = c[d], "undefined" == typeof e && g(d), null !== (d = a()) && (f = c[d], "undefined" == typeof f && g(d), b(e << 2 >>> 0 | (48 & f) >> 4), null !== (d = a()))) {if (e = c[d], "undefined" == typeof e) {if (61 === d) break;g(d);}if (b((15 & f) << 4 >>> 0 | (60 & e) >> 2), null !== (d = a())) {if (f = c[d], "undefined" == typeof f) {if (61 === d) break;g(d);}b((3 & e) << 6 >>> 0 | f);}}}}, a.test = function (a) {return /^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$/.test(a);}, a;}(), c.toBase64 = function (a, b) {if ("undefined" == typeof a && (a = this.offset), "undefined" == typeof b && (b = this.limit), a = 0 | a, b = 0 | b, 0 > a || b > this.capacity || a > b) throw RangeError("begin, end");var c;return j.encode(function () {return b > a ? this.view[a++] : null;}.bind(this), c = g()), c();}, b.fromBase64 = function (a, c) {if ("string" != typeof a) throw TypeError("str");var d = new b(3 * (a.length / 4), c),e = 0;return j.decode(f(a), function (a) {d.view[e++] = a;}), d.limit = e, d;}, b.btoa = function (a) {return b.fromBinary(a).toBase64();}, b.atob = function (a) {return b.fromBase64(a).toBinary();}, c.toBinary = function (a, b) {if ("undefined" == typeof a && (a = this.offset), "undefined" == typeof b && (b = this.limit), a |= 0, b |= 0, 0 > a || b > this.capacity() || a > b) throw RangeError("begin, end");if (a === b) return "";for (var c = [], d = []; b > a;) {c.push(this.view[a++]), c.length >= 1024 && (d.push(String.fromCharCode.apply(String, c)), c = []);}return d.join("") + String.fromCharCode.apply(String, c);}, b.fromBinary = function (a, c) {if ("string" != typeof a) throw TypeError("str");for (var f, d = 0, e = a.length, g = new b(e, c); e > d;) {if (f = a.charCodeAt(d), f > 255) throw RangeError("illegal char code: " + f);g.view[d++] = f;}return g.limit = e, g;}, c.toDebug = function (a) {for (var d, b = -1, c = this.buffer.byteLength, e = "", f = "", g = ""; c > b;) {if (-1 !== b && (d = this.view[b], e += 16 > d ? "0" + d.toString(16).toUpperCase() : d.toString(16).toUpperCase(), a && (f += d > 32 && 127 > d ? String.fromCharCode(d) : ".")), ++b, a && b > 0 && 0 === b % 16 && b !== c) {for (; e.length < 51;) {e += " ";}g += e + f + "\n", e = f = "";}e += b === this.offset && b === this.limit ? b === this.markedOffset ? "!" : "|" : b === this.offset ? b === this.markedOffset ? "[" : "<" : b === this.limit ? b === this.markedOffset ? "]" : ">" : b === this.markedOffset ? "'" : a || 0 !== b && b !== c ? " " : "";}if (a && " " !== e) {for (; e.length < 51;) {e += " ";}g += e + f + "\n";}return a ? g : e;}, b.fromDebug = function (a, c, d) {for (var i, j, e = a.length, f = new b(0 | (e + 1) / 3, c, d), g = 0, h = 0, k = !1, l = !1, m = !1, n = !1, o = !1; e > g;) {switch (i = a.charAt(g++)) {case "!":if (!d) {if (l || m || n) {o = !0;break;}l = m = n = !0;}f.offset = f.markedOffset = f.limit = h, k = !1;break;case "|":if (!d) {if (l || n) {o = !0;break;}l = n = !0;}f.offset = f.limit = h, k = !1;break;case "[":if (!d) {if (l || m) {o = !0;break;}l = m = !0;}f.offset = f.markedOffset = h, k = !1;break;case "<":if (!d) {if (l) {o = !0;break;}l = !0;}f.offset = h, k = !1;break;case "]":if (!d) {if (n || m) {o = !0;break;}n = m = !0;}f.limit = f.markedOffset = h, k = !1;break;case ">":if (!d) {if (n) {o = !0;break;}n = !0;}f.limit = h, k = !1;break;case "'":if (!d) {if (m) {o = !0;break;}m = !0;}f.markedOffset = h, k = !1;break;case " ":k = !1;break;default:if (!d && k) {o = !0;break;}if (j = parseInt(i + a.charAt(g++), 16), !d && (isNaN(j) || 0 > j || j > 255)) throw TypeError("Illegal str: Not a debug encoded string");f.view[h++] = j, k = !0;}if (o) throw TypeError("Illegal str: Invalid symbol at " + g);}if (!d) {if (!l || !n) throw TypeError("Illegal str: Missing offset or limit");if (h < f.buffer.byteLength) throw TypeError("Illegal str: Not a debug encoded string (is it hex?) " + h + " < " + e);}return f;}, c.toHex = function (a, b) {if (a = "undefined" == typeof a ? this.offset : a, b = "undefined" == typeof b ? this.limit : b, !this.noAssert) {if ("number" != typeof a || 0 !== a % 1) throw TypeError("Illegal begin: Not an integer");if (a >>>= 0, "number" != typeof b || 0 !== b % 1) throw TypeError("Illegal end: Not an integer");if (b >>>= 0, 0 > a || a > b || b > this.buffer.byteLength) throw RangeError("Illegal range: 0 <= " + a + " <= " + b + " <= " + this.buffer.byteLength);}for (var d, c = new Array(b - a); b > a;) {d = this.view[a++], 16 > d ? c.push("0", d.toString(16)) : c.push(d.toString(16));}return c.join("");}, b.fromHex = function (a, c, d) {var g, e, f, h, i;if (!d) {if ("string" != typeof a) throw TypeError("Illegal str: Not a string");if (0 !== a.length % 2) throw TypeError("Illegal str: Length not a multiple of 2");}for (e = a.length, f = new b(0 | e / 2, c), h = 0, i = 0; e > h; h += 2) {if (g = parseInt(a.substring(h, h + 2), 16), !d && (!isFinite(g) || 0 > g || g > 255)) throw TypeError("Illegal str: Contains non-hex characters");f.view[i++] = g;}return f.limit = i, f;}, k = function () {var a = {};return a.MAX_CODEPOINT = 1114111, a.encodeUTF8 = function (a, b) {var c = null;for ("number" == typeof a && (c = a, a = function a() {return null;}); null !== c || null !== (c = a());) {128 > c ? b(127 & c) : 2048 > c ? (b(192 | 31 & c >> 6), b(128 | 63 & c)) : 65536 > c ? (b(224 | 15 & c >> 12), b(128 | 63 & c >> 6), b(128 | 63 & c)) : (b(240 | 7 & c >> 18), b(128 | 63 & c >> 12), b(128 | 63 & c >> 6), b(128 | 63 & c)), c = null;}}, a.decodeUTF8 = function (a, b) {for (var c, d, e, f, g = function g(a) {a = a.slice(0, a.indexOf(null));var b = Error(a.toString());throw b.name = "TruncatedError", b.bytes = a, b;}; null !== (c = a());) {if (0 === (128 & c)) b(c);else if (192 === (224 & c)) null === (d = a()) && g([c, d]), b((31 & c) << 6 | 63 & d);else if (224 === (240 & c)) (null === (d = a()) || null === (e = a())) && g([c, d, e]), b((15 & c) << 12 | (63 & d) << 6 | 63 & e);else {if (240 !== (248 & c)) throw RangeError("Illegal starting byte: " + c);(null === (d = a()) || null === (e = a()) || null === (f = a())) && g([c, d, e, f]), b((7 & c) << 18 | (63 & d) << 12 | (63 & e) << 6 | 63 & f);}}}, a.UTF16toUTF8 = function (a, b) {for (var c, d = null;;) {if (null === (c = null !== d ? d : a())) break;c >= 55296 && 57343 >= c && null !== (d = a()) && d >= 56320 && 57343 >= d ? (b(1024 * (c - 55296) + d - 56320 + 65536), d = null) : b(c);}null !== d && b(d);}, a.UTF8toUTF16 = function (a, b) {var c = null;for ("number" == typeof a && (c = a, a = function a() {return null;}); null !== c || null !== (c = a());) {65535 >= c ? b(c) : (c -= 65536, b((c >> 10) + 55296), b(c % 1024 + 56320)), c = null;}}, a.encodeUTF16toUTF8 = function (b, c) {a.UTF16toUTF8(b, function (b) {a.encodeUTF8(b, c);});}, a.decodeUTF8toUTF16 = function (b, c) {a.decodeUTF8(b, function (b) {a.UTF8toUTF16(b, c);});}, a.calculateCodePoint = function (a) {return 128 > a ? 1 : 2048 > a ? 2 : 65536 > a ? 3 : 4;}, a.calculateUTF8 = function (a) {for (var b, c = 0; null !== (b = a());) {c += 128 > b ? 1 : 2048 > b ? 2 : 65536 > b ? 3 : 4;}return c;}, a.calculateUTF16asUTF8 = function (b) {var c = 0,d = 0;return a.UTF16toUTF8(b, function (a) {++c, d += 128 > a ? 1 : 2048 > a ? 2 : 65536 > a ? 3 : 4;}), [c, d];}, a;}(), c.toUTF8 = function (a, b) {if ("undefined" == typeof a && (a = this.offset), "undefined" == typeof b && (b = this.limit), !this.noAssert) {if ("number" != typeof a || 0 !== a % 1) throw TypeError("Illegal begin: Not an integer");if (a >>>= 0, "number" != typeof b || 0 !== b % 1) throw TypeError("Illegal end: Not an integer");if (b >>>= 0, 0 > a || a > b || b > this.buffer.byteLength) throw RangeError("Illegal range: 0 <= " + a + " <= " + b + " <= " + this.buffer.byteLength);}var c;try {k.decodeUTF8toUTF16(function () {return b > a ? this.view[a++] : null;}.bind(this), c = g());} catch (d) {if (a !== b) throw RangeError("Illegal range: Truncated data, " + a + " != " + b);}return c();}, b.fromUTF8 = function (a, c, d) {if (!d && "string" != typeof a) throw TypeError("Illegal str: Not a string");var e = new b(k.calculateUTF16asUTF8(f(a), !0)[1], c, d),g = 0;return k.encodeUTF16toUTF8(f(a), function (a) {e.view[g++] = a;}), e.limit = g, e;}, b;}(c),e = function (b, c) {var f,h,i,e = {};return e.ByteBuffer = b, e.c = b, f = b, e.Long = c || null, e.VERSION = "5.0.1", e.WIRE_TYPES = {}, e.WIRE_TYPES.VARINT = 0, e.WIRE_TYPES.BITS64 = 1, e.WIRE_TYPES.LDELIM = 2, e.WIRE_TYPES.STARTGROUP = 3, e.WIRE_TYPES.ENDGROUP = 4, e.WIRE_TYPES.BITS32 = 5, e.PACKABLE_WIRE_TYPES = [e.WIRE_TYPES.VARINT, e.WIRE_TYPES.BITS64, e.WIRE_TYPES.BITS32], e.TYPES = { int32: { name: "int32", wireType: e.WIRE_TYPES.VARINT, defaultValue: 0 }, uint32: { name: "uint32", wireType: e.WIRE_TYPES.VARINT, defaultValue: 0 }, sint32: { name: "sint32", wireType: e.WIRE_TYPES.VARINT, defaultValue: 0 }, int64: { name: "int64", wireType: e.WIRE_TYPES.VARINT, defaultValue: e.Long ? e.Long.ZERO : void 0 }, uint64: { name: "uint64", wireType: e.WIRE_TYPES.VARINT, defaultValue: e.Long ? e.Long.UZERO : void 0 }, sint64: { name: "sint64", wireType: e.WIRE_TYPES.VARINT, defaultValue: e.Long ? e.Long.ZERO : void 0 }, bool: { name: "bool", wireType: e.WIRE_TYPES.VARINT, defaultValue: !1 }, "double": { name: "double", wireType: e.WIRE_TYPES.BITS64, defaultValue: 0 }, string: { name: "string", wireType: e.WIRE_TYPES.LDELIM, defaultValue: "" }, bytes: { name: "bytes", wireType: e.WIRE_TYPES.LDELIM, defaultValue: null }, fixed32: { name: "fixed32", wireType: e.WIRE_TYPES.BITS32, defaultValue: 0 }, sfixed32: { name: "sfixed32", wireType: e.WIRE_TYPES.BITS32, defaultValue: 0 }, fixed64: { name: "fixed64", wireType: e.WIRE_TYPES.BITS64, defaultValue: e.Long ? e.Long.UZERO : void 0 }, sfixed64: { name: "sfixed64", wireType: e.WIRE_TYPES.BITS64, defaultValue: e.Long ? e.Long.ZERO : void 0 }, "float": { name: "float", wireType: e.WIRE_TYPES.BITS32, defaultValue: 0 }, "enum": { name: "enum", wireType: e.WIRE_TYPES.VARINT, defaultValue: 0 }, message: { name: "message", wireType: e.WIRE_TYPES.LDELIM, defaultValue: null }, group: { name: "group", wireType: e.WIRE_TYPES.STARTGROUP, defaultValue: null } }, e.MAP_KEY_TYPES = [e.TYPES.int32, e.TYPES.sint32, e.TYPES.sfixed32, e.TYPES.uint32, e.TYPES.fixed32, e.TYPES.int64, e.TYPES.sint64, e.TYPES.sfixed64, e.TYPES.uint64, e.TYPES.fixed64, e.TYPES.bool, e.TYPES.string, e.TYPES.bytes], e.ID_MIN = 1, e.ID_MAX = 536870911, e.convertFieldsToCamelCase = !1, e.populateAccessors = !0, e.populateDefaults = !0, e.Util = function () {var a = {};return a.IS_NODE = !("object" != typeof process || "[object process]" != process + "" || process.browser), a.XHR = function () {var c,a = [function () {return new XMLHttpRequest();}, function () {return new ActiveXObject("Msxml2.XMLHTTP");}, function () {return new ActiveXObject("Msxml3.XMLHTTP");}, function () {return new ActiveXObject("Microsoft.XMLHTTP");}],b = null;for (c = 0; c < a.length; c++) {try {b = a[c]();} catch (d) {continue;}break;}if (!b) throw Error("XMLHttpRequest is not supported");return b;}, a.fetch = function (b, c) {if (c && "function" != typeof c && (c = null), a.IS_NODE) {if (c) g.readFile(b, function (a, b) {a ? c(null) : c("" + b);});else try {return g.readFileSync(b);} catch (d) {return null;}} else {var e = a.XHR();if (e.open("GET", b, c ? !0 : !1), e.setRequestHeader("Accept", "text/plain"), "function" == typeof e.overrideMimeType && e.overrideMimeType("text/plain"), !c) return e.send(null), 200 == e.status || 0 == e.status && "string" == typeof e.responseText ? e.responseText : null;if (e.onreadystatechange = function () {4 == e.readyState && (200 == e.status || 0 == e.status && "string" == typeof e.responseText ? c(e.responseText) : c(null));}, 4 == e.readyState) return;e.send(null);}}, a.toCamelCase = function (a) {return a.replace(/_([a-zA-Z])/g, function (a, b) {return b.toUpperCase();});}, a;}(), e.Lang = { DELIM: /[\s\{\}=;:\[\],'"\(\)<>]/g, RULE: /^(?:required|optional|repeated|map)$/, TYPE: /^(?:double|float|int32|uint32|sint32|int64|uint64|sint64|fixed32|sfixed32|fixed64|sfixed64|bool|string|bytes)$/, NAME: /^[a-zA-Z_][a-zA-Z_0-9]*$/, TYPEDEF: /^[a-zA-Z][a-zA-Z_0-9]*$/, TYPEREF: /^(?:\.?[a-zA-Z_][a-zA-Z_0-9]*)+$/, FQTYPEREF: /^(?:\.[a-zA-Z][a-zA-Z_0-9]*)+$/, NUMBER: /^-?(?:[1-9][0-9]*|0|0[xX][0-9a-fA-F]+|0[0-7]+|([0-9]*(\.[0-9]*)?([Ee][+-]?[0-9]+)?)|inf|nan)$/, NUMBER_DEC: /^(?:[1-9][0-9]*|0)$/, NUMBER_HEX: /^0[xX][0-9a-fA-F]+$/, NUMBER_OCT: /^0[0-7]+$/, NUMBER_FLT: /^([0-9]*(\.[0-9]*)?([Ee][+-]?[0-9]+)?|inf|nan)$/, BOOL: /^(?:true|false)$/i, ID: /^(?:[1-9][0-9]*|0|0[xX][0-9a-fA-F]+|0[0-7]+)$/, NEGID: /^\-?(?:[1-9][0-9]*|0|0[xX][0-9a-fA-F]+|0[0-7]+)$/, WHITESPACE: /\s/, STRING: /(?:"([^"\\]*(?:\\.[^"\\]*)*)")|(?:'([^'\\]*(?:\\.[^'\\]*)*)')/g, STRING_DQ: /(?:"([^"\\]*(?:\\.[^"\\]*)*)")/g, STRING_SQ: /(?:'([^'\\]*(?:\\.[^'\\]*)*)')/g }, e.DotProto = function (a, b) {function h(a, c) {var d = -1,e = 1;if ("-" == a.charAt(0) && (e = -1, a = a.substring(1)), b.NUMBER_DEC.test(a)) d = parseInt(a);else if (b.NUMBER_HEX.test(a)) d = parseInt(a.substring(2), 16);else {if (!b.NUMBER_OCT.test(a)) throw Error("illegal id value: " + (0 > e ? "-" : "") + a);d = parseInt(a.substring(1), 8);}if (d = 0 | e * d, !c && 0 > d) throw Error("illegal id value: " + (0 > e ? "-" : "") + a);return d;}function i(a) {var c = 1;if ("-" == a.charAt(0) && (c = -1, a = a.substring(1)), b.NUMBER_DEC.test(a)) return c * parseInt(a, 10);if (b.NUMBER_HEX.test(a)) return c * parseInt(a.substring(2), 16);if (b.NUMBER_OCT.test(a)) return c * parseInt(a.substring(1), 8);if ("inf" === a) return 1 / 0 * c;if ("nan" === a) return 0 / 0;if (b.NUMBER_FLT.test(a)) return c * parseFloat(a);throw Error("illegal number value: " + (0 > c ? "-" : "") + a);}function j(a, b, c) {"undefined" == typeof a[b] ? a[b] = c : (Array.isArray(a[b]) || (a[b] = [a[b]]), a[b].push(c));}var f,g,c = {},d = function d(a) {this.source = a + "", this.index = 0, this.line = 1, this.stack = [], this._stringOpen = null;},e = d.prototype;return e._readString = function () {var c,a = '"' === this._stringOpen ? b.STRING_DQ : b.STRING_SQ;if (a.lastIndex = this.index - 1, c = a.exec(this.source), !c) throw Error("unterminated string");return this.index = a.lastIndex, this.stack.push(this._stringOpen), this._stringOpen = null, c[1];}, e.next = function () {var a, c, d, e, f, g;if (this.stack.length > 0) return this.stack.shift();if (this.index >= this.source.length) return null;if (null !== this._stringOpen) return this._readString();do {for (a = !1; b.WHITESPACE.test(d = this.source.charAt(this.index));) {if ("\n" === d && ++this.line, ++this.index === this.source.length) return null;}if ("/" === this.source.charAt(this.index)) if (++this.index, "/" === this.source.charAt(this.index)) {for (; "\n" !== this.source.charAt(++this.index);) {if (this.index == this.source.length) return null;}++this.index, ++this.line, a = !0;} else {if ("*" !== (d = this.source.charAt(this.index))) return "/";do {if ("\n" === d && ++this.line, ++this.index === this.source.length) return null;c = d, d = this.source.charAt(this.index);} while ("*" !== c || "/" !== d);++this.index, a = !0;}} while (a);if (this.index === this.source.length) return null;if (e = this.index, b.DELIM.lastIndex = 0, f = b.DELIM.test(this.source.charAt(e++)), !f) for (; e < this.source.length && !b.DELIM.test(this.source.charAt(e));) {++e;}return g = this.source.substring(this.index, this.index = e), ('"' === g || "'" === g) && (this._stringOpen = g), g;}, e.peek = function () {if (0 === this.stack.length) {var a = this.next();if (null === a) return null;this.stack.push(a);}return this.stack[0];}, e.skip = function (a) {var b = this.next();if (b !== a) throw Error("illegal '" + b + "', '" + a + "' expected");}, e.omit = function (a) {return this.peek() === a ? (this.next(), !0) : !1;}, e.toString = function () {return "Tokenizer (" + this.index + "/" + this.source.length + " at line " + this.line + ")";}, c.Tokenizer = d, f = function f(a) {this.tn = new d(a), this.proto3 = !1;}, g = f.prototype, g.parse = function () {var c,a = { name: "[ROOT]", "package": null, messages: [], enums: [], imports: [], options: {}, services: [] },d = !0;try {for (; c = this.tn.next();) {switch (c) {case "package":if (!d || null !== a["package"]) throw Error("unexpected 'package'");if (c = this.tn.next(), !b.TYPEREF.test(c)) throw Error("illegal package name: " + c);this.tn.skip(";"), a["package"] = c;break;case "import":if (!d) throw Error("unexpected 'import'");c = this.tn.peek(), "public" === c && this.tn.next(), c = this._readString(), this.tn.skip(";"), a.imports.push(c);break;case "syntax":if (!d) throw Error("unexpected 'syntax'");this.tn.skip("="), "proto3" === (a.syntax = this._readString()) && (this.proto3 = !0), this.tn.skip(";");break;case "message":this._parseMessage(a, null), d = !1;break;case "enum":this._parseEnum(a), d = !1;break;case "option":this._parseOption(a);break;case "service":this._parseService(a);break;case "extend":this._parseExtend(a);break;default:throw Error("unexpected '" + c + "'");}}} catch (e) {throw e.message = "Parse error at line " + this.tn.line + ": " + e.message, e;}return delete a.name, a;}, f.parse = function (a) {return new f(a).parse();}, g._readString = function () {var b,c,a = "";do {if (c = this.tn.next(), "'" !== c && '"' !== c) throw Error("illegal string delimiter: " + c);a += this.tn.next(), this.tn.skip(c), b = this.tn.peek();} while ('"' === b || '"' === b);return a;}, g._readValue = function (a) {var c = this.tn.peek();if ('"' === c || "'" === c) return this._readString();if (this.tn.next(), b.NUMBER.test(c)) return i(c);if (b.BOOL.test(c)) return "true" === c.toLowerCase();if (a && b.TYPEREF.test(c)) return c;throw Error("illegal value: " + c);}, g._parseOption = function (a, c) {var f,d = this.tn.next(),e = !1;if ("(" === d && (e = !0, d = this.tn.next()), !b.TYPEREF.test(d)) throw Error("illegal option name: " + d);f = d, e && (this.tn.skip(")"), f = "(" + f + ")", d = this.tn.peek(), b.FQTYPEREF.test(d) && (f += d, this.tn.next())), this.tn.skip("="), this._parseOptionValue(a, f), c || this.tn.skip(";");}, g._parseOptionValue = function (a, c) {var d = this.tn.peek();if ("{" !== d) j(a.options, c, this._readValue(!0));else for (this.tn.skip("{"); "}" !== (d = this.tn.next());) {if (!b.NAME.test(d)) throw Error("illegal option name: " + c + "." + d);this.tn.omit(":") ? j(a.options, c + "." + d, this._readValue(!0)) : this._parseOptionValue(a, c + "." + d);}}, g._parseService = function (a) {var d,e,c = this.tn.next();if (!b.NAME.test(c)) throw Error("illegal service name at line " + this.tn.line + ": " + c);for (d = c, e = { name: d, rpc: {}, options: {} }, this.tn.skip("{"); "}" !== (c = this.tn.next());) {if ("option" === c) this._parseOption(e);else {if ("rpc" !== c) throw Error("illegal service token: " + c);this._parseServiceRPC(e);}}this.tn.omit(";"), a.services.push(e);}, g._parseServiceRPC = function (a) {var e,f,c = "rpc",d = this.tn.next();if (!b.NAME.test(d)) throw Error("illegal rpc service method name: " + d);if (e = d, f = { request: null, response: null, request_stream: !1, response_stream: !1, options: {} }, this.tn.skip("("), d = this.tn.next(), "stream" === d.toLowerCase() && (f.request_stream = !0, d = this.tn.next()), !b.TYPEREF.test(d)) throw Error("illegal rpc service request type: " + d);if (f.request = d, this.tn.skip(")"), d = this.tn.next(), "returns" !== d.toLowerCase()) throw Error("illegal rpc service request type delimiter: " + d);if (this.tn.skip("("), d = this.tn.next(), "stream" === d.toLowerCase() && (f.response_stream = !0, d = this.tn.next()), f.response = d, this.tn.skip(")"), d = this.tn.peek(), "{" === d) {for (this.tn.next(); "}" !== (d = this.tn.next());) {if ("option" !== d) throw Error("illegal rpc service token: " + d);this._parseOption(f);}this.tn.omit(";");} else this.tn.skip(";");"undefined" == typeof a[c] && (a[c] = {}), a[c][e] = f;}, g._parseMessage = function (a, c) {var d = !!c,e = this.tn.next(),f = { name: "", fields: [], enums: [], messages: [], options: {}, services: [], oneofs: {} };if (!b.NAME.test(e)) throw Error("illegal " + (d ? "group" : "message") + " name: " + e);for (f.name = e, d && (this.tn.skip("="), c.id = h(this.tn.next()), f.isGroup = !0), e = this.tn.peek(), "[" === e && c && this._parseFieldOptions(c), this.tn.skip("{"); "}" !== (e = this.tn.next());) {if (b.RULE.test(e)) this._parseMessageField(f, e);else if ("oneof" === e) this._parseMessageOneOf(f);else if ("enum" === e) this._parseEnum(f);else if ("message" === e) this._parseMessage(f);else if ("option" === e) this._parseOption(f);else if ("service" === e) this._parseService(f);else if ("extensions" === e) f.extensions = this._parseExtensionRanges();else if ("reserved" === e) this._parseIgnored();else if ("extend" === e) this._parseExtend(f);else {if (!b.TYPEREF.test(e)) throw Error("illegal message token: " + e);if (!this.proto3) throw Error("illegal field rule: " + e);this._parseMessageField(f, "optional", e);}}return this.tn.omit(";"), a.messages.push(f), f;}, g._parseIgnored = function () {for (; ";" !== this.tn.peek();) {this.tn.next();}this.tn.skip(";");}, g._parseMessageField = function (a, c, d) {var e, f, g;if (!b.RULE.test(c)) throw Error("illegal message field rule: " + c);if (e = { rule: c, type: "", name: "", options: {}, id: 0 }, "map" === c) {if (d) throw Error("illegal type: " + d);if (this.tn.skip("<"), f = this.tn.next(), !b.TYPE.test(f) && !b.TYPEREF.test(f)) throw Error("illegal message field type: " + f);if (e.keytype = f, this.tn.skip(","), f = this.tn.next(), !b.TYPE.test(f) && !b.TYPEREF.test(f)) throw Error("illegal message field: " + f);if (e.type = f, this.tn.skip(">"), f = this.tn.next(), !b.NAME.test(f)) throw Error("illegal message field name: " + f);e.name = f, this.tn.skip("="), e.id = h(this.tn.next()), f = this.tn.peek(), "[" === f && this._parseFieldOptions(e), this.tn.skip(";");} else if (d = "undefined" != typeof d ? d : this.tn.next(), "group" === d) {if (g = this._parseMessage(a, e), !/^[A-Z]/.test(g.name)) throw Error("illegal group name: " + g.name);e.type = g.name, e.name = g.name.toLowerCase(), this.tn.omit(";");} else {if (!b.TYPE.test(d) && !b.TYPEREF.test(d)) throw Error("illegal message field type: " + d);if (e.type = d, f = this.tn.next(), !b.NAME.test(f)) throw Error("illegal message field name: " + f);
            e.name = f, this.tn.skip("="), e.id = h(this.tn.next()), f = this.tn.peek(), "[" === f && this._parseFieldOptions(e), this.tn.skip(";");}return a.fields.push(e), e;}, g._parseMessageOneOf = function (a) {var e,d,f,c = this.tn.next();if (!b.NAME.test(c)) throw Error("illegal oneof name: " + c);for (d = c, f = [], this.tn.skip("{"); "}" !== (c = this.tn.next());) {e = this._parseMessageField(a, "optional", c), e.oneof = d, f.push(e.id);}this.tn.omit(";"), a.oneofs[d] = f;}, g._parseFieldOptions = function (a) {this.tn.skip("[");for (var b, c = !0; "]" !== (b = this.tn.peek());) {c || this.tn.skip(","), this._parseOption(a, !0), c = !1;}this.tn.next();}, g._parseEnum = function (a) {var e,c = { name: "", values: [], options: {} },d = this.tn.next();if (!b.NAME.test(d)) throw Error("illegal name: " + d);for (c.name = d, this.tn.skip("{"); "}" !== (d = this.tn.next());) {if ("option" === d) this._parseOption(c);else {if (!b.NAME.test(d)) throw Error("illegal name: " + d);this.tn.skip("="), e = { name: d, id: h(this.tn.next(), !0) }, d = this.tn.peek(), "[" === d && this._parseFieldOptions({ options: {} }), this.tn.skip(";"), c.values.push(e);}}this.tn.omit(";"), a.enums.push(c);}, g._parseExtensionRanges = function () {var c,d,e,b = [];do {for (d = [];;) {switch (c = this.tn.next()) {case "min":e = a.ID_MIN;break;case "max":e = a.ID_MAX;break;default:e = i(c);}if (d.push(e), 2 === d.length) break;if ("to" !== this.tn.peek()) {d.push(e);break;}this.tn.next();}b.push(d);} while (this.tn.omit(","));return this.tn.skip(";"), b;}, g._parseExtend = function (a) {var d,c = this.tn.next();if (!b.TYPEREF.test(c)) throw Error("illegal extend reference: " + c);for (d = { ref: c, fields: [] }, this.tn.skip("{"); "}" !== (c = this.tn.next());) {if (b.RULE.test(c)) this._parseMessageField(d, c);else {if (!b.TYPEREF.test(c)) throw Error("illegal extend token: " + c);if (!this.proto3) throw Error("illegal field rule: " + c);this._parseMessageField(d, "optional", c);}}return this.tn.omit(";"), a.messages.push(d), d;}, g.toString = function () {return "Parser at line " + this.tn.line;}, c.Parser = f, c;}(e, e.Lang), e.Reflect = function (a) {function k(b) {if ("string" == typeof b && (b = a.TYPES[b]), "undefined" == typeof b.defaultValue) throw Error("default value for type " + b.name + " is not supported");return b == a.TYPES.bytes ? new f(0) : b.defaultValue;}function l(b, c) {if (b && "number" == typeof b.low && "number" == typeof b.high && "boolean" == typeof b.unsigned && b.low === b.low && b.high === b.high) return new a.Long(b.low, b.high, "undefined" == typeof c ? b.unsigned : c);if ("string" == typeof b) return a.Long.fromString(b, c || !1, 10);if ("number" == typeof b) return a.Long.fromNumber(b, c || !1);throw Error("not convertible to Long");}function o(b, c) {var d = c.readVarint32(),e = 7 & d,f = d >>> 3;switch (e) {case a.WIRE_TYPES.VARINT:do {d = c.readUint8();} while (128 === (128 & d));break;case a.WIRE_TYPES.BITS64:c.offset += 8;break;case a.WIRE_TYPES.LDELIM:d = c.readVarint32(), c.offset += d;break;case a.WIRE_TYPES.STARTGROUP:o(f, c);break;case a.WIRE_TYPES.ENDGROUP:if (f === b) return !1;throw Error("Illegal GROUPEND after unknown group: " + f + " (" + b + " expected)");case a.WIRE_TYPES.BITS32:c.offset += 4;break;default:throw Error("Illegal wire type in unknown group " + b + ": " + e);}return !0;}var g,h,i,j,m,n,p,q,r,s,t,u,v,w,x,y,z,A,B,c = {},d = function d(a, b, c) {this.builder = a, this.parent = b, this.name = c, this.className;},e = d.prototype;return e.fqn = function () {for (var a = this.name, b = this;;) {if (b = b.parent, null == b) break;a = b.name + "." + a;}return a;}, e.toString = function (a) {return (a ? this.className + " " : "") + this.fqn();}, e.build = function () {throw Error(this.toString(!0) + " cannot be built directly");}, c.T = d, g = function g(a, b, c, e, f) {d.call(this, a, b, c), this.className = "Namespace", this.children = [], this.options = e || {}, this.syntax = f || "proto2";}, h = g.prototype = Object.create(d.prototype), h.getChildren = function (a) {var b, c, d;if (a = a || null, null == a) return this.children.slice();for (b = [], c = 0, d = this.children.length; d > c; ++c) {this.children[c] instanceof a && b.push(this.children[c]);}return b;}, h.addChild = function (a) {var b;if (b = this.getChild(a.name)) if (b instanceof m.Field && b.name !== b.originalName && null === this.getChild(b.originalName)) b.name = b.originalName;else {if (!(a instanceof m.Field && a.name !== a.originalName && null === this.getChild(a.originalName))) throw Error("Duplicate name in namespace " + this.toString(!0) + ": " + a.name);a.name = a.originalName;}this.children.push(a);}, h.getChild = function (a) {var c,d,b = "number" == typeof a ? "id" : "name";for (c = 0, d = this.children.length; d > c; ++c) {if (this.children[c][b] === a) return this.children[c];}return null;}, h.resolve = function (a, b) {var g,d = "string" == typeof a ? a.split(".") : a,e = this,f = 0;if ("" === d[f]) {for (; null !== e.parent;) {e = e.parent;}f++;}do {do {if (!(e instanceof c.Namespace)) {e = null;break;}if (g = e.getChild(d[f]), !(g && g instanceof c.T && (!b || g instanceof c.Namespace))) {e = null;break;}e = g, f++;} while (f < d.length);if (null != e) break;if (null !== this.parent) return this.parent.resolve(a, b);} while (null != e);return e;}, h.qn = function (a) {var e,f,b = [],d = a;do {b.unshift(d.name), d = d.parent;} while (null !== d);for (e = 1; e <= b.length; e++) {if (f = b.slice(b.length - e), a === this.resolve(f, a instanceof c.Namespace)) return f.join(".");}return a.fqn();}, h.build = function () {var e,c,d,a = {},b = this.children;for (c = 0, d = b.length; d > c; ++c) {e = b[c], e instanceof g && (a[e.name] = e.build());}return Object.defineProperty && Object.defineProperty(a, "$options", { value: this.buildOpt() }), a;}, h.buildOpt = function () {var c,d,e,f,a = {},b = Object.keys(this.options);for (c = 0, d = b.length; d > c; ++c) {e = b[c], f = this.options[b[c]], a[e] = f;}return a;}, h.getOption = function (a) {return "undefined" == typeof a ? this.options : "undefined" != typeof this.options[a] ? this.options[a] : null;}, c.Namespace = g, i = function i(b, c, d, e) {if (this.type = b, this.resolvedType = c, this.isMapKey = d, this.syntax = e, d && a.MAP_KEY_TYPES.indexOf(b) < 0) throw Error("Invalid map key type: " + b.name);}, j = i.prototype, i.defaultFieldValue = k, j.verifyValue = function (c) {var f,g,h,d = function (a, b) {throw Error("Illegal value for " + this.toString(!0) + " of type " + this.type.name + ": " + a + " (" + b + ")");}.bind(this);switch (this.type) {case a.TYPES.int32:case a.TYPES.sint32:case a.TYPES.sfixed32:return ("number" != typeof c || c === c && 0 !== c % 1) && d(typeof c, "not an integer"), c > 4294967295 ? 0 | c : c;case a.TYPES.uint32:case a.TYPES.fixed32:return ("number" != typeof c || c === c && 0 !== c % 1) && d(typeof c, "not an integer"), 0 > c ? c >>> 0 : c;case a.TYPES.int64:case a.TYPES.sint64:case a.TYPES.sfixed64:if (a.Long) try {return l(c, !1);} catch (e) {d(typeof c, e.message);} else d(typeof c, "requires Long.js");case a.TYPES.uint64:case a.TYPES.fixed64:if (a.Long) try {return l(c, !0);} catch (e) {d(typeof c, e.message);} else d(typeof c, "requires Long.js");case a.TYPES.bool:return "boolean" != typeof c && d(typeof c, "not a boolean"), c;case a.TYPES["float"]:case a.TYPES["double"]:return "number" != typeof c && d(typeof c, "not a number"), c;case a.TYPES.string:return "string" == typeof c || c && c instanceof String || d(typeof c, "not a string"), "" + c;case a.TYPES.bytes:return b.isByteBuffer(c) ? c : b.wrap(c);case a.TYPES["enum"]:for (f = this.resolvedType.getChildren(a.Reflect.Enum.Value), h = 0; h < f.length; h++) {if (f[h].name == c) return f[h].id;if (f[h].id == c) return f[h].id;}if ("proto3" === this.syntax) return ("number" != typeof c || c === c && 0 !== c % 1) && d(typeof c, "not an integer"), (c > 4294967295 || 0 > c) && d(typeof c, "not in range for uint32"), c;d(c, "not a valid enum value");case a.TYPES.group:case a.TYPES.message:if (c && "object" == typeof c || d(typeof c, "object expected"), c instanceof this.resolvedType.clazz) return c;if (c instanceof a.Builder.Message) {g = {};for (h in c) {c.hasOwnProperty(h) && (g[h] = c[h]);}c = g;}return new this.resolvedType.clazz(c);}throw Error("[INTERNAL] Illegal value for " + this.toString(!0) + ": " + c + " (undefined type " + this.type + ")");}, j.calculateLength = function (b, c) {if (null === c) return 0;var d;switch (this.type) {case a.TYPES.int32:return 0 > c ? f.calculateVarint64(c) : f.calculateVarint32(c);case a.TYPES.uint32:return f.calculateVarint32(c);case a.TYPES.sint32:return f.calculateVarint32(f.zigZagEncode32(c));case a.TYPES.fixed32:case a.TYPES.sfixed32:case a.TYPES["float"]:return 4;case a.TYPES.int64:case a.TYPES.uint64:return f.calculateVarint64(c);case a.TYPES.sint64:return f.calculateVarint64(f.zigZagEncode64(c));case a.TYPES.fixed64:case a.TYPES.sfixed64:return 8;case a.TYPES.bool:return 1;case a.TYPES["enum"]:return f.calculateVarint32(c);case a.TYPES["double"]:return 8;case a.TYPES.string:return d = f.calculateUTF8Bytes(c), f.calculateVarint32(d) + d;case a.TYPES.bytes:if (c.remaining() < 0) throw Error("Illegal value for " + this.toString(!0) + ": " + c.remaining() + " bytes remaining");return f.calculateVarint32(c.remaining()) + c.remaining();case a.TYPES.message:return d = this.resolvedType.calculate(c), f.calculateVarint32(d) + d;case a.TYPES.group:return d = this.resolvedType.calculate(c), d + f.calculateVarint32(b << 3 | a.WIRE_TYPES.ENDGROUP);}throw Error("[INTERNAL] Illegal value to encode in " + this.toString(!0) + ": " + c + " (unknown type)");}, j.encodeValue = function (b, c, d) {var e, g;if (null === c) return d;switch (this.type) {case a.TYPES.int32:0 > c ? d.writeVarint64(c) : d.writeVarint32(c);break;case a.TYPES.uint32:d.writeVarint32(c);break;case a.TYPES.sint32:d.writeVarint32ZigZag(c);break;case a.TYPES.fixed32:d.writeUint32(c);break;case a.TYPES.sfixed32:d.writeInt32(c);break;case a.TYPES.int64:case a.TYPES.uint64:d.writeVarint64(c);break;case a.TYPES.sint64:d.writeVarint64ZigZag(c);break;case a.TYPES.fixed64:d.writeUint64(c);break;case a.TYPES.sfixed64:d.writeInt64(c);break;case a.TYPES.bool:"string" == typeof c ? d.writeVarint32("false" === c.toLowerCase() ? 0 : !!c) : d.writeVarint32(c ? 1 : 0);break;case a.TYPES["enum"]:d.writeVarint32(c);break;case a.TYPES["float"]:d.writeFloat32(c);break;case a.TYPES["double"]:d.writeFloat64(c);break;case a.TYPES.string:d.writeVString(c);break;case a.TYPES.bytes:if (c.remaining() < 0) throw Error("Illegal value for " + this.toString(!0) + ": " + c.remaining() + " bytes remaining");e = c.offset, d.writeVarint32(c.remaining()), d.append(c), c.offset = e;break;case a.TYPES.message:g = new f().LE(), this.resolvedType.encode(c, g), d.writeVarint32(g.offset), d.append(g.flip());break;case a.TYPES.group:this.resolvedType.encode(c, d), d.writeVarint32(b << 3 | a.WIRE_TYPES.ENDGROUP);break;default:throw Error("[INTERNAL] Illegal value to encode in " + this.toString(!0) + ": " + c + " (unknown type)");}return d;}, j.decode = function (b, c, d) {if (c != this.type.wireType) throw Error("Unexpected wire type for element");var e, f;switch (this.type) {case a.TYPES.int32:return 0 | b.readVarint32();case a.TYPES.uint32:return b.readVarint32() >>> 0;case a.TYPES.sint32:return 0 | b.readVarint32ZigZag();case a.TYPES.fixed32:return b.readUint32() >>> 0;case a.TYPES.sfixed32:return 0 | b.readInt32();case a.TYPES.int64:return b.readVarint64();case a.TYPES.uint64:return b.readVarint64().toUnsigned();case a.TYPES.sint64:return b.readVarint64ZigZag();case a.TYPES.fixed64:return b.readUint64();case a.TYPES.sfixed64:return b.readInt64();case a.TYPES.bool:return !!b.readVarint32();case a.TYPES["enum"]:return b.readVarint32();case a.TYPES["float"]:return b.readFloat();case a.TYPES["double"]:return b.readDouble();case a.TYPES.string:return b.readVString();case a.TYPES.bytes:if (f = b.readVarint32(), b.remaining() < f) throw Error("Illegal number of bytes for " + this.toString(!0) + ": " + f + " required but got only " + b.remaining());return e = b.clone(), e.limit = e.offset + f, b.offset += f, e;case a.TYPES.message:return f = b.readVarint32(), this.resolvedType.decode(b, f);case a.TYPES.group:return this.resolvedType.decode(b, -1, d);}throw Error("[INTERNAL] Illegal decode type");}, j.valueFromString = function (b) {if (!this.isMapKey) throw Error("valueFromString() called on non-map-key element");switch (this.type) {case a.TYPES.int32:case a.TYPES.sint32:case a.TYPES.sfixed32:case a.TYPES.uint32:case a.TYPES.fixed32:return this.verifyValue(parseInt(b));case a.TYPES.int64:case a.TYPES.sint64:case a.TYPES.sfixed64:case a.TYPES.uint64:case a.TYPES.fixed64:return this.verifyValue(b);case a.TYPES.bool:return "true" === b;case a.TYPES.string:return this.verifyValue(b);case a.TYPES.bytes:return f.fromBinary(b);}}, j.valueToString = function (b) {if (!this.isMapKey) throw Error("valueToString() called on non-map-key element");return this.type === a.TYPES.bytes ? b.toString("binary") : b.toString();}, c.Element = i, m = function m(a, b, c, d, e, f) {g.call(this, a, b, c, d, f), this.className = "Message", this.extensions = void 0, this.clazz = null, this.isGroup = !!e, this._fields = null, this._fieldsById = null, this._fieldsByName = null;}, n = m.prototype = Object.create(g.prototype), n.build = function (c) {var d, h, e, g;if (this.clazz && !c) return this.clazz;for (d = function (a, c) {function k(b, c, d, e) {var g, h, i, j, l, m, n;if (null === b || "object" != typeof b) return e && e instanceof a.Reflect.Enum && (g = a.Reflect.Enum.getName(e.object, b), null !== g) ? g : b;if (f.isByteBuffer(b)) return c ? b.toBase64() : b.toBuffer();if (a.Long.isLong(b)) return d ? b.toString() : a.Long.fromValue(b);if (Array.isArray(b)) return h = [], b.forEach(function (a, b) {h[b] = k(a, c, d, e);}), h;if (h = {}, b instanceof a.Map) {for (i = b.entries(), j = i.next(); !j.done; j = i.next()) {h[b.keyElem.valueToString(j.value[0])] = k(j.value[1], c, d, b.valueElem.resolvedType);}return h;}l = b.$type, m = void 0;for (n in b) {b.hasOwnProperty(n) && (h[n] = l && (m = l.getChild(n)) ? k(b[n], c, d, m.resolvedType) : k(b[n], c, d));}return h;}var i,j,d = c.getChildren(a.Reflect.Message.Field),e = c.getChildren(a.Reflect.Message.OneOf),g = function g(b) {var i, j, k, l;for (a.Builder.Message.call(this), i = 0, j = e.length; j > i; ++i) {this[e[i].name] = null;}for (i = 0, j = d.length; j > i; ++i) {k = d[i], this[k.name] = k.repeated ? [] : k.map ? new a.Map(k) : null, !k.required && "proto3" !== c.syntax || null === k.defaultValue || (this[k.name] = k.defaultValue);}if (arguments.length > 0) if (1 !== arguments.length || null === b || "object" != typeof b || !("function" != typeof b.encode || b instanceof g) || Array.isArray(b) || b instanceof a.Map || f.isByteBuffer(b) || b instanceof ArrayBuffer || a.Long && b instanceof a.Long) for (i = 0, j = arguments.length; j > i; ++i) {"undefined" != typeof (l = arguments[i]) && this.$set(d[i].name, l);} else this.$set(b);},h = g.prototype = Object.create(a.Builder.Message.prototype);for (h.add = function (b, d, e) {var f = c._fieldsByName[b];if (!e) {if (!f) throw Error(this + "#" + b + " is undefined");if (!(f instanceof a.Reflect.Message.Field)) throw Error(this + "#" + b + " is not a field: " + f.toString(!0));if (!f.repeated) throw Error(this + "#" + b + " is not a repeated field");d = f.verifyValue(d, !0);}return null === this[b] && (this[b] = []), this[b].push(d), this;}, h.$add = h.add, h.set = function (b, d, e) {var f, g, h;if (b && "object" == typeof b) {e = d;for (f in b) {b.hasOwnProperty(f) && "undefined" != typeof (d = b[f]) && this.$set(f, d, e);}return this;}if (g = c._fieldsByName[b], e) this[b] = d;else {if (!g) throw Error(this + "#" + b + " is not a field: undefined");if (!(g instanceof a.Reflect.Message.Field)) throw Error(this + "#" + b + " is not a field: " + g.toString(!0));this[g.name] = d = g.verifyValue(d);}return g && g.oneof && (h = this[g.oneof.name], null !== d ? (null !== h && h !== g.name && (this[h] = null), this[g.oneof.name] = g.name) : h === b && (this[g.oneof.name] = null)), this;}, h.$set = h.set, h.get = function (b, d) {if (d) return this[b];var e = c._fieldsByName[b];if (!(e && e instanceof a.Reflect.Message.Field)) throw Error(this + "#" + b + " is not a field: undefined");if (!(e instanceof a.Reflect.Message.Field)) throw Error(this + "#" + b + " is not a field: " + e.toString(!0));return this[e.name];}, h.$get = h.get, i = 0; i < d.length; i++) {j = d[i], j instanceof a.Reflect.Message.ExtensionField || c.builder.options.populateAccessors && function (a) {var d,e,f,b = a.originalName.replace(/(_[a-zA-Z])/g, function (a) {return a.toUpperCase().replace("_", "");});b = b.substring(0, 1).toUpperCase() + b.substring(1), d = a.originalName.replace(/([A-Z])/g, function (a) {return "_" + a;}), e = function e(b, c) {return this[a.name] = c ? b : a.verifyValue(b), this;}, f = function f() {return this[a.name];}, null === c.getChild("set" + b) && (h["set" + b] = e), null === c.getChild("set_" + d) && (h["set_" + d] = e), null === c.getChild("get" + b) && (h["get" + b] = f), null === c.getChild("get_" + d) && (h["get_" + d] = f);}(j);}return h.encode = function (a, d) {var e, f;"boolean" == typeof a && (d = a, a = void 0), e = !1, a || (a = new b(), e = !0), f = a.littleEndian;try {return c.encode(this, a.LE(), d), (e ? a.flip() : a).LE(f);} catch (g) {throw a.LE(f), g;}}, g.encode = function (a, b, c) {return new g(a).encode(b, c);}, h.calculate = function () {return c.calculate(this);}, h.encodeDelimited = function (a) {var d,b = !1;return a || (a = new f(), b = !0), d = new f().LE(), c.encode(this, d).flip(), a.writeVarint32(d.remaining()), a.append(d), b ? a.flip() : a;}, h.encodeAB = function () {try {return this.encode().toArrayBuffer();} catch (a) {throw a.encoded && (a.encoded = a.encoded.toArrayBuffer()), a;}}, h.toArrayBuffer = h.encodeAB, h.encodeNB = function () {try {return this.encode().toBuffer();} catch (a) {throw a.encoded && (a.encoded = a.encoded.toBuffer()), a;}}, h.toBuffer = h.encodeNB, h.encode64 = function () {try {return this.encode().toBase64();} catch (a) {throw a.encoded && (a.encoded = a.encoded.toBase64()), a;}}, h.toBase64 = h.encode64, h.encodeHex = function () {try {return this.encode().toHex();} catch (a) {throw a.encoded && (a.encoded = a.encoded.toHex()), a;}}, h.toHex = h.encodeHex, h.toRaw = function (a, b) {return k(this, !!a, !!b, this.$type);}, h.encodeJSON = function () {return JSON.stringify(k(this, !0, !0, this.$type));}, g.decode = function (a, b) {var d, e;"string" == typeof a && (a = f.wrap(a, b ? b : "base64")), a = f.isByteBuffer(a) ? a : f.wrap(a), d = a.littleEndian;try {return e = c.decode(a.LE()), a.LE(d), e;} catch (g) {throw a.LE(d), g;}}, g.decodeDelimited = function (a, b) {var d, e, g;if ("string" == typeof a && (a = f.wrap(a, b ? b : "base64")), a = f.isByteBuffer(a) ? a : f.wrap(a), a.remaining() < 1) return null;if (d = a.offset, e = a.readVarint32(), a.remaining() < e) return a.offset = d, null;try {return g = c.decode(a.slice(a.offset, a.offset + e).LE()), a.offset += e, g;} catch (h) {throw a.offset += e, h;}}, g.decode64 = function (a) {return g.decode(a, "base64");}, g.decodeHex = function (a) {return g.decode(a, "hex");}, g.decodeJSON = function (a) {return new g(JSON.parse(a));}, h.toString = function () {return c.toString();}, Object.defineProperty && (Object.defineProperty(g, "$options", { value: c.buildOpt() }), Object.defineProperty(h, "$options", { value: g["$options"] }), Object.defineProperty(g, "$type", { value: c }), Object.defineProperty(h, "$type", { value: c })), g;}(a, this), this._fields = [], this._fieldsById = {}, this._fieldsByName = {}, e = 0, g = this.children.length; g > e; e++) {if (h = this.children[e], h instanceof t || h instanceof m || h instanceof x) {if (d.hasOwnProperty(h.name)) throw Error("Illegal reflect child of " + this.toString(!0) + ": " + h.toString(!0) + " cannot override static property '" + h.name + "'");d[h.name] = h.build();} else if (h instanceof m.Field) h.build(), this._fields.push(h), this._fieldsById[h.id] = h, this._fieldsByName[h.name] = h;else if (!(h instanceof m.OneOf || h instanceof w)) throw Error("Illegal reflect child of " + this.toString(!0) + ": " + this.children[e].toString(!0));}return this.clazz = d;}, n.encode = function (a, b, c) {var e,h,f,g,i,d = null;for (f = 0, g = this._fields.length; g > f; ++f) {e = this._fields[f], h = a[e.name], e.required && null === h ? null === d && (d = e) : e.encode(c ? h : e.verifyValue(h), b, a);}if (null !== d) throw i = Error("Missing at least one required field for " + this.toString(!0) + ": " + d), i.encoded = b, i;return b;}, n.calculate = function (a) {for (var e, f, b = 0, c = 0, d = this._fields.length; d > c; ++c) {if (e = this._fields[c], f = a[e.name], e.required && null === f) throw Error("Missing at least one required field for " + this.toString(!0) + ": " + e);b += e.calculate(f, a);}return b;}, n.decode = function (b, c, d) {var g, h, i, j, e, f, k, l, m, n, p, q;for (c = "number" == typeof c ? c : -1, e = b.offset, f = new this.clazz(); b.offset < e + c || -1 === c && b.remaining() > 0;) {if (g = b.readVarint32(), h = 7 & g, i = g >>> 3, h === a.WIRE_TYPES.ENDGROUP) {if (i !== d) throw Error("Illegal group end indicator for " + this.toString(!0) + ": " + i + " (" + (d ? d + " expected" : "not a group") + ")");break;}if (j = this._fieldsById[i]) j.repeated && !j.options.packed ? f[j.name].push(j.decode(h, b)) : j.map ? (l = j.decode(h, b), f[j.name].set(l[0], l[1])) : (f[j.name] = j.decode(h, b), j.oneof && (m = f[j.oneof.name], null !== m && m !== j.name && (f[m] = null), f[j.oneof.name] = j.name));else switch (h) {case a.WIRE_TYPES.VARINT:b.readVarint32();break;case a.WIRE_TYPES.BITS32:b.offset += 4;break;case a.WIRE_TYPES.BITS64:b.offset += 8;break;case a.WIRE_TYPES.LDELIM:k = b.readVarint32(), b.offset += k;break;case a.WIRE_TYPES.STARTGROUP:for (; o(i, b);) {;}break;default:throw Error("Illegal wire type for unknown field " + i + " in " + this.toString(!0) + "#decode: " + h);}}for (n = 0, p = this._fields.length; p > n; ++n) {if (j = this._fields[n], null === f[j.name]) if ("proto3" === this.syntax) f[j.name] = j.defaultValue;else {if (j.required) throw q = Error("Missing at least one required field for " + this.toString(!0) + ": " + j.name), q.decoded = f, q;a.populateDefaults && null !== j.defaultValue && (f[j.name] = j.defaultValue);}}return f;}, c.Message = m, p = function p(b, c, e, f, g, h, i, j, k, l) {d.call(this, b, c, h), this.className = "Message.Field", this.required = "required" === e, this.repeated = "repeated" === e, this.map = "map" === e, this.keyType = f || null, this.type = g, this.resolvedType = null, this.id = i, this.options = j || {}, this.defaultValue = null, this.oneof = k || null, this.syntax = l || "proto2", this.originalName = this.name, this.element = null, this.keyElement = null, !this.builder.options.convertFieldsToCamelCase || this instanceof m.ExtensionField || (this.name = a.Util.toCamelCase(this.name));}, q = p.prototype = Object.create(d.prototype), q.build = function () {this.element = new i(this.type, this.resolvedType, !1, this.syntax), this.map && (this.keyElement = new i(this.keyType, void 0, !0, this.syntax)), "proto3" !== this.syntax || this.repeated || this.map ? "undefined" != typeof this.options["default"] && (this.defaultValue = this.verifyValue(this.options["default"])) : this.defaultValue = i.defaultFieldValue(this.type);}, q.verifyValue = function (b, c) {var d, e, f;if (c = c || !1, d = function (a, b) {throw Error("Illegal value for " + this.toString(!0) + " of type " + this.type.name + ": " + a + " (" + b + ")");}.bind(this), null === b) return this.required && d(typeof b, "required"), "proto3" === this.syntax && this.type !== a.TYPES.message && d(typeof b, "proto3 field without field presence cannot be null"), null;if (this.repeated && !c) {for (Array.isArray(b) || (b = [b]), f = [], e = 0; e < b.length; e++) {f.push(this.element.verifyValue(b[e]));}return f;}return this.map && !c ? b instanceof a.Map ? b : (b instanceof Object || d(typeof b, "expected ProtoBuf.Map or raw object for map field"), new a.Map(this, b)) : (!this.repeated && Array.isArray(b) && d(typeof b, "no array expected"), this.element.verifyValue(b));}, q.hasWirePresence = function (b, c) {if ("proto3" !== this.syntax) return null !== b;if (this.oneof && c[this.oneof.name] === this.name) return !0;switch (this.type) {case a.TYPES.int32:case a.TYPES.sint32:case a.TYPES.sfixed32:case a.TYPES.uint32:case a.TYPES.fixed32:return 0 !== b;case a.TYPES.int64:case a.TYPES.sint64:case a.TYPES.sfixed64:case a.TYPES.uint64:case a.TYPES.fixed64:return 0 !== b.low || 0 !== b.high;case a.TYPES.bool:return b;case a.TYPES["float"]:case a.TYPES["double"]:return 0 !== b;case a.TYPES.string:return b.length > 0;case a.TYPES.bytes:return b.remaining() > 0;case a.TYPES["enum"]:return 0 !== b;case a.TYPES.message:return null !== b;default:return !0;}}, q.encode = function (b, c, d) {var e, g, h, i, j;if (null === this.type || "object" != typeof this.type) throw Error("[INTERNAL] Unresolved type in " + this.toString(!0) + ": " + this.type);if (null === b || this.repeated && 0 == b.length) return c;try {if (this.repeated) {if (this.options.packed && a.PACKABLE_WIRE_TYPES.indexOf(this.type.wireType) >= 0) {for (c.writeVarint32(this.id << 3 | a.WIRE_TYPES.LDELIM), c.ensureCapacity(c.offset += 1), g = c.offset, e = 0; e < b.length; e++) {this.element.encodeValue(this.id, b[e], c);}h = c.offset - g, i = f.calculateVarint32(h), i > 1 && (j = c.slice(g, c.offset), g += i - 1, c.offset = g, c.append(j)), c.writeVarint32(h, g - i);} else for (e = 0; e < b.length; e++) {c.writeVarint32(this.id << 3 | this.type.wireType), this.element.encodeValue(this.id, b[e], c);}} else this.map ? b.forEach(function (b, d) {var g = f.calculateVarint32(8 | this.keyType.wireType) + this.keyElement.calculateLength(1, d) + f.calculateVarint32(16 | this.type.wireType) + this.element.calculateLength(2, b);c.writeVarint32(this.id << 3 | a.WIRE_TYPES.LDELIM), c.writeVarint32(g), c.writeVarint32(8 | this.keyType.wireType), this.keyElement.encodeValue(1, d, c), c.writeVarint32(16 | this.type.wireType), this.element.encodeValue(2, b, c);}, this) : this.hasWirePresence(b, d) && (c.writeVarint32(this.id << 3 | this.type.wireType), this.element.encodeValue(this.id, b, c));} catch (k) {throw Error("Illegal value for " + this.toString(!0) + ": " + b + " (" + k + ")");}return c;}, q.calculate = function (b, c) {var d, e, g;if (b = this.verifyValue(b), null === this.type || "object" != typeof this.type) throw Error("[INTERNAL] Unresolved type in " + this.toString(!0) + ": " + this.type);if (null === b || this.repeated && 0 == b.length) return 0;d = 0;try {if (this.repeated) {if (this.options.packed && a.PACKABLE_WIRE_TYPES.indexOf(this.type.wireType) >= 0) {for (d += f.calculateVarint32(this.id << 3 | a.WIRE_TYPES.LDELIM), g = 0, e = 0; e < b.length; e++) {g += this.element.calculateLength(this.id, b[e]);}d += f.calculateVarint32(g), d += g;} else for (e = 0; e < b.length; e++) {d += f.calculateVarint32(this.id << 3 | this.type.wireType), d += this.element.calculateLength(this.id, b[e]);}} else this.map ? b.forEach(function (b, c) {var g = f.calculateVarint32(8 | this.keyType.wireType) + this.keyElement.calculateLength(1, c) + f.calculateVarint32(16 | this.type.wireType) + this.element.calculateLength(2, b);d += f.calculateVarint32(this.id << 3 | a.WIRE_TYPES.LDELIM), d += f.calculateVarint32(g), d += g;}, this) : this.hasWirePresence(b, c) && (d += f.calculateVarint32(this.id << 3 | this.type.wireType), d += this.element.calculateLength(this.id, b));} catch (h) {throw Error("Illegal value for " + this.toString(!0) + ": " + b + " (" + h + ")");}return d;}, q.decode = function (b, c, d) {var e,f,h,j,k,l,m,g = !this.map && b == this.type.wireType || !d && this.repeated && this.options.packed && b == a.WIRE_TYPES.LDELIM || this.map && b == a.WIRE_TYPES.LDELIM;if (!g) throw Error("Illegal wire type for field " + this.toString(!0) + ": " + b + " (" + this.type.wireType + " expected)");if (b == a.WIRE_TYPES.LDELIM && this.repeated && this.options.packed && a.PACKABLE_WIRE_TYPES.indexOf(this.type.wireType) >= 0 && !d) {for (f = c.readVarint32(), f = c.offset + f, h = []; c.offset < f;) {h.push(this.decode(this.type.wireType, c, !0));}return h;}if (this.map) {if (j = i.defaultFieldValue(this.keyType), e = i.defaultFieldValue(this.type), f = c.readVarint32(), c.remaining() < f) throw Error("Illegal number of bytes for " + this.toString(!0) + ": " + f + " required but got only " + c.remaining());for (k = c.clone(), k.limit = k.offset + f, c.offset += f; k.remaining() > 0;) {if (l = k.readVarint32(), b = 7 & l, m = l >>> 3, 1 === m) j = this.keyElement.decode(k, b, m);else {if (2 !== m) throw Error("Unexpected tag in map field key/value submessage");e = this.element.decode(k, b, m);}}return [j, e];}return this.element.decode(c, b, this.id);}, c.Message.Field = p, r = function r(a, b, c, d, e, f, g) {p.call(this, a, b, c, null, d, e, f, g), this.extension;}, r.prototype = Object.create(p.prototype), c.Message.ExtensionField = r, s = function s(a, b, c) {d.call(this, a, b, c), this.fields = [];}, c.Message.OneOf = s, t = function t(a, b, c, d, e) {g.call(this, a, b, c, d, e), this.className = "Enum", this.object = null;}, t.getName = function (a, b) {var e,d,c = Object.keys(a);for (d = 0; d < c.length; ++d) {if (a[e = c[d]] === b) return e;}return null;}, u = t.prototype = Object.create(g.prototype), u.build = function (b) {var c, d, e, f;if (this.object && !b) return this.object;for (c = new a.Builder.Enum(), d = this.getChildren(t.Value), e = 0, f = d.length; f > e; ++e) {c[d[e]["name"]] = d[e]["id"];}return Object.defineProperty && Object.defineProperty(c, "$options", { value: this.buildOpt(), enumerable: !1 }), this.object = c;}, c.Enum = t, v = function v(a, b, c, e) {d.call(this, a, b, c), this.className = "Enum.Value", this.id = e;}, v.prototype = Object.create(d.prototype), c.Enum.Value = v, w = function w(a, b, c, e) {d.call(this, a, b, c), this.field = e;}, w.prototype = Object.create(d.prototype), c.Extension = w, x = function x(a, b, c, d) {g.call(this, a, b, c, d), this.className = "Service", this.clazz = null;}, y = x.prototype = Object.create(g.prototype), y.build = function (b) {return this.clazz && !b ? this.clazz : this.clazz = function (a, b) {var g,c = function c(b) {a.Builder.Service.call(this), this.rpcImpl = b || function (a, b, c) {setTimeout(c.bind(this, Error("Not implemented, see: https://github.com/dcodeIO/ProtoBuf.js/wiki/Services")), 0);};},d = c.prototype = Object.create(a.Builder.Service.prototype),e = b.getChildren(a.Reflect.Service.RPCMethod);for (g = 0; g < e.length; g++) {!function (a) {d[a.name] = function (c, d) {try {try {c = a.resolvedRequestType.clazz.decode(f.wrap(c));} catch (e) {if (!(e instanceof TypeError)) throw e;}if (null === c || "object" != typeof c) throw Error("Illegal arguments");c instanceof a.resolvedRequestType.clazz || (c = new a.resolvedRequestType.clazz(c)), this.rpcImpl(a.fqn(), c, function (c, e) {if (c) return d(c), void 0;try {e = a.resolvedResponseType.clazz.decode(e);} catch (f) {}return e && e instanceof a.resolvedResponseType.clazz ? (d(null, e), void 0) : (d(Error("Illegal response type received in service method " + b.name + "#" + a.name)), void 0);});} catch (e) {setTimeout(d.bind(this, e), 0);}}, c[a.name] = function (b, d, e) {new c(b)[a.name](d, e);}, Object.defineProperty && (Object.defineProperty(c[a.name], "$options", { value: a.buildOpt() }), Object.defineProperty(d[a.name], "$options", { value: c[a.name]["$options"] }));}(e[g]);}return Object.defineProperty && (Object.defineProperty(c, "$options", { value: b.buildOpt() }), Object.defineProperty(d, "$options", { value: c["$options"] }), Object.defineProperty(c, "$type", { value: b }), Object.defineProperty(d, "$type", { value: b })), c;}(a, this);}, c.Service = x, z = function z(a, b, c, e) {d.call(this, a, b, c), this.className = "Service.Method", this.options = e || {};}, A = z.prototype = Object.create(d.prototype), A.buildOpt = h.buildOpt, c.Service.Method = z, B = function B(a, b, c, d, e, f, g, h) {z.call(this, a, b, c, h), this.className = "Service.RPCMethod", this.requestName = d, this.responseName = e, this.requestStream = f, this.responseStream = g, this.resolvedRequestType = null, this.resolvedResponseType = null;}, B.prototype = Object.create(z.prototype), c.Service.RPCMethod = B, c;}(e), e.Builder = function (a, b, c) {function f(a) {a.messages && a.messages.forEach(function (b) {b.syntax = a.syntax, f(b);}), a.enums && a.enums.forEach(function (b) {b.syntax = a.syntax;});}var d = function d(a) {this.ns = new c.Namespace(this, null, ""), this.ptr = this.ns, this.resolved = !1, this.result = null, this.files = {}, this.importRoot = null, this.options = a || {};},e = d.prototype;return d.isMessage = function (a) {return "string" != typeof a.name ? !1 : "undefined" != typeof a.values || "undefined" != typeof a.rpc ? !1 : !0;}, d.isMessageField = function (a) {return "string" != typeof a.rule || "string" != typeof a.name || "string" != typeof a.type || "undefined" == typeof a.id ? !1 : !0;}, d.isEnum = function (a) {return "string" != typeof a.name ? !1 : "undefined" != typeof a.values && Array.isArray(a.values) && 0 !== a.values.length ? !0 : !1;}, d.isService = function (a) {return "string" == typeof a.name && "object" == typeof a.rpc && a.rpc ? !0 : !1;}, d.isExtend = function (a) {return "string" != typeof a.ref ? !1 : !0;}, e.reset = function () {return this.ptr = this.ns, this;}, e.define = function (a) {if ("string" != typeof a || !b.TYPEREF.test(a)) throw Error("illegal namespace: " + a);return a.split(".").forEach(function (a) {var b = this.ptr.getChild(a);null === b && this.ptr.addChild(b = new c.Namespace(this, this.ptr, a)), this.ptr = b;}, this), this;}, e.create = function (b) {var e, f, g, h, i;if (!b) return this;if (Array.isArray(b)) {if (0 === b.length) return this;b = b.slice();} else b = [b];for (e = [b]; e.length > 0;) {if (b = e.pop(), !Array.isArray(b)) throw Error("not a valid namespace: " + JSON.stringify(b));for (; b.length > 0;) {if (f = b.shift(), d.isMessage(f)) {if (g = new c.Message(this, this.ptr, f.name, f.options, f.isGroup, f.syntax), h = {}, f.oneofs && Object.keys(f.oneofs).forEach(function (a) {g.addChild(h[a] = new c.Message.OneOf(this, g, a));}, this), f.fields && f.fields.forEach(function (a) {if (null !== g.getChild(0 | a.id)) throw Error("duplicate or invalid field id in " + g.name + ": " + a.id);if (a.options && "object" != typeof a.options) throw Error("illegal field options in " + g.name + "#" + a.name);var b = null;if ("string" == typeof a.oneof && !(b = h[a.oneof])) throw Error("illegal oneof in " + g.name + "#" + a.name + ": " + a.oneof);a = new c.Message.Field(this, g, a.rule, a.keytype, a.type, a.name, a.id, a.options, b, f.syntax), b && b.fields.push(a), g.addChild(a);}, this), i = [], f.enums && f.enums.forEach(function (a) {i.push(a);}), f.messages && f.messages.forEach(function (a) {i.push(a);}), f.services && f.services.forEach(function (a) {i.push(a);}), f.extensions && (g.extensions = "number" == typeof f.extensions[0] ? [f.extensions] : f.extensions), this.ptr.addChild(g), i.length > 0) {e.push(b), b = i, i = null, this.ptr = g, g = null;continue;}i = null;} else if (d.isEnum(f)) g = new c.Enum(this, this.ptr, f.name, f.options, f.syntax), f.values.forEach(function (a) {g.addChild(new c.Enum.Value(this, g, a.name, a.id));}, this), this.ptr.addChild(g);else if (d.isService(f)) g = new c.Service(this, this.ptr, f.name, f.options), Object.keys(f.rpc).forEach(function (a) {var b = f.rpc[a];g.addChild(new c.Service.RPCMethod(this, g, a, b.request, b.response, !!b.request_stream, !!b.response_stream, b.options));}, this), this.ptr.addChild(g);else {if (!d.isExtend(f)) throw Error("not a valid definition: " + JSON.stringify(f));if (g = this.ptr.resolve(f.ref, !0)) f.fields.forEach(function (b) {var d, e, f, h;if (null !== g.getChild(0 | b.id)) throw Error("duplicate extended field id in " + g.name + ": " + b.id);
                  if (g.extensions && (d = !1, g.extensions.forEach(function (a) {b.id >= a[0] && b.id <= a[1] && (d = !0);}), !d)) throw Error("illegal extended field id in " + g.name + ": " + b.id + " (not within valid ranges)");e = b.name, this.options.convertFieldsToCamelCase && (e = a.Util.toCamelCase(e)), f = new c.Message.ExtensionField(this, g, b.rule, b.type, this.ptr.fqn() + "." + e, b.id, b.options), h = new c.Extension(this, this.ptr, b.name, f), f.extension = h, this.ptr.addChild(h), g.addChild(f);}, this);else if (!/\.?google\.protobuf\./.test(f.ref)) throw Error("extended message " + f.ref + " is not defined");}f = null, g = null;}b = null, this.ptr = this.ptr.parent;}return this.resolved = !1, this.result = null, this;}, e["import"] = function (b, c) {var e,g,h,i,j,k,l,m,d = "/";if ("string" == typeof c) {if (a.Util.IS_NODE, this.files[c] === !0) return this.reset();this.files[c] = !0;} else if ("object" == typeof c) {if (e = c.root, a.Util.IS_NODE, (e.indexOf("\\") >= 0 || c.file.indexOf("\\") >= 0) && (d = "\\"), g = e + d + c.file, this.files[g] === !0) return this.reset();this.files[g] = !0;}if (b.imports && b.imports.length > 0) {for (i = !1, "object" == typeof c ? (this.importRoot = c.root, i = !0, h = this.importRoot, c = c.file, (h.indexOf("\\") >= 0 || c.indexOf("\\") >= 0) && (d = "\\")) : "string" == typeof c ? this.importRoot ? h = this.importRoot : c.indexOf("/") >= 0 ? (h = c.replace(/\/[^\/]*$/, ""), "" === h && (h = "/")) : c.indexOf("\\") >= 0 ? (h = c.replace(/\\[^\\]*$/, ""), d = "\\") : h = "." : h = null, j = 0; j < b.imports.length; j++) {if ("string" == typeof b.imports[j]) {if (!h) throw Error("cannot determine import root");if (k = b.imports[j], "google/protobuf/descriptor.proto" === k) continue;if (k = h + d + k, this.files[k] === !0) continue;if (/\.proto$/i.test(k) && !a.DotProto && (k = k.replace(/\.proto$/, ".json")), l = a.Util.fetch(k), null === l) throw Error("failed to import '" + k + "' in '" + c + "': file not found");/\.json$/i.test(k) ? this["import"](JSON.parse(l + ""), k) : this["import"](a.DotProto.Parser.parse(l), k);} else c ? /\.(\w+)$/.test(c) ? this["import"](b.imports[j], c.replace(/^(.+)\.(\w+)$/, function (a, b, c) {return b + "_import" + j + "." + c;})) : this["import"](b.imports[j], c + "_import" + j) : this["import"](b.imports[j]);}i && (this.importRoot = null);}return b["package"] && this.define(b["package"]), b.syntax && f(b), m = this.ptr, b.options && Object.keys(b.options).forEach(function (a) {m.options[a] = b.options[a];}), b.messages && (this.create(b.messages), this.ptr = m), b.enums && (this.create(b.enums), this.ptr = m), b.services && (this.create(b.services), this.ptr = m), b["extends"] && this.create(b["extends"]), this.reset();}, e.resolveAll = function () {var d;if (null == this.ptr || "object" == typeof this.ptr.type) return this;if (this.ptr instanceof c.Namespace) this.ptr.children.forEach(function (a) {this.ptr = a, this.resolveAll();}, this);else if (this.ptr instanceof c.Message.Field) {if (b.TYPE.test(this.ptr.type)) this.ptr.type = a.TYPES[this.ptr.type];else {if (!b.TYPEREF.test(this.ptr.type)) throw Error("illegal type reference in " + this.ptr.toString(!0) + ": " + this.ptr.type);if (d = (this.ptr instanceof c.Message.ExtensionField ? this.ptr.extension.parent : this.ptr.parent).resolve(this.ptr.type, !0), !d) throw Error("unresolvable type reference in " + this.ptr.toString(!0) + ": " + this.ptr.type);if (this.ptr.resolvedType = d, d instanceof c.Enum) {if (this.ptr.type = a.TYPES["enum"], "proto3" === this.ptr.syntax && "proto3" !== d.syntax) throw Error("proto3 message cannot reference proto2 enum");} else {if (!(d instanceof c.Message)) throw Error("illegal type reference in " + this.ptr.toString(!0) + ": " + this.ptr.type);this.ptr.type = d.isGroup ? a.TYPES.group : a.TYPES.message;}}if (this.ptr.map) {if (!b.TYPE.test(this.ptr.keyType)) throw Error("illegal key type for map field in " + this.ptr.toString(!0) + ": " + this.ptr.keyType);this.ptr.keyType = a.TYPES[this.ptr.keyType];}} else if (this.ptr instanceof a.Reflect.Service.Method) {if (!(this.ptr instanceof a.Reflect.Service.RPCMethod)) throw Error("illegal service type in " + this.ptr.toString(!0));if (d = this.ptr.parent.resolve(this.ptr.requestName, !0), !(d && d instanceof a.Reflect.Message)) throw Error("Illegal type reference in " + this.ptr.toString(!0) + ": " + this.ptr.requestName);if (this.ptr.resolvedRequestType = d, d = this.ptr.parent.resolve(this.ptr.responseName, !0), !(d && d instanceof a.Reflect.Message)) throw Error("Illegal type reference in " + this.ptr.toString(!0) + ": " + this.ptr.responseName);this.ptr.resolvedResponseType = d;} else if (!(this.ptr instanceof a.Reflect.Message.OneOf || this.ptr instanceof a.Reflect.Extension || this.ptr instanceof a.Reflect.Enum.Value)) throw Error("illegal object in namespace: " + typeof this.ptr + ": " + this.ptr);return this.reset();}, e.build = function (a) {var b, c, d;if (this.reset(), this.resolved || (this.resolveAll(), this.resolved = !0, this.result = null), null === this.result && (this.result = this.ns.build()), !a) return this.result;for (b = "string" == typeof a ? a.split(".") : a, c = this.result, d = 0; d < b.length; d++) {if (!c[b[d]]) {c = null;break;}c = c[b[d]];}return c;}, e.lookup = function (a, b) {return a ? this.ns.resolve(a, b) : this.ns;}, e.toString = function () {return "Builder";}, d.Message = function () {}, d.Enum = function () {}, d.Service = function () {}, d;}(e, e.Lang, e.Reflect), e.Map = function (a, b) {function e(a) {var b = 0;return { next: function next() {return b < a.length ? { done: !1, value: a[b++] } : { done: !0 };} };}var c = function c(a, _c) {var d, e, f, g;if (!a.map) throw Error("field is not a map");if (this.field = a, this.keyElem = new b.Element(a.keyType, null, !0, a.syntax), this.valueElem = new b.Element(a.type, a.resolvedType, !1, a.syntax), this.map = {}, Object.defineProperty(this, "size", { get: function get() {return Object.keys(this.map).length;} }), _c) for (d = Object.keys(_c), e = 0; e < d.length; e++) {f = this.keyElem.valueFromString(d[e]), g = this.valueElem.verifyValue(_c[d[e]]), this.map[this.keyElem.valueToString(f)] = { key: f, value: g };}},d = c.prototype;return d.clear = function () {this.map = {};}, d["delete"] = function (a) {var b = this.keyElem.valueToString(this.keyElem.verifyValue(a)),c = (b in this.map);return delete this.map[b], c;}, d.entries = function () {var d,c,a = [],b = Object.keys(this.map);for (c = 0; c < b.length; c++) {a.push([(d = this.map[b[c]]).key, d.value]);}return e(a);}, d.keys = function () {var c,a = [],b = Object.keys(this.map);for (c = 0; c < b.length; c++) {a.push(this.map[b[c]].key);}return e(a);}, d.values = function () {var c,a = [],b = Object.keys(this.map);for (c = 0; c < b.length; c++) {a.push(this.map[b[c]].value);}return e(a);}, d.forEach = function (a, b) {var e,d,c = Object.keys(this.map);for (d = 0; d < c.length; d++) {a.call(b, (e = this.map[c[d]]).value, e.key, this);}}, d.set = function (a, b) {var c = this.keyElem.verifyValue(a),d = this.valueElem.verifyValue(b);return this.map[this.keyElem.valueToString(c)] = { key: c, value: d }, this;}, d.get = function (a) {var b = this.keyElem.valueToString(this.keyElem.verifyValue(a));return b in this.map ? this.map[b].value : void 0;}, d.has = function (a) {var b = this.keyElem.valueToString(this.keyElem.verifyValue(a));return b in this.map;}, c;}(e, e.Reflect), e.loadProto = function (a, b, c) {return ("string" == typeof b || b && "string" == typeof b.file && "string" == typeof b.root) && (c = b, b = void 0), e.loadJson(e.DotProto.Parser.parse(a), b, c);}, e.protoFromString = e.loadProto, e.loadProtoFile = function (a, b, c) {if (b && "object" == typeof b ? (c = b, b = null) : b && "function" == typeof b || (b = null), b) return e.Util.fetch("string" == typeof a ? a : a.root + "/" + a.file, function (d) {if (null === d) return b(Error("Failed to fetch file")), void 0;try {b(null, e.loadProto(d, c, a));} catch (f) {b(f);}});var d = e.Util.fetch("object" == typeof a ? a.root + "/" + a.file : a);return null === d ? null : e.loadProto(d, c, a);}, e.protoFromFile = e.loadProtoFile, e.newBuilder = function (a) {return a = a || {}, "undefined" == typeof a.convertFieldsToCamelCase && (a.convertFieldsToCamelCase = e.convertFieldsToCamelCase), "undefined" == typeof a.populateAccessors && (a.populateAccessors = e.populateAccessors), new e.Builder(a);}, e.loadJson = function (a, b, c) {return ("string" == typeof b || b && "string" == typeof b.file && "string" == typeof b.root) && (c = b, b = null), b && "object" == typeof b || (b = e.newBuilder()), "string" == typeof a && (a = JSON.parse(a)), b["import"](a, c), b.resolveAll(), b;}, e.loadJsonFile = function (a, b, c) {if (b && "object" == typeof b ? (c = b, b = null) : b && "function" == typeof b || (b = null), b) return e.Util.fetch("string" == typeof a ? a : a.root + "/" + a.file, function (d) {if (null === d) return b(Error("Failed to fetch file")), void 0;try {b(null, e.loadJson(JSON.parse(d), c, a));} catch (f) {b(f);}});var d = e.Util.fetch("object" == typeof a ? a.root + "/" + a.file : a);return null === d ? null : e.loadJson(JSON.parse(d), c, a);}, h = a, i = e.loadProto(h, void 0, "").build("Modules").probuf;}(d, c, b);return e;}

  var SSMsg$1 = "\npackage Modules;\nmessage probuf {\n  message " + PBName.SetUserStatusInput + "\n  {\n    optional int32 status=1;\n  }\n\n  message SetUserStatusOutput\n  {\n    optional int32 nothing=1;\n  }\n\n  message GetUserStatusInput\n  {\n    optional int32 nothing=1;\n  }\n\n  message GetUserStatusOutput\n  {\n    optional string status=1;\n    optional string subUserId=2;\n  }\n\n  message SubUserStatusInput\n  {\n    repeated string userid =1;\n  }\n\n  message SubUserStatusOutput\n  {\n    optional int32 nothing=1; \n  }\n  message VoipDynamicInput\n  {\n    required int32  engineType = 1;\n    required string channelName = 2;\n    optional string channelExtra = 3;\n  }\n\n  message VoipDynamicOutput\n  {\n      required string dynamicKey=1;\n  }\n  message " + PBName.NotifyMsg + " {\n    required int32 type = 1;\n    optional int64 time = 2;\n    optional string chrmId=3;\n  }\n  message " + PBName.SyncRequestMsg + " {\n    required int64 syncTime = 1;\n    required bool ispolling = 2;\n    optional bool isweb=3;\n    optional bool isPullSend=4;\n    optional bool isKeeping=5;\n    optional int64 sendBoxSyncTime=6;\n  }\n  message " + PBName.UpStreamMessage + " {\n    required int32 sessionId = 1;\n    required string classname = 2;\n    required bytes content = 3;\n    optional string pushText = 4;\n    optional string appData = 5;\n    repeated string userId = 6;\n    optional int64 delMsgTime = 7;\n    optional string delMsgId = 8;\n    optional int32 configFlag = 9;\n    optional int64 clientUniqueId = 10;\n    optional string extraContent = 11;\n  }\n  message " + PBName.DownStreamMessages + " {\n    repeated DownStreamMessage list = 1;\n    required int64 syncTime = 2;\n    optional bool finished = 3;\n  }\n  message " + PBName.DownStreamMessage + " {\n    required string fromUserId = 1;\n    required ChannelType type = 2;\n    optional string groupId = 3;\n    required string classname = 4;\n    required bytes content = 5;\n    required int64 dataTime = 6;\n    required int64 status = 7;\n    optional int64 extra = 8;\n    optional string msgId = 9;\n    optional int32 direction = 10;\n    optional int32 plantform =11;\n    optional int32 isRemoved = 12; \n    optional string source = 13; \n    optional int64 clientUniqueId = 14; \n    optional string extraContent = 15; \n\n  }\n  enum ChannelType {\n    PERSON = 1;\n    PERSONS = 2;\n    GROUP = 3;\n    TEMPGROUP = 4;\n    CUSTOMERSERVICE = 5;\n    NOTIFY = 6;\n    MC=7;\n    MP=8;\n  }\n  message CreateDiscussionInput {\n    optional string name = 1;\n  }\n  message CreateDiscussionOutput {\n    required string id = 1;\n  }\n  message ChannelInvitationInput {\n    repeated string users = 1;\n  }\n  message LeaveChannelInput {\n    required int32 nothing = 1;\n  }\n  message ChannelEvictionInput {\n    required string user = 1;\n  }\n  message RenameChannelInput {\n    required string name = 1;\n  }\n  message ChannelInfoInput {\n    required int32 nothing = 1;\n  }\n  message ChannelInfoOutput {\n    required ChannelType type = 1;\n    required string channelId = 2;\n    required string channelName = 3;\n    required string adminUserId = 4;\n    repeated string firstTenUserIds = 5;\n    required int32 openStatus = 6;\n  }\n  message ChannelInfosInput {\n    required int32 page = 1;\n    optional int32 number = 2;\n  }\n  message ChannelInfosOutput {\n    repeated ChannelInfoOutput channels = 1;\n    required int32 total = 2;\n  }\n  message MemberInfo {\n    required string userId = 1;\n    required string userName = 2;\n    required string userPortrait = 3;\n    required string extension = 4;\n  }\n  message GroupMembersInput {\n    required int32 page = 1;\n    optional int32 number = 2;\n  }\n  message GroupMembersOutput {\n    repeated MemberInfo members = 1;\n    required int32 total = 2;\n  }\n  message GetUserInfoInput {\n    required int32 nothing = 1;\n  }\n  message GetUserInfoOutput {\n    required string userId = 1;\n    required string userName = 2;\n    required string userPortrait = 3;\n  }\n  message GetSessionIdInput {\n    required int32 nothing = 1;\n  }\n  message GetSessionIdOutput {\n    required int32 sessionId = 1;\n  }\n  enum FileType {\n    image = " + FILE_TYPE.IMAGE + ";\n    audio = " + FILE_TYPE.AUDIO + ";\n    video = " + FILE_TYPE.VIDEO + ";\n    file = " + FILE_TYPE.FILE + ";\n  }\n  message " + PBName.GetQNupTokenInput + " {\n    required FileType type = 1;\n    optional string key = 2;\n  }\n  message " + PBName.GetQNdownloadUrlInput + " {\n    required FileType type = 1;\n    required string key = 2;\n    optional string  fileName = 3;\n  }\n  message " + PBName.GetQNupTokenOutput + " {\n    required int64 deadline = 1;\n    required string token = 2;\n    optional string bosToken = 3;\n    optional string bosDate = 4;\n    optional string path = 5;\n  }\n  message " + PBName.GetQNdownloadUrlOutput + " {\n    required string downloadUrl = 1;\n  }\n  message Add2BlackListInput {\n    required string userId = 1;\n  }\n  message RemoveFromBlackListInput {\n    required string userId = 1;\n  }\n  message QueryBlackListInput {\n    required int32 nothing = 1;\n  }\n  message QueryBlackListOutput {\n    repeated string userIds = 1;\n  }\n  message BlackListStatusInput {\n    required string userId = 1;\n  }\n  message BlockPushInput {\n    required string blockeeId = 1;\n  }\n  message ModifyPermissionInput {\n    required int32 openStatus = 1;\n  }\n  message GroupInput {\n    repeated GroupInfo groupInfo = 1;\n  }\n  message GroupOutput {\n    required int32 nothing = 1;\n  }\n  message GroupInfo {\n    required string id = 1;\n    required string name = 2;\n  }\n  message GroupHashInput {\n    required string userId = 1;\n    required string groupHashCode = 2;\n  }\n  message GroupHashOutput {\n    required GroupHashType result = 1;\n  }\n  enum GroupHashType {\n    group_success = 0x00;\n    group_failure = 0x01;\n  }\n  message " + PBName.ChrmInput + " {\n    required int32 nothing = 1;\n  }\n  message ChrmOutput {\n    required int32 nothing = 1;\n  }\n  message " + PBName.ChrmPullMsg + " {\n    required int64 syncTime = 1;\n    required int32 count = 2;\n  }\n  \n  message ChrmPullMsgNew \n  {\n    required int32 count = 1;\n    required int64 syncTime = 2;\n    optional string chrmId=3;\n  }\n  message " + PBName.RelationQryInput + "\n  {\n    optional ChannelType type = 1;\n    optional int32 count = 2;\n    optional int64 startTime = 3;\n    optional int32 order = 4;\n  }\n  message " + PBName.RelationsOutput + "\n  {\n    repeated RelationInfo info = 1;\n  }\n  message RelationInfo\n  {\n    required ChannelType type = 1;\n    required string userId = 2;\n    optional DownStreamMessage msg =3;\n    optional int64 readMsgTime= 4;\n    optional int64 unreadCount= 5;\n  }\n  message RelationInfoReadTime\n  {\n    required ChannelType type = 1;\n    required int64 readMsgTime= 2;\n    required string targetId = 3;\n  }\n  message " + PBName.CleanHisMsgInput + "\n  {\n      required string targetId = 1;\n      required int64 dataTime = 2;\n      optional int32 conversationType= 3;\n  }\n  message HistoryMessageInput\n  {\n    required string targetId = 1;\n    required int64 dataTime =2;\n    required int32 size  = 3;\n  }\n\n  message HistoryMessagesOuput\n  {\n    repeated DownStreamMessage list = 1;\n    required int64 syncTime = 2;\n    required int32 hasMsg = 3;\n  }\n  message " + PBName.QueryChatRoomInfoInput + "\n  {\n    required int32 count= 1;\n    optional int32 order= 2;\n  }\n\n  message " + PBName.QueryChatRoomInfoOutput + "\n  {\n    optional int32 userTotalNums = 1;\n    repeated ChrmMember userInfos = 2;\n  }\n  message ChrmMember\n  {\n    required int64 time = 1;\n    required string id = 2;\n  }\n  message MPFollowInput\n  {\n    required string id = 1;\n  }\n\n  message MPFollowOutput\n  {\n    required int32 nothing = 1;\n    optional MpInfo info =2;\n  }\n\n  message " + PBName.MCFollowInput + "\n  {\n    required string id = 1;\n  }\n\n  message MCFollowOutput\n  {\n    required int32 nothing = 1;\n    optional MpInfo info =2;\n  }\n\n  message MpInfo  \n  {\n    required string mpid=1;\n    required string name = 2;\n    required string type = 3;\n    required int64 time=4;\n    optional string portraitUrl=5;\n    optional string extra =6;\n  }\n\n  message SearchMpInput\n  {\n    required int32 type=1;\n    required string id=2;\n  }\n\n  message SearchMpOutput\n  {\n    required int32 nothing=1;\n    repeated MpInfo info = 2;\n  }\n\n  message PullMpInput\n  {\n    required int64 time=1;\n    required string mpid=2;\n  }\n\n  message PullMpOutput\n  {\n    required int32 status=1;\n    repeated MpInfo info = 2;\n  }\n  message " + PBName.HistoryMsgInput + "\n  {\n    optional string targetId = 1;\n    optional int64 time = 2;\n    optional int32 count  = 3;\n    optional int32 order = 4;\n  }\n\n  message " + PBName.HistoryMsgOuput + "\n  {\n    repeated DownStreamMessage list=1;\n    required int64 syncTime=2;\n    required int32 hasMsg=3;\n  }\n  message " + PBName.RtcQueryListInput + "{\n    optional int32 order=1;\n  }\n\n  message " + PBName.RtcKeyDeleteInput + "{\n    repeated string key=1;\n  }\n\n  message " + PBName.RtcValueInfo + "{\n    required string key=1;\n    required string value=2;\n  }\n\n  message RtcUserInfo{\n    required string userId=1;\n    repeated " + PBName.RtcValueInfo + " userData=2;\n  }\n\n  message " + PBName.RtcUserListOutput + "{\n    repeated RtcUserInfo list=1;\n    optional string token=2;\n    optional string sessionId=3;\n  }\n  message RtcRoomInfoOutput{\n    optional string roomId = 1;\n    repeated " + PBName.RtcValueInfo + " roomData = 2;\n    optional int32 userCount = 3;\n    repeated RtcUserInfo list=4;\n  }\n  message " + PBName.RtcInput + "{\n    required int32 roomType=1;\n    optional int32 broadcastType=2;\n  }\n  message RtcQryInput{ \n    required bool isInterior=1;\n    required targetType target=2;\n    repeated string key=3;\n  }\n  message " + PBName.RtcQryOutput + "{\n    repeated " + PBName.RtcValueInfo + " outInfo=1;\n  }\n  message RtcDelDataInput{\n    repeated string key=1;\n    required bool isInterior=2;\n    required targetType target=3;\n  }\n  message " + PBName.RtcDataInput + "{ \n    required bool interior=1;\n    required targetType target=2;\n    repeated string key=3;\n    optional string objectName=4;\n    optional string content=5;\n  }\n  message " + PBName.RtcSetDataInput + "{\n    required bool interior=1;\n    required targetType target=2;\n    required string key=3;\n    required string value=4;\n    optional string objectName=5;\n    optional string content=6;\n  }\n  message " + PBName.RtcUserSetDataInput + " {\n    repeated " + PBName.RtcValueInfo + " valueInfo = 1;\n    required string objectName = 2;\n    repeated " + PBName.RtcValueInfo + " content = 3;\n  }\n  message RtcOutput\n  {\n    optional int32 nothing=1; \n  }\n  message " + PBName.RtcTokenOutput + "{\n    required string rtcToken=1;\n  }\n  enum targetType {\n    ROOM =1 ;\n    PERSON = 2;\n  }\n  message " + PBName.RtcSetOutDataInput + "{\n    required targetType target=1;\n    repeated " + PBName.RtcValueInfo + " valueInfo=2;\n    optional string objectName=3;\n    optional string content=4;\n  }\n  message " + PBName.RtcQryUserOutDataInput + "{\n    repeated string userId = 1;\n  }\n  message " + PBName.RtcUserOutDataOutput + "{\n    repeated RtcUserInfo user = 1;\n  }\n  message " + PBName.SessionsAttQryInput + "{\n    required int32 nothing = 1;\n  }\n  message " + PBName.SessionsAttOutput + "{\n    required int64 inboxTime = 1;\n    required int64 sendboxTime = 2;\n    required int64 totalUnreadCount = 3;\n  }\n  message " + PBName.SessionMsgReadInput + "\n  {\n    required ChannelType type = 1;\n    required int64 msgTime = 2;\n    required string channelId = 3;\n  }\n  message SessionMsgReadOutput\n  {\n    optional int32 nothing=1; \n  }\n  message " + PBName.DeleteSessionsInput + "\n  {\n    repeated SessionInfo sessions = 1;\n  }\n  message " + PBName.SessionInfo + "\n  {\n    required ChannelType type = 1;\n    required string channelId = 2;\n  }\n  message " + PBName.DeleteSessionsOutput + "\n  {\n    optional int32 nothing=1; \n  }\n  message " + PBName.DeleteMsgInput + "\n  {\n    optional ChannelType type = 1;\n    optional string conversationId = 2;\n    repeated DeleteMsg msgs = 3;\n  }\n  message DeleteMsg\n  {\n    optional string msgId = 1;\n    optional int64 msgDataTime = 2;\n    optional int32 direct = 3;\n  }\n  message ChrmKVEntity {\n    required string key = 1;\n    required string value = 2;\n    optional int32 status = 3;\n    optional int64 timestamp = 4;\n    optional string uid = 5;\n  }\n  message " + PBName.SetChrmKV + " {\n    required ChrmKVEntity entry = 1;\n    optional bool bNotify = 2;\n    optional UpStreamMessage notification = 3;\n    optional ChannelType type = 4;\n  }\n  message " + PBName.ChrmKVOutput + " {\n    repeated ChrmKVEntity entries = 1;\n    optional bool bFullUpdate = 2;\n    optional int64 syncTime = 3;\n  }\n  message " + PBName.QueryChrmKV + " {\n    required int64 timestamp = 1;\n  }\n  message " + PBName.ChrmNotifyMsg + " {\t\n    required int32 type= 1;\n    optional int64 time= 2;\n    optional string chrmId=3;\n  }\n  message " + PBName.SetUserSettingInput + " {\n    required int64 version=1;\n    required string value=2;\n  }\n  message " + PBName.SetUserSettingOutput + " {\n    required int64 version=1;\n    required bool reserve=2;\n  }\n  message " + PBName.PullUserSettingInput + " {\n    required int64 version=1;//\u5F53\u524D\u5BA2\u6237\u7AEF\u7684\u6700\u5927\u7248\u672C\u53F7\n    optional bool reserve=2;\n  }\n  message " + PBName.PullUserSettingOutput + " {\n    repeated UserSettingItem items = 1;\n    required int64 version=2;\n  }\n  message UserSettingItem {\n    required string targetId= 1;\n    required ChannelType type = 2;\n    required string key = 4;\n    required bytes value = 5;\n    required int64 version=6;\n    required int32 status=7;\n  }\n  message " + PBName.SessionReq + " {\n    required int64 time = 1;\n  }\n  message " + PBName.SessionStates + " {\n    required int64 version=1;\n    repeated SessionState state= 2;\n  }\n  message " + PBName.SessionState + " {\n    required ChannelType type = 1;\n    required string channelId = 2;  \n    optional int64 time = 3;\n    repeated SessionStateItem stateItem = 4;\n  }\n  message " + PBName.SessionStateItem + " {\n    required SessionStateType sessionStateType = 1;\n    required string value = 2;\n  }\n  enum SessionStateType {\n    IsSilent = 1;\n    IsTop = 2;\n  }\n  message " + PBName.SessionStateModifyReq + " {\n    required int64 version=1;\n    repeated SessionState state= 2;\n  }\n  message " + PBName.SessionStateModifyResp + " {\n    required int64 version=1;\n  }\n}\n";

  var Codec$1 = {};

  try {
    Codec$1 = protobuf(SSMsg$1);
  } catch (e) {
    Codec$1 = {};
  }

  Codec$1.getModule = function (pbName) {
    var modules = new Codec$1[pbName]();

    modules.getArrayData = function () {
      var data = modules.toArrayBuffer();
      data = utils.ArrayBufferToArray(data);
      return data;
    };

    return modules;
  };

  var SocketCodec = Codec$1;

  var isGroup$1 = common.isGroup,
  isChatRoom$1 = common.isChatRoom;

  var Codec$2 = function () {
    function Codec$$1(option) {
      this.codec = SocketCodec;
      this.connectType = void 0;
      option = option || {};
      this.connectType = option.connectType;
      this.connectType && this.setCodecType(this.connectType);
    }

    var _proto = Codec$$1.prototype;

    _proto.setCodecType = function setCodecType(type) {
      this.codec = type === CONNECT_TYPE.COMET ? Codec : SocketCodec;
    };

    _proto.decodeByPBName = function decodeByPBName(data, pbName, option) {
      var _formatEventMap;

      var self = this;
      var formatEventMap = (_formatEventMap = {}, _formatEventMap[PBName.DownStreamMessages] = self.formatSyncMessages, _formatEventMap[PBName.DownStreamMessage] = self.formatReceivedMessage, _formatEventMap[PBName.UpStreamMessage] = self.formatSentMessage, _formatEventMap[PBName.HistoryMsgOuput] = self.formatHistoryMessages, _formatEventMap[PBName.RelationsOutput] = self.formatConversationList, _formatEventMap[PBName.QueryChatRoomInfoOutput] = self.formatChatRoomInfos, _formatEventMap[PBName.RtcUserListOutput] = self.formatRTCUserList, _formatEventMap[PBName.RtcQryOutput] = self.formatRTCData, _formatEventMap[PBName.ChrmKVOutput] = self.formatChatRoomKVList, _formatEventMap[PBName.PullUserSettingOutput] = self.formatUserSetting, _formatEventMap[PBName.SessionStates] = self.formatConversationStatus, _formatEventMap);
      var decodedData = data;
      var formatEvent = formatEventMap[pbName];

      try {
        decodedData = self.codec[pbName].decode(data);

        if (utils.isObject(decodedData)) {
          decodedData = utils.batchInt64ToTimestamp(decodedData);
        }

        if (utils.isFunction(formatEvent)) {
          decodedData = formatEvent.call(self, decodedData, option);
        }
      } catch (e) {}

      return decodedData;
    };

    _proto.formatBytes = function formatBytes(content) {
      try {
        var _content = content,
        offset = _content.offset,
        buffer = _content.buffer,
        limit = _content.limit;

        if (offset) {
          content = utils.ArrayBufferToUint8Array(buffer).subarray(offset, limit);
          content = BinaryHelper.readUTF(content);
        }

        content = utils.parseJSON(content);
      } catch (e) {}

      return content;
    };

    _proto.formatSyncMessages = function formatSyncMessages(data, option) {
      option = option || {};
      var self = this,
      onMessage = option.onMessage || utils.noop,
      list = data.list,
      syncTime = data.syncTime,
      maxListIndex = list.length - 1;
      var finished = data.finished;

      if (utils.isUndefined(finished)) {
        data.finished = finished = true;
      }

      data.syncTime = utils.int64ToTimestamp(syncTime);
      data.list = utils.map(list, function (msgData, index) {
        var message = self.formatReceivedMessage(msgData, option),
        isLastInAPull = utils.isEqual(index, maxListIndex),
        isFinished = isLastInAPull && finished;

        try {
          onMessage({
            isLastInAPull: isLastInAPull,
            message: message,
            finished: isFinished });

        } catch (e) {
          utils.consoleError(e);
        }

        return message;
      });
      return data;
    };

    _proto.formatReceivedMessage = function formatReceivedMessage(data, option) {
      option = option || {};
      var self = this;

      var _option = option,
      currentUserId = _option.currentUserId,
      connectedTime = _option.connectedTime,
      content = data.content,
      fromUserId = data.fromUserId,
      type = data.type,
      groupId = data.groupId,
      status = data.status,
      dataTime = data.dataTime,
      messageType = data.classname,
      messageUId = data.msgId,
      extraContent = data.extraContent,
      direction = data.direction || MESSAGE_DIRECTION.RECEIVE,
      isSelfSend = utils.isEqual(direction, MESSAGE_DIRECTION.SEND),
      _common$getMessageOpt = common.getMessageOptionByStatus(status),
      isPersited = _common$getMessageOpt.isPersited,
      isCounted = _common$getMessageOpt.isCounted,
      isMentiond = _common$getMessageOpt.isMentiond,
      disableNotification = _common$getMessageOpt.disableNotification,
      receivedStatus = _common$getMessageOpt.receivedStatus,
      canIncludeExpansion = _common$getMessageOpt.canIncludeExpansion,
      targetId = isGroup$1(type) || isChatRoom$1(type) ? groupId : fromUserId,
      senderUserId = isSelfSend ? currentUserId : fromUserId,
      sentTime = utils.int64ToTimestamp(dataTime),
      isOffLineMessage = sentTime < connectedTime,
      isChatRoomMsg = common.isChatRoom(type);

      var messageDirection = isSelfSend ? MESSAGE_DIRECTION.SEND : MESSAGE_DIRECTION.RECEIVE;

      if (isChatRoomMsg && utils.isEqual(fromUserId, currentUserId)) {
        messageDirection = MESSAGE_DIRECTION.SEND;
      }

      var isMentioned = isMentiond;
      var expansion = null;

      if (extraContent) {
        expansion = {};
        expansion = common.formatExtraContent(extraContent);
      }

      return {
        type: type,
        targetId: targetId,
        senderUserId: senderUserId,
        messageType: messageType,
        messageUId: messageUId,
        isPersited: isPersited,
        isCounted: isCounted,
        isMentiond: isMentiond,
        isMentioned: isMentioned,
        sentTime: sentTime,
        isOffLineMessage: isOffLineMessage,
        messageDirection: messageDirection,
        receivedTime: common.DelayTimer.getTime(),
        disableNotification: disableNotification,
        receivedStatus: receivedStatus,
        canIncludeExpansion: canIncludeExpansion,
        content: self.formatBytes(content),
        expansion: expansion };

    };

    _proto.formatSentMessage = function formatSentMessage(data, option) {
      var self = this;

      var content = data.content,
      messageType = data.classname,
      sessionId = data.sessionId,
      messageUId = data.msgId,
      extraContent = data.extraContent,
      signal = option.signal,
      currentUserId = option.currentUserId,
      date = signal.date,
      topic = signal.topic,
      targetId = signal.targetId,
      _common$getUpMessageO = common.getUpMessageOptionBySessionId(sessionId),
      isPersited = _common$getUpMessageO.isPersited,
      isCounted = _common$getUpMessageO.isCounted,
      disableNotification = _common$getUpMessageO.disableNotification,
      canIncludeExpansion = _common$getUpMessageO.canIncludeExpansion,
      type = PUBLISH_TOPIC_TO_CONVERSATION_TYPE[topic] || CONVERSATION_TYPE.PRIVATE,
      isStatusMessage = utils.isInclude(PUBLISH_STATUS_TOPIC, topic);

      var expansion = null;

      if (extraContent) {
        expansion = {};
        expansion = common.formatExtraContent(extraContent);
      }

      return {
        type: type,
        targetId: targetId,
        messageType: messageType,
        messageUId: messageUId,
        isPersited: isPersited,
        isCounted: isCounted,
        isStatusMessage: isStatusMessage,
        senderUserId: currentUserId,
        content: self.formatBytes(content),
        sentTime: utils.secondsToMilliseconds(date),
        receivedTime: common.DelayTimer.getTime(),
        messageDirection: MESSAGE_DIRECTION.SEND,
        isOffLineMessage: false,
        disableNotification: disableNotification,
        canIncludeExpansion: canIncludeExpansion,
        expansion: expansion };

    };

    _proto.formatHistoryMessages = function formatHistoryMessages(data, option) {
      var self = this;
      var conversation = option.conversation || {},
      msgList = data.list,
      hasMsg = data.hasMsg,
      targetId = conversation.targetId,
      syncTime = utils.int64ToTimestamp(data.syncTime);
      var list = [];
      utils.forEach(msgList, function (msgData) {
        var msg = self.formatReceivedMessage(msgData, option);
        msg.targetId = targetId;
        list.push(msg);
      }, {
        isReverse: true });

      return {
        syncTime: syncTime,
        list: list,
        hasMore: !!hasMsg };

    };

    _proto.formatConversationList = function formatConversationList(serverData, option) {
      var self = this;
      var conversationList = serverData.info;
      var afterDecode = option.afterDecode || utils.noop;
      conversationList = utils.map(conversationList, function (serverConversation) {
        var msg = serverConversation.msg,
        userId = serverConversation.userId,
        type = serverConversation.type,
        unreadCount = serverConversation.unreadCount;
        msg = self.formatReceivedMessage(msg, option);
        msg.targetId = userId;
        var conversation = {
          targetId: userId,
          type: type,
          unreadMessageCount: unreadCount,
          latestMessage: msg };

        return afterDecode(conversation) || conversation;
      });
      return conversationList || [];
    };

    _proto.formatChatRoomInfos = function formatChatRoomInfos(data) {
      var userTotalNums = data.userTotalNums,
      userInfos = data.userInfos;
      userInfos = utils.map(userInfos, function (user) {
        var id = user.id,
        time = user.time;
        time = utils.int64ToTimestamp(time);
        return {
          id: id,
          time: time };

      });
      return {
        userCount: userTotalNums,
        userInfos: userInfos };

    };

    _proto.formatRTCUserList = function formatRTCUserList(rtcInfos) {
      var list = rtcInfos.list,
      token = rtcInfos.token,
      sessionId = rtcInfos.sessionId;
      var users = {};
      utils.forEach(list, function (item) {
        var userId = item.userId,
        userData = item.userData;
        var tmpData = {};
        utils.forEach(userData, function (data) {
          var key = data.key,
          value = data.value;
          tmpData[key] = value;
        });
        users[userId] = tmpData;
      });
      return {
        users: users,
        token: token,
        sessionId: sessionId };

    };

    _proto.formatRTCData = function formatRTCData(data) {
      var list = data.outInfo;
      var props = {};
      utils.forEach(list, function (item) {
        props[item.key] = item.value;
      });
      return props;
    };

    _proto.formatRTCRoomInfo = function formatRTCRoomInfo(data) {
      var id = data.roomId,
      total = data.userCount,
      roomData = data.roomData;
      var room = {
        id: id,
        total: total };

      utils.forEach(roomData, function (data) {
        room[data.key] = data.value;
      });
      return room;
    };

    _proto.formatChatRoomKVList = function formatChatRoomKVList(data) {
      var kvEntries = data.entries,
      isFullUpdate = data.bFullUpdate,
      syncTime = data.syncTime;
      kvEntries = kvEntries || [];
      kvEntries = utils.map(kvEntries, function (kv) {
        var key = kv.key,
        value = kv.value,
        status = kv.status,
        timestamp = kv.timestamp,
        uid = kv.uid;

        var _common$getChatRoomKV = common.getChatRoomKVByStatus(status),
        isAutoDelete = _common$getChatRoomKV.isAutoDelete,
        isOverwrite = _common$getChatRoomKV.isOverwrite,
        type = _common$getChatRoomKV.type;

        return {
          key: key,
          value: value,
          isAutoDelete: isAutoDelete,
          isOverwrite: isOverwrite,
          type: type,
          userId: uid,
          timestamp: utils.int64ToTimestamp(timestamp) };

      });
      return {
        kvEntries: kvEntries,
        isFullUpdate: isFullUpdate,
        syncTime: syncTime };

    };

    _proto.formatUserSetting = function formatUserSetting(data) {
      var self = this;
      var items = data.items,
      version = data.version;
      var settings = {};
      utils.forEach(items || [], function (setting) {
        var key = setting.key,
        version = setting.version,
        value = setting.value;
        setting.version = utils.int64ToTimestamp(version);
        setting.value = self.formatBytes(value);
        settings[key] = setting;
      });
      return {
        settings: settings,
        version: version };

    };

    _proto.formatConversationStatus = function formatConversationStatus(data) {
      var stateList = data.state;
      var statusList = [];
      utils.forEach(stateList, function (session) {
        var type = session.type,
        targetId = session.channelId,
        updatedTime = session.time,
        stateItem = session.stateItem;
        var notificationStatus = NOTIFICATION_STATUS.NOTIFY,
        isTop = false;
        utils.forEach(stateItem, function (_ref) {
          var sessionStateType = _ref.sessionStateType,
          value = _ref.value;

          switch (sessionStateType) {
            case CONVERSATION_STATUS_TYPE.DO_NOT_DISTURB:
              notificationStatus = utils.isEqual(value, CONVERSATION_STATUS_CONFIG.ENABLED) ? NOTIFICATION_STATUS.DO_NOT_DISTURB : NOTIFICATION_STATUS.NOTIFY;
              break;

            case CONVERSATION_STATUS_TYPE.TOP:
              isTop = utils.isEqual(value, CONVERSATION_STATUS_CONFIG.ENABLED);
              break;

            default:
              break;}

        });
        statusList.push({
          type: type,
          targetId: targetId,
          notificationStatus: notificationStatus,
          isTop: isTop,
          updatedTime: utils.int64ToTimestamp(updatedTime) });

      });
      return statusList;
    };

    _proto.encodeServerConfParams = function encodeServerConfParams() {
      var modules = this.codec.getModule(PBName.SessionsAttQryInput);
      modules.setNothing(1);
      return modules.getArrayData();
    };

    _proto.getUpMsgModule = function getUpMsgModule(conversation, option) {
      var type = conversation.type;
      var messageType = option.messageType,
      isMentiond = option.isMentiond,
      mentiondType = option.mentiondType,
      mentiondUserIdList = option.mentiondUserIdList,
      content = option.content,
      pushContent = option.pushContent,
      pushData = option.pushData,
      directionalUserIdList = option.directionalUserIdList,
      isFilerWhiteBlacklist = option.isFilerWhiteBlacklist,
      isVoipPush = option.isVoipPush,
      canIncludeExpansion = option.canIncludeExpansion,
      expansion = option.expansion;
      var isGroupType = common.isGroup(type);
      var modules = this.codec.getModule(PBName.UpStreamMessage);
      var sessionId = common.getSessionId(option);
      var flag = 0;
      modules.setSessionId(sessionId);

      if (isGroupType && isMentiond && content) {
        content.mentionedInfo = {
          userIdList: mentiondUserIdList,
          type: mentiondType || MENTIOND_TYPE.ALL };

      }

      pushContent && modules.setPushText(pushContent);
      pushData && modules.setAppData(pushData);
      directionalUserIdList && modules.setUserId(directionalUserIdList);
      flag |= isVoipPush ? 0x01 : 0;
      flag |= isFilerWhiteBlacklist ? 0x02 : 0;
      modules.setConfigFlag(flag);
      modules.setClassname(messageType);
      modules.setContent(utils.toJSON(content));

      if (canIncludeExpansion && expansion) {
        var extraContent = {};
        utils.forEach(expansion, function (val, key) {
          extraContent[key] = {
            v: val };

        });
        modules.setExtraContent(utils.toJSON(extraContent));
      }

      return modules;
    };

    _proto.encodeUpMsg = function encodeUpMsg(conversation, option) {
      var modules = this.getUpMsgModule(conversation, option);
      return modules.getArrayData();
    };

    _proto.encodeSyncMsg = function encodeSyncMsg(syncMsgArgs) {
      var sendboxTime = syncMsgArgs.sendboxTime,
      inboxTime = syncMsgArgs.inboxTime;
      var modules = this.codec.getModule(PBName.SyncRequestMsg);
      modules.setIspolling(false);
      modules.setIsPullSend(true);
      modules.setSendBoxSyncTime(sendboxTime);
      modules.setSyncTime(inboxTime);
      return modules.getArrayData();
    };

    _proto.encodeChrmSyncMsg = function encodeChrmSyncMsg(time, count) {
      time = time || 0;
      count = count || 0;
      var modules = this.codec.getModule(PBName.ChrmPullMsg);
      modules.setCount(count);
      modules.setSyncTime(time);
      return modules.getArrayData();
    };

    _proto.encodeGetHistoryMsg = function encodeGetHistoryMsg(conversation, option) {
      var targetId = conversation.targetId;
      var count = option.count,
      order = option.order,
      timestrap = option.timestrap;
      var modules = this.codec.getModule(PBName.HistoryMsgInput);
      modules.setTargetId(targetId);
      modules.setTime(timestrap);
      modules.setCount(count);
      modules.setOrder(order);
      return modules.getArrayData();
    };

    _proto.encodeGetConversationList = function encodeGetConversationList(option) {
      option = option || {};
      var _option2 = option,
      count = _option2.count,
      startTime = _option2.startTime;
      var modules = this.codec.getModule(PBName.RelationQryInput);
      modules.setType(1);
      modules.setCount(count);
      modules.setStartTime(startTime);
      return modules.getArrayData();
    };

    _proto.encodeOldConversationList = function encodeOldConversationList(option) {
      option = option || {};
      var _option3 = option,
      count = _option3.count,
      type = _option3.type,
      startTime = _option3.startTime,
      order = _option3.order;
      var modules = this.codec.getModule(PBName.RelationQryInput);
      type = type || CONVERSATION_TYPE.PRIVATE;
      count = count || 0;
      startTime = startTime || 0;
      order = order || 0;
      modules.setType(type);
      modules.setCount(count);
      modules.setStartTime(startTime);
      modules.setOrder(order);
      return modules.getArrayData();
    };

    _proto.encodeRemoveConversationList = function encodeRemoveConversationList(conversationList) {
      var _this = this;

      var modules = this.codec.getModule(PBName.DeleteSessionsInput);
      var sessions = [];
      utils.forEach(conversationList, function (conversation) {
        var type = conversation.type,
        targetId = conversation.targetId;

        var session = _this.codec.getModule(PBName.SessionInfo);

        session.setType(type);
        session.setChannelId(targetId);
        sessions.push(session);
      });
      modules.setSessions(sessions);
      return modules.getArrayData();
    };

    _proto.encodeDeleteMessages = function encodeDeleteMessages(conversation, messages) {
      var type = conversation.type,
      targetId = conversation.targetId;
      var modules = this.codec.getModule(PBName.DeleteMsgInput);
      var encodeMsgs = [];
      utils.forEach(messages, function (message) {
        encodeMsgs.push({
          msgId: message.messageUId,
          msgDataTime: message.sentTime,
          direct: message.messageDirection });

      });
      modules.setType(type);
      modules.setConversationId(targetId);
      modules.setMsgs(encodeMsgs);
      return modules.getArrayData();
    };

    _proto.encodeClearMessages = function encodeClearMessages(conversation, option) {
      var targetId = conversation.targetId;
      var timestrap = option.timestrap;
      var modules = this.codec.getModule(PBName.CleanHisMsgInput);
      timestrap = timestrap || utils.getCurrentTimestamp();
      modules.setDataTime(timestrap);
      modules.setTargetId(targetId);
      return modules.getArrayData();
    };

    _proto.encodeClearUnreadCount = function encodeClearUnreadCount(conversation, option) {
      var type = conversation.type,
      targetId = conversation.targetId;
      var timestrap = option.timestrap;
      var modules = this.codec.getModule(PBName.SessionMsgReadInput);
      timestrap = timestrap || +new Date();
      modules.setType(type);
      modules.setChannelId(targetId);
      modules.setMsgTime(timestrap);
      return modules.getArrayData();
    };

    _proto.encodeJoinOrQuitChatRoom = function encodeJoinOrQuitChatRoom() {
      var modules = this.codec.getModule(PBName.ChrmInput);
      modules.setNothing(1);
      return modules.getArrayData();
    };

    _proto.encodeGetChatRoomInfo = function encodeGetChatRoomInfo(option) {
      option = option || {};
      var _option4 = option,
      count = _option4.count,
      order = _option4.order;
      var modules = this.codec.getModule(PBName.QueryChatRoomInfoInput);
      modules.setCount(count);
      modules.setOrder(order);
      return modules.getArrayData();
    };

    _proto.encodeJoinRTCRoom = function encodeJoinRTCRoom(room) {
      var mode = room.mode,
      broadcastType = room.broadcastType;
      var modules = this.codec.getModule(PBName.RtcInput);
      mode = mode || 0;
      modules.setRoomType(mode);
      !utils.isUndefined(broadcastType) && modules.setBroadcastType(broadcastType);
      return modules.getArrayData();
    };

    _proto.encodeQuitRTCRoom = function encodeQuitRTCRoom() {
      return this.codec.getModule(PBName.SetUserStatusInput).getArrayData();
    };

    _proto.encodeSetRTCData = function encodeSetRTCData(key, value, isInner, apiType, message) {
      var modules = this.codec.getModule(PBName.RtcSetDataInput);
      modules.setInterior(isInner);
      modules.setTarget(apiType);
      modules.setKey(key);
      modules.setValue(value);
      message = message || {};
      var _message = message,
      name = _message.name,
      content = _message.content;
      !utils.isUndefined(name) && modules.setObjectName(name);

      if (!utils.isUndefined(content)) {
        if (utils.isObject(content)) {
          content = utils.toJSON(content);
        }

        modules.setContent(content);
      }

      return modules.getArrayData();
    };

    _proto.encodeUserSetRTCData = function encodeUserSetRTCData(message, valueInfo, objectName) {
      var modules = this.codec.getModule(PBName.RtcUserSetDataInput);
      modules.setObjectName(objectName);
      var val = this.codec.getModule(PBName.RtcValueInfo);
      val.setKey(message.name);
      val.setValue(message.content);
      modules.setContent(val);
      val = this.codec.getModule(PBName.RtcValueInfo);
      val.setKey('uris');
      val.setValue(valueInfo);
      modules.setValueInfo(val);
      return modules.getArrayData();
    };

    _proto.encodeGetRTCData = function encodeGetRTCData(keys, isInner, apiType) {
      var modules = this.codec.getModule(PBName.RtcDataInput);
      modules.setInterior(isInner);
      modules.setTarget(apiType);
      modules.setKey(keys);
      return modules.getArrayData();
    };

    _proto.encodeRemoveRTCData = function encodeRemoveRTCData(keys, isInner, apiType, message) {
      var modules = this.codec.getModule(PBName.RtcDataInput);
      modules.setInterior(isInner);
      modules.setTarget(apiType);
      modules.setKey(keys);
      message = message || {};
      var _message2 = message,
      name = _message2.name,
      content = _message2.content;
      !utils.isUndefined(name) && modules.setObjectName(name);

      if (!utils.isUndefined(content)) {
        if (utils.isObject(content)) {
          content = utils.toJSON(content);
        }

        modules.setContent(content);
      }

      return modules.getArrayData();
    };

    _proto.encodeSetRTCOutData = function encodeSetRTCOutData(data, type, message) {
      var modules = this.codec.getModule(PBName.RtcSetOutDataInput);
      modules.setTarget(type);

      if (!utils.isArray(data)) {
        data = [data];
      }

      utils.forEach(data, function (item, index) {
        item.key = item.key ? item.key.toString() : item.key;
        item.value = item.value ? item.value.toString() : item.value;
        data[index] = item;
      });
      modules.setValueInfo(data);
      message = message || {};
      var _message3 = message,
      name = _message3.name,
      content = _message3.content;
      !utils.isUndefined(name) && modules.setObjectName(name);

      if (!utils.isUndefined(content)) {
        if (utils.isObject(content)) {
          content = utils.toJSON(content);
        }

        modules.setContent(content);
      }

      return modules.getArrayData();
    };

    _proto.ecnodeGetRTCOutData = function ecnodeGetRTCOutData(userIds) {
      var modules = this.codec.getModule(PBName.RtcQryUserOutDataInput);
      modules.setUserId(userIds);
      return modules.getArrayData();
    };

    _proto.encodeSetRTCState = function encodeSetRTCState(content) {
      var modules = this.codec.getModule(PBName.MCFollowInput);
      var report = content.report;
      modules.setId(report);
      return modules.getArrayData();
    };

    _proto.encodeGetRTCRoomInfo = function encodeGetRTCRoomInfo() {
      var modules = this.codec.getModule(PBName.RtcQueryListInput);
      modules.setOrder(2);
      return modules.getArrayData();
    };

    _proto.encodeSetRTCUserInfo = function encodeSetRTCUserInfo(info) {
      var modules = this.codec.getModule(PBName.RtcValueInfo);
      var key = info.key,
      value = info.value;
      modules.setKey(key);
      modules.setValue(value);
      return modules.getArrayData();
    };

    _proto.encodeRemoveRTCUserInfo = function encodeRemoveRTCUserInfo(info) {
      var modules = this.codec.getModule(PBName.RtcKeyDeleteInput);
      var keys = info.keys || [];

      if (!utils.isArray(keys)) {
        keys = [keys];
      }

      modules.setKey(keys);
      return modules.getArrayData();
    };

    _proto.encodeGetFileToken = function encodeGetFileToken(fileType, fileName) {
      var modules = this.codec.getModule(PBName.GetQNupTokenInput);
      modules.setType(fileType);
      modules.setKey(fileName);
      return modules.getArrayData();
    };

    _proto.encodeGetFileUrl = function encodeGetFileUrl(fileType, fileName, originName) {
      var modules = this.codec.getModule(PBName.GetQNdownloadUrlInput);
      modules.setType(fileType);
      modules.setKey(fileName);

      if (originName) {
        modules.setFileName(originName);
      }

      return modules.getArrayData();
    };

    _proto.encodeModifyChatRoomKV = function encodeModifyChatRoomKV(chrm, entry, action, currentUserId) {
      var modules = this.codec.getModule(PBName.SetChrmKV);
      var key = entry.key,
      value = entry.value,
      extra = entry.notificationExtra,
      isSendNotification = entry.isSendNotification;
      var status = common.getChatRoomKVOptStatus(entry, action);
      var serverEntry = {
        key: key,
        status: status,
        value: value || '',
        uid: currentUserId };


      if (utils.isEmpty(serverEntry.status)) {
        delete serverEntry.status;
      }

      modules.setEntry(serverEntry);

      if (isSendNotification) {
        var conversation = {
          type: CONVERSATION_TYPE.CHATROOM,
          targetId: chrm.id };

        var msgContent = {
          key: key,
          value: value,
          extra: extra,
          type: action };

        var msgModule = this.getUpMsgModule(conversation, {
          messageType: MESSAGE_TYPE.CHRM_KV_NOTIFY,
          content: msgContent,
          isPersited: false,
          isCounted: false });

        modules.setNotification(msgModule);
        modules.setBNotify(true);
        modules.setType(CONVERSATION_TYPE.CHATROOM);
      }

      return modules.getArrayData();
    };

    _proto.encodePullChatRoomKV = function encodePullChatRoomKV(time) {
      var modules = this.codec.getModule(PBName.QueryChrmKV);
      modules.setTimestamp(time);
      return modules.getArrayData();
    };

    _proto.encodePullUserSetting = function encodePullUserSetting(version) {
      var modules = this.codec.getModule(PBName.PullUserSettingInput);
      modules.setVersion(version);
      return modules.getArrayData();
    };

    _proto.encodeGetConversationStatus = function encodeGetConversationStatus(time) {
      var modules = this.codec.getModule(PBName.SessionReq);
      modules.setTime(time);
      return modules.getArrayData();
    };

    _proto.encodeSetConversationStatus = function encodeSetConversationStatus(statusList) {
      var _this2 = this;

      var modules = this.codec.getModule(PBName.SessionStateModifyReq),
      currentTime = common.DelayTimer.getTime();
      var stateModuleList = [];
      utils.forEach(statusList, function (status) {
        var stateModules = _this2.codec.getModule(PBName.SessionState);

        var type = status.type,
        targetId = status.targetId,
        notificationStatus = status.notificationStatus,
        isTop = status.isTop;
        var stateItemModuleList = [];
        stateModules.setType(type);
        stateModules.setChannelId(targetId);
        stateModules.setTime(currentTime);
        var isNotDisturb = utils.isEqual(notificationStatus, NOTIFICATION_STATUS.DO_NOT_DISTURB);
        var TypeToVal = {};

        if (!utils.isUndefined(notificationStatus)) {
          TypeToVal[CONVERSATION_STATUS_TYPE.DO_NOT_DISTURB] = isNotDisturb;
        }

        if (!utils.isUndefined(isTop)) {
          TypeToVal[CONVERSATION_STATUS_TYPE.TOP] = isTop;
        }

        utils.forEach(TypeToVal, function (val, type) {
          if (!utils.isUndefined(val)) {
            var stateItemModules = _this2.codec.getModule(PBName.SessionStateItem);

            val = val ? CONVERSATION_STATUS_CONFIG.ENABLED : CONVERSATION_STATUS_CONFIG.DISABLED;
            stateItemModules.setSessionStateType(Number(type));
            stateItemModules.setValue(val);
            var stateItemModulesData = _this2.connectType === CONNECT_TYPE.COMET ? stateItemModules.data : stateItemModules;
            stateItemModuleList.push(stateItemModulesData);
          }
        });
        stateModules.setStateItem(stateItemModuleList);
        var stateModulesData = _this2.connectType === CONNECT_TYPE.COMET ? stateModules.data : stateModules;
        stateModuleList.push(stateModulesData);
      });
      modules.setVersion(currentTime);
      modules.setState(stateModuleList);
      return modules.getArrayData();
    };

    return Codec$$1;
  }();

  var DeferHandler$3 = utils.DeferHandler,
  Defer$2 = utils.Defer;
  var SignalId$1 = common.SignalId;

  var ServerEngine = function () {
    function ServerEngine(option) {
      this._transporter = void 0;
      this._serverEventEmitter = new utils.EventEmitter();
      this._deferHandler = new DeferHandler$3();
      this._serverDataCodec = void 0;
      this._selfUserId = void 0;
      this._connectedTime = void 0;
      this.option = void 0;
      var self = this;
      var transporter = new Transporter(option);
      transporter.watchSignal(function (signal) {
        self._handleSignal(signal);
      });
      transporter.watchStatus(function (status) {
        Logger.info(TAG.L_NETWORK_CHANGED_S, status);

        self._handleStatus(status);
      });
      self._serverDataCodec = new Codec$2(option);
      utils.extend(self, {
        _transporter: transporter,
        option: option });

    }

    var _proto = ServerEngine.prototype;

    _proto._handleStatus = function _handleStatus(status) {
      if (common.isDisconnected(status)) {
        this.disconnect();
        var currentTime = utils.getCurrentTimestamp();
        var isDisconnectTooFast = currentTime - this._connectedTime < MINIMUM_CONNECT_DURATION;
        var NotSwitchStauts = [TRANSPORTER_STATUS.KICKED_OFFLINE_BY_OTHER_CLIENT];

        if (isDisconnectTooFast && !utils.isInclude(NotSwitchStauts, status)) {
          return this._serverEventEmitter.emit(SERVER_EVENT_NAME.STATUS, TRANSPORTER_STATUS.DISCONNECT_TOO_FAST);
        }
      }

      this._serverEventEmitter.emit(SERVER_EVENT_NAME.STATUS, status);
    };

    _proto._handleSignal = function _handleSignal(signal) {
      var self = this;
      var _deferHandler = self._deferHandler;
      var messageId = signal.messageId;

      if (messageId && signal.getIdentifier) {
        var deferId = signal.getIdentifier();

        _deferHandler.resolve(deferId, signal);
      }

      self._handleSignalAck(signal);

      self._dispatchTask(signal);
    };

    _proto._handleSignalAck = function _handleSignalAck(signal) {
      var _transporter = this._transporter;
      var messageId = signal.messageId;
      var isQosNeedAck = signal._header && signal._header.qos !== QOS.AT_MOST_ONCE;

      if (signal instanceof PublishReader && !signal.syncMsg && isQosNeedAck) {
        var writer = new PubAckWriter(messageId);

        _transporter.sendSignal(writer);
      }

      if (signal instanceof QueryAckReader && isQosNeedAck) {
        var _writer = new QueryConWriter(messageId);

        _transporter.sendSignal(_writer);
      }
    };

    _proto._dispatchTask = function _dispatchTask(signal) {
      var self = this;

      if (signal instanceof DisconnectReader) {
        var status = signal.status;
        status = SERVER_DISCONNECT_STATUS_TO_TRANSPORTER_STATUS[status] || status;
        return self._handleStatus(status);
      }

      if (signal instanceof PublishReader) {
        var _PUBLISH_TOPIC$NOTIFY;

        var isSyncMsgSentBySelfOtherClient = signal.syncMsg,
        topic = signal.topic;

        if (isSyncMsgSentBySelfOtherClient) {
          return self._receiveMsgFromOtherDevice(signal);
        }

        var task = (_PUBLISH_TOPIC$NOTIFY = {}, _PUBLISH_TOPIC$NOTIFY[PUBLISH_TOPIC.NOTIFY_PULL_MSG] = self._notifyPullMessage, _PUBLISH_TOPIC$NOTIFY[PUBLISH_TOPIC.RECEIVE_MSG] = self._notifyDirectMessage, _PUBLISH_TOPIC$NOTIFY[PUBLISH_TOPIC.SERVER_NOTIFY] = self._notifyForServer, _PUBLISH_TOPIC$NOTIFY[PUBLISH_TOPIC.SETTING_NOTIFY] = self._notifySettingChanged, _PUBLISH_TOPIC$NOTIFY)[topic] || utils.noop;
        task.call(self, signal);
      }
    };

    _proto._notifyPullMessage = function _notifyPullMessage(signal) {
      var notifyPullConfig = this._serverDataCodec.decodeByPBName(signal.data, PBName.NotifyMsg);

      this._serverEventEmitter.emit(SERVER_EVENT_NAME.NOTIFY_PULL, notifyPullConfig);
    };

    _proto._notifyDirectMessage = function _notifyDirectMessage(signal) {
      var currentUserId = this._selfUserId,
      connectedTime = this._connectedTime;

      var msg = this._serverDataCodec.decodeByPBName(signal.data, PBName.DownStreamMessage, {
        currentUserId: currentUserId,
        connectedTime: connectedTime });


      this._serverEventEmitter.emit(SERVER_EVENT_NAME.DIRECT_MSG, msg);
    };

    _proto._notifyForServer = function _notifyForServer(signal) {
      var self = this,
      notifyData = self._serverDataCodec.decodeByPBName(signal.data, PBName.ChrmNotifyMsg),
      type = notifyData.type;

      Logger.info(TAG.P_NOTIFY_CHRM_KV_S, notifyData);

      switch (type) {
        case SERVER_NOTIFY_TYPE.KV_CHANGED:
          self._serverEventEmitter.emit(SERVER_EVENT_NAME.CHRM_KV_CHANGED, notifyData);

          break;

        case SERVER_NOTIFY_TYPE.CONVERSATION_STATUS_CHANGED:
          self._serverEventEmitter.emit(SERVER_EVENT_NAME.CONVERSATION_STATUS_CHANGED, notifyData.time);

          break;

        default:
          break;}

    };

    _proto._notifySettingChanged = function _notifySettingChanged(signal) {
      var self = this,
      notifyData = self._serverDataCodec.decodeByPBName(signal.data, PBName.UserSettingNotification);

      self._serverEventEmitter.emit(SERVER_EVENT_NAME.USER_SETTING_CHANGED, notifyData);
    };

    _proto._sendSignal = function _sendSignal(writer, decodePBName, option) {
      var appkey = this.option.appkey,
      _serverDataCodec = this._serverDataCodec;
      var _transporter = this._transporter,
      _deferHandler = this._deferHandler,
      currentUserId = this._selfUserId,
      connectedTime = this._connectedTime;
      var signalId = SignalId$1.get({
        appkey: appkey,
        userId: currentUserId });


      if (SignalId$1.isExceedLimit(signalId)) {
        this._handleStatus(TRANSPORTER_STATUS.EXCEED_MESSAGE_ID_LIMIT);

        return utils.Defer.reject(ERROR_INFO.TIMEOUT);
      }

      writer.messageId = signalId;
      var deferId = writer.getIdentifier();
      return utils.deferred(function (resolve, reject) {
        _deferHandler.add(deferId, {
          resolve: resolve,
          reject: reject });


        _transporter.sendSignal(writer);
      }).then(function (signal) {
        var status = signal.status,
        data = signal.data;
        var isSuccess = utils.isEqual(status, SUCCESS_CODE);
        var result = isSuccess ? signal : {
          status: SERVER_ERROR_TO_CODE[status] || status };


        if (isSuccess && decodePBName) {
          signal.data = _serverDataCodec.decodeByPBName(data, decodePBName, utils.extend({
            signal: signal,
            currentUserId: currentUserId,
            connectedTime: connectedTime },
          option));
        }

        var exec = isSuccess ? Defer$2.resolve : Defer$2.reject;
        return exec.call(Defer$2, result);
      });
    };

    _proto._sendSignalForData = function _sendSignalForData(writer, decodePBName, option) {
      return this._sendSignal(writer, decodePBName, option).then(function (successSignal) {
        var data = decodePBName ? successSignal.data : undefined;
        return data;
      });
    };

    _proto._receiveMsgFromOtherDevice = function _receiveMsgFromOtherDevice(signal) {
      var self = this;
      var _deferHandler = self._deferHandler,
      currentUserId = self._selfUserId,
      connectType = self.option.connectType,
      _serverDataCodec = self._serverDataCodec;
      var isComet = connectType === CONNECT_TYPE.COMET;
      var data = signal.data,
      topic = signal.topic;

      var msg = _serverDataCodec.decodeByPBName(data, PBName.UpStreamMessage, {
        currentUserId: currentUserId,
        signal: signal });


      if (isComet || msg.isStatusMessage) {
        msg.sentTime = common.DelayTimer.getTime();
        return self._serverEventEmitter.emit(SERVER_EVENT_NAME.DIRECT_MSG, msg);
      }

      return utils.deferred(function (resolve, reject) {
        var deferId = signal.getIdentifier();

        _deferHandler.add(deferId, {
          resolve: resolve,
          reject: reject });

      }).then(function (ackSignal) {
        msg.messageUId = ackSignal.messageUId;
        msg.sentTime = ackSignal.timestamp;
        return self._serverEventEmitter.emit(SERVER_EVENT_NAME.DIRECT_MSG, msg);
      })["catch"](function (error) {
        Logger.error(TAG.L_DECODE_MSG_E, {
          content: {
            info: 'received msg from other device error',
            error: error,
            topic: topic } });


      });
    };

    _proto.watch = function watch(events) {
      var self = this;
      events = events || {};
      utils.forEach(events, function (event, eventName) {
        utils.isFunction(event) && self._serverEventEmitter.on(eventName, event);
      });
    };

    _proto.unwatch = function unwatch(events) {
      var self = this;
      events = events || {};
      utils.forEach(events, function (event, eventName) {
        utils.isFunction(event) && self._serverEventEmitter.off(eventName, event);
      });
    };

    _proto.connect = function connect(user, option) {
      var self = this;
      var _transporter = self._transporter;
      return _transporter.connect(user, option).then(function (result) {
        var isConnectSuccess = utils.isEqual(result.status, SUCCESS_CODE);
        return isConnectSuccess ? Defer$2.resolve(result) : Defer$2.reject(result);
      }).then(function (_ref) {
        var userId = _ref.userId,
        timestamp = _ref.timestamp;
        self._selfUserId = userId;
        self._connectedTime = timestamp;
        return {
          id: userId };

      }, function (_ref2) {
        var status = _ref2.status;
        var errorInfo = CONNECT_SERVER_STATUS_MAP_ERROR_INFO[status] || {
          code: status };

        return utils.Defer.reject(errorInfo);
      });
    };

    _proto.disconnect = function disconnect() {
      var appkey = this.option.appkey;
      var _transporter = this._transporter,
      _selfUserId = this._selfUserId;
      _transporter && _transporter.disconnect();
      SignalId$1.clear({
        appkey: appkey,
        userId: _selfUserId });

      return Defer$2.resolve(_selfUserId);
    };

    _proto.getConnectedTime = function getConnectedTime() {
      var connectedTime = this._connectedTime;
      return connectedTime;
    };

    _proto.getServerConfig = function getServerConfig() {
      var _selfUserId = this._selfUserId,
      _serverDataCodec = this._serverDataCodec;

      var data = _serverDataCodec.encodeServerConfParams();

      var writer = new QueryWriter(QUERY_TOPIC.GET_SYNC_TIME, data, _selfUserId);
      return this._sendSignalForData(writer, PBName.SessionsAttOutput);
    };

    _proto.pullMessageList = function pullMessageList(syncMsgArgs, option) {
      var _selfUserId = this._selfUserId,
      _serverDataCodec = this._serverDataCodec;

      var data = _serverDataCodec.encodeSyncMsg(syncMsgArgs);

      var writer = new QueryWriter(QUERY_TOPIC.PULL_MSG, data, _selfUserId);
      writer.setHeaderQos(QOS.AT_LEAST_ONCE);
      return this._sendSignalForData(writer, PBName.DownStreamMessages, option);
    };

    _proto.pullChrmMessageList = function pullChrmMessageList(chatRoomId, time, count, option) {
      time = time || 0;
      count = count || 0;

      var data = this._serverDataCodec.encodeChrmSyncMsg(time, count);

      var writer = new QueryWriter(QUERY_TOPIC.PULL_CHRM_MSG, data, chatRoomId);
      writer.setHeaderQos(QOS.AT_LEAST_ONCE);
      return this._sendSignalForData(writer, PBName.DownStreamMessages, option);
    };

    _proto.sendMessage = function sendMessage(conversation, sendOption, topic) {
      var self = this;
      var currentUserId = self._selfUserId,
      _serverDataCodec = self._serverDataCodec;
      var type = conversation.type,
      targetId = conversation.targetId;
      var isStatusMessage = sendOption.isStatusMessage;
      isStatusMessage = isStatusMessage && common.isSupportStatusMessage(type);
      var publishTopic = topic || CONVERSATION_TYPE_TO_PUBLISH_TOPIC[type] || PUBLISH_TOPIC.PRIVATE;

      if (isStatusMessage && utils.isUndefined(topic)) {
        publishTopic = CONVERSATION_TYPE_TO_PUBLISH_STATUS_TOPIC[type];
      }

      var data = _serverDataCodec.encodeUpMsg(conversation, sendOption);

      var signal = new PublishWriter(publishTopic, data, targetId);
      signal.setHeaderQos(QOS.AT_LEAST_ONCE);

      var msg = _serverDataCodec.decodeByPBName(data, PBName.UpStreamMessage, {
        signal: signal,
        currentUserId: currentUserId });


      if (isStatusMessage) {
        self._sendSignal(signal)["catch"](function () {});

        msg.sentTime = common.DelayTimer.getTime();
        return utils.Defer.resolve(msg);
      }

      return self._sendSignal(signal).then(function (_ref3) {
        var messageUId = _ref3.messageUId,
        timestamp = _ref3.timestamp;
        msg.messageUId = messageUId;
        msg.sentTime = timestamp;

        self._serverEventEmitter.emit(SERVER_EVENT_NAME.MESSAGE_SEND, msg);

        return msg;
      });
    };

    _proto.recallMessage = function recallMessage(conversation, message, option) {
      var upMsgArgs = utils.extend(option || {}, message);
      var type = conversation.type,
      targetId = conversation.targetId;
      var messageUId = message.messageUId,
      sentTime = message.sentTime,
      user = message.user;
      upMsgArgs.messageType = RECALL_MESSAGE_TYPE;
      upMsgArgs.content = {
        conversationType: type,
        targetId: targetId,
        messageUId: messageUId,
        sentTime: sentTime,
        user: user };

      return this.sendMessage({
        type: type,
        targetId: this._selfUserId },
      upMsgArgs, PUBLISH_TOPIC.RECALL);
    };

    _proto.updateExpansionMessage = function updateExpansionMessage(option) {
      option = option || {};
      var _option = option,
      type = _option.type,
      targetId = _option.targetId,
      messageUId = _option.messageUId,
      expansionDic = _option.expansionDic,
      keys = _option.keys,
      removeAll = _option.removeAll;
      var content = {};
      expansionDic && (content.put = expansionDic);
      keys && (content.del = keys);
      removeAll && (content.removeAll = 1);
      content.mid = messageUId;
      var upMsgArgs = {
        content: content,
        messageType: MESSAGE_TYPE.EXPANSION_NOTIFY };

      return this.sendMessage({
        type: type,
        targetId: targetId },
      upMsgArgs).then(function () {
        return Defer$2.resolve();
      })["catch"](function () {
        return Defer$2.reject(ERROR_CODE.SEND_MESSAGE_KV_FAIL);
      });
    };

    _proto.getFileToken = function getFileToken(fileType, fileName) {
      var data = this._serverDataCodec.encodeGetFileToken(fileType, fileName);

      var writer = new QueryWriter(QUERY_TOPIC.GET_UPLOAD_FILE_TOKEN, data, this._selfUserId);
      return this._sendSignalForData(writer, PBName.GetQNupTokenOutput);
    };

    _proto.getFileUrl = function getFileUrl(fileType, fileName, originName) {
      var data = this._serverDataCodec.encodeGetFileUrl(fileType, fileName, originName);

      var writer = new QueryWriter(QUERY_TOPIC.GET_UPLOAD_FILE_URL, data, this._selfUserId);
      return this._sendSignalForData(writer, PBName.GetQNdownloadUrlOutput);
    };

    _proto.getConversationList = function getConversationList(option) {
      var _selfUserId = this._selfUserId,
      _serverDataCodec = this._serverDataCodec;

      var data = _serverDataCodec.encodeGetConversationList(option);

      var writer = new QueryWriter(QUERY_TOPIC.GET_CONVERSATION_LIST, data, _selfUserId);
      return this._sendSignalForData(writer, PBName.RelationsOutput);
    };

    _proto.removeConversationList = function removeConversationList(conversationList) {
      var _selfUserId = this._selfUserId,
      _serverDataCodec = this._serverDataCodec;

      var data = _serverDataCodec.encodeRemoveConversationList(conversationList);

      var writer = new QueryWriter(QUERY_TOPIC.REMOVE_CONVERSATION_LIST, data, _selfUserId);
      return this._sendSignalForData(writer, PBName.DeleteSessionsOutput);
    };

    _proto.removeConversation = function removeConversation(conversation) {
      return this.removeConversationList([conversation]);
    };

    _proto.getHistoryMessages = function getHistoryMessages(conversation, option) {
      var _selfUserId = this._selfUserId,
      _serverDataCodec = this._serverDataCodec;
      var type = conversation.type;
      var historyTopic = CONVERSATION_TYPE_TO_QUERY_HISTORY_TOPIC[type] || QUERY_HISTORY_TOPIC.PRIVATE;

      var data = _serverDataCodec.encodeGetHistoryMsg(conversation, option);

      var writer = new QueryWriter(historyTopic, data, _selfUserId);
      return this._sendSignalForData(writer, PBName.HistoryMsgOuput, {
        conversation: conversation });

    };

    _proto.deleteHistoryMessages = function deleteHistoryMessages(conversation, messages) {
      var _selfUserId = this._selfUserId;

      var data = this._serverDataCodec.encodeDeleteMessages(conversation, messages);

      var writer = new QueryWriter(QUERY_TOPIC.DELETE_MESSAGES, data, _selfUserId);
      return this._sendSignalForData(writer);
    };

    _proto.clearHistoryMessages = function clearHistoryMessages(conversation, option) {
      var _selfUserId = this._selfUserId;
      var type = conversation.type;

      var data = this._serverDataCodec.encodeClearMessages(conversation, option);

      var topic = CONVERSATION_TYPE_TO_CLEAR_MESSAGE_TOPIC[type];
      var writer = new QueryWriter(topic, data, _selfUserId);
      return this._sendSignalForData(writer);
    };

    _proto.getTotalUnreadCount = function getTotalUnreadCount() {
      return this.getServerConfig().then(function (_ref4) {
        var totalUnreadCount = _ref4.totalUnreadCount;
        return totalUnreadCount;
      });
    };

    _proto.clearUnreadCount = function clearUnreadCount(conversation, option) {
      var _selfUserId = this._selfUserId;

      var data = this._serverDataCodec.encodeClearUnreadCount(conversation, option);

      var writer = new QueryWriter(QUERY_TOPIC.CLEAR_UNREAD_COUNT, data, _selfUserId);
      return this._sendSignalForData(writer);
    };

    _proto.joinChatRoom = function joinChatRoom(chrm, option) {
      var self = this;
      var id = chrm.id;
      var count = option.count,
      isJoinExist = option.isJoinExist,
      isAutoRejoin = option.isAutoRejoin;

      var data = self._serverDataCodec.encodeJoinOrQuitChatRoom();

      var topic = isJoinExist ? QUERY_TOPIC.JOIN_EXIST_CHATROOM : QUERY_TOPIC.JOIN_CHATROOM;
      var writer = new QueryWriter(topic, data, id);

      self._serverEventEmitter.emit(SERVER_EVENT_NAME.BEFORE_JOIN_CHATROOM, {
        id: id });


      return self._sendSignalForData(writer).then(function (result) {
        self._serverEventEmitter.emit(SERVER_EVENT_NAME.JOIN_CHATROOM, {
          id: id,
          count: count,
          isAutoRejoin: isAutoRejoin });


        return result;
      });
    };

    _proto.quitChatRoom = function quitChatRoom(chrm) {
      var id = chrm.id;

      var data = this._serverDataCodec.encodeJoinOrQuitChatRoom();

      var writer = new QueryWriter(QUERY_TOPIC.QUIT_CHATROOM, data, id);
      return this._sendSignalForData(writer);
    };

    _proto.getChatRoomInfo = function getChatRoomInfo(chrm, option) {
      var id = chrm.id;

      var data = this._serverDataCodec.encodeGetChatRoomInfo(option);

      var writer = new QueryWriter(QUERY_TOPIC.GET_CHATROOM_INFO, data, id);
      return this._sendSignalForData(writer, PBName.QueryChatRoomInfoOutput);
    };

    _proto.getChatRoomHistoryMessages = function getChatRoomHistoryMessages(chrm, option) {
      var _selfUserId = this._selfUserId,
      _serverDataCodec = this._serverDataCodec;
      var targetId = chrm.id;
      var type = CONVERSATION_TYPE.CHATROOM;
      var conversation = {
        type: type,
        targetId: targetId };

      var historyTopic = QUERY_HISTORY_TOPIC.CHATROOM;

      var data = _serverDataCodec.encodeGetHistoryMsg(conversation, option);

      var writer = new QueryWriter(historyTopic, data, _selfUserId);
      return this._sendSignalForData(writer, PBName.HistoryMsgOuput, {
        conversation: conversation });

    };

    _proto.modifyChatRoomKV = function modifyChatRoomKV(chrm, entry) {
      var self = this;

      var _selfUserId = self._selfUserId,
      _serverDataCodec = self._serverDataCodec,
      chatRoomId = chrm.id,
      action = entry.type || CHATROOM_ENTRY_TYPE.UPDATE,
      data = _serverDataCodec.encodeModifyChatRoomKV(chrm, entry, action, _selfUserId),
      topic = utils.isEqual(action, CHATROOM_ENTRY_TYPE.DELETE) ? QUERY_TOPIC.DELETE_CHATROOM_KV : QUERY_TOPIC.UPDATE_CHATROOM_KV,
      writer = new QueryWriter(topic, data, chatRoomId);

      return this._sendSignalForData(writer).then(function () {
        self._serverEventEmitter.emit(SERVER_EVENT_NAME.CHRM_KV_SET, {
          id: chatRoomId,
          data: {
            kvEntries: [entry],
            syncTime: common.DelayTimer.getTime() } });


      });
    };

    _proto.pullChatRoomKV = function pullChatRoomKV(chrm, time) {
      var _serverDataCodec = this._serverDataCodec,
      chatRoomId = chrm.id,
      data = _serverDataCodec.encodePullChatRoomKV(time),
      writer = new QueryWriter(QUERY_TOPIC.PULL_CHATROOM_KV, data, chatRoomId);

      return this._sendSignalForData(writer, PBName.ChrmKVOutput);
    };

    _proto.getUserSettings = function getUserSettings(version) {
      var _serverDataCodec = this._serverDataCodec,
      _selfUserId = this._selfUserId,
      data = _serverDataCodec.encodePullUserSetting(version),
      writer = new QueryWriter(QUERY_TOPIC.PULL_USER_SETTING, data, _selfUserId);

      return this._sendSignalForData(writer, PBName.PullUserSettingOutput);
    };

    _proto.getConversationStatus = function getConversationStatus(time) {
      var _serverDataCodec = this._serverDataCodec,
      _selfUserId = this._selfUserId,
      data = _serverDataCodec.encodeGetConversationStatus(time),
      writer = new QueryWriter(QUERY_TOPIC.GET_CONVERSATION_STATUS, data, _selfUserId);

      return this._sendSignalForData(writer, PBName.SessionStates);
    };

    _proto.setConversationStatusList = function setConversationStatusList(statusList) {
      var self = this;

      var _serverDataCodec = this._serverDataCodec,
      _selfUserId = this._selfUserId,
      data = _serverDataCodec.encodeSetConversationStatus(statusList),
      writer = new QueryWriter(QUERY_TOPIC.SET_CONVERSATION_STATUS, data, _selfUserId);

      return this._sendSignalForData(writer, PBName.SessionStateModifyResp).then(function (_ref5) {
        var version = _ref5.version;
        statusList = utils.map(statusList, function (status) {
          status.updatedTime = version;
          return status;
        });

        self._serverEventEmitter.emit(SERVER_EVENT_NAME.CONVERSATION_STATUS_SETED, statusList);

        return true;
      });
    };

    _proto.joinRTCRoom = function joinRTCRoom(room) {
      var data = this._serverDataCodec.encodeJoinRTCRoom(room);

      var writer = new QueryWriter(QUERY_TOPIC.JOIN_RTC_ROOM, data, room.id);
      return this._sendSignalForData(writer, PBName.RtcUserListOutput);
    };

    _proto.quitRTCRoom = function quitRTCRoom(room) {
      var data = this._serverDataCodec.encodeQuitRTCRoom();

      var writer = new QueryWriter(QUERY_TOPIC.QUIT_RTC_ROOM, data, room.id);
      return this._sendSignalForData(writer);
    };

    _proto.RTCPing = function RTCPing(room) {
      var data = this._serverDataCodec.encodeJoinRTCRoom(room);

      var writer = new QueryWriter(QUERY_TOPIC.PING_RTC, data, room.id);
      return this._sendSignalForData(writer);
    };

    _proto.getRTCRoomInfo = function getRTCRoomInfo(room) {
      var data = this._serverDataCodec.encodeGetRTCRoomInfo();

      var writer = new QueryWriter(QUERY_TOPIC.GET_RTC_ROOM_INFO, data, room.id);
      return this._sendSignalForData(writer, PBName.RtcRoomInfoOutput);
    };

    _proto.getRTCUserInfoList = function getRTCUserInfoList(room) {
      var data = this._serverDataCodec.encodeGetRTCRoomInfo();

      var writer = new QueryWriter(QUERY_TOPIC.GET_RTC_USER_INFO_LIST, data, room.id);
      return this._sendSignalForData(writer, PBName.RtcUserListOutput);
    };

    _proto.setRTCUserInfo = function setRTCUserInfo(room, info) {
      var data = this._serverDataCodec.encodeSetRTCUserInfo(info);

      var writer = new QueryWriter(QUERY_TOPIC.SET_RTC_USER_INFO, data, room.id);
      return this._sendSignalForData(writer);
    };

    _proto.removeRTCUserInfo = function removeRTCUserInfo(room, info) {
      var data = this._serverDataCodec.encodeRemoveRTCUserInfo(info);

      var writer = new PublishWriter(QUERY_TOPIC.DEL_RTC_USER_INFO, data, room.id);
      return this._sendSignalForData(writer);
    };

    _proto.setRTCData = function setRTCData(roomId, key, value, isInner, apiType, message) {
      var data = this._serverDataCodec.encodeSetRTCData(key, value, isInner, apiType, message);

      var writer = new PublishWriter(QUERY_TOPIC.SET_RTC_DATA, data, roomId);
      return this._sendSignalForData(writer);
    };

    _proto.setRTCUserData = function setRTCUserData(roomId, message, valueInfo, objectName) {
      var data = this._serverDataCodec.encodeUserSetRTCData(message, valueInfo, objectName);

      var writer = new PublishWriter(QUERY_TOPIC.USER_SET_RTC_DATA, data, roomId);
      return this._sendSignalForData(writer);
    };

    _proto.getRTCData = function getRTCData(roomId, keys, isInner, apiType) {
      var data = this._serverDataCodec.encodeGetRTCData(keys, isInner, apiType);

      var writer = new QueryWriter(QUERY_TOPIC.GET_RTC_DATA, data, roomId);
      return this._sendSignalForData(writer, PBName.RtcQryOutput);
    };

    _proto.removeRTCData = function removeRTCData(roomId, keys, isInner, apiType, message) {
      var data = this._serverDataCodec.encodeRemoveRTCData(keys, isInner, apiType, message);

      var writer = new PublishWriter(QUERY_TOPIC.DEL_RTC_DATA, data, roomId);
      return this._sendSignalForData(writer);
    };

    _proto.setRTCOutData = function setRTCOutData(roomId, rtcData, type, message) {
      var data = this._serverDataCodec.encodeSetRTCOutData(rtcData, type, message);

      var writer = new PublishWriter(QUERY_TOPIC.SET_RTC_OUT_DATA, data, roomId);
      return this._sendSignalForData(writer);
    };

    _proto.getRTCOutData = function getRTCOutData(roomId, userIds) {
      var data = this._serverDataCodec.ecnodeGetRTCOutData(userIds);

      var writer = new QueryWriter(QUERY_TOPIC.GET_RTC_OUT_DATA, data, roomId);
      return this._sendSignalForData(writer, PBName.RtcUserOutDataOutput);
    };

    _proto.getRTCToken = function getRTCToken(room) {
      var data = this._serverDataCodec.encodeJoinRTCRoom(room);

      var writer = new QueryWriter(QUERY_TOPIC.GET_RTC_TOKEN, data, room.id);
      return this._sendSignalForData(writer, PBName.RtcTokenOutput);
    };

    _proto.setRTCState = function setRTCState(room, content) {
      var data = this._serverDataCodec.encodeSetRTCState(content);

      var writer = new QueryWriter(QUERY_TOPIC.SET_RTC_STATE, data, room.id);
      return this._sendSignalForData(writer);
    };

    _proto.getRTCUserList = function getRTCUserList(room) {
      var data = this._serverDataCodec.encodeGetRTCRoomInfo();

      var writer = new QueryWriter(QUERY_TOPIC.GET_RTC_USER_LIST, data, room.id);
      return this._sendSignalForData(writer, PBName.RtcUserListOutput);
    };

    _proto.getOldServerConfig = function getOldServerConfig(userId) {
      var appkey = this.option.appkey;
      var syncTime = new common.MessageTimeSyner({
        appkey: appkey,
        userId: userId }).
      get();
      return Defer$2.resolve(syncTime);
    };

    _proto.getOldConversationList = function getOldConversationList(option, formatOpt) {
      var self = this;
      var _selfUserId = self._selfUserId;

      var data = self._serverDataCodec.encodeOldConversationList(option);

      var writer = new QueryWriter(QUERY_TOPIC.GET_OLD_CONVERSATION_LIST, data, _selfUserId);
      return self._sendSignalForData(writer, PBName.RelationsOutput, formatOpt);
    };

    _proto.removeOldConversation = function removeOldConversation(conversation) {
      var type = conversation.type,
      targetId = conversation.targetId;

      var data = this._serverDataCodec.encodeOldConversationList({
        type: type });


      var writer = new QueryWriter(QUERY_TOPIC.REMOVE_OLD_CONVERSATION, data, targetId);
      return this._sendSignalForData(writer);
    };

    return ServerEngine;
  }();

  var NAVIGATORS = ['nav.cn.ronghub.com', 'nav2-cn.ronghub.com'];
  var MINI_SOCKET_DOMAIN_LIST = ['wsproxy.cn.ronghub.com', 'wsap-cn.ronghub.com'];
  var MINI_COMET_DOMAIN_LIST = ['cometproxy-cn.ronghub.com', 'mini-cn.ronghub.com'];
  var MINI_UPLOAD_DOMAIN_QINIU = 'https://upload.qiniup.com';
  var MINI_UPLOAD_DOMAIN_BOS = 'https://gz.bcebos.com';
  var NETWORK_DETECT_OPTION = {
    url: 'https://cdn.ronghub.com/im_detecting',
    intervalTime: 1500 };

  var IM_OPTION = {
    connectType: CONNECT_TYPE.WEBSOCKET,
    navigators: NAVIGATORS,
    detect: NETWORK_DETECT_OPTION,
    isOldServer: true,
    isDebug: false };

  var GET_MESSAGES_OPTION = {
    count: 20,
    order: MESSAGS_TIME_ORDER.DESC,
    timestrap: 0 };

  var SEND_MESSAGE_OPTION = {
    isMentiond: false,
    isCounted: true,
    isPersited: true };

  var GET_CHATROOM_INFO_OPTION = {
    count: 20,
    order: CHATROOM_ORDER.DESC };

  var CHATROOM_NOT_PULL_MSG_COUNT = -1;
  var JOIN_CHATROOM_OPTION = {
    count: CHATROOM_NOT_PULL_MSG_COUNT };

  var GET_CHATROOM_MESSAGES = {
    count: 20,
    order: MESSAGS_TIME_ORDER.DESC };

  var SEND_MESSAGE_TYPE_OPTION = {
    'RC:TxtMsg': {
      isCounted: true,
      isPersited: true },

    'RC:ImgMsg': {
      isCounted: true,
      isPersited: true },

    'RC:VcMsg': {
      isCounted: true,
      isPersited: true },

    'RC:ImgTextMsg': {
      isCounted: true,
      isPersited: true },

    'RC:FileMsg': {
      isCounted: true,
      isPersited: true },

    'RC:HQVCMsg': {
      isCounted: true,
      isPersited: true },

    'RC:LBSMsg': {
      isCounted: true,
      isPersited: true },

    'RC:PSImgTxtMsg': {
      isCounted: true,
      isPersited: true },

    'RC:PSMultiImgTxtMsg': {
      isCounted: true,
      isPersited: true },

    'RCJrmf:RpMsg': {
      isCounted: true,
      isPersited: true },

    'RCJrmf:RpOpendMsg': {
      isCounted: true,
      isPersited: true },

    'RC:CombineMsg': {
      isCounted: true,
      isPersited: true },

    'RC:ReferenceMsg': {
      isCounted: true,
      isPersited: true },

    'RC:InfoNtf': {
      isCounted: false,
      isPersited: true },

    'RC:ContactNtf': {
      isCounted: false,
      isPersited: true },

    'RC:ProfileNtf': {
      isCounted: false,
      isPersited: true },

    'RC:CmdNtf': {
      isCounted: false,
      isPersited: true },

    'RC:GrpNtf': {
      isCounted: false,
      isPersited: true },

    'RC:RcCmd': {
      isCounted: false,
      isPersited: true },

    'RC:CmdMsg': {
      isCounted: false,
      isPersited: false },

    'RC:TypSts': {
      isCounted: false,
      isPersited: false },

    'RC:PSCmd': {
      isCounted: false,
      isPersited: false },

    'RC:SRSMsg': {
      isCounted: false,
      isPersited: false },

    'RC:RRReqMsg': {
      isCounted: false,
      isPersited: false },

    'RC:RRRspMsg': {
      isCounted: false,
      isPersited: false },

    'RC:CsChaR': {
      isCounted: false,
      isPersited: false },

    'RC:CSCha': {
      isCounted: false,
      isPersited: false },

    'RC:CsEva': {
      isCounted: false,
      isPersited: false },

    'RC:CsContact': {
      isCounted: false,
      isPersited: false },

    'RC:CsHs': {
      isCounted: false,
      isPersited: false },

    'RC:CsHsR': {
      isCounted: false,
      isPersited: false },

    'RC:CsSp': {
      isCounted: false,
      isPersited: false },

    'RC:CsEnd': {
      isCounted: false,
      isPersited: false },

    'RC:CsUpdate': {
      isCounted: false,
      isPersited: false },

    'RC:ReadNtf': {
      isCounted: false,
      isPersited: false },

    'RC:chrmKVNotiMsg': {
      isCounted: false,
      isPersited: false },

    'RC:VCAccept': {
      isCounted: false,
      isPersited: false },

    'RC:VCRinging': {
      isCounted: false,
      isPersited: false },

    'RC:VCSummary': {
      isCounted: false,
      isPersited: false },

    'RC:VCHangup': {
      isCounted: false,
      isPersited: false },

    'RC:VCInvite': {
      isCounted: false,
      isPersited: false },

    'RC:VCModifyMedia': {
      isCounted: false,
      isPersited: false },

    'RC:VCModifyMem': {
      isCounted: false,
      isPersited: false },

    'RC:MsgExMsg': {
      isCounted: false,
      isPersited: false } };


  var BASE_NAVI_RESP = {
    isFixedNaviResp: true,
    code: 300,
    userId: '',
    server: '',
    backupServer: '',
    voipCallInfo: '{"strategy":1,"callEngine":[{"engineType":4,"mediaServer":"https://rtc-info.ronghub.com","maxStreamCount":20},{"engineType":3,"vendorKey":"","signKey":"","blinkCMPServer":"rtccmp.ronghub.com:80","blinkSnifferServer":"rtccmp.ronghub.com:80"}]}',
    kvStorage: 1,
    uploadServer: 'upload.qiniup.com',
    openMp: 1,
    openUS: 1,
    logSwitch: 1,
    logPolicy: '{"url": "logcollection.ronghub.com","level": 1,"itv": 6,"times": 5}',
    bosAddr: 'gz.bcebos.com',
    joinMChrm: true,
    activeServer: '',
    alone: true,
    chatroomMsg: true,
    compDays: 0,
    errorMessage: '',
    extkitSwitch: 1,
    gifSize: 2048,
    grpMsgLimit: 1,
    historyMsg: true,
    isFormatted: 1,
    location: '',
    monitor: 0,
    msgAck: '',
    offlinelogserver: '',
    onlinelogserver: '',
    openHttpDNS: true,
    qnAddr: '',
    videoTimes: 120,
    voipServer: '' };

  var CMP_HOST_HTTPS = {
    backupServer: 'wsap-cn.ronghub.com:443' };

  var CMP_HOST_HTTP = {
    backupServer: 'wsap-cn.ronghub.com:80' };


  var RCStorage$1 = common.RCStorage;

  var LocalNaviHandler = function () {
    function LocalNaviHandler(option) {
      this.storage = void 0;
      this.option = void 0;
      var appkey = option.appkey,
      token = option.token;
      var UID = common.getUIDByToken(token);
      var KEY = utils.tplEngine(STORAGE_NAVI.ROOT_KEY_TPL, {
        appkey: appkey,
        UID: UID });

      this.storage = new RCStorage$1(KEY);
      this.option = option;
    }

    var _proto = LocalNaviHandler.prototype;

    _proto.set = function set(resp) {
      var connectType = this.option.connectType;
      this.storage.set(STORAGE_NAVI.SUB_KEY.CONNECT_TYPE, connectType);
      this.storage.set(STORAGE_NAVI.SUB_KEY.TIME_WHEN_SAVED, utils.getCurrentTimestamp());
      this.storage.set(STORAGE_NAVI.SUB_KEY.RESPONSE, resp);
    };

    _proto.clear = function clear() {
      this.storage.clear();
    };

    _proto.getResp = function getResp() {
      return this.storage.get(STORAGE_NAVI.SUB_KEY.RESPONSE);
    };

    _proto.isValid = function isValid() {
      var storage = this.storage,
      connectType = this.option.connectType;
      var resp = this.getResp();

      if (utils.isEmpty(resp)) {
        return false;
      }

      var oldConnectType = storage.get(STORAGE_NAVI.SUB_KEY.CONNECT_TYPE);
      var timeWhenSaved = storage.get(STORAGE_NAVI.SUB_KEY.TIME_WHEN_SAVED);
      var isSameConnectType = utils.isEqual(oldConnectType, connectType);
      var isNotExpired = utils.getCurrentTimestamp() - timeWhenSaved < NAVI_EXPIRED_TIME;
      return isSameConnectType && isNotExpired;
    };

    return LocalNaviHandler;
  }();

  var getNaviUrl = function getNaviUrl(url, option) {
    var appkey = option.appkey,
    connectType = option.connectType,
    token = option.token;
    var encodeToken = utils.encodeURI(token);
    var protocol = env.protocol.http;
    var type = connectType === CONNECT_TYPE.COMET ? NAVI_TYPE.COMET : NAVI_TYPE.WEBSOCKET;
    var random = utils.getCurrentTimestamp();
    url = utils.getValidUrl(url);
    var naviUrlOption = {
      protocol: protocol,
      url: url,
      type: type,
      appkey: appkey,
      random: random,
      token: encodeToken };

    return utils.tplEngine(NAVI_URL_TPL, naviUrlOption);
  };

  var parseNaviResponse = function parseNaviResponse(responseText) {
    var startText = NAVI_CALLBACK_NAME + '(';
    var endText = ')';
    var startIndex = utils.indexOf(responseText, startText) + startText.length;
    var endIndex = utils.lastIndexOf(responseText, endText);

    if (startIndex === -1 || endIndex === -1) {
      return utils.parseJSON(responseText);
    }

    var response = utils.substring(responseText, startIndex, endIndex);

    if (utils.isValidJSON(response)) {
      return utils.parseJSON(response);
    } else {
      return {};
    }
  };

  var getMiniNavi = function getMiniNavi(option) {
    var connectType = option.connectType;
    var isComet = utils.isEqual(connectType, CONNECT_TYPE.COMET);
    var CmpDomainList = isComet ? MINI_COMET_DOMAIN_LIST : MINI_SOCKET_DOMAIN_LIST;
    var naviResp = {
      backupServer: CmpDomainList.join(DOMAIN_SEPARATOR_IN_CMPLIST),
      uploadServer: MINI_UPLOAD_DOMAIN_QINIU,
      bosAddr: MINI_UPLOAD_DOMAIN_BOS };

    return utils.Defer.resolve(naviResp);
  };

  var getNaviRespByWS = function getNaviRespByWS(navi) {
    var protocol = env.protocol.http;
    var optionCMP = protocol === HTTP_PROTOCOL.HTTP ? CMP_HOST_HTTP : CMP_HOST_HTTPS;
    return utils.extend(navi, optionCMP);
  };

  var getPreparedNaviResp = function getPreparedNaviResp(option) {
    var appkey = option.appkey;
    var naviResp = BASE_NAVI_RESP;
    var voipCallInfo = naviResp.voipCallInfo;

    try {
      var parseVoipCallInfo = utils.parseJSON(voipCallInfo);
      utils.forEach(parseVoipCallInfo.callEngine, function (item) {
        if (item.engineType === 3) {
          item.vendorKey = appkey;
        }
      });
      var jsonVoipCallInfo = utils.toJSON(parseVoipCallInfo);
      naviResp.voipCallInfo = jsonVoipCallInfo;
    } catch (error) {}

    return getNaviRespByWS(naviResp);
  };

  var NaviManager = function () {
    function NaviManager(option) {
      this.option = void 0;
      this.localNaviHandler = void 0;
      this.option = option;
      this.localNaviHandler = new LocalNaviHandler(option);
    }

    var _proto2 = NaviManager.prototype;

    _proto2.get = function get() {
      var self = this;
      var option = self.option,
      localNaviHandler = self.localNaviHandler;
      var navigators = option.navigators,
      token = option.token,
      connectType = option.connectType;

      if (env.isMini) {
        return getMiniNavi(option).then(function (miniNaviResp) {
          localNaviHandler.set(miniNaviResp);
          return utils.Defer.resolve(miniNaviResp);
        });
      }

      Logger.info(TAG.L_GET_NAVI_T, {
        navigators: navigators,
        token: token });

      var localConfigForNavi = self.getLocalConfig();

      if (localNaviHandler.isValid()) {
        Logger.info(TAG.L_GET_NAVI_R, {
          content: {
            info: 'local navi',
            localConfigForNavi: localConfigForNavi } });


        return utils.Defer.resolve(localConfigForNavi);
      }

      var naviListInToken = common.getNaviListByToken(token);
      navigators = naviListInToken.concat(navigators);
      option.token = common.getValidToken(token);
      var urlList = utils.map(navigators, function (url) {
        return getNaviUrl(url, option);
      });
      var requestOptions = {
        timeout: NAVI_REQUEST_TIMEOUT };


      var success = function success(_ref) {
        var responseText = _ref.responseText;
        Logger.info(TAG.L_GET_NAVI_R, {
          content: {
            info: 'remote navi',
            responseText: responseText } });


        var resp = parseNaviResponse(responseText);
        var code = resp.code,
        isFixedNaviResp = resp.isFixedNaviResp;
        var isSuccess = code === NAVI_REQUEST_SUCCESS_CODE;

        if (isSuccess) {
          localNaviHandler.set(resp);
          return resp;
        } else if (resp && code) {
          var error = utils.extendInShallow(NAVI_ERROR_INFO[code], {
            msg: resp.errorMessage });

          return utils.Defer.reject(error);
        } else if (isFixedNaviResp) {
          if (connectType === CONNECT_TYPE.COMET) {
            return utils.Defer.reject(ERROR_INFO.NAVI_REQUEST_ERROR);
          }

          var naviResp = getPreparedNaviResp(option);
          localNaviHandler.set(naviResp);
          return naviResp;
        } else {
          return utils.Defer.reject(utils.extendInShallow(ERROR_INFO.NAVI_REQUEST_ERROR, {
            error: responseText }));

        }
      };

      return utils.requestByUrlList(urlList, requestOptions).then(success, function () {
        var fixedNaviResp = {
          'responseText': '{"isFixedNaviResp":true}' };

        return success(fixedNaviResp);
      });
    };

    _proto2.setLocalConfig = function setLocalConfig(config) {
      if (utils.isObject(config)) {
        var localConf = this.getLocalConfig() || {};
        var newConf = utils.extend(localConf, config);
        this.localNaviHandler.set(newConf);
      }
    };

    _proto2.getLocalConfig = function getLocalConfig() {
      return this.localNaviHandler.getResp();
    };

    _proto2.clear = function clear() {
      var option = this.option;
      var localNaviHanlder = new LocalNaviHandler(option);
      localNaviHanlder.clear();
    };

    return NaviManager;
  }();

  var CMPManager = function () {
    function CMPManager() {
      this.cmpDomainList = [];
      this.invalidDomainList = [];
      this.option = void 0;
    }

    var _proto = CMPManager.prototype;

    _proto.setDomainList = function setDomainList(cmpDomainList, option) {
      this.cmpDomainList = cmpDomainList;
      this.option = option || {};
    };

    _proto.getFaster = function getFaster() {
      var cmpDomainList = this.cmpDomainList,
      invalidDomainList = this.invalidDomainList,
      option = this.option;
      var sniffUrlList = utils.filter(cmpDomainList, function (domain) {
        return !utils.isInclude(invalidDomainList, domain);
      });
      sniffUrlList = utils.map(sniffUrlList, function (domain) {
        var timestamp = utils.getCurrentTimestamp();
        var url = domain + "/ping?r=" + timestamp;
        return utils.getValidUrl(url, option);
      });

      if (utils.isEmpty(sniffUrlList)) {
        return utils.Defer.reject(ERROR_INFO.CMP_REQUEST_ERROR);
      }

      return utils.requestForFaster(sniffUrlList, {
        timeInterval: CMP_SNIFF_INTERNAL_TIME }).
      then(function (_ref) {
        var url = _ref.url,
        index = _ref.index;
        return {
          url: url,
          index: index,
          domain: utils.getDomainByUrl(url) };

      })["catch"](function () {
        return utils.Defer.reject(ERROR_INFO.CMP_REQUEST_ERROR);
      });
    };

    _proto.addInvalid = function addInvalid(domain) {
      this.invalidDomainList.push(domain);
    };

    _proto.clearInvalid = function clearInvalid() {
      this.invalidDomainList.length = 0;
    };

    _proto.isAllInvalid = function isAllInvalid() {
      var cmpDomainList = this.cmpDomainList,
      invalidDomainList = this.invalidDomainList;
      return utils.isEqual(cmpDomainList.length, invalidDomainList.length);
    };

    return CMPManager;
  }();

  var _STORAGE_KEY_MAP_CONV;
  var SUB_KEY = STORAGE_CONVERSATION.SUB_KEY;
  var STORAGE_KEY_MAP_CONVERSATION = (_STORAGE_KEY_MAP_CONV = {}, _STORAGE_KEY_MAP_CONV[SUB_KEY.UNREAD_COUNT] = {
    keyName: 'unreadMessageCount',
    defaultVal: 0 },
  _STORAGE_KEY_MAP_CONV[SUB_KEY.HAS_MENTIOND] = {
    keyName: 'hasMentiond',
    defaultVal: false },
  _STORAGE_KEY_MAP_CONV[SUB_KEY.MENTIOND_INFO] = {
    keyName: 'mentiondInfo',
    defaultVal: null },
  _STORAGE_KEY_MAP_CONV[SUB_KEY.UNREAD_LAST_TIME] = {
    keyName: 'lastUnreadTime',
    defaultVal: 0 },
  _STORAGE_KEY_MAP_CONV[SUB_KEY.NOTIFICATION] = {
    keyName: 'notificationStatus',
    defaultVal: NOTIFICATION_STATUS.NOTIFY },
  _STORAGE_KEY_MAP_CONV[SUB_KEY.TOP] = {
    keyName: 'isTop',
    defaultVal: false },
  _STORAGE_KEY_MAP_CONV);
  var conversationKeyMapStorageKey = {};
  utils.forEach(STORAGE_KEY_MAP_CONVERSATION, function (_ref, storeKey) {
    var keyName = _ref.keyName;
    conversationKeyMapStorageKey[keyName] = storeKey;
  });
  var CONVERSATION_KEY_MAP_STORAGE_KEY = conversationKeyMapStorageKey;

  var ConversationStore = function () {
    function ConversationStore(option) {
      this._storage = void 0;
      this._selfUserId = void 0;
      var StorageKey = utils.tplEngine(STORAGE_CONVERSATION.ROOT_KEY_TPL, option);
      this._storage = new common.RCStorage(StorageKey);
      this._selfUserId = option.userId;
    }

    var _proto = ConversationStore.prototype;

    _proto.updateMentiondData = function updateMentiondData(option) {
      var _this = this;

      var key = common.getConversationKey(option);
      var local = this._storage.get(key) || {};
      var mentiondInfoKey = CONVERSATION_KEY_MAP_STORAGE_KEY['mentiondInfo'];
      var hasMentiondKey = CONVERSATION_KEY_MAP_STORAGE_KEY['hasMentiond'];
      var messageType = option.messageType,
      isMentiond = option.isMentiond,
      type = option.type,
      content = option.content,
      senderUserId = option.senderUserId;
      var mentionedList = [],
      mentiondInfo = {};
      var localMentiondInfo = local[mentiondInfoKey] || {};
      var localUserIdList = localMentiondInfo.userIdList || [];
      var mentionedInfo = content.mentionedInfo;
      mentionedInfo = mentionedInfo || {};

      if (isMentiond && type === CONVERSATION_TYPE.GROUP) {
        utils.forEach(mentionedInfo.userIdList, function (userId) {
          if (userId === _this._selfUserId && !utils.isInclude(localUserIdList, senderUserId)) {
            localUserIdList.push(senderUserId);
          }
        });

        if (mentionedInfo.type === MENTIOND_TYPE.ALL && !utils.isInclude(localUserIdList, senderUserId)) {
          localUserIdList.push(senderUserId);
        }

        mentionedList = localUserIdList;
      }

      if (messageType === RECALL_MESSAGE_TYPE && type === CONVERSATION_TYPE.GROUP) {
        var list = localUserIdList;
        utils.forEach(localUserIdList, function (userId, index) {
          if (userId === senderUserId) {
            list.splice(index, 1);
          }
        });
        mentionedList = list;
      }

      mentiondInfo.userIdList = mentionedList;
      mentionedInfo.type && (mentiondInfo.type = mentionedInfo.type);

      if (mentionedList.length !== 0) {
        local[mentiondInfoKey] = mentiondInfo;
        local[hasMentiondKey] = true;
      } else {
        delete local[mentiondInfoKey];
        delete local[hasMentiondKey];
      }

      if (utils.isEmpty(local)) {
        this._storage.remove(key);
      } else {
        this._storage.set(key, local);
      }
    };

    _proto.set = function set(option, conversation) {
      conversation = conversation || {};
      var key = common.getConversationKey(option);
      var local = this._storage.get(key) || {};
      utils.forEach(conversation, function (val, key) {
        var storageKey = CONVERSATION_KEY_MAP_STORAGE_KEY[key];

        if (utils.isUndefined(storageKey) || utils.isUndefined(val)) {
          return;
        }

        if (key === 'hasMentiond' || key === 'mentiondInfo') {
          return;
        }

        var defaultVal = STORAGE_KEY_MAP_CONVERSATION[storageKey].defaultVal;

        if (utils.isEqual(defaultVal, val)) {
          delete local[storageKey];
        } else {
          local[storageKey] = val;
        }
      });

      if (!local[SUB_KEY.UNREAD_COUNT]) {
        delete local[SUB_KEY.UNREAD_LAST_TIME];
      }

      if (utils.isEmpty(local)) {
        this._storage.remove(key);
      } else {
        this._storage.set(key, local);
      }
    };

    _proto.get = function get(option) {
      var key = common.getConversationKey(option),
      local = this._storage.get(key) || {};
      var conversation = {};
      utils.forEach(STORAGE_KEY_MAP_CONVERSATION, function (val, key) {
        var keyName = val.keyName,
        defaultVal = val.defaultVal;
        conversation[keyName] = local[key] || defaultVal;
      });
      return conversation;
    };

    _proto.getValues = function getValues(event) {
      var setEvent = event || utils.noop;
      var values = this._storage.getValues() || {};
      var storeConversationList = [];
      utils.forEach(values, function (store, key) {
        var _common$getConversati = common.getConversationByKey(key),
        type = _common$getConversati.type,
        targetId = _common$getConversati.targetId;

        var conversation = {};
        utils.forEach(store, function (val, storeKey) {
          var _ref2 = STORAGE_KEY_MAP_CONVERSATION[storeKey] || {},
          keyName = _ref2.keyName,
          defaultVal = _ref2.defaultVal;

          conversation[keyName] = val || defaultVal;
        });
        conversation = utils.extend(conversation, {
          type: type,
          targetId: targetId });

        conversation = setEvent(conversation);
        storeConversationList.push(conversation);
      });
      return storeConversationList;
    };

    return ConversationStore;
  }();

  var PullQueueManager = function () {
    function PullQueueManager(option) {
      this.isLoading = false;
      this.pullMsgType = void 0;
      this._queue = new utils.Queue();
      this._option = void 0;
      option = option || {};
      this._option = option;
    }

    var _proto = PullQueueManager.prototype;

    _proto._execEvent = function _execEvent() {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      var self = this;

      var _this$_option = this._option,
      event = _this$_option.event,
      thisArg = _this$_option.thisArg,
      onBefore = this._option.onBefore || function () {
        return args;
      },
      onFinished = this._option.onFinished || utils.noop,
      onError = this._option.onError || utils.noop;

      onBefore.apply(void 0, args);
      self.isLoading = true;
      return event.apply(thisArg, args).then(function (result) {
        self.isLoading = false;
        onFinished.apply(void 0, [result].concat(args));
      })["catch"](function (error) {
        self.isLoading = false;
        onError(error);
      });
    };

    _proto.pull = function pull() {
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }

      this._queue.add({
        event: this._execEvent,
        args: args,
        thisArg: this });


      var param = args[0] || {};
      this.pullMsgType = param.type || PULL_MSG_TYPE.NORMAL;
    };

    return PullQueueManager;
  }();

  var EventName = {
    CHANGED: 'changed' };


  var ConversationStatusManager = function () {
    function ConversationStatusManager(serverEngine) {
      var _serverEngine$watch;

      this._serverEngine = void 0;
      this._eventEmitter = new utils.EventEmitter();
      this._timeStorage = void 0;
      this._handleSetConversationStatus = void 0;
      this._handleConversationStatusChanged = void 0;
      var self = this,
      userId = serverEngine._selfUserId,
      appkey = serverEngine.option.appkey,
      storageKey = utils.tplEngine(STORAGE_CONVERSATION_STATUS.ROOT_KEY_TPL, {
        appkey: appkey,
        userId: userId }),

      timeStorage = new common.RCStorage(storageKey),
      firstPullTime = timeStorage.get(STORAGE_CONVERSATION_STATUS.SUB_KEY.TIME) || 0;
      var pullQueue = new PullQueueManager({
        event: self.pull,
        thisArg: self,
        onFinished: function onFinished(list) {
          self._set(list);
        } });


      self._handleConversationStatusChanged = function (time) {
        pullQueue.pull(time);
      };

      self._handleSetConversationStatus = function (list) {
        self._set(list);
      };

      self._timeStorage = timeStorage;
      self._serverEngine = serverEngine;
      serverEngine.watch((_serverEngine$watch = {}, _serverEngine$watch[SERVER_EVENT_NAME.CONVERSATION_STATUS_CHANGED] = self._handleConversationStatusChanged, _serverEngine$watch[SERVER_EVENT_NAME.CONVERSATION_STATUS_SETED] = self._handleSetConversationStatus, _serverEngine$watch));
      pullQueue.pull(firstPullTime);
    }

    var _proto = ConversationStatusManager.prototype;

    _proto.watchChanged = function watchChanged(event) {
      this._eventEmitter.on(EventName.CHANGED, event);
    };

    _proto.close = function close() {
      var _this$_serverEngine$u;

      this._serverEngine.unwatch((_this$_serverEngine$u = {}, _this$_serverEngine$u[SERVER_EVENT_NAME.CONVERSATION_STATUS_CHANGED] = this._handleConversationStatusChanged, _this$_serverEngine$u[SERVER_EVENT_NAME.CONVERSATION_STATUS_SETED] = this._handleSetConversationStatus, _this$_serverEngine$u));
    };

    _proto.pull = function pull(newPullTime) {
      var time = this._timeStorage.get(STORAGE_CONVERSATION_STATUS.SUB_KEY.TIME) || 0;

      if (newPullTime >= time) {
        return this._serverEngine.getConversationStatus(time);
      } else {
        return utils.Defer.reject();
      }
    };

    _proto._set = function _set(list) {
      var self = this;

      if (utils.isUndefined(list)) {
        return;
      }

      var time = self._timeStorage.get(STORAGE_CONVERSATION_STATUS.SUB_KEY.TIME) || 0;
      var listCount = list.length;
      utils.forEach(list, function (statusItem, index) {
        var updatedTime = statusItem.updatedTime || 0;
        time = updatedTime > time ? updatedTime : time;

        self._eventEmitter.emit(EventName.CHANGED, {
          statusItem: statusItem,
          isLastInAPull: index === listCount - 1 });

      });

      self._timeStorage.set(STORAGE_CONVERSATION_STATUS.SUB_KEY.TIME, time);
    };

    return ConversationStatusManager;
  }();

  var EventName$1 = {
    CHANGED: 'conversationChanged' };


  var ConversationManager = function () {
    function ConversationManager(option, serverEngine) {
      this._selfUserId = void 0;
      this._store = void 0;
      this._eventEmitter = new utils.EventEmitter();
      this._statusManager = void 0;
      this._allConversationList = [];
      this._updatedConversations = {};
      var self = this;
      var statusManager = new ConversationStatusManager(serverEngine);
      statusManager.watchChanged(function (_ref) {
        var statusItem = _ref.statusItem,
        isLastInAPull = _ref.isLastInAPull;

        self._addStatus(statusItem, isLastInAPull);
      });
      self._store = new ConversationStore(option);
      self._selfUserId = option.userId;
      self._statusManager = statusManager;
    }

    var _proto = ConversationManager.prototype;

    _proto.watch = function watch(events) {
      var conversation = events.conversation;

      this._eventEmitter.on(EventName$1.CHANGED, conversation);
    };

    _proto.addMessage = function addMessage(msgArgs) {
      var self = this;
      var message = msgArgs.message,
      isLastInAPull = msgArgs.isLastInAPull,
      type = message.type,
      isPersited = message.isPersited,
      isSaveConversationType = utils.isInclude(TYPE_HAS_CONVERSATION, type);

      if (!isSaveConversationType) {
        return;
      }

      var hasChanged = false;

      var storageConversation = self._store.get(message);

      var calcEvents = [self._setUnreadCount, self._setMentiondInfo];
      utils.forEach(calcEvents, function (event) {
        var _event$call = event.call(self, message, storageConversation),
        hasCalcChanged = _event$call.hasChanged,
        conversation = _event$call.conversation;

        hasChanged = hasChanged || hasCalcChanged;
        storageConversation = conversation;
      });

      if (hasChanged) {
        self._store.set(message, storageConversation);

        self._store.updateMentiondData(message);
      }

      if (isPersited) {
        var conversation = self._getConversationByMessage(message);

        conversation.updatedItems = {
          latestMessage: {
            time: message.sentTime,
            val: message } };



        self._setUpdatedConversation(conversation);
      }

      var isNeedNotifyUpdate = utils.isUndefined(isLastInAPull) ? true : isLastInAPull;

      if (isNeedNotifyUpdate) {
        self._notifyConversationChanged();
      }
    };

    _proto.get = function get(option) {
      var conversation = this._store.get(option);

      var notificationStatus = conversation.notificationStatus,
      isNotDisturb = utils.isEqual(notificationStatus, NOTIFICATION_STATUS.DO_NOT_DISTURB);

      if (isNotDisturb) {
        conversation.unreadMessageCount = 0;
      }

      return conversation;
    };

    _proto.read = function read(option) {
      var self = this,
      type = option.type,
      targetId = option.targetId,
      _store = self._store,
      _updatedConversations = self._updatedConversations,
      key = common.getConversationKey(option),
      updatedConversation = _updatedConversations[key] || {};
      var storeConversation = _store.get(option) || {},
      _storeConversation = storeConversation,
      unreadMessageCount = _storeConversation.unreadMessageCount,
      hasMentiond = _storeConversation.hasMentiond;

      if (unreadMessageCount || hasMentiond) {
        var updatedTime = common.DelayTimer.getTime();
        var updatedValues = {
          type: type,
          targetId: targetId,
          unreadMessageCount: 0,
          hasMentiond: false,
          mentiondInfo: null,
          updatedItems: {
            unreadMessageCount: {
              time: updatedTime,
              val: 0 },

            hasMentiond: {
              time: updatedTime,
              val: false },

            mentiondInfo: {
              time: updatedTime,
              val: null } } };



        storeConversation = utils.extendAllowNull(storeConversation, updatedValues);

        _store.set(option, storeConversation);

        _updatedConversations[key] = utils.extendAllowNull(updatedConversation, updatedValues);

        self._notifyConversationChanged();
      }
    };

    _proto.getTotalUnreadCount = function getTotalUnreadCount() {
      var _store = this._store,
      conversationList = _store.getValues();

      var totalCount = 0;
      utils.forEach(conversationList, function (_ref2) {
        var unreadMessageCount = _ref2.unreadMessageCount;
        unreadMessageCount = utils.isNumber(unreadMessageCount) ? unreadMessageCount : 0;
        totalCount += unreadMessageCount;
      });
      return totalCount;
    };

    _proto.getUnreadCount = function getUnreadCount(option) {
      var _store = this._store;
      var storeConversation = _store.get(option) || {};
      var unreadMessageCount = storeConversation.unreadMessageCount;
      var count = utils.isNumber(unreadMessageCount) ? unreadMessageCount : 0;
      return count;
    };

    _proto.close = function close() {
      this._statusManager.close();
    };

    _proto._getConversationByMessage = function _getConversationByMessage(message) {
      var type = message.type,
      targetId = message.targetId,
      storeConversation = this._store.get(message);

      var conversation = utils.extend(storeConversation, {
        type: type,
        targetId: targetId,
        latestMessage: message });

      return conversation;
    };

    _proto._getUpdatedConversationList = function _getUpdatedConversationList() {
      var self = this,
      updatedConversations = self._updatedConversations,
      list = [];
      utils.forEach(updatedConversations, function (conversation) {
        var storageItems = self._store.get(conversation);

        utils.forEach(storageItems, function (val, key) {
          conversation[key] = val;
        });
        list.push(conversation);
      });
      return common.sortConList(list);
    };

    _proto._setUnreadCount = function _setUnreadCount(message, conversation) {
      var content = message.content,
      messageType = message.messageType,
      sentTime = message.sentTime,
      isCounted = message.isCounted,
      messageDirection = message.messageDirection,
      senderUserId = message.senderUserId,
      isSelfSend = utils.isEqual(messageDirection, MESSAGE_DIRECTION.SEND) || utils.isEqual(senderUserId, this._selfUserId),
      isRecall = utils.isEqual(messageType, RECALL_MESSAGE_TYPE),
      hasContent = utils.isObject(content);
      var hasChanged = false;
      var lastUnreadTime = conversation.lastUnreadTime || 0,
      unreadMessageCount = conversation.unreadMessageCount || 0,
      hasBeenAdded = lastUnreadTime > sentTime;

      if (hasBeenAdded || isSelfSend) {
        return {
          hasChanged: hasChanged,
          conversation: conversation };

      }

      if (isCounted) {
        conversation.unreadMessageCount = unreadMessageCount + 1;
        conversation.lastUnreadTime = sentTime;
        hasChanged = true;
      }

      if (isRecall && hasContent) {
        var isNotRead = lastUnreadTime >= content.sentTime;

        if (isNotRead && unreadMessageCount) {
          conversation.unreadMessageCount = unreadMessageCount - 1;
          hasChanged = true;
        }
      }

      return {
        hasChanged: hasChanged,
        conversation: conversation };

    };

    _proto._setMentiondInfo = function _setMentiondInfo(message, conversation) {
      var content = message.content,
      messageDirection = message.messageDirection,
      isMentiond = message.isMentiond,
      isSelfSend = utils.isEqual(messageDirection, MESSAGE_DIRECTION.SEND),
      hasContent = utils.isObject(content);
      var hasChanged = false;

      if (isSelfSend) ;else if (isMentiond && hasContent && content.mentionedInfo) {
        conversation.hasMentiond = true;
        conversation.mentiondInfo = content.mentionedInfo;
        hasChanged = true;
      }

      return {
        hasChanged: hasChanged,
        conversation: conversation };

    };

    _proto._setUpdatedConversation = function _setUpdatedConversation(conversation) {
      if (utils.isObject(conversation) && conversation.targetId && conversation.type) {
        var self = this,
        cacheKey = common.getConversationKey(conversation),
        cacheConversation = self._updatedConversations[cacheKey];
        self._updatedConversations[cacheKey] = utils.extendAllowNull(cacheConversation, conversation);
      }
    };

    _proto._notifyConversationChanged = function _notifyConversationChanged() {
      var self = this,
      _eventEmitter = self._eventEmitter,
      updatedConversationList = self._getUpdatedConversationList();

      if (utils.isEmpty(updatedConversationList)) ;else {
        utils.setTimeout(function () {
          _eventEmitter.emit(EventName$1.CHANGED, {
            updatedConversationList: updatedConversationList });


          self._updatedConversations = {};
        }, 0);
      }
    };

    _proto._addStatus = function _addStatus(conversationStatus, isLastInAPull) {
      var type = conversationStatus.type,
      targetId = conversationStatus.targetId,
      updatedTime = conversationStatus.updatedTime,
      notificationStatus = conversationStatus.notificationStatus,
      isTop = conversationStatus.isTop,
      option = {
        type: type,
        targetId: targetId };

      var updatedItems = {};

      if (!utils.isUndefined(notificationStatus)) {
        updatedItems['notificationStatus'] = {
          time: updatedTime,
          val: notificationStatus };

      }

      if (!utils.isUndefined(isTop)) {
        updatedItems['isTop'] = {
          time: updatedTime,
          val: isTop };

      }

      this._setUpdatedConversation({
        type: type,
        targetId: targetId,
        updatedItems: updatedItems });


      this._store.set(option, {
        notificationStatus: notificationStatus,
        isTop: isTop });


      if (isLastInAPull) {
        this._notifyConversationChanged();
      }
    };

    return ConversationManager;
  }();

  var MessageTimeSyner$1 = common.MessageTimeSyner,
  ChatRoomMessageTimeSyner$1 = common.ChatRoomMessageTimeSyner;
  var EVENT_NAME$1 = {
    MESSAGE_RECEIVED: 'msg-received' };


  var MessagePullManager = function () {
    function MessagePullManager(serverEngine, option) {
      var _serverEngine$watch;

      this._serverEngine = void 0;
      this._pullQueue = void 0;
      this._messageTimeSyner = void 0;
      this._chatRoomMessageTimeSyner = void 0;
      this._eventEmitter = new utils.EventEmitter();
      this._pullMessageTimer = new utils.Timer({
        type: TIMER_TYPE.INTERVAL,
        timeout: PULL_MSG_TIME });

      this._sentMsgCacheInPulling = {};
      this._handleDirectMessage = void 0;
      this._handleNotifyPull = void 0;
      this._handleJoinChatRoom = void 0;
      this._handleSendMessage = void 0;
      var self = this;
      var appkey = serverEngine.option.appkey,
      userId = serverEngine._selfUserId;
      var startSyncTime = option.startSyncTime;
      var pullQueue = new PullQueueManager({
        event: this._pullEvent,
        thisArg: this,
        onFinished: function onFinished() {},
        onError: function onError() {} });


      self._handleDirectMessage = function (message) {
        if (pullQueue.isLoading && pullQueue.pullMsgType === PULL_MSG_TYPE.CHATROOM) {
          self.notifyMessage({
            message: message,
            hasMore: true });

        } else {
          self.notifyMessage({
            message: message,
            hasMore: false });

        }
      };

      self._handleNotifyPull = function (option) {
        pullQueue.pull(option);
      };

      self._handleJoinChatRoom = function (_ref) {
        var id = _ref.id,
        count = _ref.count,
        isAutoRejoin = _ref.isAutoRejoin;

        if (utils.isEqual(count, CHATROOM_NOT_PULL_MSG_COUNT)) {
          self._chatRoomMessageTimeSyner.set(id, common.DelayTimer.getTime());
        } else {
          var type = PULL_MSG_TYPE.CHATROOM,
          chrmId = id;
          var time = isAutoRejoin ? self._chatRoomMessageTimeSyner.get(id) + 1 : 0;

          self._chatRoomMessageTimeSyner.set(id, time);

          pullQueue.pull({
            type: type,
            time: time,
            chrmId: chrmId,
            count: count });

        }
      };

      self._handleSendMessage = function (message) {
        pullQueue.isLoading ? self._setSentMsgCacheInPulling(message) : self._setPullTime(message);
      };

      serverEngine.watch((_serverEngine$watch = {}, _serverEngine$watch[SERVER_EVENT_NAME.DIRECT_MSG] = self._handleDirectMessage, _serverEngine$watch[SERVER_EVENT_NAME.NOTIFY_PULL] = self._handleNotifyPull, _serverEngine$watch[SERVER_EVENT_NAME.JOIN_CHATROOM] = self._handleJoinChatRoom, _serverEngine$watch[SERVER_EVENT_NAME.MESSAGE_SEND] = self._handleSendMessage, _serverEngine$watch));
      self._serverEngine = serverEngine;
      self._pullQueue = pullQueue;
      self._messageTimeSyner = new MessageTimeSyner$1({
        appkey: appkey,
        userId: userId,
        startSyncTime: startSyncTime });

      self._chatRoomMessageTimeSyner = new ChatRoomMessageTimeSyner$1({
        appkey: appkey,
        userId: userId });


      self._pullMessageTimer.start(pullQueue.pull, {
        thisArg: pullQueue });


      pullQueue.pull();
    }

    var _proto = MessagePullManager.prototype;

    _proto.watchMessage = function watchMessage(event) {
      this._eventEmitter.on(EVENT_NAME$1.MESSAGE_RECEIVED, event);
    };

    _proto.notifyMessage = function notifyMessage(messageArgs) {
      var message = messageArgs.message;

      this._setPullTime(message);

      this._eventEmitter.emit(EVENT_NAME$1.MESSAGE_RECEIVED, messageArgs);
    };

    _proto.close = function close() {
      var _this$_serverEngine$u;

      this._pullMessageTimer.stop();

      this._sentMsgCacheInPulling = {};

      this._serverEngine.unwatch((_this$_serverEngine$u = {}, _this$_serverEngine$u[SERVER_EVENT_NAME.DIRECT_MSG] = this._handleDirectMessage, _this$_serverEngine$u[SERVER_EVENT_NAME.NOTIFY_PULL] = this._handleNotifyPull, _this$_serverEngine$u[SERVER_EVENT_NAME.JOIN_CHATROOM] = this._handleJoinChatRoom, _this$_serverEngine$u[SERVER_EVENT_NAME.MESSAGE_SEND] = this._handleSendMessage, _this$_serverEngine$u));
    };

    _proto._pullEvent = function _pullEvent(option) {
      option = option || {};

      var self = this,
      _serverEngine = self._serverEngine,
      _messageTimeSyner = self._messageTimeSyner,
      _chatRoomMessageTimeSyner = self._chatRoomMessageTimeSyner,
      _option = option,
      type = _option.type,
      chrmId = _option.chrmId,
      serverPullTime = _option.time,
      count = _option.count,
      isPullChrmMsg = utils.isEqual(type, PULL_MSG_TYPE.CHATROOM),
      msgSyncTime = _messageTimeSyner.get(),
      currentReceiveTime = isPullChrmMsg ? _chatRoomMessageTimeSyner.get(chrmId) : msgSyncTime.inboxTime,
      syncTime = utils.copy(msgSyncTime);

      if (serverPullTime && serverPullTime < currentReceiveTime) {
        return utils.Defer.resolve();
      }

      var onMessage = function onMessage(_ref2) {
        var message = _ref2.message,
        finished = _ref2.finished,
        isLastInAPull = _ref2.isLastInAPull;

        self._displatchMessages({
          message: message,
          finished: finished,
          isPullChrmMsg: isPullChrmMsg,
          isLastInAPull: isLastInAPull,
          normalSyncTime: syncTime,
          chatRoomReceiveTime: currentReceiveTime });

      };

      if (isPullChrmMsg) {
        return _serverEngine.pullChrmMessageList(chrmId, currentReceiveTime, count, {
          onMessage: onMessage });

      } else {
        return _serverEngine.pullMessageList(syncTime, {
          onMessage: onMessage });

      }
    };

    _proto._displatchMessages = function _displatchMessages(option) {
      var self = this,
      message = option.message,
      finished = option.finished,
      isPullChrmMsg = option.isPullChrmMsg,
      isLastInAPull = option.isLastInAPull,
      _ref3 = option.normalSyncTime || {},
      inboxTime = _ref3.inboxTime,
      sendboxTime = _ref3.sendboxTime,
      sentTime = message.sentTime,
      messageDirection = message.messageDirection,
      messageUId = message.messageUId,
      isSelfSend = messageDirection === MESSAGE_DIRECTION.SEND,
      pullTime = isSelfSend ? sendboxTime : inboxTime;

      if (sentTime <= pullTime && !isPullChrmMsg) {
        return;
      }

      if (self._sentMsgCacheInPulling[messageUId]) {
        return;
      }

      self.notifyMessage({
        message: message,
        hasMore: !finished,
        isLastInAPull: isLastInAPull });

    };

    _proto._setPullTime = function _setPullTime(message) {
      var isChatRoom = message.type === CONVERSATION_TYPE.CHATROOM;
      isChatRoom ? this._chatRoomMessageTimeSyner.setByMessage(message) : this._messageTimeSyner.setByMessage(message);
    };

    _proto._setSentMsgCacheInPulling = function _setSentMsgCacheInPulling(message) {
      var messageUId = message.messageUId;

      if (utils.isUndefined(messageUId)) {
        return;
      }

      this._sentMsgCacheInPulling[messageUId] = message;
    };

    _proto._consumeSentMsgCacheInPulling = function _consumeSentMsgCacheInPulling() {
      var self = this;
      var _sentMsgCacheInPulling = self._sentMsgCacheInPulling;
      utils.forEach(_sentMsgCacheInPulling, function (message) {
        self._setPullTime(message);
      });
      self._sentMsgCacheInPulling = {};
    };

    return MessagePullManager;
  }();

  var ChatRoomKVStore = function () {
    function ChatRoomKVStore(chrmId, currentUserId) {
      this._chatRoomId = void 0;
      this._kvCaches = {};
      this._currentUserId = void 0;
      this._chatRoomId = chrmId;
      this._currentUserId = currentUserId;
    }

    var _proto = ChatRoomKVStore.prototype;

    _proto.setEntries = function setEntries(data) {
      data = data || {};
      var self = this;
      var _data = data,
      kvList = _data.kvEntries,
      isFullUpdate = _data.isFullUpdate;
      kvList = kvList || [];
      isFullUpdate = isFullUpdate || false;
      isFullUpdate && self.clear();
      utils.forEach(kvList, function (kv) {
        self.setEntry(kv, {
          isFullUpdate: isFullUpdate });

      });
    };

    _proto.setEntry = function setEntry(kv, option) {
      option = option || {};
      var _option = option,
      isFullUpdate = _option.isFullUpdate,
      key = kv.key,
      type = kv.type,
      isOverwrite = kv.isOverwrite,
      userId = kv.userId,
      latestUserId = this.getSetUserId(key),
      isDeleteOpt = utils.isEqual(type, CHATROOM_ENTRY_TYPE.DELETE),
      isSameAtLastSetUser = utils.isEqual(latestUserId, userId),
      isKeyNotExist = !this.isExisted(key);
      var event = isDeleteOpt ? this.remove : this.add;

      if (isFullUpdate) {
        event.call(this, kv);
      } else if (isOverwrite || isSameAtLastSetUser || isKeyNotExist) {
        event.call(this, kv);
      }
    };

    _proto.add = function add(kv) {
      var key = kv.key;
      kv.isDeleted = false;
      this._kvCaches[key] = kv;
    };

    _proto.remove = function remove(kv) {
      var key = kv.key;
      var cacheKV = this.get(key) || {};
      cacheKV.isDeleted = true;
      this._kvCaches[key] = cacheKV;
    };

    _proto.clear = function clear() {
      this._kvCaches = {};
    };

    _proto.get = function get(key) {
      return this._kvCaches[key];
    };

    _proto.getSetUserId = function getSetUserId(key) {
      var cache = this.get(key) || {};
      return cache.userId;
    };

    _proto.getValue = function getValue(key) {
      var kv = this._kvCaches[key] || {};
      var isDeleted = kv.isDeleted;
      return isDeleted ? null : kv.value;
    };

    _proto.getAll = function getAll() {
      var kvEntries = {};
      utils.forEach(this._kvCaches, function (kv, key) {
        if (!kv.isDeleted) {
          kvEntries[key] = kv.value;
        }
      });
      return kvEntries;
    };

    _proto.getUpdatedTime = function getUpdatedTime() {
      var maxTime = 0;
      utils.forEach(this._kvCaches, function (entry) {
        var timestamp = entry.timestamp || 0;

        if (maxTime < timestamp) {
          maxTime = timestamp;
        }
      });
      return maxTime;
    };

    _proto.isExisted = function isExisted(key) {
      var cache = this.get(key) || {};
      var value = cache.value,
      isDeletedOnLatestOperate = cache.isDeleted;
      return value && !isDeletedOnLatestOperate;
    };

    return ChatRoomKVStore;
  }();

  var storeCaches = {};

  var get = function get(chrmId) {
    return storeCaches[chrmId];
  };

  var set$1 = function set(chrmId, data, currentUserId) {
    var kvStore = get(chrmId);

    if (utils.isEmpty(kvStore)) {
      kvStore = new ChatRoomKVStore(chrmId, currentUserId);
    }

    kvStore.setEntries(data);
    storeCaches[chrmId] = kvStore;
  };

  var getValue = function getValue(chrmId, key) {
    var kvStore = get(chrmId);
    var value = kvStore ? kvStore.getValue(key) : null;
    return value;
  };

  var getAll = function getAll(chrmId) {
    var kvStore = get(chrmId);
    var kvs = {};

    if (kvStore) {
      kvs = kvStore.getAll();
    }

    return kvs;
  };

  var clear = function clear(chrmId) {
    var kvStore = get(chrmId) || {};
    kvStore.clear && kvStore.clear();
  };

  var ChatRoomKVStore$1 = {
    get: get,
    set: set$1,
    getValue: getValue,
    getAll: getAll,
    clear: clear };


  var PullTimeCache = {
    _caches: {},
    set: function set(chrmId, time) {
      PullTimeCache._caches[chrmId] = time;
    },
    get: function get(chrmId) {
      return PullTimeCache._caches[chrmId] || 0;
    },
    clear: function clear(chrmId) {
      PullTimeCache._caches[chrmId] = 0;
    } };

  var KV_EVENT_NAME = {
    KV_RECEIVED: 'kv-received' };


  var ChatRoomKVManager = function () {
    function ChatRoomKVManager(serverEngine) {
      var _serverEngine$watch;

      this._serverEngine = void 0;
      this._pullQueue = void 0;
      this._handleChrmKVSet = void 0;
      this._handleChrmKVChanged = void 0;
      this._handleBeforeJoinChrm = void 0;
      this._eventEmitter = new utils.EventEmitter();
      var self = this;
      var userId = serverEngine._selfUserId;
      var pullQueue = new PullQueueManager({
        event: this._pullEvent,
        thisArg: this,
        onFinished: function onFinished(data, option) {
          if (!data || !option.chrmId) {
            return;
          }

          var chrmId = option.chrmId;

          if (data.isFullUpdate) {
            self._reset(chrmId);
          }

          Logger.info(TAG.L_PULL_CHRM_KV_R, {
            data: data,
            option: option });

          ChatRoomKVStore$1.set(chrmId, data, userId);
          PullTimeCache.set(chrmId, data.syncTime || 0);

          self._notifyReceivedKV(chrmId, data);
        } });


      self._handleChrmKVSet = function (_ref) {
        var id = _ref.id,
        data = _ref.data;
        ChatRoomKVStore$1.set(id, data, userId);
      };

      self._handleChrmKVChanged = function (data) {
        self.pull(data);
      };

      self._handleBeforeJoinChrm = function (_ref2) {
        var id = _ref2.id;

        self._reset(id);
      };

      serverEngine.watch((_serverEngine$watch = {}, _serverEngine$watch[SERVER_EVENT_NAME.CHRM_KV_SET] = self._handleChrmKVSet, _serverEngine$watch[SERVER_EVENT_NAME.CHRM_KV_CHANGED] = self._handleChrmKVChanged, _serverEngine$watch[SERVER_EVENT_NAME.BEFORE_JOIN_CHATROOM] = self._handleBeforeJoinChrm, _serverEngine$watch));
      this._serverEngine = serverEngine;
      this._pullQueue = pullQueue;
    }

    var _proto = ChatRoomKVManager.prototype;

    _proto._reset = function _reset(chrmId) {
      ChatRoomKVStore$1.clear(chrmId);
      PullTimeCache.clear(chrmId);
    };

    _proto._pullEvent = function _pullEvent(data) {
      var time = data.time,
      chrmId = data.chrmId,
      currentTime = PullTimeCache.get(chrmId),
      isUpdated = currentTime > time;
      Logger.info(TAG.L_PULL_CHRM_KV_T, {
        currentTime: currentTime,
        serverTime: time,
        isUpdated: isUpdated,
        data: data });


      if (isUpdated) {
        Logger.info(TAG.L_PULL_CHRM_KV_R, {
          info: 'kv is updated. not pull again' });

        return utils.Defer.resolve();
      }

      return this._serverEngine.pullChatRoomKV({
        id: chrmId },
      currentTime);
    };

    _proto.pull = function pull(data) {
      this._pullQueue.pull(data);
    };

    _proto.getValue = function getValue(chrmId, key) {
      return ChatRoomKVStore$1.getValue(chrmId, key);
    };

    _proto.getAll = function getAll(chrmId) {
      return ChatRoomKVStore$1.getAll(chrmId);
    };

    _proto._notifyReceivedKV = function _notifyReceivedKV(chrmId, data) {
      var self = this;
      var kvEntries = data.kvEntries,
      updatedEntries = [];

      if (kvEntries.length > 0) {
        utils.forEach(kvEntries, function (entry) {
          var key = entry.key,
          value = entry.value,
          type = entry.type,
          timestamp = entry.timestamp;
          updatedEntries.push({
            key: key,
            value: value,
            timestamp: timestamp,
            chatroomId: chrmId,
            type: type });

        });

        self._eventEmitter.emit(KV_EVENT_NAME.KV_RECEIVED, updatedEntries);
      }
    };

    _proto.watchReceived = function watchReceived(event) {
      this._eventEmitter.on(KV_EVENT_NAME.KV_RECEIVED, event);
    };

    _proto.close = function close() {
      var _self$_serverEngine$u;

      var self = this;

      self._serverEngine.unwatch((_self$_serverEngine$u = {}, _self$_serverEngine$u[SERVER_EVENT_NAME.CHRM_KV_SET] = self._handleChrmKVSet, _self$_serverEngine$u[SERVER_EVENT_NAME.CHRM_KV_CHANGED] = self._handleChrmKVChanged, _self$_serverEngine$u[SERVER_EVENT_NAME.BEFORE_JOIN_CHATROOM] = self._handleBeforeJoinChrm, _self$_serverEngine$u));
    };

    return ChatRoomKVManager;
  }();

  var SettingStore = function () {
    function SettingStore(appkey, userId) {
      this._storage = void 0;
      var storageKey = utils.tplEngine(STORAGE_USER_SETTING.ROOT_KEY_TPL, {
        appkey: appkey,
        userId: userId });

      this._storage = new common.RCStorage(storageKey);
    }

    var _proto = SettingStore.prototype;

    _proto.set = function set(serverData) {
      var self = this,
      _storage = self._storage,
      settings = serverData.settings,
      oldSettingItems = _storage.get(STORAGE_USER_SETTING.SUB_KEY.SETTINGS) || {};
      var newSettingItems = oldSettingItems,
      isChanged = false;
      utils.forEach(settings, function (newSetting, key) {
        newSetting = newSetting || {};
        var oldSetting = oldSettingItems[key] || {},
        _newSetting = newSetting,
        newVersion = _newSetting.version,
        status = _newSetting.status,
        newValue = _newSetting.value,
        oldGlobalVersion = _storage.get(STORAGE_USER_SETTING.SUB_KEY.VERSION) || 0,
        isNeedUpdateItem = newVersion > (oldSetting.version || 0),
        isNeedUpdateVersion = newVersion > oldGlobalVersion;

        if (!isNeedUpdateItem) {
          return;
        }

        isChanged = true;

        switch (status) {
          case USER_SETTING_STATUS.ADD:
          case USER_SETTING_STATUS.UPDATE:
            newSettingItems[key] = {
              value: newValue,
              version: newVersion };

            break;

          case USER_SETTING_STATUS.DELETE:
            delete newSettingItems[key];
            break;

          default:}


        if (isNeedUpdateVersion) {
          _storage.set(STORAGE_USER_SETTING.SUB_KEY.VERSION, newVersion);
        }
      });

      if (!isChanged) {
        return;
      }

      if (utils.isEmpty(newSettingItems)) {
        _storage.remove(STORAGE_USER_SETTING.SUB_KEY.SETTINGS);
      } else {
        _storage.set(STORAGE_USER_SETTING.SUB_KEY.SETTINGS, newSettingItems);
      }
    };

    _proto.getSetting = function getSetting() {
      var settings = this._storage.get(STORAGE_USER_SETTING.SUB_KEY.SETTINGS) || {};
      return utils.map(settings, function (set) {
        set = set || {};
        return set.value;
      });
    };

    _proto.getVersion = function getVersion() {
      return this._storage.get(STORAGE_USER_SETTING.SUB_KEY.VERSION) || 0;
    };

    return SettingStore;
  }();

  var EventNames = {
    CHANGED: 'change' };


  var SettingManager = function () {
    function SettingManager(serverEngine, option) {
      var _serverEngine$watch;

      this._serverEngine = void 0;
      this._settingStore = void 0;
      this._pullQueue = void 0;
      this._eventEmitter = new utils.EventEmitter();
      this._handleNotifySettingChanged = void 0;
      var self = this,
      appkey = option.appkey,
      userId = option.userId,
      isAutoPull = option.isAutoPull,
      settingStore = new SettingStore(appkey, userId),
      localVersion = settingStore.getVersion() || 0;
      var pullQueue = new PullQueueManager({
        event: serverEngine.getUserSettings,
        thisArg: serverEngine,
        onFinished: function onFinished(serverData) {
          if (serverData && serverData.version) {
            self._settingStore.set(serverData);

            self._eventEmitter.emit(EventNames.CHANGED, self.get());
          }
        } });


      self._handleNotifySettingChanged = function (notifyData) {
        var version = notifyData.version,
        localVersion = self._settingStore.getVersion();

        if (version >= localVersion) {
          pullQueue.pull(localVersion);
        }
      };

      self._settingStore = new SettingStore(appkey, userId);
      self._pullQueue = pullQueue;
      self._serverEngine = serverEngine;
      serverEngine.watch((_serverEngine$watch = {}, _serverEngine$watch[SERVER_EVENT_NAME.USER_SETTING_CHANGED] = self._handleNotifySettingChanged, _serverEngine$watch));

      if (serverEngine.option.connectType !== CONNECT_TYPE.COMET) {
        isAutoPull && pullQueue.pull(localVersion);
      }
    }

    var _proto = SettingManager.prototype;

    _proto.watchSettingChanged = function watchSettingChanged(event) {
      this._eventEmitter.on(EventNames.CHANGED, event);
    };

    _proto.get = function get() {
      return this._settingStore.getSetting() || {};
    };

    _proto.close = function close() {
      var _this$_serverEngine$u;

      this._serverEngine.unwatch((_this$_serverEngine$u = {}, _this$_serverEngine$u[SERVER_EVENT_NAME.USER_SETTING_CHANGED] = this._handleNotifySettingChanged, _this$_serverEngine$u));
    };

    return SettingManager;
  }();

  var WebIMEngine = function () {
    function WebIMEngine(option) {
      this._option = void 0;
      this._user = void 0;
      this._naviManager = void 0;
      this._cmpManager = new CMPManager();
      this._conversationManager = void 0;
      this._messageManager = void 0;
      this._chatRoomKVManager = void 0;
      this._userSettingManager = void 0;
      this._serverEngine = void 0;
      this._imEventEmitter = new utils.EventEmitter();
      this._rtcEventEmitter = new utils.EventEmitter();
      this._connectionStatus = CONNECTION_STATUS.DISCONNECTED;
      this._connectedDomain = void 0;
      this._networkDetecter = void 0;
      this._joinedChatRoomSyner = void 0;
      var self = this;
      var detect = option.detect;
      var serverEngine = new ServerEngine(option);
      serverEngine.watch({
        status: function status(_status) {
          self._handleConnectionStatus(_status);
        } });

      this._serverEngine = serverEngine;
      this._option = option;
      this._networkDetecter = new utils.NetworkDetecter(detect);
      utils.forEach(ServerEngine.prototype, function (event, eventName) {
        var server = serverEngine,
        web = self;
        var selfEvent = web[eventName],
        serverEvent = server[eventName];

        if (!selfEvent && serverEvent && utils.isFunction(serverEvent)) {
          web[eventName] = function () {
            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
              args[_key] = arguments[_key];
            }

            return serverEvent.call.apply(serverEvent, [server].concat(args));
          };
        }
      });
    }

    var _proto = WebIMEngine.prototype;

    _proto._emitMessageExpansionWatcher = function _emitMessageExpansionWatcher(message) {
      var content = message.content;
      var put = content.put,
      del = content.del,
      mid = content.mid;

      if (!utils.isEmpty(put)) {
        this._imEventEmitter.emit(IM_EVENT.EXPANSION, {
          updatedExpansion: {
            expansion: put,
            messageUId: mid } });


      }

      if (!utils.isEmpty(del)) {
        this._imEventEmitter.emit(IM_EVENT.EXPANSION, {
          deletedExpansion: {
            deletedKeys: del,
            messageUId: mid } });


      }
    };

    _proto._notifyMessage = function _notifyMessage(event) {
      var self = this;
      var message = event.message;
      var _serverEngine = self._serverEngine;

      var connectedTime = _serverEngine.getConnectedTime();

      if (common.isLogCommandMsg(message)) {
        var content = message.content;
        Logger.uploadFull(0, content, connectedTime);
        return;
      }

      if (common.isVoipMessage(message)) {
        this._rtcEventEmitter.emit(RTC_EVENT.MESSAGE, event);

        return;
      }

      if (common.isExpansionNotifyMsg(message)) {
        self._emitMessageExpansionWatcher(message);

        return;
      }

      this._conversationManager.addMessage(event);

      this._imEventEmitter.emit(IM_EVENT.MESSAGE, event);
    };

    _proto._handleConnectionStatus = function _handleConnectionStatus(status) {
      var _cmpManager = this._cmpManager,
      _naviManager = this._naviManager,
      _connectedDomain = this._connectedDomain;
      var isNeedUpdateCMPList = utils.isInclude(TRANSPORTER_STATUS_NEED_UPDATE_CMP, status);
      var isNeedReconnect = utils.isInclude(TRANSPORTER_STATUS_NEED_RECONNECT, status);
      var isKickedOfflineByOtherClient = utils.isEqual(CONNECTION_STATUS.KICKED_OFFLINE_BY_OTHER_CLIENT, status);

      if (isNeedUpdateCMPList) {
        _cmpManager.addInvalid(_connectedDomain);

        if (_cmpManager.isAllInvalid()) {
          _naviManager.clear();

          _cmpManager.clearInvalid();
        }
      }

      if (isNeedReconnect) {
        this.disconnect();
        this.reconnect(true);
      }

      if (isKickedOfflineByOtherClient) {
        this.disconnect();
      }

      var connectionStatus = TRANSPORTER_STATUS_TO_CONNECTION_STATUS[status] || status;
      this._connectionStatus = connectionStatus;

      this._imEventEmitter.emit(IM_EVENT.STATUS, {
        status: connectionStatus });


      this._rtcEventEmitter.emit(RTC_EVENT.STATUS, {
        status: connectionStatus });

    };

    _proto._handleConnectError = function _handleConnectError(errorInfo) {
      var _user = this._user;
      var code = errorInfo.code || errorInfo.status;
      this.disconnect();

      if (code === ERROR_INFO.CONN_REDIRECTED.code) {
        this._naviManager.clear();

        return this.connect(_user);
      }

      this._connectionStatus = CONNECTION_STATUS.DISCONNECTED;
      return utils.Defer.reject(errorInfo);
    };

    _proto._afterConnect = function _afterConnect(connectUser, syncTime) {
      var self = this,
      _serverEngine = self._serverEngine,
      appkey = self._option.appkey,
      _imEventEmitter = self._imEventEmitter,
      _naviManager = self._naviManager,
      id = connectUser.id,
      localNavi = _naviManager.getLocalConfig() || {};
      Logger.setOption({
        userId: id });

      self._user.id = id;
      var conversationManager = new ConversationManager({
        appkey: appkey,
        userId: id },
      _serverEngine);
      conversationManager.watch({
        conversation: function conversation(_ref) {
          var updatedConversationList = _ref.updatedConversationList;

          _imEventEmitter.emit(IM_EVENT.CONVERSATION, {
            updatedConversationList: updatedConversationList });

        } });

      self._conversationManager = conversationManager;
      var messageManager = new MessagePullManager(_serverEngine, {
        startSyncTime: syncTime });

      messageManager.watchMessage(function (event) {
        self._notifyMessage(event);
      });
      self._messageManager = messageManager;
      self._chatRoomKVManager = new ChatRoomKVManager(_serverEngine);

      self._chatRoomKVManager.watchReceived(function (updatedEntries) {
        self._imEventEmitter.emit(IM_EVENT.CHATROOM, {
          updatedEntries: updatedEntries });

      });

      var isAutoPull = !!Number(localNavi.openUS);
      var userSettingManager = new SettingManager(_serverEngine, {
        appkey: appkey,
        userId: id,
        isAutoPull: isAutoPull });

      self._joinedChatRoomSyner = new common.JoinedChatRoomSyner({
        appkey: appkey,
        userId: id });

      userSettingManager.watchSettingChanged(function (config) {
        config = config || {};
        var _config = config,
        voipCallInfo = _config.VoipInfo;

        _naviManager.setLocalConfig({
          voipCallInfo: utils.toJSON(voipCallInfo) });


        self._imEventEmitter.emit(IM_EVENT.SETTING, config);
      });
      self._userSettingManager = userSettingManager;
    };

    _proto._isInChatroom = function _isInChatroom(id) {
      var joinedChrmInfos = this._joinedChatRoomSyner.get();

      var isInChrm = false;
      utils.forEach(joinedChrmInfos, function (chrmInfo) {
        var chrmId = chrmInfo.chrmId;
        if (id === chrmId) isInChrm = true;
      });
      return isInChrm;
    };

    _proto.watch = function watch(watchers) {
      var _events;

      var statusWatcher = watchers.status,
      messageWatcher = watchers.message,
      conversationWatcher = watchers.conversation,
      chatroomWatcher = watchers.chatroom,
      expansionWatcher = watchers.expansion;
      var self = this;
      var events = (_events = {}, _events[IM_EVENT.STATUS] = statusWatcher, _events[IM_EVENT.MESSAGE] = messageWatcher, _events[IM_EVENT.CONVERSATION] = conversationWatcher, _events[IM_EVENT.CHATROOM] = chatroomWatcher, _events[IM_EVENT.EXPANSION] = expansionWatcher, _events);
      utils.forEach(events, function (event, eventName) {
        utils.isFunction(event) && self._imEventEmitter.on(eventName, event);
      });
    };

    _proto.rtcInnerWatch = function rtcInnerWatch(watchers) {
      var _events2;

      var statusWatcher = watchers.status,
      messageWatcher = watchers.message;
      var self = this;
      var events = (_events2 = {}, _events2[RTC_EVENT.STATUS] = statusWatcher, _events2[RTC_EVENT.MESSAGE] = messageWatcher, _events2);
      utils.forEach(events, function (event, eventName) {
        utils.isFunction(event) && self._rtcEventEmitter.on(eventName, event);
      });
    };

    _proto.rtcInnerUnwatch = function rtcInnerUnwatch() {
      var _rtcEventEmitter = this._rtcEventEmitter;

      _rtcEventEmitter.clear();
    };

    _proto.unwatch = function unwatch(watchers) {
      var _imEventEmitter = this._imEventEmitter;
      var offEventNameObj = {
        status: 'IM_EVENT.STATUS',
        message: 'IM_EVENT.MESSAGE',
        conversation: 'IM_EVENT.CONVERSATION',
        chatroom: 'IM_EVENT.CHATROOM',
        expansion: 'IM_EVENT.EXPANSION' };


      if (watchers) {
        utils.forEach(watchers, function (val, key) {
          if (offEventNameObj[key]) {
            _imEventEmitter.off(key, val);
          }
        });
      } else {
        _imEventEmitter.clear();
      }
    };

    _proto.getConnectionStatus = function getConnectionStatus() {
      return this._connectionStatus;
    };

    _proto.getConnectionUserId = function getConnectionUserId() {
      var user = this._user || {};
      return user.id;
    };

    _proto.getAppInfo = function getAppInfo() {
      var _option = this._option,
      _naviManager = this._naviManager,
      _userSettingManager = this._userSettingManager;
      return utils.extendInShallow(_option, {
        navi: _naviManager.getLocalConfig(),
        serverConfig: _userSettingManager ? _userSettingManager.get() : {} });

    };

    _proto.connect = function connect(user, options) {
      Logger.startRealtimeUpload();
      var self = this;
      var _option = self._option,
      _serverEngine = self._serverEngine,
      _cmpManager = self._cmpManager;
      var naviOpt = common.getNavReqOption(_option, user);
      var naviManager = new NaviManager(naviOpt);
      var getServerConfig = _option.isOldServer ? _serverEngine.getOldServerConfig : _serverEngine.getServerConfig;
      options = options || {};
      var isAutoReconnect = options.isAutoReconnect;

      self._handleConnectionStatus(CONNECTION_STATUS.CONNECTING);

      self._user = utils.copy(user);
      self._naviManager = naviManager;
      var connectUser;
      return naviManager.get().then(function (configForNavi) {
        var cmpDomainList = common.getCMPDomainList(configForNavi, _option);
        Logger.setServerOption(configForNavi);

        _cmpManager.setDomainList(cmpDomainList);

        return _cmpManager.getFaster();
      }).then(function (_ref2) {
        var domain = _ref2.domain;
        self._connectedDomain = domain;
        return _serverEngine.connect(user, {
          domain: domain });

      }).then(function (user) {
        connectUser = user;
        isAutoReconnect && self.rejoinChatRoom();
        return getServerConfig.call(_serverEngine, user.id);
      }).then(function (serverConfig) {
        self._afterConnect(connectUser, serverConfig);

        self._handleConnectionStatus(CONNECTION_STATUS.CONNECTED);

        return connectUser;
      })["catch"](function (error) {
        return self._handleConnectError(error);
      });
    };

    _proto.reconnect = function reconnect(isAutoReconnect) {
      var self = this;
      var _user = self._user;

      if (utils.isUndefined(_user)) {
        return utils.Defer.reject(ERROR_INFO.NOT_CONNECTED);
      }

      return self._networkDetecter.start().then(function () {
        return self.connect(_user, {
          isAutoReconnect: isAutoReconnect });

      });
    };

    _proto.disconnect = function disconnect(isNotify) {
      isNotify && this._handleConnectionStatus(CONNECTION_STATUS.DISCONNECTED);
      this._networkDetecter && this._networkDetecter.stop();
      this._messageManager && this._messageManager.close();
      this._chatRoomKVManager && this._chatRoomKVManager.close();
      this._userSettingManager && this._userSettingManager.close();
      this._conversationManager && this._conversationManager.close();
      return this._serverEngine.disconnect();
    };

    _proto.changeUser = function changeUser(user) {
      this.disconnect(true);
      return this.connect(user);
    };

    _proto.sendMessage = function sendMessage(conversation, option) {
      var self = this;
      var messageContet = utils.toJSON(option.content);

      if (utils.getByteLength(messageContet) > MAX_MESSAGE_CONTENT_BYTES) {
        return utils.Defer.reject(ERROR_INFO.MSG_CONTENT_EXCEED_LIMIT);
      }

      return self._serverEngine.sendMessage(conversation, option).then(function (message) {
        self._conversationManager.addMessage({
          message: message,
          hasMore: false });


        return message;
      });
    };

    _proto.recallMessage = function recallMessage(conversation, message, option) {
      var self = this;
      return self._serverEngine.recallMessage(conversation, message, option).then(function (message) {
        self._conversationManager.addMessage({
          message: message,
          hasMore: false });


        return message;
      });
    };

    _proto.getConversationList = function getConversationList(option) {
      var isOldServer = this._option.isOldServer,
      _serverEngine = this._serverEngine,
      _conversationManager = this._conversationManager;
      var func = isOldServer ? _serverEngine.getOldConversationList : _serverEngine.getConversationList;
      return func.call(_serverEngine, option, {
        afterDecode: function afterDecode(conversation) {
          var localConversation = _conversationManager.get(conversation);

          conversation = utils.extendAllowNull(conversation, localConversation);
          return conversation;
        } }).
      then(function (list) {
        return common.sortConList(list);
      });
    };

    _proto.getLocalConversation = function getLocalConversation(conversation) {
      var local = this._conversationManager.get(conversation);

      return {
        unreadMessageCount: local.unreadMessageCount || 0,
        hasMentiond: local.hasMentiond || false,
        mentiondInfo: local.mentiondInfo };

    };

    _proto.removeConversation = function removeConversation(conversation) {
      var isOldServer = this._option.isOldServer,
      _serverEngine = this._serverEngine;
      var func = isOldServer ? _serverEngine.removeOldConversation : _serverEngine.removeConversation;
      return func.call(_serverEngine, conversation);
    };

    _proto.getTotalUnreadCount = function getTotalUnreadCount() {
      var isOldServer = this._option.isOldServer,
      _serverEngine = this._serverEngine;

      if (isOldServer) {
        var totalCount = this._conversationManager.getTotalUnreadCount();

        return utils.Defer.resolve(totalCount);
      } else {
        return _serverEngine.getTotalUnreadCount();
      }
    };

    _proto.getUnreadCount = function getUnreadCount(conversation) {
      var isOldServer = this._option.isOldServer;

      if (isOldServer) {
        var count = this._conversationManager.getUnreadCount(conversation);

        return utils.Defer.resolve(count);
      }
    };

    _proto.clearUnreadCount = function clearUnreadCount(conversation, option) {
      var isOldServer = this._option.isOldServer,
      _serverEngine = this._serverEngine;

      if (isOldServer) {
        this._conversationManager.read(conversation);

        return utils.Defer.resolve();
      } else {
        return _serverEngine.clearUnreadCount(conversation, option);
      }
    };

    _proto.joinChatRoom = function joinChatRoom(chrm, option) {
      var self = this;
      var _serverEngine = self._serverEngine,
      _naviManager = self._naviManager,
      _chatRoomKVManager = self._chatRoomKVManager,
      _joinedChatRoomSyner = self._joinedChatRoomSyner;
      var isAutoRejoin = option.isAutoRejoin;
      return _serverEngine.joinChatRoom(chrm, option).then(function () {
        return _naviManager.get();
      }).then(function (configForNavi) {
        var isOpenKVStorageService = configForNavi.kvStorage,
        isOpenJoinMulitpleChrmService = configForNavi.joinMChrm;
        !isAutoRejoin && _joinedChatRoomSyner.set({
          chrmId: chrm.id,
          count: option.count,
          isOpenJoinMulitpleChrmService: isOpenJoinMulitpleChrmService });

        var initialTime = 0;
        return isOpenKVStorageService ? _chatRoomKVManager.pull({
          time: initialTime,
          chrmId: chrm.id }) :
        utils.Defer.resolve();
      });
    };

    _proto.quitChatRoom = function quitChatRoom(chrm) {
      var self = this;
      var _serverEngine = self._serverEngine;
      return _serverEngine.quitChatRoom(chrm).then(function () {
        self._joinedChatRoomSyner.remove(chrm.id);

        return utils.Defer.resolve();
      });
    };

    _proto.rejoinChatRoom = function rejoinChatRoom() {
      var self = this;
      var _joinedChatRoomSyner = self._joinedChatRoomSyner,
      _imEventEmitter = self._imEventEmitter;

      var joinedChrmInfos = _joinedChatRoomSyner.get();

      utils.forEach(joinedChrmInfos, function (chrmInfo) {
        var chrmId = chrmInfo.chrmId,
        count = chrmInfo.count;
        var isAutoRejoin = true,
        isJoinExist = true;
        var rejoinedRoom = {
          chrmId: chrmId,
          count: count };

        return self.joinChatRoom({
          id: chrmId },
        {
          count: count,
          isAutoRejoin: isAutoRejoin,
          isJoinExist: isJoinExist }).
        then(function () {
          _imEventEmitter.emit(IM_EVENT.CHATROOM, {
            rejoinedRoom: rejoinedRoom });

        }, function (reason) {
          _imEventEmitter.emit(IM_EVENT.CHATROOM, {
            rejoinedRoom: utils.extend(rejoinedRoom, {
              errorCode: reason }) });


        });
      });
    };

    _proto.setChatRoomKV = function setChatRoomKV(chrm, entry) {
      var self = this;
      utils.extend(entry, {
        type: CHATROOM_ENTRY_TYPE.UPDATE,
        userId: self._user.id });

      entry.type = CHATROOM_ENTRY_TYPE.UPDATE;
      return self._serverEngine.modifyChatRoomKV(chrm, entry);
    };

    _proto.forceSetChatRoomKV = function forceSetChatRoomKV(chrm, entry) {
      entry.isOverwrite = true;
      return this.setChatRoomKV(chrm, entry);
    };

    _proto.removeChatRoomKV = function removeChatRoomKV(chrm, entry) {
      var self = this;
      utils.extend(entry, {
        type: CHATROOM_ENTRY_TYPE.DELETE,
        userId: self._user.id });

      return self._serverEngine.modifyChatRoomKV(chrm, entry);
    };

    _proto.forceRemoveChatRoomKV = function forceRemoveChatRoomKV(chrm, entry) {
      entry.isOverwrite = true;
      return this.removeChatRoomKV(chrm, entry);
    };

    _proto.getChatRoomKV = function getChatRoomKV(chrm, key) {
      chrm = chrm || {};

      var isInChrm = this._isInChatroom(chrm.id);

      if (!isInChrm) {
        return utils.Defer.reject(ERROR_INFO.NOT_IN_CHATROOM);
      }

      var value = this._chatRoomKVManager.getValue(chrm.id, key);

      if (utils.isEmpty(value)) {
        return utils.Defer.reject(ERROR_INFO.CHATROOM_KEY_NOT_EXIST);
      } else {
        return utils.Defer.resolve(value);
      }
    };

    _proto.getAllChatRoomKV = function getAllChatRoomKV(chrm) {
      chrm = chrm || {};

      var isInChrm = this._isInChatroom(chrm.id);

      if (!isInChrm) {
        return utils.Defer.reject(ERROR_INFO.NOT_IN_CHATROOM);
      }

      var kvs = this._chatRoomKVManager.getAll(chrm.id);

      return utils.Defer.resolve(kvs);
    };

    _proto.getFileToken = function getFileToken(fileType, originName) {
      var self = this;
      var fileName = common.genUploadFileName(fileType, originName);
      var uploadDomains = common.getUploadFileDomains(self._naviManager.getLocalConfig());
      return self._serverEngine.getFileToken(fileType, fileName).then(function (data) {
        return utils.extendInShallow(uploadDomains, data);
      });
    };

    _proto.getFileUrl = function getFileUrl(fileType, fileName, originName, uploadResp) {
      var self = this;
      uploadResp = uploadResp || {};

      if (uploadResp.isBosRes) {
        return utils.Defer.resolve(uploadResp);
      }

      return self._serverEngine.getFileUrl(fileType, fileName, originName);
    };

    return WebIMEngine;
  }();

  var Engine = function Engine(imArg) {
    return new WebIMEngine(imArg);
  };

  var execEngineByEvent = function execEngineByEvent(params, engine) {
    var eventName = params.event,
    args = params.args;
    args = args || [];

    var engineEvent = engine[eventName] || function () {
      return utils.Defer.reject(ERROR_INFO.SDK_INTERNAL_ERROR);
    };

    return engineEvent.apply(engine, args);
  };

  var EngineDispatcher = function () {
    function EngineDispatcher(option) {
      this._engine = void 0;
      this._engine = new Engine(option);
    }

    var _proto = EngineDispatcher.prototype;

    _proto._isEventNeedConnect = function _isEventNeedConnect(eventName) {
      var engine = this._engine,
      connectionStatus = engine.getConnectionStatus(),
      isNotConnected = connectionStatus !== CONNECTION_STATUS.CONNECTED,
      isEventNeedConnected = utils.isInclude(ENGINE_EVENT_NEED_CONNECTED, eventName);
      return isNotConnected && isEventNeedConnected;
    };

    _proto._isEventNeedDisconnect = function _isEventNeedDisconnect(eventName) {
      var engine = this._engine,
      connectionStatus = engine.getConnectionStatus(),
      isConnecting = common.isConnected(connectionStatus) || common.isConnecting(connectionStatus),
      isEventNeedDisconnected = utils.isInclude(ENGINE_EVENT_NEED_DISCONNECTED, eventName);
      return isConnecting && isEventNeedDisconnected;
    };

    _proto._exec = function _exec(params) {
      var event = params.event;
      var engine = this._engine;

      if (this._isEventNeedConnect(event)) {
        return utils.Defer.reject(ERROR_INFO.NOT_CONNECTED);
      }

      if (this._isEventNeedDisconnect(event)) {
        return utils.Defer.reject(ERROR_INFO.RC_CONNECTION_EXIST);
      }

      var execResult = execEngineByEvent(params, engine);
      return utils.isPromise(execResult) ? execResult["catch"](function (error) {
        var errorCode = error.status || error.code || error;
        var msg = utils.isObject(error) ? error.msg : null;
        var errorInfo = ERROR_CODE_TO_INFO[errorCode] || {
          code: errorCode };


        if (msg) {
          errorInfo.msg = msg;
        }

        var isValidErrorCode = utils.isNumberData(errorCode);

        if (!isValidErrorCode) {
          if (utils.isStackError(error)) {
            error = error.stack.toString();
          }

          Logger.fatal(TAG.L_CRASH_E, {
            content: {
              desc: 'SDK Error',
              error: error } });


          errorInfo = utils.extendInShallow(ERROR_INFO.SDK_INTERNAL_ERROR, {
            error: error });

        }

        return utils.Defer.reject(errorInfo);
      }) : execResult;
    };

    _proto.exec = function exec(params) {
      var event = params.event;

      var LOG_TAG = APP_ENGINE_EVENT_LOG_TAG[event],
      isNeedLog = !utils.isEmpty(LOG_TAG),
      _ref = LOG_TAG || {},
      reqLogTag = _ref.req,
      respLogTag = _ref.resp;

      isNeedLog && Logger.info(reqLogTag, params);

      var execResult = this._exec(params);

      if (utils.isPromise(execResult)) {
        return execResult.then(function (result) {
          isNeedLog && Logger.info(respLogTag, result);
          return result;
        })["catch"](function (error) {
          error = error || {};
          var _error = error,
          code = _error.code;

          if (isNeedLog && !Logger.isIgnoreErrorCode(code)) {
            Logger.error(respLogTag, error);
          }

          return utils.Defer.reject(error);
        });
      } else {
        isNeedLog && Logger.info(respLogTag, execResult);
        return execResult;
      }
    };

    return EngineDispatcher;
  }();

  var Type = function Type(name, validator, options) {
    options = options || {};
    var self = this;
    self.validate = validator;
    self.name = name;
    self.errorInfo = options.errorInfo;

    self.canBeNull = function () {
      self.validate = function (data) {
        return utils.isUndefined(data) || utils.isNull(data) || validator(data);
      };

      return self;
    };
  };

  Type.isType = function (type) {
    return type instanceof Type;
  };

  Type.String = new Type('String', utils.isString);
  Type.Number = new Type('Number', utils.isNumber);
  Type.Boolean = new Type('Boolean', utils.isBoolean);
  Type.Function = new Type('Function', utils.isFunction);
  Type.Object = new Type('Object', utils.isObject);
  Type.Array = new Type('Array', utils.isArray);
  Type.NotAllUndefined = new Type('AllUndefined', function (obj) {
    if (utils.isObject(obj) || utils.isArray(obj)) {
      var isNotUndefined = false;
      utils.forEach(obj, function (val) {
        if (!utils.isUndefined(val)) {
          isNotUndefined = true;
        }
      });
      return isNotUndefined;
    } else {
      return !utils.isUndefined(obj);
    }
  });
  var conversationType = common.getConversationTypeList().join('、');
  Type.ConversationType = new Type(conversationType, common.isValidConversationType, {
    errorInfo: 'Not all settings are empty' });

  Type.ChatRoomEntryKey = new Type('ChatRoomEntryKey', common.isValidChatRoomKey, {
    errorInfo: 'ChatRoom Key length must be 1 - 128, Only letters、numbers、+、=、-、_ are supported' });

  Type.ChatRoomEntryValue = new Type('ChatRoomEntryValue', common.isValidChatRoomValue, {
    errorInfo: 'ChatRoom Value length must be 1 - 4096' });


  var Struct = function () {
    function Struct(structure, funcName, paths) {
      if (paths === void 0) {
        paths = [];
      }

      if (!(this instanceof Struct)) {
        return new Struct(structure, funcName, paths);
      }

      var self = this;
      self.structure = structure;
      self.paths = paths;
      self.funcName = funcName;

      if (Type.isType(structure)) {
        self.validate = self._validateType;
      } else if (utils.isArray(structure)) {
        self.validate = self._validateArray;
      } else if (utils.isObject(structure)) {
        self.validate = self._validateObject;
      } else {
        self.validate = self._validateOther;
      }
    }

    var _proto = Struct.prototype;

    _proto._validateType = function _validateType(data) {
      var structure = this.structure;
      var isValid = structure.validate(data);
      return isValid ? this._getSuccess() : this._getError(data);
    };

    _proto._validateArray = function _validateArray(data) {
      var structure = this.structure;

      if (utils.isEmpty(structure)) {
        return this._getSuccess();
      }

      if (!utils.isArray(data)) {
        return this._getError(data);
      }

      var typer = structure[0];

      for (var filed in data) {
        var val = data[filed];

        var result = this._validateField(typer, filed, val);

        if (result.isError) {
          return result;
        }
      }

      return this._getSuccess();
    };

    _proto._validateObject = function _validateObject(data) {
      var structure = this.structure,
      paths = this.paths;
      data = data || {};

      if (utils.isEmpty(structure)) {
        return this._getSuccess();
      }

      if (!utils.isObject(data)) {
        return this._getError(data);
      }

      var checkedField = [];

      for (var filed in data) {
        var typer = structure[filed],
        val = data[filed];

        var result = this._validateField(typer, filed, val);

        if (result.isError) {
          return result;
        }

        checkedField.push(filed);
      }

      for (var checkField in structure) {
        var _typer = structure[checkField];
        var unCheckData = data[checkField];

        if (!utils.isInclude(checkedField, checkField) && !_typer.validate(unCheckData)) {
          var errPaths = utils.copy(paths);
          errPaths.push(checkField);
          return this._getError(unCheckData, {
            paths: errPaths,
            expect: _typer.name });

        }
      }

      return this._getSuccess();
    };

    _proto._validateOther = function _validateOther(data) {
      var self = this;
      var structure = self.structure;

      if (utils.isEqual(structure, data) || utils.isEmpty(structure)) {
        return self._getSuccess();
      } else {
        return self._getError(data, {
          current: data,
          expect: structure });

      }
    };

    _proto._validateField = function _validateField(typer, filed, value) {
      var paths = this.paths,
      funcName = this.funcName;
      var newPaths = utils.copy(paths);
      newPaths.push(filed);
      return new Struct(typer, funcName, newPaths).validate(value);
    };

    _proto._getError = function _getError(data, options) {
      if (options === void 0) {
        options = [];
      }

      var structure = this.structure,
      paths = this.paths,
      funcName = this.funcName;
      options = utils.extend({
        current: data,
        expect: structure.name || utils.getTypeName(structure),
        paths: paths },
      options);
      paths = options.paths;
      var _options = options,
      current = _options.current,
      expect = _options.expect;
      var param = utils.isEmpty(paths) ? 'param' : paths.join('.');
      var currentType = utils.getTypeName(current);
      current = utils.toJSON(current) || current;
      current = current + "(" + currentType + ")";
      var msg = utils.tplEngine(ERROR_INFO.PARAMETER_ERROR.msg, {
        param: param,
        expect: expect,
        current: current });

      var info = {
        code: ERROR_INFO.PARAMETER_ERROR.code,
        funcName: funcName,
        msg: msg };

      var jsonInfo = utils.toJSON(info);
      if (utils.isEmpty(funcName)) delete info[funcName];

      if (structure.errorInfo) {
        info = structure.errorInfo;
      }

      return {
        isError: true,
        info: info,
        jsonInfo: jsonInfo };

    };

    _proto._getSuccess = function _getSuccess() {
      return {
        isError: false };

    };

    return Struct;
  }();

  var validate = function validate(struct, params, eventName) {
    return Struct(struct, eventName).validate(params);
  };

  var _MESSAGE_TYPE_VALIDAT;
  var MESSAGE_TYPE_VALIDATE = (_MESSAGE_TYPE_VALIDAT = {}, _MESSAGE_TYPE_VALIDAT[MESSAGE_TYPE.TEXT] = {
    content: Type.String },
  _MESSAGE_TYPE_VALIDAT[MESSAGE_TYPE.VOICE] = {
    content: Type.String,
    duration: Type.Number },
  _MESSAGE_TYPE_VALIDAT[MESSAGE_TYPE.HQ_VOICE] = {
    remoteUrl: Type.String,
    duration: Type.Number },
  _MESSAGE_TYPE_VALIDAT[MESSAGE_TYPE.IMAGE] = {
    content: Type.String,
    imageUri: Type.String },
  _MESSAGE_TYPE_VALIDAT[MESSAGE_TYPE.GIF] = {
    gifDataSize: Type.Number,
    width: Type.Number,
    height: Type.Number,
    remoteUrl: Type.String },
  _MESSAGE_TYPE_VALIDAT[MESSAGE_TYPE.RICH_CONTENT] = {
    title: Type.String,
    content: Type.String,
    imageUri: Type.String,
    url: Type.String },
  _MESSAGE_TYPE_VALIDAT[MESSAGE_TYPE.LOCATION] = {
    content: Type.String,
    latitude: Type.Number,
    longitude: Type.Number,
    poi: Type.String },
  _MESSAGE_TYPE_VALIDAT[MESSAGE_TYPE.FILE] = {
    name: Type.String,
    size: Type.Number,
    type: Type.String,
    fileUrl: Type.String },
  _MESSAGE_TYPE_VALIDAT[MESSAGE_TYPE.SIGHT] = {
    sightUrl: Type.String,
    content: Type.String,
    duration: Type.Number,
    size: Type.Number,
    name: Type.String },
  _MESSAGE_TYPE_VALIDAT[MESSAGE_TYPE.COMBINE] = {
    remoteUrl: Type.String,
    conversationType: Type.Number,
    nameList: Type.Array,
    summaryList: Type.Array },
  _MESSAGE_TYPE_VALIDAT);
  var validateMsgContent = function validateMsgContent(objectName, option, eventName) {
    var validateByObjectName = MESSAGE_TYPE_VALIDATE[objectName];

    if (validateByObjectName) {
      return validate(validateByObjectName, option, eventName);
    } else {
      return {
        isError: false,
        info: '' };

    }
  };

  var Conversation = function Conversation(_engineDispatcher) {
    var _temp;

    return _temp = function () {
      Conversation.create = function create(option) {
        return new Conversation(option);
      };

      Conversation.get = function get(option) {
        return new Conversation(option);
      };

      Conversation.merge = function merge(option) {
        try {
          return common.mergeConversationList(option);
        } catch (e) {
          utils.consoleError(e);
        }
      };

      Conversation.remove = function remove(option) {
        var _validate = validate({
          type: Type.ConversationType,
          targetId: Type.String },
        option, 'Conversation.remove'),
        isError = _validate.isError,
        info = _validate.info;

        if (isError) {
          return utils.Defer.reject(info);
        }

        return _engineDispatcher.exec({
          event: ENGINE_EVENT.REMOVE_CONVERSATION,
          args: [option] });

      };

      Conversation.getList = function getList(option) {
        var _validate2 = validate({
          count: Type.Number.canBeNull(),
          startTime: Type.Number.canBeNull() },
        option, 'Conversation.getList'),
        isError = _validate2.isError,
        info = _validate2.info;

        if (isError) {
          return utils.Defer.reject(info);
        }

        return _engineDispatcher.exec({
          event: ENGINE_EVENT.GET_CONVERSATION_LIST,
          args: [option] });

      };

      Conversation.getTotalUnreadCount = function getTotalUnreadCount() {
        return _engineDispatcher.exec({
          event: ENGINE_EVENT.GET_TOTAL_UNREAD_COUNT });

      };

      function Conversation(option) {
        this.type = void 0;
        this.targetId = void 0;

        var _validate3 = validate({
          type: Type.ConversationType,
          targetId: Type.String },
        option, 'new Conversation'),
        isError = _validate3.isError,
        jsonInfo = _validate3.jsonInfo;

        if (isError) {
          utils.consoleError(jsonInfo);
          return jsonInfo;
        }

        utils.extend(this, option);
      }

      var _proto = Conversation.prototype;

      _proto.send = function send(option) {
        var eventName = 'conversation.send';

        var _validate4 = validate({
          messageType: Type.String,
          content: Type.Object },
        option, eventName),
        isError = _validate4.isError,
        info = _validate4.info;

        if (isError) {
          return utils.Defer.reject(info);
        }

        var _option = option,
        messageType = _option.messageType,
        content = _option.content,
        expansion = _option.expansion;

        var _validateMsgContent = validateMsgContent(messageType, content, eventName),
        isContentError = _validateMsgContent.isError,
        formatInfo = _validateMsgContent.info;

        if (isContentError) {
          return utils.Defer.reject(formatInfo);
        }

        var _option2 = option,
        isMentioned = _option2.isMentioned,
        mentionedType = _option2.mentionedType,
        mentionedUserIdList = _option2.mentionedUserIdList;
        isMentioned && (option.isMentiond = isMentioned);
        mentionedType && (option.mentiondType = mentionedType);
        mentionedUserIdList && (option.mentiondUserIdList = mentionedUserIdList);

        if (expansion) {
          var expansionError = common.validateExpansion(expansion);
          if (expansionError) return utils.Defer.reject(expansionError);
        }

        option = utils.extendInShallow(SEND_MESSAGE_TYPE_OPTION[messageType], option);
        option = utils.extendInShallow(SEND_MESSAGE_OPTION, option);
        return _engineDispatcher.exec({
          event: ENGINE_EVENT.SEND_MESSAGE,
          args: [this, option] });

      };

      _proto.recall = function recall(message, option) {
        var _validate5 = validate({
          sentTime: Type.Number,
          messageUId: Type.String },
        message, 'conversation.recall'),
        isError = _validate5.isError,
        info = _validate5.info;

        if (isError) {
          return utils.Defer.reject(info);
        }

        return _engineDispatcher.exec({
          event: ENGINE_EVENT.RECALL_MESSAGE,
          args: [this, message, option] });

      };

      _proto.read = function read(option) {
        return _engineDispatcher.exec({
          event: ENGINE_EVENT.CLEAR_UNREAD_COUNT,
          args: [this, option] });

      };

      _proto.getUnreadCount = function getUnreadCount() {
        var conversation = this;
        return _engineDispatcher.exec({
          event: ENGINE_EVENT.GET_UNREAD_COUNT,
          args: [conversation] });

      };

      _proto.getMessages = function getMessages(option) {
        var _validate6 = validate({
          order: Type.Number.canBeNull(),
          count: Type.Number.canBeNull(),
          timestrap: Type.Number.canBeNull() },
        option, 'conversation.getMessages'),
        isError = _validate6.isError,
        info = _validate6.info;

        if (isError) {
          return utils.Defer.reject(info);
        }

        option = utils.extendInShallow(GET_MESSAGES_OPTION, option);
        return _engineDispatcher.exec({
          event: ENGINE_EVENT.GET_HISTORY_MSGS,
          args: [this, option] });

      };

      _proto.deleteMessages = function deleteMessages(messages) {
        var _validate7 = validate([{
          sentTime: Type.Number,
          messageUId: Type.String,
          messageDirection: Type.Number }],
        messages, 'conversation.deleteMessages'),
        isError = _validate7.isError,
        info = _validate7.info;

        if (isError) {
          return utils.Defer.reject(info);
        }

        return _engineDispatcher.exec({
          event: ENGINE_EVENT.DELETE_MESSAGES,
          args: [this, messages] });

      };

      _proto.clearMessages = function clearMessages(option) {
        var _validate8 = validate({
          timestrap: Type.Number },
        option, 'conversation.clearMessages'),
        isError = _validate8.isError,
        info = _validate8.info;

        if (isError) {
          return utils.Defer.reject(info);
        }

        return _engineDispatcher.exec({
          event: ENGINE_EVENT.CLEAR_MESSAGES,
          args: [this, option] });

      };

      _proto.setStatus = function setStatus(option) {
        var _validate9 = validate({
          notificationStatus: Type.Number.canBeNull(),
          isTop: Type.Boolean.canBeNull() },
        option, 'conversation.setStatus'),
        isError = _validate9.isError,
        info = _validate9.info;

        if (isError) {
          return utils.Defer.reject(info);
        }

        var allUndefinedValidate = validate(Type.NotAllUndefined, option);
        isError = allUndefinedValidate.isError;

        if (isError) {
          info = allUndefinedValidate.info;
          return utils.Defer.reject(info);
        }

        var notificationStatus = option.notificationStatus,
        isTop = option.isTop;
        return _engineDispatcher.exec({
          event: ENGINE_EVENT.SET_CONVERSATION_STATUS_LIST,
          args: [[{
            type: this.type,
            targetId: this.targetId,
            notificationStatus: notificationStatus,
            isTop: isTop }]] });


      };

      _proto.setStatusList = function setStatusList(statusList) {
        var _validate10 = validate([{
          notificationStatus: Type.Number.canBeNull(),
          isTop: Type.Boolean.canBeNull() }],
        statusList, 'conversation.setStatusList'),
        isError = _validate10.isError,
        info = _validate10.info;

        if (isError) {
          return utils.Defer.reject(info);
        }

        var self = this;
        statusList = utils.map(statusList, function (status) {
          return utils.extend(status, {
            type: self.type,
            targetId: self.targetId });

        });
        return _engineDispatcher.exec({
          event: ENGINE_EVENT.SET_CONVERSATION_STATUS_LIST,
          args: [statusList] });

      };

      _proto.updateMessageExpansion = function updateMessageExpansion(expansionDic, message) {
        var self = this;

        var _validate11 = validate({
          messageUId: Type.String,
          canIncludeExpansion: Type.Boolean },
        message, 'conversation.updateMessageExpansion'),
        isError = _validate11.isError,
        info = _validate11.info;

        if (isError) {
          return utils.Defer.reject(info);
        }

        var error = common.validateExpansion(expansionDic);

        if (error) {
          return utils.Defer.reject(error);
        }

        message = message || {};
        var _message = message,
        canIncludeExpansion = _message.canIncludeExpansion,
        expansion = _message.expansion;
        var totalExpansion = utils.extend(expansion, expansionDic);
        var totalExpansionLength = utils.getObjectKeys(totalExpansion).length;

        if (!canIncludeExpansion) {
          return utils.Defer.reject(ERROR_INFO.MSG_KV_NOT_SUPPORT);
        }

        if (totalExpansionLength > MSG_EXPANSION_LENGTH.TOTAL) {
          return utils.Defer.reject(ERROR_INFO.EXPANSION_LIMIT_EXCEET);
        }

        var option = {};
        utils.extend(option, {
          type: self.type,
          targetId: self.targetId,
          messageUId: message.messageUId,
          expansionDic: expansionDic });

        return _engineDispatcher.exec({
          event: ENGINE_EVENT.UPDATE_EXPANSION_MESSAGE,
          args: [option] });

      };

      _proto.removeMessageExpansion = function removeMessageExpansion(keys, message) {
        var self = this;

        var _validate12 = validate({
          messageUId: Type.String,
          canIncludeExpansion: Type.Boolean },
        message, 'conversation.updateMessageExpansion'),
        isError = _validate12.isError,
        info = _validate12.info;

        if (isError) {
          return utils.Defer.reject(info);
        }

        if (utils.isEmpty(keys) || !utils.isArray(keys)) {
          return utils.Defer.reject(ERROR_INFO.ILLGAL_PARAMS);
        }

        message = message || {};
        var _message2 = message,
        canIncludeExpansion = _message2.canIncludeExpansion;

        if (!canIncludeExpansion) {
          return utils.Defer.reject(ERROR_INFO.MSG_KV_NOT_SUPPORT);
        }

        var option = {};
        utils.extend(option, {
          type: self.type,
          targetId: self.targetId,
          messageUId: message.messageUId,
          keys: keys });

        return _engineDispatcher.exec({
          event: ENGINE_EVENT.UPDATE_EXPANSION_MESSAGE,
          args: [option] });

      };

      _proto.removeMessageAllExpansion = function removeMessageAllExpansion(message) {
        return _engineDispatcher.exec({
          event: ENGINE_EVENT.UPDATE_EXPANSION_MESSAGE,
          args: [{
            removeAll: true },
          message] });

      };

      _proto.destory = function destory() {
        var conversation = this;
        return _engineDispatcher.exec({
          event: ENGINE_EVENT.REMOVE_CONVERSATION,
          args: [conversation] });

      };

      return Conversation;
    }(), _temp;
  };

  var ChatRoom = function ChatRoom(_engineDispatcher) {
    var _temp;

    return _temp = function () {
      ChatRoom.get = function get(option) {
        return new ChatRoom(option);
      };

      function ChatRoom(option) {
        this.id = void 0;

        var _validate = validate({
          id: Type.String },
        option, 'new ChatRoom'),
        isError = _validate.isError,
        jsonInfo = _validate.jsonInfo;

        if (isError) {
          utils.consoleError(jsonInfo);
          return jsonInfo;
        }

        utils.extend(this, option);
      }

      var _proto = ChatRoom.prototype;

      _proto.join = function join(option) {
        var _validate2 = validate({
          count: Type.Number.canBeNull() },
        option, 'chatRoom.join'),
        isError = _validate2.isError,
        info = _validate2.info;

        if (isError) {
          return utils.Defer.reject(info);
        }

        option = utils.extendInShallow(JOIN_CHATROOM_OPTION, option);
        return _engineDispatcher.exec({
          event: ENGINE_EVENT.JOIN_CHATROOM,
          args: [this, option] });

      };

      _proto.joinExist = function joinExist(option) {
        var _validate3 = validate({
          count: Type.Number.canBeNull() },
        option, 'chatRoom.joinExist'),
        isError = _validate3.isError,
        info = _validate3.info;

        if (isError) {
          return utils.Defer.reject(info);
        }

        option['isJoinExist'] = true;
        option = utils.extendInShallow(JOIN_CHATROOM_OPTION, option);
        return _engineDispatcher.exec({
          event: ENGINE_EVENT.JOIN_CHATROOM,
          args: [this, option] });

      };

      _proto.quit = function quit() {
        return _engineDispatcher.exec({
          event: ENGINE_EVENT.QUIT_CHATROOM,
          args: [this] });

      };

      _proto.getInfo = function getInfo(option) {
        var _validate4 = validate({
          count: Type.Number.canBeNull(),
          order: Type.Number.canBeNull() },
        option, 'chatRoom.getInfo'),
        isError = _validate4.isError,
        info = _validate4.info;

        if (isError) {
          return utils.Defer.reject(info);
        }

        option = utils.extendInShallow(GET_CHATROOM_INFO_OPTION, option);
        return _engineDispatcher.exec({
          event: ENGINE_EVENT.GET_CHATROOM_INFO,
          args: [this, option] });

      };

      _proto.send = function send(option) {
        var eventName = 'chatRoom.send';

        var _validate5 = validate({
          messageType: Type.String,
          content: Type.Object },
        option, eventName),
        isError = _validate5.isError,
        info = _validate5.info;

        if (isError) {
          return utils.Defer.reject(info);
        }

        var id = this.id;
        var _option = option,
        messageType = _option.messageType,
        content = _option.content;

        var _validateMsgContent = validateMsgContent(messageType, content, eventName),
        isContentError = _validateMsgContent.isError,
        formatInfo = _validateMsgContent.info;

        if (isContentError) {
          return utils.Defer.reject(formatInfo);
        }

        var conversation = {
          type: CONVERSATION_TYPE.CHATROOM,
          targetId: id };

        option = utils.extendInShallow(SEND_MESSAGE_TYPE_OPTION[messageType], option);
        return _engineDispatcher.exec({
          event: ENGINE_EVENT.SEND_MESSAGE,
          args: [conversation, option] });

      };

      _proto.recall = function recall(message, option) {
        var _validate6 = validate({
          sentTime: Type.Number,
          messageUId: Type.String },
        message, 'chatroom.recall'),
        isError = _validate6.isError,
        info = _validate6.info;

        if (isError) {
          return utils.Defer.reject(info);
        }

        var id = this.id;
        var conversation = {
          type: CONVERSATION_TYPE.CHATROOM,
          targetId: id };

        return _engineDispatcher.exec({
          event: ENGINE_EVENT.RECALL_MESSAGE,
          args: [conversation, message, option] });

      };

      _proto.getMessages = function getMessages(option) {
        var _validate7 = validate({
          count: Type.Number.canBeNull(),
          order: Type.Number.canBeNull(),
          timestrap: Type.Number },
        option, 'chatRoom.getInfo'),
        isError = _validate7.isError,
        info = _validate7.info;

        if (isError) {
          return utils.Defer.reject(info);
        }

        option = utils.extendInShallow(GET_CHATROOM_MESSAGES, option);
        return _engineDispatcher.exec({
          event: ENGINE_EVENT.GET_CHATROOM_MSGS,
          args: [this, option] });

      };

      _proto.setEntry = function setEntry(option) {
        var _validate8 = validate({
          key: Type.ChatRoomEntryKey,
          value: Type.ChatRoomEntryValue },
        option, 'chatRoom.setEntry'),
        isError = _validate8.isError,
        info = _validate8.info;

        if (isError) {
          return utils.Defer.reject(info);
        }

        return _engineDispatcher.exec({
          event: ENGINE_EVENT.SET_KV,
          args: [this, option] });

      };

      _proto.forceSetEntry = function forceSetEntry(option) {
        var _validate9 = validate({
          key: Type.ChatRoomEntryKey,
          value: Type.ChatRoomEntryValue },
        option, 'chatRoom.forceSetEntry'),
        isError = _validate9.isError,
        info = _validate9.info;

        if (isError) {
          return utils.Defer.reject(info);
        }

        return _engineDispatcher.exec({
          event: ENGINE_EVENT.FORCE_SET_KV,
          args: [this, option] });

      };

      _proto.removeEntry = function removeEntry(option) {
        var _validate10 = validate({
          key: Type.ChatRoomEntryKey },
        option, 'chatRoom.removeEntry'),
        isError = _validate10.isError,
        info = _validate10.info;

        if (isError) {
          return utils.Defer.reject(info);
        }

        return _engineDispatcher.exec({
          event: ENGINE_EVENT.DEL_KV,
          args: [this, option] });

      };

      _proto.forceRemoveEntry = function forceRemoveEntry(option) {
        var _validate11 = validate({
          key: Type.ChatRoomEntryKey },
        option, 'chatRoom.forceRemoveEntry'),
        isError = _validate11.isError,
        info = _validate11.info;

        if (isError) {
          return utils.Defer.reject(info);
        }

        return _engineDispatcher.exec({
          event: ENGINE_EVENT.FORCE_DEL_KV,
          args: [this, option] });

      };

      _proto.getEntry = function getEntry(key) {
        var _validate12 = validate(Type.ChatRoomEntryKey, key, 'chatRoom.getEntry'),
        isError = _validate12.isError,
        info = _validate12.info;

        if (isError) {
          return utils.Defer.reject(info);
        }

        return _engineDispatcher.exec({
          event: ENGINE_EVENT.GET_KV,
          args: [this, key] });

      };

      _proto.getAllEntries = function getAllEntries() {
        return _engineDispatcher.exec({
          event: ENGINE_EVENT.GET_ALL_KV,
          args: [this] });

      };

      return ChatRoom;
    }(), _temp;
  };

  var RTC = function RTC(_engineDispatcher) {
    var _temp;

    return _temp = function () {
      RTC.get = function get(option) {
        return new RTC(option);
      };

      function RTC(option) {
        this.roomId = void 0;
        this.option = void 0;
        this.roomId = option.id;
        this.option = option;
      }

      var _proto = RTC.prototype;

      _proto.join = function join() {
        return _engineDispatcher.exec({
          event: ENGINE_EVENT.JOIN_RTC,
          args: [this.option] });

      };

      _proto.quit = function quit() {
        return _engineDispatcher.exec({
          event: ENGINE_EVENT.QUIT_RTC,
          args: [this.option] });

      };

      _proto.ping = function ping() {
        return _engineDispatcher.exec({
          event: ENGINE_EVENT.PING_RTC,
          args: [this.option] });

      };

      _proto.getRoomInfo = function getRoomInfo() {
        return _engineDispatcher.exec({
          event: ENGINE_EVENT.GET_RTC_ROOM_INFO,
          args: [this.option] });

      };

      _proto.getUserInfoList = function getUserInfoList() {
        return _engineDispatcher.exec({
          event: ENGINE_EVENT.GET_RTC_USER_INFO_LIST,
          args: [this.option] });

      };

      _proto.setUserInfo = function setUserInfo(info) {
        return _engineDispatcher.exec({
          event: ENGINE_EVENT.SET_RTC_USER_INFO,
          args: [this.option, info] });

      };

      _proto.removeUserInfo = function removeUserInfo(info) {
        return _engineDispatcher.exec({
          event: ENGINE_EVENT.DEL_RTC_USER_INFO,
          args: [this.option, info] });

      };

      _proto.setData = function setData(key, value, isInner, apiType, message) {
        return _engineDispatcher.exec({
          event: ENGINE_EVENT.SET_RTC_DATA,
          args: [this.roomId, key, value, isInner, apiType, message] });

      };

      _proto.getData = function getData(keys, isInner, apiType) {
        return _engineDispatcher.exec({
          event: ENGINE_EVENT.GET_RTC_DATA,
          args: [this.roomId, keys, isInner, apiType] });

      };

      _proto.removeData = function removeData(keys, isInner, apiType, message) {
        return _engineDispatcher.exec({
          event: ENGINE_EVENT.DEL_RTC_DATA,
          args: [this.roomId, keys, isInner, apiType, message] });

      };

      _proto.setUserData = function setUserData(key, value, isInner, message) {
        return this.setData(key, value, isInner, RTC_API_TYPE.PERSON, message);
      };

      _proto.setRTCUserData = function setRTCUserData(message, valueInfo, objectName) {
        return _engineDispatcher.exec({
          event: ENGINE_EVENT.SET_RTC_USER_DATA,
          args: [this.roomId, message, valueInfo, objectName] });

      };

      _proto.getUserData = function getUserData(keys, isInner) {
        return this.getData(keys, isInner, RTC_API_TYPE.PERSON);
      };

      _proto.removeUserData = function removeUserData(keys, isInner, message) {
        return this.removeData(keys, isInner, RTC_API_TYPE.PERSON, message);
      };

      _proto.setRoomData = function setRoomData(key, value, isInner, message) {
        return this.setData(key, value, isInner, RTC_API_TYPE.ROOM, message);
      };

      _proto.getRoomData = function getRoomData(keys, isInner) {
        return this.getData(keys, isInner, RTC_API_TYPE.ROOM);
      };

      _proto.removeRoomData = function removeRoomData(keys, isInner, message) {
        return this.removeData(keys, isInner, RTC_API_TYPE.ROOM, message);
      };

      _proto.getUserList = function getUserList() {
        return _engineDispatcher.exec({
          event: ENGINE_EVENT.GET_RTC_USER_LIST,
          args: [this.option] });

      };

      _proto.setOutData = function setOutData(rtcData, type, message) {
        return _engineDispatcher.exec({
          event: ENGINE_EVENT.SET_RTC_OUT_DATA,
          args: [this.roomId, rtcData, type, message] });

      };

      _proto.getOutData = function getOutData(userIds) {
        return _engineDispatcher.exec({
          event: ENGINE_EVENT.GET_RTC_OUT_DATA,
          args: [this.roomId, userIds] });

      };

      _proto.getToken = function getToken() {
        return _engineDispatcher.exec({
          event: ENGINE_EVENT.GET_RTC_TOKEN,
          args: [this.option] });

      };

      _proto.setState = function setState(content) {
        return _engineDispatcher.exec({
          event: ENGINE_EVENT.SET_RTC_STATE,
          args: [this.option, content] });

      };

      _proto.send = function send(option) {
        var id = this.roomId;
        var conversation = {
          type: CONVERSATION_TYPE.RTC_ROOM,
          targetId: id };

        return _engineDispatcher.exec({
          event: ENGINE_EVENT.SEND_MESSAGE,
          args: [conversation, option] });

      };

      return RTC;
    }(), _temp;
  };

  var IM = function () {
    function IM(option) {
      this._engineDispatcher = void 0;

      var _validate = validate({
        appkey: Type.String },
      option, 'RongIMLib.init'),
      isError = _validate.isError,
      jsonInfo = _validate.jsonInfo;

      if (isError) {
        throw Error(jsonInfo);
      }

      var engineHandler = new EngineDispatcher(option);
      this._engineDispatcher = engineHandler;
      var Modules = {
        Conversation: Conversation(engineHandler),
        ChatRoom: ChatRoom(engineHandler),
        RTC: RTC(engineHandler) };

      utils.extend(this, Modules);
    }

    var _proto = IM.prototype;

    _proto.getConnectionStatus = function getConnectionStatus() {
      return this._engineDispatcher.exec({
        event: ENGINE_EVENT.GET_CONNECTION_STATUS });

    };

    _proto.getConnectionUserId = function getConnectionUserId() {
      return this._engineDispatcher.exec({
        event: ENGINE_EVENT.GET_CONNECTION_USER_ID });

    };

    _proto.getConnectedTime = function getConnectedTime() {
      return this._engineDispatcher.exec({
        event: ENGINE_EVENT.GET_CONNECTED_TIME });

    };

    _proto.getAppInfo = function getAppInfo() {
      return this._engineDispatcher.exec({
        event: ENGINE_EVENT.GET_APP_INFO });

    };

    _proto.watch = function watch(watchers) {
      var _validate2 = validate({
        conversation: Type.Function.canBeNull(),
        message: Type.Function.canBeNull(),
        status: Type.Function.canBeNull(),
        setting: Type.Function.canBeNull() },
      watchers, 'im.watch'),
      isError = _validate2.isError,
      jsonInfo = _validate2.jsonInfo;

      if (isError) {
        utils.consoleError(jsonInfo);
        return jsonInfo;
      }

      return this._engineDispatcher.exec({
        event: ENGINE_EVENT.WATCH,
        args: [watchers] });

    };

    _proto.rtcInnerWatch = function rtcInnerWatch(watchers) {
      var _validate3 = validate({
        message: Type.Function.canBeNull(),
        status: Type.Function.canBeNull() },
      watchers, 'im.watchForRTC'),
      isError = _validate3.isError,
      jsonInfo = _validate3.jsonInfo;

      if (isError) {
        utils.consoleError(jsonInfo);
        return jsonInfo;
      }

      return this._engineDispatcher.exec({
        event: ENGINE_EVENT.RTC_INNER_WATCH,
        args: [watchers] });

    };

    _proto.rtcInnerUnwatch = function rtcInnerUnwatch() {
      return this._engineDispatcher.exec({
        event: ENGINE_EVENT.RTC_INNER_UNWATCH,
        args: [this] });

    };

    _proto.unwatch = function unwatch(watchers) {
      return this._engineDispatcher.exec({
        event: ENGINE_EVENT.UN_WATCH,
        args: [watchers] });

    };

    _proto.connect = function connect(user) {
      var _validate4 = validate({
        token: Type.String },
      user, 'im.connect'),
      isError = _validate4.isError,
      info = _validate4.info;

      if (isError) {
        return utils.Defer.reject(info);
      }

      return this._engineDispatcher.exec({
        event: ENGINE_EVENT.CONNECT,
        args: [user] });

    };

    _proto.reconnect = function reconnect() {
      return this._engineDispatcher.exec({
        event: ENGINE_EVENT.RECONNECT });

    };

    _proto.disconnect = function disconnect() {
      return this._engineDispatcher.exec({
        event: ENGINE_EVENT.DISCONNECT,
        args: [true] });

    };

    _proto.changeUser = function changeUser(user) {
      var _validate5 = validate({
        token: Type.String },
      user, 'im.changeUser'),
      isError = _validate5.isError,
      info = _validate5.info;

      if (isError) {
        return utils.Defer.reject(info);
      }

      var self = this;
      return self.disconnect().then(function () {
        return self.connect(user);
      });
    };

    _proto.getFileToken = function getFileToken(fileType, originName) {
      return this._engineDispatcher.exec({
        event: ENGINE_EVENT.GET_UPLOAD_TOKEN,
        args: [fileType, originName] });

    };

    _proto.getFileUrl = function getFileUrl(fileType, fileName, originName, uploadResp) {
      return this._engineDispatcher.exec({
        event: ENGINE_EVENT.GET_UPLOAD_URL,
        args: [fileType, fileName, originName, uploadResp] });

    };

    return IM;
  }();

  var imInstance;

  var initLogger = function initLogger(option, im) {
    var isDebug = option.isDebug,
    appkey = option.appkey,
    logCollectEvent = option.logger;
    utils.isFunction(logCollectEvent) && Logger.watchLog(logCollectEvent);
    Logger.setOption({
      isDebug: isDebug,
      appkey: appkey });

    Logger.info(TAG.A_INIT_O, {
      content: option });

    im.watch({
      status: function status(_ref) {
        var _status = _ref.status;
        Logger.setOption({
          isNetworkUnavailable: utils.isEqual(_status, CONNECTION_STATUS.NETWORK_UNAVAILABLE) });

      } });

  };

  var init = function init(option) {
    option = utils.extendInShallow(IM_OPTION, option);
    option.connectType = common.getConnectType(option);

    if (!imInstance) {
      imInstance = new IM(option);
      initLogger(option, imInstance);
    }

    return imInstance;
  };

  var getInstance = function getInstance() {
    return imInstance;
  };

  var index = utils.extend({
    init: init,
    getInstance: getInstance,
    env: env,
    common: common,
    ERROR_CODE: ERROR_CODE,
    Logger: Logger },
  product);

  return index;

});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 1)["default"], __webpack_require__(/*! ./node_modules/node-libs-browser/mock/process.js */ 15), __webpack_require__(/*! (webpack)/buildin/global.js */ 3)))

/***/ }),
/* 15 */
/*!********************************************************!*\
  !*** ./node_modules/node-libs-browser/mock/process.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports.nextTick = function nextTick(fn) {
    var args = Array.prototype.slice.call(arguments);
    args.shift();
    setTimeout(function () {
        fn.apply(null, args);
    }, 0);
};

exports.platform = exports.arch = 
exports.execPath = exports.title = 'browser';
exports.pid = 1;
exports.browser = true;
exports.env = {};
exports.argv = [];

exports.binding = function (name) {
	throw new Error('No such module. (Possibly not yet loaded)')
};

(function () {
    var cwd = '/';
    var path;
    exports.cwd = function () { return cwd };
    exports.chdir = function (dir) {
        if (!path) path = __webpack_require__(/*! path */ 16);
        cwd = path.resolve(dir, cwd);
    };
})();

exports.exit = exports.kill = 
exports.umask = exports.dlopen = 
exports.uptime = exports.memoryUsage = 
exports.uvCounters = function() {};
exports.features = {};


/***/ }),
/* 16 */
/*!***********************************************!*\
  !*** ./node_modules/path-browserify/index.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(process) {// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,
// backported and transplited with Babel, with backwards-compat fixes

// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// resolves . and .. elements in a path array with directory names there
// must be no slashes, empty elements, or device names (c:\) in the array
// (so also no leading and trailing slashes - it does not distinguish
// relative and absolute paths)
function normalizeArray(parts, allowAboveRoot) {
  // if the path tries to go above the root, `up` ends up > 0
  var up = 0;
  for (var i = parts.length - 1; i >= 0; i--) {
    var last = parts[i];
    if (last === '.') {
      parts.splice(i, 1);
    } else if (last === '..') {
      parts.splice(i, 1);
      up++;
    } else if (up) {
      parts.splice(i, 1);
      up--;
    }
  }

  // if the path is allowed to go above the root, restore leading ..s
  if (allowAboveRoot) {
    for (; up--; up) {
      parts.unshift('..');
    }
  }

  return parts;
}

// path.resolve([from ...], to)
// posix version
exports.resolve = function() {
  var resolvedPath = '',
      resolvedAbsolute = false;

  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
    var path = (i >= 0) ? arguments[i] : process.cwd();

    // Skip empty and invalid entries
    if (typeof path !== 'string') {
      throw new TypeError('Arguments to path.resolve must be strings');
    } else if (!path) {
      continue;
    }

    resolvedPath = path + '/' + resolvedPath;
    resolvedAbsolute = path.charAt(0) === '/';
  }

  // At this point the path should be resolved to a full absolute path, but
  // handle relative paths to be safe (might happen when process.cwd() fails)

  // Normalize the path
  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {
    return !!p;
  }), !resolvedAbsolute).join('/');

  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
};

// path.normalize(path)
// posix version
exports.normalize = function(path) {
  var isAbsolute = exports.isAbsolute(path),
      trailingSlash = substr(path, -1) === '/';

  // Normalize the path
  path = normalizeArray(filter(path.split('/'), function(p) {
    return !!p;
  }), !isAbsolute).join('/');

  if (!path && !isAbsolute) {
    path = '.';
  }
  if (path && trailingSlash) {
    path += '/';
  }

  return (isAbsolute ? '/' : '') + path;
};

// posix version
exports.isAbsolute = function(path) {
  return path.charAt(0) === '/';
};

// posix version
exports.join = function() {
  var paths = Array.prototype.slice.call(arguments, 0);
  return exports.normalize(filter(paths, function(p, index) {
    if (typeof p !== 'string') {
      throw new TypeError('Arguments to path.join must be strings');
    }
    return p;
  }).join('/'));
};


// path.relative(from, to)
// posix version
exports.relative = function(from, to) {
  from = exports.resolve(from).substr(1);
  to = exports.resolve(to).substr(1);

  function trim(arr) {
    var start = 0;
    for (; start < arr.length; start++) {
      if (arr[start] !== '') break;
    }

    var end = arr.length - 1;
    for (; end >= 0; end--) {
      if (arr[end] !== '') break;
    }

    if (start > end) return [];
    return arr.slice(start, end - start + 1);
  }

  var fromParts = trim(from.split('/'));
  var toParts = trim(to.split('/'));

  var length = Math.min(fromParts.length, toParts.length);
  var samePartsLength = length;
  for (var i = 0; i < length; i++) {
    if (fromParts[i] !== toParts[i]) {
      samePartsLength = i;
      break;
    }
  }

  var outputParts = [];
  for (var i = samePartsLength; i < fromParts.length; i++) {
    outputParts.push('..');
  }

  outputParts = outputParts.concat(toParts.slice(samePartsLength));

  return outputParts.join('/');
};

exports.sep = '/';
exports.delimiter = ':';

exports.dirname = function (path) {
  if (typeof path !== 'string') path = path + '';
  if (path.length === 0) return '.';
  var code = path.charCodeAt(0);
  var hasRoot = code === 47 /*/*/;
  var end = -1;
  var matchedSlash = true;
  for (var i = path.length - 1; i >= 1; --i) {
    code = path.charCodeAt(i);
    if (code === 47 /*/*/) {
        if (!matchedSlash) {
          end = i;
          break;
        }
      } else {
      // We saw the first non-path separator
      matchedSlash = false;
    }
  }

  if (end === -1) return hasRoot ? '/' : '.';
  if (hasRoot && end === 1) {
    // return '//';
    // Backwards-compat fix:
    return '/';
  }
  return path.slice(0, end);
};

function basename(path) {
  if (typeof path !== 'string') path = path + '';

  var start = 0;
  var end = -1;
  var matchedSlash = true;
  var i;

  for (i = path.length - 1; i >= 0; --i) {
    if (path.charCodeAt(i) === 47 /*/*/) {
        // If we reached a path separator that was not part of a set of path
        // separators at the end of the string, stop now
        if (!matchedSlash) {
          start = i + 1;
          break;
        }
      } else if (end === -1) {
      // We saw the first non-path separator, mark this as the end of our
      // path component
      matchedSlash = false;
      end = i + 1;
    }
  }

  if (end === -1) return '';
  return path.slice(start, end);
}

// Uses a mixed approach for backwards-compatibility, as ext behavior changed
// in new Node.js versions, so only basename() above is backported here
exports.basename = function (path, ext) {
  var f = basename(path);
  if (ext && f.substr(-1 * ext.length) === ext) {
    f = f.substr(0, f.length - ext.length);
  }
  return f;
};

exports.extname = function (path) {
  if (typeof path !== 'string') path = path + '';
  var startDot = -1;
  var startPart = 0;
  var end = -1;
  var matchedSlash = true;
  // Track the state of characters (if any) we see before our first dot and
  // after any path separator we find
  var preDotState = 0;
  for (var i = path.length - 1; i >= 0; --i) {
    var code = path.charCodeAt(i);
    if (code === 47 /*/*/) {
        // If we reached a path separator that was not part of a set of path
        // separators at the end of the string, stop now
        if (!matchedSlash) {
          startPart = i + 1;
          break;
        }
        continue;
      }
    if (end === -1) {
      // We saw the first non-path separator, mark this as the end of our
      // extension
      matchedSlash = false;
      end = i + 1;
    }
    if (code === 46 /*.*/) {
        // If this is our first dot, mark it as the start of our extension
        if (startDot === -1)
          startDot = i;
        else if (preDotState !== 1)
          preDotState = 1;
    } else if (startDot !== -1) {
      // We saw a non-dot and non-path separator before our dot, so we should
      // have a good chance at having a non-empty extension
      preDotState = -1;
    }
  }

  if (startDot === -1 || end === -1 ||
      // We saw a non-dot character immediately before the dot
      preDotState === 0 ||
      // The (right-most) trimmed path component is exactly '..'
      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {
    return '';
  }
  return path.slice(startDot, end);
};

function filter (xs, f) {
    if (xs.filter) return xs.filter(f);
    var res = [];
    for (var i = 0; i < xs.length; i++) {
        if (f(xs[i], i, xs)) res.push(xs[i]);
    }
    return res;
}

// String.prototype.substr - negative index don't work in IE8
var substr = 'ab'.substr(-1) === 'b'
    ? function (str, start, len) { return str.substr(start, len) }
    : function (str, start, len) {
        if (start < 0) start = str.length + start;
        return str.substr(start, len);
    }
;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node-libs-browser/mock/process.js */ 15)))

/***/ }),
/* 17 */
/*!************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/utils/commonJs/index.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(uni) {Object.defineProperty(exports, "__esModule", { value: true });exports.showModal = showModal;exports.showToast = showToast; /* 二次处理模态框交互 */
function showModal(showModalObj) {
  return new Promise(function (resolve, reject) {
    uni.showModal({
      title: showModalObj.title || "友情提示",
      content: showModalObj.content,
      cancelText: showModalObj.cancelText || "取消",
      cancelColor: showModalObj.cancelColor || "#000000",
      confirmText: showModalObj.confirmText || "确认",
      confirmColor: showModalObj.confirmColor || "#0E92F8",
      showCancel: typeof showModalObj.showCancel == 'boolean' ? showModalObj.showCancel : true,
      success: function success(res) {
        if (res.confirm) {
          resolve(res);
        } else if (res.cancel) {
          reject(res);
        }
      } });

  });
}

/* 二次处理提示交互 */
function showToast(showToastObj) {
  return new Promise(function (resolve) {
    uni.showToast({
      title: showToastObj.title || "提示内容",
      icon: showToastObj.icon || "success",
      image: showToastObj.image || "",
      mask: showToastObj.mask || true,
      duration: showToastObj.duration || 1500,
      success: function success(res) {
        setTimeout(function () {
          resolve();
        }, showToastObj.duration || 1500);
      } });

  });
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 1)["default"]))

/***/ }),
/* 18 */,
/* 19 */,
/* 20 */
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js ***!
  \**********************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return normalizeComponent; });
/* globals __VUE_SSR_CONTEXT__ */

// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).
// This module is a runtime utility for cleaner component module output and will
// be included in the final webpack user bundle.

function normalizeComponent (
  scriptExports,
  render,
  staticRenderFns,
  functionalTemplate,
  injectStyles,
  scopeId,
  moduleIdentifier, /* server only */
  shadowMode, /* vue-cli only */
  components, // fixed by xxxxxx auto components
  renderjs // fixed by xxxxxx renderjs
) {
  // Vue.extend constructor export interop
  var options = typeof scriptExports === 'function'
    ? scriptExports.options
    : scriptExports

  // fixed by xxxxxx auto components
  if (components) {
    if (!options.components) {
      options.components = {}
    }
    var hasOwn = Object.prototype.hasOwnProperty
    for (var name in components) {
      if (hasOwn.call(components, name) && !hasOwn.call(options.components, name)) {
        options.components[name] = components[name]
      }
    }
  }
  // fixed by xxxxxx renderjs
  if (renderjs) {
    (renderjs.beforeCreate || (renderjs.beforeCreate = [])).unshift(function() {
      this[renderjs.__module] = this
    });
    (options.mixins || (options.mixins = [])).push(renderjs)
  }

  // render functions
  if (render) {
    options.render = render
    options.staticRenderFns = staticRenderFns
    options._compiled = true
  }

  // functional template
  if (functionalTemplate) {
    options.functional = true
  }

  // scopedId
  if (scopeId) {
    options._scopeId = 'data-v-' + scopeId
  }

  var hook
  if (moduleIdentifier) { // server build
    hook = function (context) {
      // 2.3 injection
      context =
        context || // cached call
        (this.$vnode && this.$vnode.ssrContext) || // stateful
        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional
      // 2.2 with runInNewContext: true
      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
        context = __VUE_SSR_CONTEXT__
      }
      // inject component styles
      if (injectStyles) {
        injectStyles.call(this, context)
      }
      // register component module identifier for async chunk inferrence
      if (context && context._registeredComponents) {
        context._registeredComponents.add(moduleIdentifier)
      }
    }
    // used by ssr in case component is cached and beforeCreate
    // never gets called
    options._ssrRegister = hook
  } else if (injectStyles) {
    hook = shadowMode
      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }
      : injectStyles
  }

  if (hook) {
    if (options.functional) {
      // for template-only hot-reload because in that case the render fn doesn't
      // go through the normalizer
      options._injectStyles = hook
      // register for functioal component in vue file
      var originalRender = options.render
      options.render = function renderWithStyleInjection (h, context) {
        hook.call(context)
        return originalRender(h, context)
      }
    } else {
      // inject component registration as beforeCreate hook
      var existing = options.beforeCreate
      options.beforeCreate = existing
        ? [].concat(existing, hook)
        : [hook]
    }
  }

  return {
    exports: scriptExports,
    options: options
  }
}


/***/ }),
/* 21 */
/*!*******************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/utils/api/index.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(uni) {Object.defineProperty(exports, "__esModule", { value: true });exports.getAction = getAction;exports.postAction = postAction;exports.fileAction = fileAction;var _store = _interopRequireDefault(__webpack_require__(/*! @/store */ 10));
var _commonJs = __webpack_require__(/*! ../commonJs */ 17);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

var PROD_SERVICE = ''; //线上环境
// const DEV_SERVICE = 'http://www.nkzj999.com/wx/serve/test-doctor' //测试环境
var DEV_SERVICE = 'http://192.168.0.183:8502'; //测试环境

function getSerive() {//获取请求地址
  if (false) {} else {
    return DEV_SERVICE;
  }
}

function getSource() {//获取请求平台类型




  return "applet";

}

function showLoading(loading) {//开启loading加载
  if (loading) {
    uni.showLoading({
      title: '加载中',
      mask: true });

  }
}

function hideLoding(loading) {//关闭loading加载
  if (loading) {
    uni.hideLoading();
  }
}

function handleSuceesState(data, loading, toast) {//处理后台成功返回状态
  var datas = data.data;
  var state = datas.code; //获取后台状态码
  return new Promise(function (resolve) {
    if (state != 200 && toast && data.statusCode == 200) {
      if (state == 901 || state == 902 || state == 903 || state == 702 || state == 703 || state == 706) {//登录情况
        _store.default.commit("SET_TOKEN", '');
        _store.default.commit("SET_INFO", '');
        (0, _commonJs.showModal)({
          content: datas.msg,
          showCancel: false,
          confirmText: "去登录" }).
        then(function () {
          uni.redirectTo({
            url: "/pages/login/login" });

        });
      } else {
        (0, _commonJs.showToast)({
          title: datas.msg,
          icon: "none",
          duration: 2000 });

      }
    }
    hideLoding(loading);
    resolve();
  });
}

function getAction(url, data) {var loading = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;var toast = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true; //GET请求
  showLoading(loading);
  return new Promise(function (resolve, reject) {
    uni.request({
      // 如果在H5解决跨域问题




      url: "".concat(getSerive()).concat(url),

      data: data,
      method: "GET",
      header: {
        "X-Requested-With": "XMLHttpRequest",
        "token": _store.default.state.token,
        "source": getSource() },

      success: function success(res) {
        handleSuceesState(res, loading, toast).then(function (state) {
          resolve(res);
        });
      },
      fail: function fail(err) {
        reject(err);
        hideLoding(loading);
      } });

  });
}

function postAction(url, data) {var loading = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;var toast = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true; //POST请求
  showLoading(loading);
  return new Promise(function (resolve, reject) {
    uni.request({
      // 如果在H5解决跨域问题




      url: "".concat(getSerive()).concat(url),

      data: data,
      method: "POST",
      header: {
        "X-Requested-With": "XMLHttpRequest",
        "Content-Type": "application/json",
        "token": _store.default.state.token,
        "source": getSource() },

      success: function success(res) {
        handleSuceesState(res, loading, toast).then(function (state) {
          resolve(res);
        });
      },
      fail: function fail(err) {
        reject(err);
        hideLoding(loading);
      } });

  });
}

function fileAction(url, filePath) {var loading = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;var toast = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true; //FILE请求
  showLoading(loading);
  return new Promise(function (resolve, reject) {
    uni.uploadFile({
      // 如果在H5解决跨域问题




      url: "".concat(getSerive()).concat(url),

      filePath: filePath,
      name: 'file',
      formData: {
        'fileType': 'tx' },

      header: {
        "token": _store.default.state.token,
        "source": getSource() },

      success: function success(res) {
        res.data = JSON.parse(res.data); //处理返回json字符
        handleSuceesState(res, loading, toast).then(function (state) {
          resolve(res);
        });
      },
      fail: function fail(err) {
        reject(err);
        hideLoding(loading);
      } });

  });
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 1)["default"]))

/***/ }),
/* 22 */,
/* 23 */,
/* 24 */,
/* 25 */,
/* 26 */,
/* 27 */,
/* 28 */,
/* 29 */,
/* 30 */,
/* 31 */,
/* 32 */,
/* 33 */,
/* 34 */,
/* 35 */,
/* 36 */,
/* 37 */,
/* 38 */,
/* 39 */,
/* 40 */,
/* 41 */,
/* 42 */,
/* 43 */,
/* 44 */,
/* 45 */,
/* 46 */,
/* 47 */,
/* 48 */
/*!**************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/utils/aesEncrypt/index.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;

/**
                                                                                                      * AES加密 ：字符串 key iv  返回base64
                                                                                                      */
function encryption(word, keyStr, ivStr) {

  var key = CryptoJS.enc.Utf8.parse(keyStr);
  var iv = CryptoJS.enc.Utf8.parse(ivStr);

  var srcs = CryptoJS.enc.Utf8.parse(word);
  var encrypted = CryptoJS.AES.encrypt(srcs, key, {
    iv: iv,
    mode: CryptoJS.mode.CBC,
    padding: CryptoJS.pad.ZeroPadding });

  // console.log("-=-=-=-", encrypted.ciphertext)
  return CryptoJS.enc.Base64.stringify(encrypted.ciphertext);

}


var CryptoJS = CryptoJS || function (Math, undefined) {
  /*
                                                           * Local polyfil of Object.create
                                                           */
  var create = Object.create || function () {
    function F() {};

    return function (obj) {
      var subtype;

      F.prototype = obj;

      subtype = new F();

      F.prototype = null;

      return subtype;
    };
  }();

  /**
        * CryptoJS namespace.
        */
  var C = {};

  /**
               * Library namespace.
               */
  var C_lib = C.lib = {};

  /**
                           * Base object for prototypal inheritance.
                           */
  var Base = C_lib.Base = function () {


    return {
      /**
              * Creates a new object that inherits from this object.
              *
              * @param {Object} overrides Properties to copy into the new object.
              *
              * @return {Object} The new object.
              *
              * @static
              *
              * @example
              *
              *     var MyType = CryptoJS.lib.Base.extend({
                     *         field: 'value',
                     *
                     *         method: function () {
                     *         }
                     *     });
              */
      extend: function extend(overrides) {
        // Spawn
        var subtype = create(this);

        // Augment
        if (overrides) {
          subtype.mixIn(overrides);
        }

        // Create default initializer
        if (!subtype.hasOwnProperty('init') || this.init === subtype.init) {
          subtype.init = function () {
            subtype.$super.init.apply(this, arguments);
          };
        }

        // Initializer's prototype is the subtype object
        subtype.init.prototype = subtype;

        // Reference supertype
        subtype.$super = this;

        return subtype;
      },

      /**
          * Extends this object and runs the init method.
          * Arguments to create() will be passed to init().
          *
          * @return {Object} The new object.
          *
          * @static
          *
          * @example
          *
          *     var instance = MyType.create();
          */
      create: function create() {
        var instance = this.extend();
        instance.init.apply(instance, arguments);

        return instance;
      },

      /**
          * Initializes a newly created object.
          * Override this method to add some logic when your objects are created.
          *
          * @example
          *
          *     var MyType = CryptoJS.lib.Base.extend({
                 *         init: function () {
                 *             // ...
                 *         }
                 *     });
          */
      init: function init() {
      },

      /**
          * Copies properties into this object.
          *
          * @param {Object} properties The properties to mix in.
          *
          * @example
          *
          *     MyType.mixIn({
                 *         field: 'value'
                 *     });
          */
      mixIn: function mixIn(properties) {
        for (var propertyName in properties) {
          if (properties.hasOwnProperty(propertyName)) {
            this[propertyName] = properties[propertyName];
          }
        }

        // IE won't copy toString using the loop above
        if (properties.hasOwnProperty('toString')) {
          this.toString = properties.toString;
        }
      },

      /**
          * Creates a copy of this object.
          *
          * @return {Object} The clone.
          *
          * @example
          *
          *     var clone = instance.clone();
          */
      clone: function clone() {
        return this.init.prototype.extend(this);
      } };

  }();

  /**
        * An array of 32-bit words.
        *
        * @property {Array} words The array of 32-bit words.
        * @property {number} sigBytes The number of significant bytes in this word array.
        */
  var WordArray = C_lib.WordArray = Base.extend({
    /**
                                                   * Initializes a newly created word array.
                                                   *
                                                   * @param {Array} words (Optional) An array of 32-bit words.
                                                   * @param {number} sigBytes (Optional) The number of significant bytes in the words.
                                                   *
                                                   * @example
                                                   *
                                                   *     var wordArray = CryptoJS.lib.WordArray.create();
                                                   *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);
                                                   *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);
                                                   */
    init: function init(words, sigBytes) {
      words = this.words = words || [];

      if (sigBytes != undefined) {
        this.sigBytes = sigBytes;
      } else {
        this.sigBytes = words.length * 4;
      }
    },

    /**
        * Converts this word array to a string.
        *
        * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex
        *
        * @return {string} The stringified word array.
        *
        * @example
        *
        *     var string = wordArray + '';
        *     var string = wordArray.toString();
        *     var string = wordArray.toString(CryptoJS.enc.Utf8);
        */
    toString: function toString(encoder) {
      return (encoder || Hex).stringify(this);
    },

    /**
        * Concatenates a word array to this word array.
        *
        * @param {WordArray} wordArray The word array to append.
        *
        * @return {WordArray} This word array.
        *
        * @example
        *
        *     wordArray1.concat(wordArray2);
        */
    concat: function concat(wordArray) {
      // Shortcuts
      var thisWords = this.words;
      var thatWords = wordArray.words;
      var thisSigBytes = this.sigBytes;
      var thatSigBytes = wordArray.sigBytes;

      // Clamp excess bits
      this.clamp();

      // Concat
      if (thisSigBytes % 4) {
        // Copy one byte at a time
        for (var i = 0; i < thatSigBytes; i++) {
          var thatByte = thatWords[i >>> 2] >>> 24 - i % 4 * 8 & 0xff;
          thisWords[thisSigBytes + i >>> 2] |= thatByte << 24 - (thisSigBytes + i) % 4 * 8;
        }
      } else {
        // Copy one word at a time
        for (var i = 0; i < thatSigBytes; i += 4) {
          thisWords[thisSigBytes + i >>> 2] = thatWords[i >>> 2];
        }
      }
      this.sigBytes += thatSigBytes;

      // Chainable
      return this;
    },

    /**
        * Removes insignificant bits.
        *
        * @example
        *
        *     wordArray.clamp();
        */
    clamp: function clamp() {
      // Shortcuts
      var words = this.words;
      var sigBytes = this.sigBytes;

      // Clamp
      words[sigBytes >>> 2] &= 0xffffffff << 32 - sigBytes % 4 * 8;
      words.length = Math.ceil(sigBytes / 4);
    },

    /**
        * Creates a copy of this word array.
        *
        * @return {WordArray} The clone.
        *
        * @example
        *
        *     var clone = wordArray.clone();
        */
    clone: function clone() {
      var clone = Base.clone.call(this);
      clone.words = this.words.slice(0);

      return clone;
    },

    /**
        * Creates a word array filled with random bytes.
        *
        * @param {number} nBytes The number of random bytes to generate.
        *
        * @return {WordArray} The random word array.
        *
        * @static
        *
        * @example
        *
        *     var wordArray = CryptoJS.lib.WordArray.random(16);
        */
    random: function random(nBytes) {
      var words = [];

      var r = function r(m_w) {
        var m_w = m_w;
        var m_z = 0x3ade68b1;
        var mask = 0xffffffff;

        return function () {
          m_z = 0x9069 * (m_z & 0xFFFF) + (m_z >> 0x10) & mask;
          m_w = 0x4650 * (m_w & 0xFFFF) + (m_w >> 0x10) & mask;
          var result = (m_z << 0x10) + m_w & mask;
          result /= 0x100000000;
          result += 0.5;
          return result * (Math.random() > .5 ? 1 : -1);
        };
      };

      for (var i = 0, rcache; i < nBytes; i += 4) {
        var _r = r((rcache || Math.random()) * 0x100000000);

        rcache = _r() * 0x3ade67b7;
        words.push(_r() * 0x100000000 | 0);
      }

      return new WordArray.init(words, nBytes);
    } });


  /**
           * Encoder namespace.
           */
  var C_enc = C.enc = {};

  /**
                           * Hex encoding strategy.
                           */
  var Hex = C_enc.Hex = {
    /**
                           * Converts a word array to a hex string.
                           *
                           * @param {WordArray} wordArray The word array.
                           *
                           * @return {string} The hex string.
                           *
                           * @static
                           *
                           * @example
                           *
                           *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);
                           */
    stringify: function stringify(wordArray) {
      // Shortcuts
      var words = wordArray.words;
      var sigBytes = wordArray.sigBytes;

      // Convert
      var hexChars = [];
      for (var i = 0; i < sigBytes; i++) {
        var bite = words[i >>> 2] >>> 24 - i % 4 * 8 & 0xff;
        hexChars.push((bite >>> 4).toString(16));
        hexChars.push((bite & 0x0f).toString(16));
      }

      return hexChars.join('');
    },

    /**
        * Converts a hex string to a word array.
        *
        * @param {string} hexStr The hex string.
        *
        * @return {WordArray} The word array.
        *
        * @static
        *
        * @example
        *
        *     var wordArray = CryptoJS.enc.Hex.parse(hexString);
        */
    parse: function parse(hexStr) {
      // Shortcut
      var hexStrLength = hexStr.length;

      // Convert
      var words = [];
      for (var i = 0; i < hexStrLength; i += 2) {
        words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << 24 - i % 8 * 4;
      }

      return new WordArray.init(words, hexStrLength / 2);
    } };


  /**
          * Latin1 encoding strategy.
          */
  var Latin1 = C_enc.Latin1 = {
    /**
                                 * Converts a word array to a Latin1 string.
                                 *
                                 * @param {WordArray} wordArray The word array.
                                 *
                                 * @return {string} The Latin1 string.
                                 *
                                 * @static
                                 *
                                 * @example
                                 *
                                 *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);
                                 */
    stringify: function stringify(wordArray) {
      // Shortcuts
      var words = wordArray.words;
      var sigBytes = wordArray.sigBytes;

      // Convert
      var latin1Chars = [];
      for (var i = 0; i < sigBytes; i++) {
        var bite = words[i >>> 2] >>> 24 - i % 4 * 8 & 0xff;
        latin1Chars.push(String.fromCharCode(bite));
      }

      return latin1Chars.join('');
    },

    /**
        * Converts a Latin1 string to a word array.
        *
        * @param {string} latin1Str The Latin1 string.
        *
        * @return {WordArray} The word array.
        *
        * @static
        *
        * @example
        *
        *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);
        */
    parse: function parse(latin1Str) {
      // Shortcut
      var latin1StrLength = latin1Str.length;

      // Convert
      var words = [];
      for (var i = 0; i < latin1StrLength; i++) {
        words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << 24 - i % 4 * 8;
      }

      return new WordArray.init(words, latin1StrLength);
    } };


  /**
          * UTF-8 encoding strategy.
          */
  var Utf8 = C_enc.Utf8 = {
    /**
                             * Converts a word array to a UTF-8 string.
                             *
                             * @param {WordArray} wordArray The word array.
                             *
                             * @return {string} The UTF-8 string.
                             *
                             * @static
                             *
                             * @example
                             *
                             *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);
                             */
    stringify: function stringify(wordArray) {
      try {
        return decodeURIComponent(escape(Latin1.stringify(wordArray)));
      } catch (e) {
        throw new Error('Malformed UTF-8 data');
      }
    },

    /**
        * Converts a UTF-8 string to a word array.
        *
        * @param {string} utf8Str The UTF-8 string.
        *
        * @return {WordArray} The word array.
        *
        * @static
        *
        * @example
        *
        *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);
        */
    parse: function parse(utf8Str) {
      return Latin1.parse(unescape(encodeURIComponent(utf8Str)));
    } };


  /**
          * Abstract buffered block algorithm template.
          *
          * The property blockSize must be implemented in a concrete subtype.
          *
          * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0
          */
  var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({
    /**
                                                                             * Resets this block algorithm's data buffer to its initial state.
                                                                             *
                                                                             * @example
                                                                             *
                                                                             *     bufferedBlockAlgorithm.reset();
                                                                             */
    reset: function reset() {
      // Initial values
      this._data = new WordArray.init();
      this._nDataBytes = 0;
    },

    /**
        * Adds new data to this block algorithm's buffer.
        *
        * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.
        *
        * @example
        *
        *     bufferedBlockAlgorithm._append('data');
        *     bufferedBlockAlgorithm._append(wordArray);
        */
    _append: function _append(data) {
      // Convert string to WordArray, else assume WordArray already
      if (typeof data == 'string') {
        data = Utf8.parse(data);
      }

      // Append
      this._data.concat(data);
      this._nDataBytes += data.sigBytes;
    },

    /**
        * Processes available data blocks.
        *
        * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.
        *
        * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.
        *
        * @return {WordArray} The processed data.
        *
        * @example
        *
        *     var processedData = bufferedBlockAlgorithm._process();
        *     var processedData = bufferedBlockAlgorithm._process(!!'flush');
        */
    _process: function _process(doFlush) {
      // Shortcuts
      var data = this._data;
      var dataWords = data.words;
      var dataSigBytes = data.sigBytes;
      var blockSize = this.blockSize;
      var blockSizeBytes = blockSize * 4;

      // Count blocks ready
      var nBlocksReady = dataSigBytes / blockSizeBytes;
      if (doFlush) {
        // Round up to include partial blocks
        nBlocksReady = Math.ceil(nBlocksReady);
      } else {
        // Round down to include only full blocks,
        // less the number of blocks that must remain in the buffer
        nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);
      }

      // Count words ready
      var nWordsReady = nBlocksReady * blockSize;

      // Count bytes ready
      var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);

      // Process blocks
      if (nWordsReady) {
        for (var offset = 0; offset < nWordsReady; offset += blockSize) {
          // Perform concrete-algorithm logic
          this._doProcessBlock(dataWords, offset);
        }

        // Remove processed words
        var processedWords = dataWords.splice(0, nWordsReady);
        data.sigBytes -= nBytesReady;
      }

      // Return processed words
      return new WordArray.init(processedWords, nBytesReady);
    },

    /**
        * Creates a copy of this object.
        *
        * @return {Object} The clone.
        *
        * @example
        *
        *     var clone = bufferedBlockAlgorithm.clone();
        */
    clone: function clone() {
      var clone = Base.clone.call(this);
      clone._data = this._data.clone();

      return clone;
    },

    _minBufferSize: 0 });


  /**
                           * Abstract hasher template.
                           *
                           * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)
                           */
  var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({
    /**
                                                               * Configuration options.
                                                               */
    cfg: Base.extend(),

    /**
                         * Initializes a newly created hasher.
                         *
                         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.
                         *
                         * @example
                         *
                         *     var hasher = CryptoJS.algo.SHA256.create();
                         */
    init: function init(cfg) {
      // Apply config defaults
      this.cfg = this.cfg.extend(cfg);

      // Set initial values
      this.reset();
    },

    /**
        * Resets this hasher to its initial state.
        *
        * @example
        *
        *     hasher.reset();
        */
    reset: function reset() {
      // Reset data buffer
      BufferedBlockAlgorithm.reset.call(this);

      // Perform concrete-hasher logic
      this._doReset();
    },

    /**
        * Updates this hasher with a message.
        *
        * @param {WordArray|string} messageUpdate The message to append.
        *
        * @return {Hasher} This hasher.
        *
        * @example
        *
        *     hasher.update('message');
        *     hasher.update(wordArray);
        */
    update: function update(messageUpdate) {
      // Append
      this._append(messageUpdate);

      // Update the hash
      this._process();

      // Chainable
      return this;
    },

    /**
        * Finalizes the hash computation.
        * Note that the finalize operation is effectively a destructive, read-once operation.
        *
        * @param {WordArray|string} messageUpdate (Optional) A final message update.
        *
        * @return {WordArray} The hash.
        *
        * @example
        *
        *     var hash = hasher.finalize();
        *     var hash = hasher.finalize('message');
        *     var hash = hasher.finalize(wordArray);
        */
    finalize: function finalize(messageUpdate) {
      // Final message update
      if (messageUpdate) {
        this._append(messageUpdate);
      }

      // Perform concrete-hasher logic
      var hash = this._doFinalize();

      return hash;
    },

    blockSize: 512 / 32,

    /**
                          * Creates a shortcut function to a hasher's object interface.
                          *
                          * @param {Hasher} hasher The hasher to create a helper for.
                          *
                          * @return {Function} The shortcut function.
                          *
                          * @static
                          *
                          * @example
                          *
                          *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);
                          */
    _createHelper: function _createHelper(hasher) {
      return function (message, cfg) {
        return new hasher.init(cfg).finalize(message);
      };
    },

    /**
        * Creates a shortcut function to the HMAC's object interface.
        *
        * @param {Hasher} hasher The hasher to use in this HMAC helper.
        *
        * @return {Function} The shortcut function.
        *
        * @static
        *
        * @example
        *
        *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);
        */
    _createHmacHelper: function _createHmacHelper(hasher) {
      return function (message, key) {
        return new C_algo.HMAC.init(hasher, key).finalize(message);
      };
    } });


  /**
           * Algorithm namespace.
           */
  var C_algo = C.algo = {};

  return C;
}(Math);


(function () {
  // Shortcuts
  var C = CryptoJS;
  var C_lib = C.lib;
  var WordArray = C_lib.WordArray;
  var C_enc = C.enc;

  /**
                      * Base64 encoding strategy.
                      */
  var Base64 = C_enc.Base64 = {
    /**
                                 * Converts a word array to a Base64 string.
                                 *
                                 * @param {WordArray} wordArray The word array.
                                 *
                                 * @return {string} The Base64 string.
                                 *
                                 * @static
                                 *
                                 * @example
                                 *
                                 *     var base64String = CryptoJS.enc.Base64.stringify(wordArray);
                                 */
    stringify: function stringify(wordArray) {
      // Shortcuts
      var words = wordArray.words;
      var sigBytes = wordArray.sigBytes;
      var map = this._map;

      // Clamp excess bits
      wordArray.clamp();

      // Convert
      var base64Chars = [];
      for (var i = 0; i < sigBytes; i += 3) {
        var byte1 = words[i >>> 2] >>> 24 - i % 4 * 8 & 0xff;
        var byte2 = words[i + 1 >>> 2] >>> 24 - (i + 1) % 4 * 8 & 0xff;
        var byte3 = words[i + 2 >>> 2] >>> 24 - (i + 2) % 4 * 8 & 0xff;

        var triplet = byte1 << 16 | byte2 << 8 | byte3;

        for (var j = 0; j < 4 && i + j * 0.75 < sigBytes; j++) {
          base64Chars.push(map.charAt(triplet >>> 6 * (3 - j) & 0x3f));
        }
      }

      // Add padding
      var paddingChar = map.charAt(64);
      if (paddingChar) {
        while (base64Chars.length % 4) {
          base64Chars.push(paddingChar);
        }
      }

      return base64Chars.join('');
    },

    /**
        * Converts a Base64 string to a word array.
        *
        * @param {string} base64Str The Base64 string.
        *
        * @return {WordArray} The word array.
        *
        * @static
        *
        * @example
        *
        *     var wordArray = CryptoJS.enc.Base64.parse(base64String);
        */
    parse: function parse(base64Str) {
      // Shortcuts
      var base64StrLength = base64Str.length;
      var map = this._map;
      var reverseMap = this._reverseMap;

      if (!reverseMap) {
        reverseMap = this._reverseMap = [];
        for (var j = 0; j < map.length; j++) {
          reverseMap[map.charCodeAt(j)] = j;
        }
      }

      // Ignore padding
      var paddingChar = map.charAt(64);
      if (paddingChar) {
        var paddingIndex = base64Str.indexOf(paddingChar);
        if (paddingIndex !== -1) {
          base64StrLength = paddingIndex;
        }
      }

      // Convert
      return parseLoop(base64Str, base64StrLength, reverseMap);

    },

    _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=' };


  function parseLoop(base64Str, base64StrLength, reverseMap) {
    var words = [];
    var nBytes = 0;
    for (var i = 0; i < base64StrLength; i++) {
      if (i % 4) {
        var bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << i % 4 * 2;
        var bits2 = reverseMap[base64Str.charCodeAt(i)] >>> 6 - i % 4 * 2;
        words[nBytes >>> 2] |= (bits1 | bits2) << 24 - nBytes % 4 * 8;
        nBytes++;
      }
    }
    return WordArray.create(words, nBytes);
  }
})();


(function (Math) {
  // Shortcuts
  var C = CryptoJS;
  var C_lib = C.lib;
  var WordArray = C_lib.WordArray;
  var Hasher = C_lib.Hasher;
  var C_algo = C.algo;

  // Constants table
  var T = [];

  // Compute constants
  (function () {
    for (var i = 0; i < 64; i++) {
      T[i] = Math.abs(Math.sin(i + 1)) * 0x100000000 | 0;
    }
  })();

  /**
         * MD5 hash algorithm.
         */
  var MD5 = C_algo.MD5 = Hasher.extend({
    _doReset: function _doReset() {
      this._hash = new WordArray.init([
      0x67452301, 0xefcdab89,
      0x98badcfe, 0x10325476]);

    },

    _doProcessBlock: function _doProcessBlock(M, offset) {
      // Swap endian
      for (var i = 0; i < 16; i++) {
        // Shortcuts
        var offset_i = offset + i;
        var M_offset_i = M[offset_i];

        M[offset_i] =
        (M_offset_i << 8 | M_offset_i >>> 24) & 0x00ff00ff |
        (M_offset_i << 24 | M_offset_i >>> 8) & 0xff00ff00;

      }

      // Shortcuts
      var H = this._hash.words;

      var M_offset_0 = M[offset + 0];
      var M_offset_1 = M[offset + 1];
      var M_offset_2 = M[offset + 2];
      var M_offset_3 = M[offset + 3];
      var M_offset_4 = M[offset + 4];
      var M_offset_5 = M[offset + 5];
      var M_offset_6 = M[offset + 6];
      var M_offset_7 = M[offset + 7];
      var M_offset_8 = M[offset + 8];
      var M_offset_9 = M[offset + 9];
      var M_offset_10 = M[offset + 10];
      var M_offset_11 = M[offset + 11];
      var M_offset_12 = M[offset + 12];
      var M_offset_13 = M[offset + 13];
      var M_offset_14 = M[offset + 14];
      var M_offset_15 = M[offset + 15];

      // Working varialbes
      var a = H[0];
      var b = H[1];
      var c = H[2];
      var d = H[3];

      // Computation
      a = FF(a, b, c, d, M_offset_0, 7, T[0]);
      d = FF(d, a, b, c, M_offset_1, 12, T[1]);
      c = FF(c, d, a, b, M_offset_2, 17, T[2]);
      b = FF(b, c, d, a, M_offset_3, 22, T[3]);
      a = FF(a, b, c, d, M_offset_4, 7, T[4]);
      d = FF(d, a, b, c, M_offset_5, 12, T[5]);
      c = FF(c, d, a, b, M_offset_6, 17, T[6]);
      b = FF(b, c, d, a, M_offset_7, 22, T[7]);
      a = FF(a, b, c, d, M_offset_8, 7, T[8]);
      d = FF(d, a, b, c, M_offset_9, 12, T[9]);
      c = FF(c, d, a, b, M_offset_10, 17, T[10]);
      b = FF(b, c, d, a, M_offset_11, 22, T[11]);
      a = FF(a, b, c, d, M_offset_12, 7, T[12]);
      d = FF(d, a, b, c, M_offset_13, 12, T[13]);
      c = FF(c, d, a, b, M_offset_14, 17, T[14]);
      b = FF(b, c, d, a, M_offset_15, 22, T[15]);

      a = GG(a, b, c, d, M_offset_1, 5, T[16]);
      d = GG(d, a, b, c, M_offset_6, 9, T[17]);
      c = GG(c, d, a, b, M_offset_11, 14, T[18]);
      b = GG(b, c, d, a, M_offset_0, 20, T[19]);
      a = GG(a, b, c, d, M_offset_5, 5, T[20]);
      d = GG(d, a, b, c, M_offset_10, 9, T[21]);
      c = GG(c, d, a, b, M_offset_15, 14, T[22]);
      b = GG(b, c, d, a, M_offset_4, 20, T[23]);
      a = GG(a, b, c, d, M_offset_9, 5, T[24]);
      d = GG(d, a, b, c, M_offset_14, 9, T[25]);
      c = GG(c, d, a, b, M_offset_3, 14, T[26]);
      b = GG(b, c, d, a, M_offset_8, 20, T[27]);
      a = GG(a, b, c, d, M_offset_13, 5, T[28]);
      d = GG(d, a, b, c, M_offset_2, 9, T[29]);
      c = GG(c, d, a, b, M_offset_7, 14, T[30]);
      b = GG(b, c, d, a, M_offset_12, 20, T[31]);

      a = HH(a, b, c, d, M_offset_5, 4, T[32]);
      d = HH(d, a, b, c, M_offset_8, 11, T[33]);
      c = HH(c, d, a, b, M_offset_11, 16, T[34]);
      b = HH(b, c, d, a, M_offset_14, 23, T[35]);
      a = HH(a, b, c, d, M_offset_1, 4, T[36]);
      d = HH(d, a, b, c, M_offset_4, 11, T[37]);
      c = HH(c, d, a, b, M_offset_7, 16, T[38]);
      b = HH(b, c, d, a, M_offset_10, 23, T[39]);
      a = HH(a, b, c, d, M_offset_13, 4, T[40]);
      d = HH(d, a, b, c, M_offset_0, 11, T[41]);
      c = HH(c, d, a, b, M_offset_3, 16, T[42]);
      b = HH(b, c, d, a, M_offset_6, 23, T[43]);
      a = HH(a, b, c, d, M_offset_9, 4, T[44]);
      d = HH(d, a, b, c, M_offset_12, 11, T[45]);
      c = HH(c, d, a, b, M_offset_15, 16, T[46]);
      b = HH(b, c, d, a, M_offset_2, 23, T[47]);

      a = II(a, b, c, d, M_offset_0, 6, T[48]);
      d = II(d, a, b, c, M_offset_7, 10, T[49]);
      c = II(c, d, a, b, M_offset_14, 15, T[50]);
      b = II(b, c, d, a, M_offset_5, 21, T[51]);
      a = II(a, b, c, d, M_offset_12, 6, T[52]);
      d = II(d, a, b, c, M_offset_3, 10, T[53]);
      c = II(c, d, a, b, M_offset_10, 15, T[54]);
      b = II(b, c, d, a, M_offset_1, 21, T[55]);
      a = II(a, b, c, d, M_offset_8, 6, T[56]);
      d = II(d, a, b, c, M_offset_15, 10, T[57]);
      c = II(c, d, a, b, M_offset_6, 15, T[58]);
      b = II(b, c, d, a, M_offset_13, 21, T[59]);
      a = II(a, b, c, d, M_offset_4, 6, T[60]);
      d = II(d, a, b, c, M_offset_11, 10, T[61]);
      c = II(c, d, a, b, M_offset_2, 15, T[62]);
      b = II(b, c, d, a, M_offset_9, 21, T[63]);

      // Intermediate hash value
      H[0] = H[0] + a | 0;
      H[1] = H[1] + b | 0;
      H[2] = H[2] + c | 0;
      H[3] = H[3] + d | 0;
    },

    _doFinalize: function _doFinalize() {
      // Shortcuts
      var data = this._data;
      var dataWords = data.words;

      var nBitsTotal = this._nDataBytes * 8;
      var nBitsLeft = data.sigBytes * 8;

      // Add padding
      dataWords[nBitsLeft >>> 5] |= 0x80 << 24 - nBitsLeft % 32;

      var nBitsTotalH = Math.floor(nBitsTotal / 0x100000000);
      var nBitsTotalL = nBitsTotal;
      dataWords[(nBitsLeft + 64 >>> 9 << 4) + 15] =
      (nBitsTotalH << 8 | nBitsTotalH >>> 24) & 0x00ff00ff |
      (nBitsTotalH << 24 | nBitsTotalH >>> 8) & 0xff00ff00;

      dataWords[(nBitsLeft + 64 >>> 9 << 4) + 14] =
      (nBitsTotalL << 8 | nBitsTotalL >>> 24) & 0x00ff00ff |
      (nBitsTotalL << 24 | nBitsTotalL >>> 8) & 0xff00ff00;


      data.sigBytes = (dataWords.length + 1) * 4;

      // Hash final blocks
      this._process();

      // Shortcuts
      var hash = this._hash;
      var H = hash.words;

      // Swap endian
      for (var i = 0; i < 4; i++) {
        // Shortcut
        var H_i = H[i];

        H[i] = (H_i << 8 | H_i >>> 24) & 0x00ff00ff |
        (H_i << 24 | H_i >>> 8) & 0xff00ff00;
      }

      // Return final computed hash
      return hash;
    },

    clone: function clone() {
      var clone = Hasher.clone.call(this);
      clone._hash = this._hash.clone();

      return clone;
    } });


  function FF(a, b, c, d, x, s, t) {
    var n = a + (b & c | ~b & d) + x + t;
    return (n << s | n >>> 32 - s) + b;
  }

  function GG(a, b, c, d, x, s, t) {
    var n = a + (b & d | c & ~d) + x + t;
    return (n << s | n >>> 32 - s) + b;
  }

  function HH(a, b, c, d, x, s, t) {
    var n = a + (b ^ c ^ d) + x + t;
    return (n << s | n >>> 32 - s) + b;
  }

  function II(a, b, c, d, x, s, t) {
    var n = a + (c ^ (b | ~d)) + x + t;
    return (n << s | n >>> 32 - s) + b;
  }

  /**
     * Shortcut function to the hasher's object interface.
     *
     * @param {WordArray|string} message The message to hash.
     *
     * @return {WordArray} The hash.
     *
     * @static
     *
     * @example
     *
     *     var hash = CryptoJS.MD5('message');
     *     var hash = CryptoJS.MD5(wordArray);
     */
  C.MD5 = Hasher._createHelper(MD5);

  /**
                                      * Shortcut function to the HMAC's object interface.
                                      *
                                      * @param {WordArray|string} message The message to hash.
                                      * @param {WordArray|string} key The secret key.
                                      *
                                      * @return {WordArray} The HMAC.
                                      *
                                      * @static
                                      *
                                      * @example
                                      *
                                      *     var hmac = CryptoJS.HmacMD5(message, key);
                                      */
  C.HmacMD5 = Hasher._createHmacHelper(MD5);
})(Math);


(function () {
  // Shortcuts
  var C = CryptoJS;
  var C_lib = C.lib;
  var WordArray = C_lib.WordArray;
  var Hasher = C_lib.Hasher;
  var C_algo = C.algo;

  // Reusable object
  var W = [];

  /**
               * SHA-1 hash algorithm.
               */
  var SHA1 = C_algo.SHA1 = Hasher.extend({
    _doReset: function _doReset() {
      this._hash = new WordArray.init([
      0x67452301, 0xefcdab89,
      0x98badcfe, 0x10325476,
      0xc3d2e1f0]);

    },

    _doProcessBlock: function _doProcessBlock(M, offset) {
      // Shortcut
      var H = this._hash.words;

      // Working variables
      var a = H[0];
      var b = H[1];
      var c = H[2];
      var d = H[3];
      var e = H[4];

      // Computation
      for (var i = 0; i < 80; i++) {
        if (i < 16) {
          W[i] = M[offset + i] | 0;
        } else {
          var n = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];
          W[i] = n << 1 | n >>> 31;
        }

        var t = (a << 5 | a >>> 27) + e + W[i];
        if (i < 20) {
          t += (b & c | ~b & d) + 0x5a827999;
        } else if (i < 40) {
          t += (b ^ c ^ d) + 0x6ed9eba1;
        } else if (i < 60) {
          t += (b & c | b & d | c & d) - 0x70e44324;
        } else /* if (i < 80) */{
            t += (b ^ c ^ d) - 0x359d3e2a;
          }

        e = d;
        d = c;
        c = b << 30 | b >>> 2;
        b = a;
        a = t;
      }

      // Intermediate hash value
      H[0] = H[0] + a | 0;
      H[1] = H[1] + b | 0;
      H[2] = H[2] + c | 0;
      H[3] = H[3] + d | 0;
      H[4] = H[4] + e | 0;
    },

    _doFinalize: function _doFinalize() {
      // Shortcuts
      var data = this._data;
      var dataWords = data.words;

      var nBitsTotal = this._nDataBytes * 8;
      var nBitsLeft = data.sigBytes * 8;

      // Add padding
      dataWords[nBitsLeft >>> 5] |= 0x80 << 24 - nBitsLeft % 32;
      dataWords[(nBitsLeft + 64 >>> 9 << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);
      dataWords[(nBitsLeft + 64 >>> 9 << 4) + 15] = nBitsTotal;
      data.sigBytes = dataWords.length * 4;

      // Hash final blocks
      this._process();

      // Return final computed hash
      return this._hash;
    },

    clone: function clone() {
      var clone = Hasher.clone.call(this);
      clone._hash = this._hash.clone();

      return clone;
    } });


  /**
           * Shortcut function to the hasher's object interface.
           *
           * @param {WordArray|string} message The message to hash.
           *
           * @return {WordArray} The hash.
           *
           * @static
           *
           * @example
           *
           *     var hash = CryptoJS.SHA1('message');
           *     var hash = CryptoJS.SHA1(wordArray);
           */
  C.SHA1 = Hasher._createHelper(SHA1);

  /**
                                        * Shortcut function to the HMAC's object interface.
                                        *
                                        * @param {WordArray|string} message The message to hash.
                                        * @param {WordArray|string} key The secret key.
                                        *
                                        * @return {WordArray} The HMAC.
                                        *
                                        * @static
                                        *
                                        * @example
                                        *
                                        *     var hmac = CryptoJS.HmacSHA1(message, key);
                                        */
  C.HmacSHA1 = Hasher._createHmacHelper(SHA1);
})();


(function (Math) {
  // Shortcuts
  var C = CryptoJS;
  var C_lib = C.lib;
  var WordArray = C_lib.WordArray;
  var Hasher = C_lib.Hasher;
  var C_algo = C.algo;

  // Initialization and round constants tables
  var H = [];
  var K = [];

  // Compute constants
  (function () {
    function isPrime(n) {
      var sqrtN = Math.sqrt(n);
      for (var factor = 2; factor <= sqrtN; factor++) {
        if (!(n % factor)) {
          return false;
        }
      }

      return true;
    }

    function getFractionalBits(n) {
      return (n - (n | 0)) * 0x100000000 | 0;
    }

    var n = 2;
    var nPrime = 0;
    while (nPrime < 64) {
      if (isPrime(n)) {
        if (nPrime < 8) {
          H[nPrime] = getFractionalBits(Math.pow(n, 1 / 2));
        }
        K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3));

        nPrime++;
      }

      n++;
    }
  })();

  // Reusable object
  var W = [];

  /**
               * SHA-256 hash algorithm.
               */
  var SHA256 = C_algo.SHA256 = Hasher.extend({
    _doReset: function _doReset() {
      this._hash = new WordArray.init(H.slice(0));
    },

    _doProcessBlock: function _doProcessBlock(M, offset) {
      // Shortcut
      var H = this._hash.words;

      // Working variables
      var a = H[0];
      var b = H[1];
      var c = H[2];
      var d = H[3];
      var e = H[4];
      var f = H[5];
      var g = H[6];
      var h = H[7];

      // Computation
      for (var i = 0; i < 64; i++) {
        if (i < 16) {
          W[i] = M[offset + i] | 0;
        } else {
          var gamma0x = W[i - 15];
          var gamma0 = (gamma0x << 25 | gamma0x >>> 7) ^ (
          gamma0x << 14 | gamma0x >>> 18) ^
          gamma0x >>> 3;

          var gamma1x = W[i - 2];
          var gamma1 = (gamma1x << 15 | gamma1x >>> 17) ^ (
          gamma1x << 13 | gamma1x >>> 19) ^
          gamma1x >>> 10;

          W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];
        }

        var ch = e & f ^ ~e & g;
        var maj = a & b ^ a & c ^ b & c;

        var sigma0 = (a << 30 | a >>> 2) ^ (a << 19 | a >>> 13) ^ (a << 10 | a >>> 22);
        var sigma1 = (e << 26 | e >>> 6) ^ (e << 21 | e >>> 11) ^ (e << 7 | e >>> 25);

        var t1 = h + sigma1 + ch + K[i] + W[i];
        var t2 = sigma0 + maj;

        h = g;
        g = f;
        f = e;
        e = d + t1 | 0;
        d = c;
        c = b;
        b = a;
        a = t1 + t2 | 0;
      }

      // Intermediate hash value
      H[0] = H[0] + a | 0;
      H[1] = H[1] + b | 0;
      H[2] = H[2] + c | 0;
      H[3] = H[3] + d | 0;
      H[4] = H[4] + e | 0;
      H[5] = H[5] + f | 0;
      H[6] = H[6] + g | 0;
      H[7] = H[7] + h | 0;
    },

    _doFinalize: function _doFinalize() {
      // Shortcuts
      var data = this._data;
      var dataWords = data.words;

      var nBitsTotal = this._nDataBytes * 8;
      var nBitsLeft = data.sigBytes * 8;

      // Add padding
      dataWords[nBitsLeft >>> 5] |= 0x80 << 24 - nBitsLeft % 32;
      dataWords[(nBitsLeft + 64 >>> 9 << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);
      dataWords[(nBitsLeft + 64 >>> 9 << 4) + 15] = nBitsTotal;
      data.sigBytes = dataWords.length * 4;

      // Hash final blocks
      this._process();

      // Return final computed hash
      return this._hash;
    },

    clone: function clone() {
      var clone = Hasher.clone.call(this);
      clone._hash = this._hash.clone();

      return clone;
    } });


  /**
           * Shortcut function to the hasher's object interface.
           *
           * @param {WordArray|string} message The message to hash.
           *
           * @return {WordArray} The hash.
           *
           * @static
           *
           * @example
           *
           *     var hash = CryptoJS.SHA256('message');
           *     var hash = CryptoJS.SHA256(wordArray);
           */
  C.SHA256 = Hasher._createHelper(SHA256);

  /**
                                            * Shortcut function to the HMAC's object interface.
                                            *
                                            * @param {WordArray|string} message The message to hash.
                                            * @param {WordArray|string} key The secret key.
                                            *
                                            * @return {WordArray} The HMAC.
                                            *
                                            * @static
                                            *
                                            * @example
                                            *
                                            *     var hmac = CryptoJS.HmacSHA256(message, key);
                                            */
  C.HmacSHA256 = Hasher._createHmacHelper(SHA256);
})(Math);


(function () {
  // Shortcuts
  var C = CryptoJS;
  var C_lib = C.lib;
  var WordArray = C_lib.WordArray;
  var C_enc = C.enc;

  /**
                      * UTF-16 BE encoding strategy.
                      */
  var Utf16BE = C_enc.Utf16 = C_enc.Utf16BE = {
    /**
                                                 * Converts a word array to a UTF-16 BE string.
                                                 *
                                                 * @param {WordArray} wordArray The word array.
                                                 *
                                                 * @return {string} The UTF-16 BE string.
                                                 *
                                                 * @static
                                                 *
                                                 * @example
                                                 *
                                                 *     var utf16String = CryptoJS.enc.Utf16.stringify(wordArray);
                                                 */
    stringify: function stringify(wordArray) {
      // Shortcuts
      var words = wordArray.words;
      var sigBytes = wordArray.sigBytes;

      // Convert
      var utf16Chars = [];
      for (var i = 0; i < sigBytes; i += 2) {
        var codePoint = words[i >>> 2] >>> 16 - i % 4 * 8 & 0xffff;
        utf16Chars.push(String.fromCharCode(codePoint));
      }

      return utf16Chars.join('');
    },

    /**
        * Converts a UTF-16 BE string to a word array.
        *
        * @param {string} utf16Str The UTF-16 BE string.
        *
        * @return {WordArray} The word array.
        *
        * @static
        *
        * @example
        *
        *     var wordArray = CryptoJS.enc.Utf16.parse(utf16String);
        */
    parse: function parse(utf16Str) {
      // Shortcut
      var utf16StrLength = utf16Str.length;

      // Convert
      var words = [];
      for (var i = 0; i < utf16StrLength; i++) {
        words[i >>> 1] |= utf16Str.charCodeAt(i) << 16 - i % 2 * 16;
      }

      return WordArray.create(words, utf16StrLength * 2);
    } };


  /**
          * UTF-16 LE encoding strategy.
          */
  C_enc.Utf16LE = {
    /**
                     * Converts a word array to a UTF-16 LE string.
                     *
                     * @param {WordArray} wordArray The word array.
                     *
                     * @return {string} The UTF-16 LE string.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var utf16Str = CryptoJS.enc.Utf16LE.stringify(wordArray);
                     */
    stringify: function stringify(wordArray) {
      // Shortcuts
      var words = wordArray.words;
      var sigBytes = wordArray.sigBytes;

      // Convert
      var utf16Chars = [];
      for (var i = 0; i < sigBytes; i += 2) {
        var codePoint = swapEndian(words[i >>> 2] >>> 16 - i % 4 * 8 & 0xffff);
        utf16Chars.push(String.fromCharCode(codePoint));
      }

      return utf16Chars.join('');
    },

    /**
        * Converts a UTF-16 LE string to a word array.
        *
        * @param {string} utf16Str The UTF-16 LE string.
        *
        * @return {WordArray} The word array.
        *
        * @static
        *
        * @example
        *
        *     var wordArray = CryptoJS.enc.Utf16LE.parse(utf16Str);
        */
    parse: function parse(utf16Str) {
      // Shortcut
      var utf16StrLength = utf16Str.length;

      // Convert
      var words = [];
      for (var i = 0; i < utf16StrLength; i++) {
        words[i >>> 1] |= swapEndian(utf16Str.charCodeAt(i) << 16 - i % 2 * 16);
      }

      return WordArray.create(words, utf16StrLength * 2);
    } };


  function swapEndian(word) {
    return word << 8 & 0xff00ff00 | word >>> 8 & 0x00ff00ff;
  }
})();


(function () {
  // Check if typed arrays are supported
  if (typeof ArrayBuffer != 'function') {
    return;
  }

  // Shortcuts
  var C = CryptoJS;
  var C_lib = C.lib;
  var WordArray = C_lib.WordArray;

  // Reference original init
  var superInit = WordArray.init;

  // Augment WordArray.init to handle typed arrays
  var subInit = WordArray.init = function (typedArray) {
    // Convert buffers to uint8
    if (typedArray instanceof ArrayBuffer) {
      typedArray = new Uint8Array(typedArray);
    }

    // Convert other array views to uint8
    if (
    typedArray instanceof Int8Array ||
    typeof Uint8ClampedArray !== "undefined" && typedArray instanceof Uint8ClampedArray ||
    typedArray instanceof Int16Array ||
    typedArray instanceof Uint16Array ||
    typedArray instanceof Int32Array ||
    typedArray instanceof Uint32Array ||
    typedArray instanceof Float32Array ||
    typedArray instanceof Float64Array)
    {
      typedArray = new Uint8Array(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength);
    }

    // Handle Uint8Array
    if (typedArray instanceof Uint8Array) {
      // Shortcut
      var typedArrayByteLength = typedArray.byteLength;

      // Extract bytes
      var words = [];
      for (var i = 0; i < typedArrayByteLength; i++) {
        words[i >>> 2] |= typedArray[i] << 24 - i % 4 * 8;
      }

      // Initialize this word array
      superInit.call(this, words, typedArrayByteLength);
    } else {
      // Else call normal init
      superInit.apply(this, arguments);
    }
  };

  subInit.prototype = WordArray;
})();


/** @preserve
       (c) 2012 by Cédric Mesnil. All rights reserved.
      
       Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
      
       - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
       - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
      
       THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
       */

(function (Math) {
  // Shortcuts
  var C = CryptoJS;
  var C_lib = C.lib;
  var WordArray = C_lib.WordArray;
  var Hasher = C_lib.Hasher;
  var C_algo = C.algo;

  // Constants table
  var _zl = WordArray.create([
  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,
  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,
  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,
  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13]);
  var _zr = WordArray.create([
  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,
  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,
  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,
  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,
  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11]);
  var _sl = WordArray.create([
  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,
  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,
  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,
  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,
  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6]);
  var _sr = WordArray.create([
  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,
  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,
  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,
  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,
  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11]);

  var _hl = WordArray.create([0x00000000, 0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xA953FD4E]);
  var _hr = WordArray.create([0x50A28BE6, 0x5C4DD124, 0x6D703EF3, 0x7A6D76E9, 0x00000000]);

  /**
                                                                                             * RIPEMD160 hash algorithm.
                                                                                             */
  var RIPEMD160 = C_algo.RIPEMD160 = Hasher.extend({
    _doReset: function _doReset() {
      this._hash = WordArray.create([0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476, 0xC3D2E1F0]);
    },

    _doProcessBlock: function _doProcessBlock(M, offset) {

      // Swap endian
      for (var i = 0; i < 16; i++) {
        // Shortcuts
        var offset_i = offset + i;
        var M_offset_i = M[offset_i];

        // Swap
        M[offset_i] =
        (M_offset_i << 8 | M_offset_i >>> 24) & 0x00ff00ff |
        (M_offset_i << 24 | M_offset_i >>> 8) & 0xff00ff00;

      }
      // Shortcut
      var H = this._hash.words;
      var hl = _hl.words;
      var hr = _hr.words;
      var zl = _zl.words;
      var zr = _zr.words;
      var sl = _sl.words;
      var sr = _sr.words;

      // Working variables
      var al, bl, cl, dl, el;
      var ar, br, cr, dr, er;

      ar = al = H[0];
      br = bl = H[1];
      cr = cl = H[2];
      dr = dl = H[3];
      er = el = H[4];
      // Computation
      var t;
      for (var i = 0; i < 80; i += 1) {
        t = al + M[offset + zl[i]] | 0;
        if (i < 16) {
          t += f1(bl, cl, dl) + hl[0];
        } else if (i < 32) {
          t += f2(bl, cl, dl) + hl[1];
        } else if (i < 48) {
          t += f3(bl, cl, dl) + hl[2];
        } else if (i < 64) {
          t += f4(bl, cl, dl) + hl[3];
        } else {// if (i<80) {
          t += f5(bl, cl, dl) + hl[4];
        }
        t = t | 0;
        t = rotl(t, sl[i]);
        t = t + el | 0;
        al = el;
        el = dl;
        dl = rotl(cl, 10);
        cl = bl;
        bl = t;

        t = ar + M[offset + zr[i]] | 0;
        if (i < 16) {
          t += f5(br, cr, dr) + hr[0];
        } else if (i < 32) {
          t += f4(br, cr, dr) + hr[1];
        } else if (i < 48) {
          t += f3(br, cr, dr) + hr[2];
        } else if (i < 64) {
          t += f2(br, cr, dr) + hr[3];
        } else {// if (i<80) {
          t += f1(br, cr, dr) + hr[4];
        }
        t = t | 0;
        t = rotl(t, sr[i]);
        t = t + er | 0;
        ar = er;
        er = dr;
        dr = rotl(cr, 10);
        cr = br;
        br = t;
      }
      // Intermediate hash value
      t = H[1] + cl + dr | 0;
      H[1] = H[2] + dl + er | 0;
      H[2] = H[3] + el + ar | 0;
      H[3] = H[4] + al + br | 0;
      H[4] = H[0] + bl + cr | 0;
      H[0] = t;
    },

    _doFinalize: function _doFinalize() {
      // Shortcuts
      var data = this._data;
      var dataWords = data.words;

      var nBitsTotal = this._nDataBytes * 8;
      var nBitsLeft = data.sigBytes * 8;

      // Add padding
      dataWords[nBitsLeft >>> 5] |= 0x80 << 24 - nBitsLeft % 32;
      dataWords[(nBitsLeft + 64 >>> 9 << 4) + 14] =
      (nBitsTotal << 8 | nBitsTotal >>> 24) & 0x00ff00ff |
      (nBitsTotal << 24 | nBitsTotal >>> 8) & 0xff00ff00;

      data.sigBytes = (dataWords.length + 1) * 4;

      // Hash final blocks
      this._process();

      // Shortcuts
      var hash = this._hash;
      var H = hash.words;

      // Swap endian
      for (var i = 0; i < 5; i++) {
        // Shortcut
        var H_i = H[i];

        // Swap
        H[i] = (H_i << 8 | H_i >>> 24) & 0x00ff00ff |
        (H_i << 24 | H_i >>> 8) & 0xff00ff00;
      }

      // Return final computed hash
      return hash;
    },

    clone: function clone() {
      var clone = Hasher.clone.call(this);
      clone._hash = this._hash.clone();

      return clone;
    } });



  function f1(x, y, z) {
    return x ^ y ^ z;

  }

  function f2(x, y, z) {
    return x & y | ~x & z;
  }

  function f3(x, y, z) {
    return (x | ~y) ^ z;
  }

  function f4(x, y, z) {
    return x & z | y & ~z;
  }

  function f5(x, y, z) {
    return x ^ (y | ~z);

  }

  function rotl(x, n) {
    return x << n | x >>> 32 - n;
  }


  /**
     * Shortcut function to the hasher's object interface.
     *
     * @param {WordArray|string} message The message to hash.
     *
     * @return {WordArray} The hash.
     *
     * @static
     *
     * @example
     *
     *     var hash = CryptoJS.RIPEMD160('message');
     *     var hash = CryptoJS.RIPEMD160(wordArray);
     */
  C.RIPEMD160 = Hasher._createHelper(RIPEMD160);

  /**
                                                  * Shortcut function to the HMAC's object interface.
                                                  *
                                                  * @param {WordArray|string} message The message to hash.
                                                  * @param {WordArray|string} key The secret key.
                                                  *
                                                  * @return {WordArray} The HMAC.
                                                  *
                                                  * @static
                                                  *
                                                  * @example
                                                  *
                                                  *     var hmac = CryptoJS.HmacRIPEMD160(message, key);
                                                  */
  C.HmacRIPEMD160 = Hasher._createHmacHelper(RIPEMD160);
})(Math);


(function () {
  // Shortcuts
  var C = CryptoJS;
  var C_lib = C.lib;
  var Base = C_lib.Base;
  var C_enc = C.enc;
  var Utf8 = C_enc.Utf8;
  var C_algo = C.algo;

  /**
                        * HMAC algorithm.
                        */
  var HMAC = C_algo.HMAC = Base.extend({
    /**
                                          * Initializes a newly created HMAC.
                                          *
                                          * @param {Hasher} hasher The hash algorithm to use.
                                          * @param {WordArray|string} key The secret key.
                                          *
                                          * @example
                                          *
                                          *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key);
                                          */
    init: function init(hasher, key) {
      // Init hasher
      hasher = this._hasher = new hasher.init();

      // Convert string to WordArray, else assume WordArray already
      if (typeof key == 'string') {
        key = Utf8.parse(key);
      }

      // Shortcuts
      var hasherBlockSize = hasher.blockSize;
      var hasherBlockSizeBytes = hasherBlockSize * 4;

      // Allow arbitrary length keys
      if (key.sigBytes > hasherBlockSizeBytes) {
        key = hasher.finalize(key);
      }

      // Clamp excess bits
      key.clamp();

      // Clone key for inner and outer pads
      var oKey = this._oKey = key.clone();
      var iKey = this._iKey = key.clone();

      // Shortcuts
      var oKeyWords = oKey.words;
      var iKeyWords = iKey.words;

      // XOR keys with pad constants
      for (var i = 0; i < hasherBlockSize; i++) {
        oKeyWords[i] ^= 0x5c5c5c5c;
        iKeyWords[i] ^= 0x36363636;
      }
      oKey.sigBytes = iKey.sigBytes = hasherBlockSizeBytes;

      // Set initial values
      this.reset();
    },

    /**
        * Resets this HMAC to its initial state.
        *
        * @example
        *
        *     hmacHasher.reset();
        */
    reset: function reset() {
      // Shortcut
      var hasher = this._hasher;

      // Reset
      hasher.reset();
      hasher.update(this._iKey);
    },

    /**
        * Updates this HMAC with a message.
        *
        * @param {WordArray|string} messageUpdate The message to append.
        *
        * @return {HMAC} This HMAC instance.
        *
        * @example
        *
        *     hmacHasher.update('message');
        *     hmacHasher.update(wordArray);
        */
    update: function update(messageUpdate) {
      this._hasher.update(messageUpdate);

      // Chainable
      return this;
    },

    /**
        * Finalizes the HMAC computation.
        * Note that the finalize operation is effectively a destructive, read-once operation.
        *
        * @param {WordArray|string} messageUpdate (Optional) A final message update.
        *
        * @return {WordArray} The HMAC.
        *
        * @example
        *
        *     var hmac = hmacHasher.finalize();
        *     var hmac = hmacHasher.finalize('message');
        *     var hmac = hmacHasher.finalize(wordArray);
        */
    finalize: function finalize(messageUpdate) {
      // Shortcut
      var hasher = this._hasher;

      // Compute HMAC
      var innerHash = hasher.finalize(messageUpdate);
      hasher.reset();
      var hmac = hasher.finalize(this._oKey.clone().concat(innerHash));

      return hmac;
    } });

})();


(function () {
  // Shortcuts
  var C = CryptoJS;
  var C_lib = C.lib;
  var Base = C_lib.Base;
  var WordArray = C_lib.WordArray;
  var C_algo = C.algo;
  var SHA1 = C_algo.SHA1;
  var HMAC = C_algo.HMAC;

  /**
                           * Password-Based Key Derivation Function 2 algorithm.
                           */
  var PBKDF2 = C_algo.PBKDF2 = Base.extend({
    /**
                                              * Configuration options.
                                              *
                                              * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)
                                              * @property {Hasher} hasher The hasher to use. Default: SHA1
                                              * @property {number} iterations The number of iterations to perform. Default: 1
                                              */
    cfg: Base.extend({
      keySize: 128 / 32,
      hasher: SHA1,
      iterations: 1 }),


    /**
                         * Initializes a newly created key derivation function.
                         *
                         * @param {Object} cfg (Optional) The configuration options to use for the derivation.
                         *
                         * @example
                         *
                         *     var kdf = CryptoJS.algo.PBKDF2.create();
                         *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8 });
                         *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8, iterations: 1000 });
                         */
    init: function init(cfg) {
      this.cfg = this.cfg.extend(cfg);
    },

    /**
        * Computes the Password-Based Key Derivation Function 2.
        *
        * @param {WordArray|string} password The password.
        * @param {WordArray|string} salt A salt.
        *
        * @return {WordArray} The derived key.
        *
        * @example
        *
        *     var key = kdf.compute(password, salt);
        */
    compute: function compute(password, salt) {
      // Shortcut
      var cfg = this.cfg;

      // Init HMAC
      var hmac = HMAC.create(cfg.hasher, password);

      // Initial values
      var derivedKey = WordArray.create();
      var blockIndex = WordArray.create([0x00000001]);

      // Shortcuts
      var derivedKeyWords = derivedKey.words;
      var blockIndexWords = blockIndex.words;
      var keySize = cfg.keySize;
      var iterations = cfg.iterations;

      // Generate key
      while (derivedKeyWords.length < keySize) {
        var block = hmac.update(salt).finalize(blockIndex);
        hmac.reset();

        // Shortcuts
        var blockWords = block.words;
        var blockWordsLength = blockWords.length;

        // Iterations
        var intermediate = block;
        for (var i = 1; i < iterations; i++) {
          intermediate = hmac.finalize(intermediate);
          hmac.reset();

          // Shortcut
          var intermediateWords = intermediate.words;

          // XOR intermediate with block
          for (var j = 0; j < blockWordsLength; j++) {
            blockWords[j] ^= intermediateWords[j];
          }
        }

        derivedKey.concat(block);
        blockIndexWords[0]++;
      }
      derivedKey.sigBytes = keySize * 4;

      return derivedKey;
    } });


  /**
           * Computes the Password-Based Key Derivation Function 2.
           *
           * @param {WordArray|string} password The password.
           * @param {WordArray|string} salt A salt.
           * @param {Object} cfg (Optional) The configuration options to use for this computation.
           *
           * @return {WordArray} The derived key.
           *
           * @static
           *
           * @example
           *
           *     var key = CryptoJS.PBKDF2(password, salt);
           *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8 });
           *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8, iterations: 1000 });
           */
  C.PBKDF2 = function (password, salt, cfg) {
    return PBKDF2.create(cfg).compute(password, salt);
  };
})();


(function () {
  // Shortcuts
  var C = CryptoJS;
  var C_lib = C.lib;
  var Base = C_lib.Base;
  var WordArray = C_lib.WordArray;
  var C_algo = C.algo;
  var MD5 = C_algo.MD5;

  /**
                         * This key derivation function is meant to conform with EVP_BytesToKey.
                         * www.openssl.org/docs/crypto/EVP_BytesToKey.html
                         */
  var EvpKDF = C_algo.EvpKDF = Base.extend({
    /**
                                              * Configuration options.
                                              *
                                              * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)
                                              * @property {Hasher} hasher The hash algorithm to use. Default: MD5
                                              * @property {number} iterations The number of iterations to perform. Default: 1
                                              */
    cfg: Base.extend({
      keySize: 128 / 32,
      hasher: MD5,
      iterations: 1 }),


    /**
                         * Initializes a newly created key derivation function.
                         *
                         * @param {Object} cfg (Optional) The configuration options to use for the derivation.
                         *
                         * @example
                         *
                         *     var kdf = CryptoJS.algo.EvpKDF.create();
                         *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8 });
                         *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8, iterations: 1000 });
                         */
    init: function init(cfg) {
      this.cfg = this.cfg.extend(cfg);
    },

    /**
        * Derives a key from a password.
        *
        * @param {WordArray|string} password The password.
        * @param {WordArray|string} salt A salt.
        *
        * @return {WordArray} The derived key.
        *
        * @example
        *
        *     var key = kdf.compute(password, salt);
        */
    compute: function compute(password, salt) {
      // Shortcut
      var cfg = this.cfg;

      // Init hasher
      var hasher = cfg.hasher.create();

      // Initial values
      var derivedKey = WordArray.create();

      // Shortcuts
      var derivedKeyWords = derivedKey.words;
      var keySize = cfg.keySize;
      var iterations = cfg.iterations;

      // Generate key
      while (derivedKeyWords.length < keySize) {
        if (block) {
          hasher.update(block);
        }
        var block = hasher.update(password).finalize(salt);
        hasher.reset();

        // Iterations
        for (var i = 1; i < iterations; i++) {
          block = hasher.finalize(block);
          hasher.reset();
        }

        derivedKey.concat(block);
      }
      derivedKey.sigBytes = keySize * 4;

      return derivedKey;
    } });


  /**
           * Derives a key from a password.
           *
           * @param {WordArray|string} password The password.
           * @param {WordArray|string} salt A salt.
           * @param {Object} cfg (Optional) The configuration options to use for this computation.
           *
           * @return {WordArray} The derived key.
           *
           * @static
           *
           * @example
           *
           *     var key = CryptoJS.EvpKDF(password, salt);
           *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8 });
           *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8, iterations: 1000 });
           */
  C.EvpKDF = function (password, salt, cfg) {
    return EvpKDF.create(cfg).compute(password, salt);
  };
})();


(function () {
  // Shortcuts
  var C = CryptoJS;
  var C_lib = C.lib;
  var WordArray = C_lib.WordArray;
  var C_algo = C.algo;
  var SHA256 = C_algo.SHA256;

  /**
                               * SHA-224 hash algorithm.
                               */
  var SHA224 = C_algo.SHA224 = SHA256.extend({
    _doReset: function _doReset() {
      this._hash = new WordArray.init([
      0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,
      0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4]);

    },

    _doFinalize: function _doFinalize() {
      var hash = SHA256._doFinalize.call(this);

      hash.sigBytes -= 4;

      return hash;
    } });


  /**
           * Shortcut function to the hasher's object interface.
           *
           * @param {WordArray|string} message The message to hash.
           *
           * @return {WordArray} The hash.
           *
           * @static
           *
           * @example
           *
           *     var hash = CryptoJS.SHA224('message');
           *     var hash = CryptoJS.SHA224(wordArray);
           */
  C.SHA224 = SHA256._createHelper(SHA224);

  /**
                                            * Shortcut function to the HMAC's object interface.
                                            *
                                            * @param {WordArray|string} message The message to hash.
                                            * @param {WordArray|string} key The secret key.
                                            *
                                            * @return {WordArray} The HMAC.
                                            *
                                            * @static
                                            *
                                            * @example
                                            *
                                            *     var hmac = CryptoJS.HmacSHA224(message, key);
                                            */
  C.HmacSHA224 = SHA256._createHmacHelper(SHA224);
})();


(function (undefined) {
  // Shortcuts
  var C = CryptoJS;
  var C_lib = C.lib;
  var Base = C_lib.Base;
  var X32WordArray = C_lib.WordArray;

  /**
                                       * x64 namespace.
                                       */
  var C_x64 = C.x64 = {};

  /**
                           * A 64-bit word.
                           */
  var X64Word = C_x64.Word = Base.extend({
    /**
                                            * Initializes a newly created 64-bit word.
                                            *
                                            * @param {number} high The high 32 bits.
                                            * @param {number} low The low 32 bits.
                                            *
                                            * @example
                                            *
                                            *     var x64Word = CryptoJS.x64.Word.create(0x00010203, 0x04050607);
                                            */
    init: function init(high, low) {
      this.high = high;
      this.low = low;
    }

    /**
       * Bitwise NOTs this word.
       *
       * @return {X64Word} A new x64-Word object after negating.
       *
       * @example
       *
       *     var negated = x64Word.not();
       */
    // not: function () {
    // var high = ~this.high;
    // var low = ~this.low;

    // return X64Word.create(high, low);
    // },

    /**
     * Bitwise ANDs this word with the passed word.
     *
     * @param {X64Word} word The x64-Word to AND with this word.
     *
     * @return {X64Word} A new x64-Word object after ANDing.
     *
     * @example
     *
     *     var anded = x64Word.and(anotherX64Word);
     */
    // and: function (word) {
    // var high = this.high & word.high;
    // var low = this.low & word.low;

    // return X64Word.create(high, low);
    // },

    /**
     * Bitwise ORs this word with the passed word.
     *
     * @param {X64Word} word The x64-Word to OR with this word.
     *
     * @return {X64Word} A new x64-Word object after ORing.
     *
     * @example
     *
     *     var ored = x64Word.or(anotherX64Word);
     */
    // or: function (word) {
    // var high = this.high | word.high;
    // var low = this.low | word.low;

    // return X64Word.create(high, low);
    // },

    /**
     * Bitwise XORs this word with the passed word.
     *
     * @param {X64Word} word The x64-Word to XOR with this word.
     *
     * @return {X64Word} A new x64-Word object after XORing.
     *
     * @example
     *
     *     var xored = x64Word.xor(anotherX64Word);
     */
    // xor: function (word) {
    // var high = this.high ^ word.high;
    // var low = this.low ^ word.low;

    // return X64Word.create(high, low);
    // },

    /**
     * Shifts this word n bits to the left.
     *
     * @param {number} n The number of bits to shift.
     *
     * @return {X64Word} A new x64-Word object after shifting.
     *
     * @example
     *
     *     var shifted = x64Word.shiftL(25);
     */
    // shiftL: function (n) {
    // if (n < 32) {
    // var high = (this.high << n) | (this.low >>> (32 - n));
    // var low = this.low << n;
    // } else {
    // var high = this.low << (n - 32);
    // var low = 0;
    // }

    // return X64Word.create(high, low);
    // },

    /**
     * Shifts this word n bits to the right.
     *
     * @param {number} n The number of bits to shift.
     *
     * @return {X64Word} A new x64-Word object after shifting.
     *
     * @example
     *
     *     var shifted = x64Word.shiftR(7);
     */
    // shiftR: function (n) {
    // if (n < 32) {
    // var low = (this.low >>> n) | (this.high << (32 - n));
    // var high = this.high >>> n;
    // } else {
    // var low = this.high >>> (n - 32);
    // var high = 0;
    // }

    // return X64Word.create(high, low);
    // },

    /**
     * Rotates this word n bits to the left.
     *
     * @param {number} n The number of bits to rotate.
     *
     * @return {X64Word} A new x64-Word object after rotating.
     *
     * @example
     *
     *     var rotated = x64Word.rotL(25);
     */
    // rotL: function (n) {
    // return this.shiftL(n).or(this.shiftR(64 - n));
    // },

    /**
     * Rotates this word n bits to the right.
     *
     * @param {number} n The number of bits to rotate.
     *
     * @return {X64Word} A new x64-Word object after rotating.
     *
     * @example
     *
     *     var rotated = x64Word.rotR(7);
     */
    // rotR: function (n) {
    // return this.shiftR(n).or(this.shiftL(64 - n));
    // },

    /**
     * Adds this word with the passed word.
     *
     * @param {X64Word} word The x64-Word to add with this word.
     *
     * @return {X64Word} A new x64-Word object after adding.
     *
     * @example
     *
     *     var added = x64Word.add(anotherX64Word);
     */
    // add: function (word) {
    // var low = (this.low + word.low) | 0;
    // var carry = (low >>> 0) < (this.low >>> 0) ? 1 : 0;
    // var high = (this.high + word.high + carry) | 0;

    // return X64Word.create(high, low);
    // }
  });

  /**
       * An array of 64-bit words.
       *
       * @property {Array} words The array of CryptoJS.x64.Word objects.
       * @property {number} sigBytes The number of significant bytes in this word array.
       */
  var X64WordArray = C_x64.WordArray = Base.extend({
    /**
                                                      * Initializes a newly created word array.
                                                      *
                                                      * @param {Array} words (Optional) An array of CryptoJS.x64.Word objects.
                                                      * @param {number} sigBytes (Optional) The number of significant bytes in the words.
                                                      *
                                                      * @example
                                                      *
                                                      *     var wordArray = CryptoJS.x64.WordArray.create();
                                                      *
                                                      *     var wordArray = CryptoJS.x64.WordArray.create([
                                                      *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),
                                                      *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)
                                                      *     ]);
                                                      *
                                                      *     var wordArray = CryptoJS.x64.WordArray.create([
                                                      *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),
                                                      *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)
                                                      *     ], 10);
                                                      */
    init: function init(words, sigBytes) {
      words = this.words = words || [];

      if (sigBytes != undefined) {
        this.sigBytes = sigBytes;
      } else {
        this.sigBytes = words.length * 8;
      }
    },

    /**
        * Converts this 64-bit word array to a 32-bit word array.
        *
        * @return {CryptoJS.lib.WordArray} This word array's data as a 32-bit word array.
        *
        * @example
        *
        *     var x32WordArray = x64WordArray.toX32();
        */
    toX32: function toX32() {
      // Shortcuts
      var x64Words = this.words;
      var x64WordsLength = x64Words.length;

      // Convert
      var x32Words = [];
      for (var i = 0; i < x64WordsLength; i++) {
        var x64Word = x64Words[i];
        x32Words.push(x64Word.high);
        x32Words.push(x64Word.low);
      }

      return X32WordArray.create(x32Words, this.sigBytes);
    },

    /**
        * Creates a copy of this word array.
        *
        * @return {X64WordArray} The clone.
        *
        * @example
        *
        *     var clone = x64WordArray.clone();
        */
    clone: function clone() {
      var clone = Base.clone.call(this);

      // Clone "words" array
      var words = clone.words = this.words.slice(0);

      // Clone each X64Word object
      var wordsLength = words.length;
      for (var i = 0; i < wordsLength; i++) {
        words[i] = words[i].clone();
      }

      return clone;
    } });

})();


(function (Math) {
  // Shortcuts
  var C = CryptoJS;
  var C_lib = C.lib;
  var WordArray = C_lib.WordArray;
  var Hasher = C_lib.Hasher;
  var C_x64 = C.x64;
  var X64Word = C_x64.Word;
  var C_algo = C.algo;

  // Constants tables
  var RHO_OFFSETS = [];
  var PI_INDEXES = [];
  var ROUND_CONSTANTS = [];

  // Compute Constants
  (function () {
    // Compute rho offset constants
    var x = 1,y = 0;
    for (var t = 0; t < 24; t++) {
      RHO_OFFSETS[x + 5 * y] = (t + 1) * (t + 2) / 2 % 64;

      var newX = y % 5;
      var newY = (2 * x + 3 * y) % 5;
      x = newX;
      y = newY;
    }

    // Compute pi index constants
    for (var x = 0; x < 5; x++) {
      for (var y = 0; y < 5; y++) {
        PI_INDEXES[x + 5 * y] = y + (2 * x + 3 * y) % 5 * 5;
      }
    }

    // Compute round constants
    var LFSR = 0x01;
    for (var i = 0; i < 24; i++) {
      var roundConstantMsw = 0;
      var roundConstantLsw = 0;

      for (var j = 0; j < 7; j++) {
        if (LFSR & 0x01) {
          var bitPosition = (1 << j) - 1;
          if (bitPosition < 32) {
            roundConstantLsw ^= 1 << bitPosition;
          } else /* if (bitPosition >= 32) */{
              roundConstantMsw ^= 1 << bitPosition - 32;
            }
        }

        // Compute next LFSR
        if (LFSR & 0x80) {
          // Primitive polynomial over GF(2): x^8 + x^6 + x^5 + x^4 + 1
          LFSR = LFSR << 1 ^ 0x71;
        } else {
          LFSR <<= 1;
        }
      }

      ROUND_CONSTANTS[i] = X64Word.create(roundConstantMsw, roundConstantLsw);
    }
  })();

  // Reusable objects for temporary values
  var T = [];
  (function () {
    for (var i = 0; i < 25; i++) {
      T[i] = X64Word.create();
    }
  })();

  /**
         * SHA-3 hash algorithm.
         */
  var SHA3 = C_algo.SHA3 = Hasher.extend({
    /**
                                            * Configuration options.
                                            *
                                            * @property {number} outputLength
                                            *   The desired number of bits in the output hash.
                                            *   Only values permitted are: 224, 256, 384, 512.
                                            *   Default: 512
                                            */
    cfg: Hasher.cfg.extend({
      outputLength: 512 }),


    _doReset: function _doReset() {
      var state = this._state = [];
      for (var i = 0; i < 25; i++) {
        state[i] = new X64Word.init();
      }

      this.blockSize = (1600 - 2 * this.cfg.outputLength) / 32;
    },

    _doProcessBlock: function _doProcessBlock(M, offset) {
      // Shortcuts
      var state = this._state;
      var nBlockSizeLanes = this.blockSize / 2;

      // Absorb
      for (var i = 0; i < nBlockSizeLanes; i++) {
        // Shortcuts
        var M2i = M[offset + 2 * i];
        var M2i1 = M[offset + 2 * i + 1];

        // Swap endian
        M2i =
        (M2i << 8 | M2i >>> 24) & 0x00ff00ff |
        (M2i << 24 | M2i >>> 8) & 0xff00ff00;

        M2i1 =
        (M2i1 << 8 | M2i1 >>> 24) & 0x00ff00ff |
        (M2i1 << 24 | M2i1 >>> 8) & 0xff00ff00;


        // Absorb message into state
        var lane = state[i];
        lane.high ^= M2i1;
        lane.low ^= M2i;
      }

      // Rounds
      for (var round = 0; round < 24; round++) {
        // Theta
        for (var x = 0; x < 5; x++) {
          // Mix column lanes
          var tMsw = 0,tLsw = 0;
          for (var y = 0; y < 5; y++) {
            var lane = state[x + 5 * y];
            tMsw ^= lane.high;
            tLsw ^= lane.low;
          }

          // Temporary values
          var Tx = T[x];
          Tx.high = tMsw;
          Tx.low = tLsw;
        }
        for (var x = 0; x < 5; x++) {
          // Shortcuts
          var Tx4 = T[(x + 4) % 5];
          var Tx1 = T[(x + 1) % 5];
          var Tx1Msw = Tx1.high;
          var Tx1Lsw = Tx1.low;

          // Mix surrounding columns
          var tMsw = Tx4.high ^ (Tx1Msw << 1 | Tx1Lsw >>> 31);
          var tLsw = Tx4.low ^ (Tx1Lsw << 1 | Tx1Msw >>> 31);
          for (var y = 0; y < 5; y++) {
            var lane = state[x + 5 * y];
            lane.high ^= tMsw;
            lane.low ^= tLsw;
          }
        }

        // Rho Pi
        for (var laneIndex = 1; laneIndex < 25; laneIndex++) {
          // Shortcuts
          var lane = state[laneIndex];
          var laneMsw = lane.high;
          var laneLsw = lane.low;
          var rhoOffset = RHO_OFFSETS[laneIndex];

          // Rotate lanes
          if (rhoOffset < 32) {
            var tMsw = laneMsw << rhoOffset | laneLsw >>> 32 - rhoOffset;
            var tLsw = laneLsw << rhoOffset | laneMsw >>> 32 - rhoOffset;
          } else /* if (rhoOffset >= 32) */{
              var tMsw = laneLsw << rhoOffset - 32 | laneMsw >>> 64 - rhoOffset;
              var tLsw = laneMsw << rhoOffset - 32 | laneLsw >>> 64 - rhoOffset;
            }

          // Transpose lanes
          var TPiLane = T[PI_INDEXES[laneIndex]];
          TPiLane.high = tMsw;
          TPiLane.low = tLsw;
        }

        // Rho pi at x = y = 0
        var T0 = T[0];
        var state0 = state[0];
        T0.high = state0.high;
        T0.low = state0.low;

        // Chi
        for (var x = 0; x < 5; x++) {
          for (var y = 0; y < 5; y++) {
            // Shortcuts
            var laneIndex = x + 5 * y;
            var lane = state[laneIndex];
            var TLane = T[laneIndex];
            var Tx1Lane = T[(x + 1) % 5 + 5 * y];
            var Tx2Lane = T[(x + 2) % 5 + 5 * y];

            // Mix rows
            lane.high = TLane.high ^ ~Tx1Lane.high & Tx2Lane.high;
            lane.low = TLane.low ^ ~Tx1Lane.low & Tx2Lane.low;
          }
        }

        // Iota
        var lane = state[0];
        var roundConstant = ROUND_CONSTANTS[round];
        lane.high ^= roundConstant.high;
        lane.low ^= roundConstant.low;;
      }
    },

    _doFinalize: function _doFinalize() {
      // Shortcuts
      var data = this._data;
      var dataWords = data.words;
      var nBitsTotal = this._nDataBytes * 8;
      var nBitsLeft = data.sigBytes * 8;
      var blockSizeBits = this.blockSize * 32;

      // Add padding
      dataWords[nBitsLeft >>> 5] |= 0x1 << 24 - nBitsLeft % 32;
      dataWords[(Math.ceil((nBitsLeft + 1) / blockSizeBits) * blockSizeBits >>> 5) - 1] |= 0x80;
      data.sigBytes = dataWords.length * 4;

      // Hash final blocks
      this._process();

      // Shortcuts
      var state = this._state;
      var outputLengthBytes = this.cfg.outputLength / 8;
      var outputLengthLanes = outputLengthBytes / 8;

      // Squeeze
      var hashWords = [];
      for (var i = 0; i < outputLengthLanes; i++) {
        // Shortcuts
        var lane = state[i];
        var laneMsw = lane.high;
        var laneLsw = lane.low;

        // Swap endian
        laneMsw =
        (laneMsw << 8 | laneMsw >>> 24) & 0x00ff00ff |
        (laneMsw << 24 | laneMsw >>> 8) & 0xff00ff00;

        laneLsw =
        (laneLsw << 8 | laneLsw >>> 24) & 0x00ff00ff |
        (laneLsw << 24 | laneLsw >>> 8) & 0xff00ff00;


        // Squeeze state to retrieve hash
        hashWords.push(laneLsw);
        hashWords.push(laneMsw);
      }

      // Return final computed hash
      return new WordArray.init(hashWords, outputLengthBytes);
    },

    clone: function clone() {
      var clone = Hasher.clone.call(this);

      var state = clone._state = this._state.slice(0);
      for (var i = 0; i < 25; i++) {
        state[i] = state[i].clone();
      }

      return clone;
    } });


  /**
           * Shortcut function to the hasher's object interface.
           *
           * @param {WordArray|string} message The message to hash.
           *
           * @return {WordArray} The hash.
           *
           * @static
           *
           * @example
           *
           *     var hash = CryptoJS.SHA3('message');
           *     var hash = CryptoJS.SHA3(wordArray);
           */
  C.SHA3 = Hasher._createHelper(SHA3);

  /**
                                        * Shortcut function to the HMAC's object interface.
                                        *
                                        * @param {WordArray|string} message The message to hash.
                                        * @param {WordArray|string} key The secret key.
                                        *
                                        * @return {WordArray} The HMAC.
                                        *
                                        * @static
                                        *
                                        * @example
                                        *
                                        *     var hmac = CryptoJS.HmacSHA3(message, key);
                                        */
  C.HmacSHA3 = Hasher._createHmacHelper(SHA3);
})(Math);


(function () {
  // Shortcuts
  var C = CryptoJS;
  var C_lib = C.lib;
  var Hasher = C_lib.Hasher;
  var C_x64 = C.x64;
  var X64Word = C_x64.Word;
  var X64WordArray = C_x64.WordArray;
  var C_algo = C.algo;

  function X64Word_create() {
    return X64Word.create.apply(X64Word, arguments);
  }

  // Constants
  var K = [
  X64Word_create(0x428a2f98, 0xd728ae22), X64Word_create(0x71374491, 0x23ef65cd),
  X64Word_create(0xb5c0fbcf, 0xec4d3b2f), X64Word_create(0xe9b5dba5, 0x8189dbbc),
  X64Word_create(0x3956c25b, 0xf348b538), X64Word_create(0x59f111f1, 0xb605d019),
  X64Word_create(0x923f82a4, 0xaf194f9b), X64Word_create(0xab1c5ed5, 0xda6d8118),
  X64Word_create(0xd807aa98, 0xa3030242), X64Word_create(0x12835b01, 0x45706fbe),
  X64Word_create(0x243185be, 0x4ee4b28c), X64Word_create(0x550c7dc3, 0xd5ffb4e2),
  X64Word_create(0x72be5d74, 0xf27b896f), X64Word_create(0x80deb1fe, 0x3b1696b1),
  X64Word_create(0x9bdc06a7, 0x25c71235), X64Word_create(0xc19bf174, 0xcf692694),
  X64Word_create(0xe49b69c1, 0x9ef14ad2), X64Word_create(0xefbe4786, 0x384f25e3),
  X64Word_create(0x0fc19dc6, 0x8b8cd5b5), X64Word_create(0x240ca1cc, 0x77ac9c65),
  X64Word_create(0x2de92c6f, 0x592b0275), X64Word_create(0x4a7484aa, 0x6ea6e483),
  X64Word_create(0x5cb0a9dc, 0xbd41fbd4), X64Word_create(0x76f988da, 0x831153b5),
  X64Word_create(0x983e5152, 0xee66dfab), X64Word_create(0xa831c66d, 0x2db43210),
  X64Word_create(0xb00327c8, 0x98fb213f), X64Word_create(0xbf597fc7, 0xbeef0ee4),
  X64Word_create(0xc6e00bf3, 0x3da88fc2), X64Word_create(0xd5a79147, 0x930aa725),
  X64Word_create(0x06ca6351, 0xe003826f), X64Word_create(0x14292967, 0x0a0e6e70),
  X64Word_create(0x27b70a85, 0x46d22ffc), X64Word_create(0x2e1b2138, 0x5c26c926),
  X64Word_create(0x4d2c6dfc, 0x5ac42aed), X64Word_create(0x53380d13, 0x9d95b3df),
  X64Word_create(0x650a7354, 0x8baf63de), X64Word_create(0x766a0abb, 0x3c77b2a8),
  X64Word_create(0x81c2c92e, 0x47edaee6), X64Word_create(0x92722c85, 0x1482353b),
  X64Word_create(0xa2bfe8a1, 0x4cf10364), X64Word_create(0xa81a664b, 0xbc423001),
  X64Word_create(0xc24b8b70, 0xd0f89791), X64Word_create(0xc76c51a3, 0x0654be30),
  X64Word_create(0xd192e819, 0xd6ef5218), X64Word_create(0xd6990624, 0x5565a910),
  X64Word_create(0xf40e3585, 0x5771202a), X64Word_create(0x106aa070, 0x32bbd1b8),
  X64Word_create(0x19a4c116, 0xb8d2d0c8), X64Word_create(0x1e376c08, 0x5141ab53),
  X64Word_create(0x2748774c, 0xdf8eeb99), X64Word_create(0x34b0bcb5, 0xe19b48a8),
  X64Word_create(0x391c0cb3, 0xc5c95a63), X64Word_create(0x4ed8aa4a, 0xe3418acb),
  X64Word_create(0x5b9cca4f, 0x7763e373), X64Word_create(0x682e6ff3, 0xd6b2b8a3),
  X64Word_create(0x748f82ee, 0x5defb2fc), X64Word_create(0x78a5636f, 0x43172f60),
  X64Word_create(0x84c87814, 0xa1f0ab72), X64Word_create(0x8cc70208, 0x1a6439ec),
  X64Word_create(0x90befffa, 0x23631e28), X64Word_create(0xa4506ceb, 0xde82bde9),
  X64Word_create(0xbef9a3f7, 0xb2c67915), X64Word_create(0xc67178f2, 0xe372532b),
  X64Word_create(0xca273ece, 0xea26619c), X64Word_create(0xd186b8c7, 0x21c0c207),
  X64Word_create(0xeada7dd6, 0xcde0eb1e), X64Word_create(0xf57d4f7f, 0xee6ed178),
  X64Word_create(0x06f067aa, 0x72176fba), X64Word_create(0x0a637dc5, 0xa2c898a6),
  X64Word_create(0x113f9804, 0xbef90dae), X64Word_create(0x1b710b35, 0x131c471b),
  X64Word_create(0x28db77f5, 0x23047d84), X64Word_create(0x32caab7b, 0x40c72493),
  X64Word_create(0x3c9ebe0a, 0x15c9bebc), X64Word_create(0x431d67c4, 0x9c100d4c),
  X64Word_create(0x4cc5d4be, 0xcb3e42b6), X64Word_create(0x597f299c, 0xfc657e2a),
  X64Word_create(0x5fcb6fab, 0x3ad6faec), X64Word_create(0x6c44198c, 0x4a475817)];


  // Reusable objects
  var W = [];
  (function () {
    for (var i = 0; i < 80; i++) {
      W[i] = X64Word_create();
    }
  })();

  /**
         * SHA-512 hash algorithm.
         */
  var SHA512 = C_algo.SHA512 = Hasher.extend({
    _doReset: function _doReset() {
      this._hash = new X64WordArray.init([
      new X64Word.init(0x6a09e667, 0xf3bcc908), new X64Word.init(0xbb67ae85, 0x84caa73b),
      new X64Word.init(0x3c6ef372, 0xfe94f82b), new X64Word.init(0xa54ff53a, 0x5f1d36f1),
      new X64Word.init(0x510e527f, 0xade682d1), new X64Word.init(0x9b05688c, 0x2b3e6c1f),
      new X64Word.init(0x1f83d9ab, 0xfb41bd6b), new X64Word.init(0x5be0cd19, 0x137e2179)]);

    },

    _doProcessBlock: function _doProcessBlock(M, offset) {
      // Shortcuts
      var H = this._hash.words;

      var H0 = H[0];
      var H1 = H[1];
      var H2 = H[2];
      var H3 = H[3];
      var H4 = H[4];
      var H5 = H[5];
      var H6 = H[6];
      var H7 = H[7];

      var H0h = H0.high;
      var H0l = H0.low;
      var H1h = H1.high;
      var H1l = H1.low;
      var H2h = H2.high;
      var H2l = H2.low;
      var H3h = H3.high;
      var H3l = H3.low;
      var H4h = H4.high;
      var H4l = H4.low;
      var H5h = H5.high;
      var H5l = H5.low;
      var H6h = H6.high;
      var H6l = H6.low;
      var H7h = H7.high;
      var H7l = H7.low;

      // Working variables
      var ah = H0h;
      var al = H0l;
      var bh = H1h;
      var bl = H1l;
      var ch = H2h;
      var cl = H2l;
      var dh = H3h;
      var dl = H3l;
      var eh = H4h;
      var el = H4l;
      var fh = H5h;
      var fl = H5l;
      var gh = H6h;
      var gl = H6l;
      var hh = H7h;
      var hl = H7l;

      // Rounds
      for (var i = 0; i < 80; i++) {
        // Shortcut
        var Wi = W[i];

        // Extend message
        if (i < 16) {
          var Wih = Wi.high = M[offset + i * 2] | 0;
          var Wil = Wi.low = M[offset + i * 2 + 1] | 0;
        } else {
          // Gamma0
          var gamma0x = W[i - 15];
          var gamma0xh = gamma0x.high;
          var gamma0xl = gamma0x.low;
          var gamma0h = (gamma0xh >>> 1 | gamma0xl << 31) ^ (gamma0xh >>> 8 | gamma0xl << 24) ^ gamma0xh >>> 7;
          var gamma0l = (gamma0xl >>> 1 | gamma0xh << 31) ^ (gamma0xl >>> 8 | gamma0xh << 24) ^ (gamma0xl >>> 7 | gamma0xh << 25);

          // Gamma1
          var gamma1x = W[i - 2];
          var gamma1xh = gamma1x.high;
          var gamma1xl = gamma1x.low;
          var gamma1h = (gamma1xh >>> 19 | gamma1xl << 13) ^ (gamma1xh << 3 | gamma1xl >>> 29) ^ gamma1xh >>> 6;
          var gamma1l = (gamma1xl >>> 19 | gamma1xh << 13) ^ (gamma1xl << 3 | gamma1xh >>> 29) ^ (gamma1xl >>> 6 | gamma1xh << 26);

          // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]
          var Wi7 = W[i - 7];
          var Wi7h = Wi7.high;
          var Wi7l = Wi7.low;

          var Wi16 = W[i - 16];
          var Wi16h = Wi16.high;
          var Wi16l = Wi16.low;

          var Wil = gamma0l + Wi7l;
          var Wih = gamma0h + Wi7h + (Wil >>> 0 < gamma0l >>> 0 ? 1 : 0);
          var Wil = Wil + gamma1l;
          var Wih = Wih + gamma1h + (Wil >>> 0 < gamma1l >>> 0 ? 1 : 0);
          var Wil = Wil + Wi16l;
          var Wih = Wih + Wi16h + (Wil >>> 0 < Wi16l >>> 0 ? 1 : 0);

          Wi.high = Wih;
          Wi.low = Wil;
        }

        var chh = eh & fh ^ ~eh & gh;
        var chl = el & fl ^ ~el & gl;
        var majh = ah & bh ^ ah & ch ^ bh & ch;
        var majl = al & bl ^ al & cl ^ bl & cl;

        var sigma0h = (ah >>> 28 | al << 4) ^ (ah << 30 | al >>> 2) ^ (ah << 25 | al >>> 7);
        var sigma0l = (al >>> 28 | ah << 4) ^ (al << 30 | ah >>> 2) ^ (al << 25 | ah >>> 7);
        var sigma1h = (eh >>> 14 | el << 18) ^ (eh >>> 18 | el << 14) ^ (eh << 23 | el >>> 9);
        var sigma1l = (el >>> 14 | eh << 18) ^ (el >>> 18 | eh << 14) ^ (el << 23 | eh >>> 9);

        // t1 = h + sigma1 + ch + K[i] + W[i]
        var Ki = K[i];
        var Kih = Ki.high;
        var Kil = Ki.low;

        var t1l = hl + sigma1l;
        var t1h = hh + sigma1h + (t1l >>> 0 < hl >>> 0 ? 1 : 0);
        var t1l = t1l + chl;
        var t1h = t1h + chh + (t1l >>> 0 < chl >>> 0 ? 1 : 0);
        var t1l = t1l + Kil;
        var t1h = t1h + Kih + (t1l >>> 0 < Kil >>> 0 ? 1 : 0);
        var t1l = t1l + Wil;
        var t1h = t1h + Wih + (t1l >>> 0 < Wil >>> 0 ? 1 : 0);

        // t2 = sigma0 + maj
        var t2l = sigma0l + majl;
        var t2h = sigma0h + majh + (t2l >>> 0 < sigma0l >>> 0 ? 1 : 0);

        // Update working variables
        hh = gh;
        hl = gl;
        gh = fh;
        gl = fl;
        fh = eh;
        fl = el;
        el = dl + t1l | 0;
        eh = dh + t1h + (el >>> 0 < dl >>> 0 ? 1 : 0) | 0;
        dh = ch;
        dl = cl;
        ch = bh;
        cl = bl;
        bh = ah;
        bl = al;
        al = t1l + t2l | 0;
        ah = t1h + t2h + (al >>> 0 < t1l >>> 0 ? 1 : 0) | 0;
      }

      // Intermediate hash value
      H0l = H0.low = H0l + al;
      H0.high = H0h + ah + (H0l >>> 0 < al >>> 0 ? 1 : 0);
      H1l = H1.low = H1l + bl;
      H1.high = H1h + bh + (H1l >>> 0 < bl >>> 0 ? 1 : 0);
      H2l = H2.low = H2l + cl;
      H2.high = H2h + ch + (H2l >>> 0 < cl >>> 0 ? 1 : 0);
      H3l = H3.low = H3l + dl;
      H3.high = H3h + dh + (H3l >>> 0 < dl >>> 0 ? 1 : 0);
      H4l = H4.low = H4l + el;
      H4.high = H4h + eh + (H4l >>> 0 < el >>> 0 ? 1 : 0);
      H5l = H5.low = H5l + fl;
      H5.high = H5h + fh + (H5l >>> 0 < fl >>> 0 ? 1 : 0);
      H6l = H6.low = H6l + gl;
      H6.high = H6h + gh + (H6l >>> 0 < gl >>> 0 ? 1 : 0);
      H7l = H7.low = H7l + hl;
      H7.high = H7h + hh + (H7l >>> 0 < hl >>> 0 ? 1 : 0);
    },

    _doFinalize: function _doFinalize() {
      // Shortcuts
      var data = this._data;
      var dataWords = data.words;

      var nBitsTotal = this._nDataBytes * 8;
      var nBitsLeft = data.sigBytes * 8;

      // Add padding
      dataWords[nBitsLeft >>> 5] |= 0x80 << 24 - nBitsLeft % 32;
      dataWords[(nBitsLeft + 128 >>> 10 << 5) + 30] = Math.floor(nBitsTotal / 0x100000000);
      dataWords[(nBitsLeft + 128 >>> 10 << 5) + 31] = nBitsTotal;
      data.sigBytes = dataWords.length * 4;

      // Hash final blocks
      this._process();

      // Convert hash to 32-bit word array before returning
      var hash = this._hash.toX32();

      // Return final computed hash
      return hash;
    },

    clone: function clone() {
      var clone = Hasher.clone.call(this);
      clone._hash = this._hash.clone();

      return clone;
    },

    blockSize: 1024 / 32 });


  /**
                              * Shortcut function to the hasher's object interface.
                              *
                              * @param {WordArray|string} message The message to hash.
                              *
                              * @return {WordArray} The hash.
                              *
                              * @static
                              *
                              * @example
                              *
                              *     var hash = CryptoJS.SHA512('message');
                              *     var hash = CryptoJS.SHA512(wordArray);
                              */
  C.SHA512 = Hasher._createHelper(SHA512);

  /**
                                            * Shortcut function to the HMAC's object interface.
                                            *
                                            * @param {WordArray|string} message The message to hash.
                                            * @param {WordArray|string} key The secret key.
                                            *
                                            * @return {WordArray} The HMAC.
                                            *
                                            * @static
                                            *
                                            * @example
                                            *
                                            *     var hmac = CryptoJS.HmacSHA512(message, key);
                                            */
  C.HmacSHA512 = Hasher._createHmacHelper(SHA512);
})();


(function () {
  // Shortcuts
  var C = CryptoJS;
  var C_x64 = C.x64;
  var X64Word = C_x64.Word;
  var X64WordArray = C_x64.WordArray;
  var C_algo = C.algo;
  var SHA512 = C_algo.SHA512;

  /**
                               * SHA-384 hash algorithm.
                               */
  var SHA384 = C_algo.SHA384 = SHA512.extend({
    _doReset: function _doReset() {
      this._hash = new X64WordArray.init([
      new X64Word.init(0xcbbb9d5d, 0xc1059ed8), new X64Word.init(0x629a292a, 0x367cd507),
      new X64Word.init(0x9159015a, 0x3070dd17), new X64Word.init(0x152fecd8, 0xf70e5939),
      new X64Word.init(0x67332667, 0xffc00b31), new X64Word.init(0x8eb44a87, 0x68581511),
      new X64Word.init(0xdb0c2e0d, 0x64f98fa7), new X64Word.init(0x47b5481d, 0xbefa4fa4)]);

    },

    _doFinalize: function _doFinalize() {
      var hash = SHA512._doFinalize.call(this);

      hash.sigBytes -= 16;

      return hash;
    } });


  /**
           * Shortcut function to the hasher's object interface.
           *
           * @param {WordArray|string} message The message to hash.
           *
           * @return {WordArray} The hash.
           *
           * @static
           *
           * @example
           *
           *     var hash = CryptoJS.SHA384('message');
           *     var hash = CryptoJS.SHA384(wordArray);
           */
  C.SHA384 = SHA512._createHelper(SHA384);

  /**
                                            * Shortcut function to the HMAC's object interface.
                                            *
                                            * @param {WordArray|string} message The message to hash.
                                            * @param {WordArray|string} key The secret key.
                                            *
                                            * @return {WordArray} The HMAC.
                                            *
                                            * @static
                                            *
                                            * @example
                                            *
                                            *     var hmac = CryptoJS.HmacSHA384(message, key);
                                            */
  C.HmacSHA384 = SHA512._createHmacHelper(SHA384);
})();


/**
       * Cipher core components.
       */
CryptoJS.lib.Cipher || function (undefined) {
  // Shortcuts
  var C = CryptoJS;
  var C_lib = C.lib;
  var Base = C_lib.Base;
  var WordArray = C_lib.WordArray;
  var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm;
  var C_enc = C.enc;
  var Utf8 = C_enc.Utf8;
  var Base64 = C_enc.Base64;
  var C_algo = C.algo;
  var EvpKDF = C_algo.EvpKDF;

  /**
                               * Abstract base cipher template.
                               *
                               * @property {number} keySize This cipher's key size. Default: 4 (128 bits)
                               * @property {number} ivSize This cipher's IV size. Default: 4 (128 bits)
                               * @property {number} _ENC_XFORM_MODE A constant representing encryption mode.
                               * @property {number} _DEC_XFORM_MODE A constant representing decryption mode.
                               */
  var Cipher = C_lib.Cipher = BufferedBlockAlgorithm.extend({
    /**
                                                               * Configuration options.
                                                               *
                                                               * @property {WordArray} iv The IV to use for this operation.
                                                               */
    cfg: Base.extend(),

    /**
                         * Creates this cipher in encryption mode.
                         *
                         * @param {WordArray} key The key.
                         * @param {Object} cfg (Optional) The configuration options to use for this operation.
                         *
                         * @return {Cipher} A cipher instance.
                         *
                         * @static
                         *
                         * @example
                         *
                         *     var cipher = CryptoJS.algo.AES.createEncryptor(keyWordArray, { iv: ivWordArray });
                         */
    createEncryptor: function createEncryptor(key, cfg) {
      return this.create(this._ENC_XFORM_MODE, key, cfg);
    },

    /**
        * Creates this cipher in decryption mode.
        *
        * @param {WordArray} key The key.
        * @param {Object} cfg (Optional) The configuration options to use for this operation.
        *
        * @return {Cipher} A cipher instance.
        *
        * @static
        *
        * @example
        *
        *     var cipher = CryptoJS.algo.AES.createDecryptor(keyWordArray, { iv: ivWordArray });
        */
    createDecryptor: function createDecryptor(key, cfg) {
      return this.create(this._DEC_XFORM_MODE, key, cfg);
    },

    /**
        * Initializes a newly created cipher.
        *
        * @param {number} xformMode Either the encryption or decryption transormation mode constant.
        * @param {WordArray} key The key.
        * @param {Object} cfg (Optional) The configuration options to use for this operation.
        *
        * @example
        *
        *     var cipher = CryptoJS.algo.AES.create(CryptoJS.algo.AES._ENC_XFORM_MODE, keyWordArray, { iv: ivWordArray });
        */
    init: function init(xformMode, key, cfg) {
      // Apply config defaults
      this.cfg = this.cfg.extend(cfg);

      // Store transform mode and key
      this._xformMode = xformMode;
      this._key = key;

      // Set initial values
      this.reset();
    },

    /**
        * Resets this cipher to its initial state.
        *
        * @example
        *
        *     cipher.reset();
        */
    reset: function reset() {
      // Reset data buffer
      BufferedBlockAlgorithm.reset.call(this);

      // Perform concrete-cipher logic
      this._doReset();
    },

    /**
        * Adds data to be encrypted or decrypted.
        *
        * @param {WordArray|string} dataUpdate The data to encrypt or decrypt.
        *
        * @return {WordArray} The data after processing.
        *
        * @example
        *
        *     var encrypted = cipher.process('data');
        *     var encrypted = cipher.process(wordArray);
        */
    process: function process(dataUpdate) {
      // Append
      this._append(dataUpdate);

      // Process available blocks
      return this._process();
    },

    /**
        * Finalizes the encryption or decryption process.
        * Note that the finalize operation is effectively a destructive, read-once operation.
        *
        * @param {WordArray|string} dataUpdate The final data to encrypt or decrypt.
        *
        * @return {WordArray} The data after final processing.
        *
        * @example
        *
        *     var encrypted = cipher.finalize();
        *     var encrypted = cipher.finalize('data');
        *     var encrypted = cipher.finalize(wordArray);
        */
    finalize: function finalize(dataUpdate) {
      // Final data update
      if (dataUpdate) {
        this._append(dataUpdate);
      }

      // Perform concrete-cipher logic
      var finalProcessedData = this._doFinalize();

      return finalProcessedData;
    },

    keySize: 128 / 32,

    ivSize: 128 / 32,

    _ENC_XFORM_MODE: 1,

    _DEC_XFORM_MODE: 2,

    /**
                         * Creates shortcut functions to a cipher's object interface.
                         *
                         * @param {Cipher} cipher The cipher to create a helper for.
                         *
                         * @return {Object} An object with encrypt and decrypt shortcut functions.
                         *
                         * @static
                         *
                         * @example
                         *
                         *     var AES = CryptoJS.lib.Cipher._createHelper(CryptoJS.algo.AES);
                         */
    _createHelper: function () {
      function selectCipherStrategy(key) {
        if (typeof key == 'string') {
          return PasswordBasedCipher;
        } else {
          return SerializableCipher;
        }
      }

      return function (cipher) {
        return {
          encrypt: function encrypt(message, key, cfg) {
            return selectCipherStrategy(key).encrypt(cipher, message, key, cfg);
          },

          decrypt: function decrypt(ciphertext, key, cfg) {
            return selectCipherStrategy(key).decrypt(cipher, ciphertext, key, cfg);
          } };

      };
    }() });


  /**
             * Abstract base stream cipher template.
             *
             * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 1 (32 bits)
             */
  var StreamCipher = C_lib.StreamCipher = Cipher.extend({
    _doFinalize: function _doFinalize() {
      // Process partial blocks
      var finalProcessedBlocks = this._process(!!'flush');

      return finalProcessedBlocks;
    },

    blockSize: 1 });


  /**
                      * Mode namespace.
                      */
  var C_mode = C.mode = {};

  /**
                             * Abstract base block cipher mode template.
                             */
  var BlockCipherMode = C_lib.BlockCipherMode = Base.extend({
    /**
                                                               * Creates this mode for encryption.
                                                               *
                                                               * @param {Cipher} cipher A block cipher instance.
                                                               * @param {Array} iv The IV words.
                                                               *
                                                               * @static
                                                               *
                                                               * @example
                                                               *
                                                               *     var mode = CryptoJS.mode.CBC.createEncryptor(cipher, iv.words);
                                                               */
    createEncryptor: function createEncryptor(cipher, iv) {
      return this.Encryptor.create(cipher, iv);
    },

    /**
        * Creates this mode for decryption.
        *
        * @param {Cipher} cipher A block cipher instance.
        * @param {Array} iv The IV words.
        *
        * @static
        *
        * @example
        *
        *     var mode = CryptoJS.mode.CBC.createDecryptor(cipher, iv.words);
        */
    createDecryptor: function createDecryptor(cipher, iv) {
      return this.Decryptor.create(cipher, iv);
    },

    /**
        * Initializes a newly created mode.
        *
        * @param {Cipher} cipher A block cipher instance.
        * @param {Array} iv The IV words.
        *
        * @example
        *
        *     var mode = CryptoJS.mode.CBC.Encryptor.create(cipher, iv.words);
        */
    init: function init(cipher, iv) {
      this._cipher = cipher;
      this._iv = iv;
    } });


  /**
           * Cipher Block Chaining mode.
           */
  var CBC = C_mode.CBC = function () {
    /**
                                       * Abstract base CBC mode.
                                       */
    var CBC = BlockCipherMode.extend();

    /**
                                         * CBC encryptor.
                                         */
    CBC.Encryptor = CBC.extend({
      /**
                                  * Processes the data block at offset.
                                  *
                                  * @param {Array} words The data words to operate on.
                                  * @param {number} offset The offset where the block starts.
                                  *
                                  * @example
                                  *
                                  *     mode.processBlock(data.words, offset);
                                  */
      processBlock: function processBlock(words, offset) {
        // Shortcuts
        var cipher = this._cipher;
        var blockSize = cipher.blockSize;

        // XOR and encrypt
        xorBlock.call(this, words, offset, blockSize);
        cipher.encryptBlock(words, offset);

        // Remember this block to use with next block
        this._prevBlock = words.slice(offset, offset + blockSize);
      } });


    /**
             * CBC decryptor.
             */
    CBC.Decryptor = CBC.extend({
      /**
                                  * Processes the data block at offset.
                                  *
                                  * @param {Array} words The data words to operate on.
                                  * @param {number} offset The offset where the block starts.
                                  *
                                  * @example
                                  *
                                  *     mode.processBlock(data.words, offset);
                                  */
      processBlock: function processBlock(words, offset) {
        // Shortcuts
        var cipher = this._cipher;
        var blockSize = cipher.blockSize;

        // Remember this block to use with next block
        var thisBlock = words.slice(offset, offset + blockSize);

        // Decrypt and XOR
        cipher.decryptBlock(words, offset);
        xorBlock.call(this, words, offset, blockSize);

        // This block becomes the previous block
        this._prevBlock = thisBlock;
      } });


    function xorBlock(words, offset, blockSize) {
      // Shortcut
      var iv = this._iv;

      // Choose mixing block
      if (iv) {
        var block = iv;

        // Remove IV for subsequent blocks
        this._iv = undefined;
      } else {
        var block = this._prevBlock;
      }

      // XOR blocks
      for (var i = 0; i < blockSize; i++) {
        words[offset + i] ^= block[i];
      }
    }

    return CBC;
  }();

  /**
        * Padding namespace.
        */
  var C_pad = C.pad = {};

  /**
                           * PKCS #5/7 padding strategy.
                           */
  var Pkcs7 = C_pad.Pkcs7 = {
    /**
                               * Pads data using the algorithm defined in PKCS #5/7.
                               *
                               * @param {WordArray} data The data to pad.
                               * @param {number} blockSize The multiple that the data should be padded to.
                               *
                               * @static
                               *
                               * @example
                               *
                               *     CryptoJS.pad.Pkcs7.pad(wordArray, 4);
                               */
    pad: function pad(data, blockSize) {
      // Shortcut
      var blockSizeBytes = blockSize * 4;

      // Count padding bytes
      var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;

      // Create padding word
      var paddingWord = nPaddingBytes << 24 | nPaddingBytes << 16 | nPaddingBytes << 8 | nPaddingBytes;

      // Create padding
      var paddingWords = [];
      for (var i = 0; i < nPaddingBytes; i += 4) {
        paddingWords.push(paddingWord);
      }
      var padding = WordArray.create(paddingWords, nPaddingBytes);

      // Add padding
      data.concat(padding);
    },

    /**
        * Unpads data that had been padded using the algorithm defined in PKCS #5/7.
        *
        * @param {WordArray} data The data to unpad.
        *
        * @static
        *
        * @example
        *
        *     CryptoJS.pad.Pkcs7.unpad(wordArray);
        */
    unpad: function unpad(data) {
      // Get number of padding bytes from last byte
      var nPaddingBytes = data.words[data.sigBytes - 1 >>> 2] & 0xff;

      // Remove padding
      data.sigBytes -= nPaddingBytes;
    } };


  /**
          * Abstract base block cipher template.
          *
          * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 4 (128 bits)
          */
  var BlockCipher = C_lib.BlockCipher = Cipher.extend({
    /**
                                                         * Configuration options.
                                                         *
                                                         * @property {Mode} mode The block mode to use. Default: CBC
                                                         * @property {Padding} padding The padding strategy to use. Default: Pkcs7
                                                         */
    cfg: Cipher.cfg.extend({
      mode: CBC,
      padding: Pkcs7 }),


    reset: function reset() {
      // Reset cipher
      Cipher.reset.call(this);

      // Shortcuts
      var cfg = this.cfg;
      var iv = cfg.iv;
      var mode = cfg.mode;

      // Reset block mode
      if (this._xformMode == this._ENC_XFORM_MODE) {
        var modeCreator = mode.createEncryptor;
      } else /* if (this._xformMode == this._DEC_XFORM_MODE) */{
          var modeCreator = mode.createDecryptor;
          // Keep at least one block in the buffer for unpadding
          this._minBufferSize = 1;
        }

      if (this._mode && this._mode.__creator == modeCreator) {
        this._mode.init(this, iv && iv.words);
      } else {
        this._mode = modeCreator.call(mode, this, iv && iv.words);
        this._mode.__creator = modeCreator;
      }
    },

    _doProcessBlock: function _doProcessBlock(words, offset) {
      this._mode.processBlock(words, offset);
    },

    _doFinalize: function _doFinalize() {
      // Shortcut
      var padding = this.cfg.padding;

      // Finalize
      if (this._xformMode == this._ENC_XFORM_MODE) {
        // Pad data
        padding.pad(this._data, this.blockSize);

        // Process final blocks
        var finalProcessedBlocks = this._process(!!'flush');
      } else /* if (this._xformMode == this._DEC_XFORM_MODE) */{
          // Process final blocks
          var finalProcessedBlocks = this._process(!!'flush');

          // Unpad data
          padding.unpad(finalProcessedBlocks);
        }

      return finalProcessedBlocks;
    },

    blockSize: 128 / 32 });


  /**
                             * A collection of cipher parameters.
                             *
                             * @property {WordArray} ciphertext The raw ciphertext.
                             * @property {WordArray} key The key to this ciphertext.
                             * @property {WordArray} iv The IV used in the ciphering operation.
                             * @property {WordArray} salt The salt used with a key derivation function.
                             * @property {Cipher} algorithm The cipher algorithm.
                             * @property {Mode} mode The block mode used in the ciphering operation.
                             * @property {Padding} padding The padding scheme used in the ciphering operation.
                             * @property {number} blockSize The block size of the cipher.
                             * @property {Format} formatter The default formatting strategy to convert this cipher params object to a string.
                             */
  var CipherParams = C_lib.CipherParams = Base.extend({
    /**
                                                         * Initializes a newly created cipher params object.
                                                         *
                                                         * @param {Object} cipherParams An object with any of the possible cipher parameters.
                                                         *
                                                         * @example
                                                         *
                                                         *     var cipherParams = CryptoJS.lib.CipherParams.create({
                                                              *         ciphertext: ciphertextWordArray,
                                                              *         key: keyWordArray,
                                                              *         iv: ivWordArray,
                                                              *         salt: saltWordArray,
                                                              *         algorithm: CryptoJS.algo.AES,
                                                              *         mode: CryptoJS.mode.CBC,
                                                              *         padding: CryptoJS.pad.PKCS7,
                                                              *         blockSize: 4,
                                                              *         formatter: CryptoJS.format.OpenSSL
                                                              *     });
                                                         */
    init: function init(cipherParams) {
      this.mixIn(cipherParams);
    },

    /**
        * Converts this cipher params object to a string.
        *
        * @param {Format} formatter (Optional) The formatting strategy to use.
        *
        * @return {string} The stringified cipher params.
        *
        * @throws Error If neither the formatter nor the default formatter is set.
        *
        * @example
        *
        *     var string = cipherParams + '';
        *     var string = cipherParams.toString();
        *     var string = cipherParams.toString(CryptoJS.format.OpenSSL);
        */
    toString: function toString(formatter) {
      return (formatter || this.formatter).stringify(this);
    } });


  /**
           * Format namespace.
           */
  var C_format = C.format = {};

  /**
                                 * OpenSSL formatting strategy.
                                 */
  var OpenSSLFormatter = C_format.OpenSSL = {
    /**
                                               * Converts a cipher params object to an OpenSSL-compatible string.
                                               *
                                               * @param {CipherParams} cipherParams The cipher params object.
                                               *
                                               * @return {string} The OpenSSL-compatible string.
                                               *
                                               * @static
                                               *
                                               * @example
                                               *
                                               *     var openSSLString = CryptoJS.format.OpenSSL.stringify(cipherParams);
                                               */
    stringify: function stringify(cipherParams) {
      // Shortcuts
      var ciphertext = cipherParams.ciphertext;
      var salt = cipherParams.salt;

      // Format
      if (salt) {
        var wordArray = WordArray.create([0x53616c74, 0x65645f5f]).concat(salt).concat(ciphertext);
      } else {
        var wordArray = ciphertext;
      }

      return wordArray.toString(Base64);
    },

    /**
        * Converts an OpenSSL-compatible string to a cipher params object.
        *
        * @param {string} openSSLStr The OpenSSL-compatible string.
        *
        * @return {CipherParams} The cipher params object.
        *
        * @static
        *
        * @example
        *
        *     var cipherParams = CryptoJS.format.OpenSSL.parse(openSSLString);
        */
    parse: function parse(openSSLStr) {
      // Parse base64
      var ciphertext = Base64.parse(openSSLStr);

      // Shortcut
      var ciphertextWords = ciphertext.words;

      // Test for salt
      if (ciphertextWords[0] == 0x53616c74 && ciphertextWords[1] == 0x65645f5f) {
        // Extract salt
        var salt = WordArray.create(ciphertextWords.slice(2, 4));

        // Remove salt from ciphertext
        ciphertextWords.splice(0, 4);
        ciphertext.sigBytes -= 16;
      }

      return CipherParams.create({ ciphertext: ciphertext, salt: salt });
    } };


  /**
          * A cipher wrapper that returns ciphertext as a serializable cipher params object.
          */
  var SerializableCipher = C_lib.SerializableCipher = Base.extend({
    /**
                                                                     * Configuration options.
                                                                     *
                                                                     * @property {Formatter} format The formatting strategy to convert cipher param objects to and from a string. Default: OpenSSL
                                                                     */
    cfg: Base.extend({
      format: OpenSSLFormatter }),


    /**
                                    * Encrypts a message.
                                    *
                                    * @param {Cipher} cipher The cipher algorithm to use.
                                    * @param {WordArray|string} message The message to encrypt.
                                    * @param {WordArray} key The key.
                                    * @param {Object} cfg (Optional) The configuration options to use for this operation.
                                    *
                                    * @return {CipherParams} A cipher params object.
                                    *
                                    * @static
                                    *
                                    * @example
                                    *
                                    *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key);
                                    *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv });
                                    *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv, format: CryptoJS.format.OpenSSL });
                                    */
    encrypt: function encrypt(cipher, message, key, cfg) {
      // Apply config defaults
      cfg = this.cfg.extend(cfg);

      // Encrypt
      var encryptor = cipher.createEncryptor(key, cfg);
      var ciphertext = encryptor.finalize(message);

      // Shortcut
      var cipherCfg = encryptor.cfg;

      // Create and return serializable cipher params
      return CipherParams.create({
        ciphertext: ciphertext,
        key: key,
        iv: cipherCfg.iv,
        algorithm: cipher,
        mode: cipherCfg.mode,
        padding: cipherCfg.padding,
        blockSize: cipher.blockSize,
        formatter: cfg.format });

    },

    /**
        * Decrypts serialized ciphertext.
        *
        * @param {Cipher} cipher The cipher algorithm to use.
        * @param {CipherParams|string} ciphertext The ciphertext to decrypt.
        * @param {WordArray} key The key.
        * @param {Object} cfg (Optional) The configuration options to use for this operation.
        *
        * @return {WordArray} The plaintext.
        *
        * @static
        *
        * @example
        *
        *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, key, { iv: iv, format: CryptoJS.format.OpenSSL });
        *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, key, { iv: iv, format: CryptoJS.format.OpenSSL });
        */
    decrypt: function decrypt(cipher, ciphertext, key, cfg) {
      // Apply config defaults
      cfg = this.cfg.extend(cfg);

      // Convert string to CipherParams
      ciphertext = this._parse(ciphertext, cfg.format);

      // Decrypt
      var plaintext = cipher.createDecryptor(key, cfg).finalize(ciphertext.ciphertext);

      return plaintext;
    },

    /**
        * Converts serialized ciphertext to CipherParams,
        * else assumed CipherParams already and returns ciphertext unchanged.
        *
        * @param {CipherParams|string} ciphertext The ciphertext.
        * @param {Formatter} format The formatting strategy to use to parse serialized ciphertext.
        *
        * @return {CipherParams} The unserialized ciphertext.
        *
        * @static
        *
        * @example
        *
        *     var ciphertextParams = CryptoJS.lib.SerializableCipher._parse(ciphertextStringOrParams, format);
        */
    _parse: function _parse(ciphertext, format) {
      if (typeof ciphertext == 'string') {
        return format.parse(ciphertext, this);
      } else {
        return ciphertext;
      }
    } });


  /**
           * Key derivation function namespace.
           */
  var C_kdf = C.kdf = {};

  /**
                           * OpenSSL key derivation function.
                           */
  var OpenSSLKdf = C_kdf.OpenSSL = {
    /**
                                      * Derives a key and IV from a password.
                                      *
                                      * @param {string} password The password to derive from.
                                      * @param {number} keySize The size in words of the key to generate.
                                      * @param {number} ivSize The size in words of the IV to generate.
                                      * @param {WordArray|string} salt (Optional) A 64-bit salt to use. If omitted, a salt will be generated randomly.
                                      *
                                      * @return {CipherParams} A cipher params object with the key, IV, and salt.
                                      *
                                      * @static
                                      *
                                      * @example
                                      *
                                      *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32);
                                      *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32, 'saltsalt');
                                      */
    execute: function execute(password, keySize, ivSize, salt) {
      // Generate random salt
      if (!salt) {
        salt = WordArray.random(64 / 8);
      }

      // Derive key and IV
      var key = EvpKDF.create({ keySize: keySize + ivSize }).compute(password, salt);

      // Separate key and IV
      var iv = WordArray.create(key.words.slice(keySize), ivSize * 4);
      key.sigBytes = keySize * 4;

      // Return params
      return CipherParams.create({ key: key, iv: iv, salt: salt });
    } };


  /**
          * A serializable cipher wrapper that derives the key from a password,
          * and returns ciphertext as a serializable cipher params object.
          */
  var PasswordBasedCipher = C_lib.PasswordBasedCipher = SerializableCipher.extend({
    /**
                                                                                     * Configuration options.
                                                                                     *
                                                                                     * @property {KDF} kdf The key derivation function to use to generate a key and IV from a password. Default: OpenSSL
                                                                                     */
    cfg: SerializableCipher.cfg.extend({
      kdf: OpenSSLKdf }),


    /**
                           * Encrypts a message using a password.
                           *
                           * @param {Cipher} cipher The cipher algorithm to use.
                           * @param {WordArray|string} message The message to encrypt.
                           * @param {string} password The password.
                           * @param {Object} cfg (Optional) The configuration options to use for this operation.
                           *
                           * @return {CipherParams} A cipher params object.
                           *
                           * @static
                           *
                           * @example
                           *
                           *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password');
                           *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password', { format: CryptoJS.format.OpenSSL });
                           */
    encrypt: function encrypt(cipher, message, password, cfg) {
      // Apply config defaults
      cfg = this.cfg.extend(cfg);

      // Derive key and other params
      var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize);

      // Add IV to config
      cfg.iv = derivedParams.iv;

      // Encrypt
      var ciphertext = SerializableCipher.encrypt.call(this, cipher, message, derivedParams.key, cfg);

      // Mix in derived params
      ciphertext.mixIn(derivedParams);

      return ciphertext;
    },

    /**
        * Decrypts serialized ciphertext using a password.
        *
        * @param {Cipher} cipher The cipher algorithm to use.
        * @param {CipherParams|string} ciphertext The ciphertext to decrypt.
        * @param {string} password The password.
        * @param {Object} cfg (Optional) The configuration options to use for this operation.
        *
        * @return {WordArray} The plaintext.
        *
        * @static
        *
        * @example
        *
        *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, 'password', { format: CryptoJS.format.OpenSSL });
        *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, 'password', { format: CryptoJS.format.OpenSSL });
        */
    decrypt: function decrypt(cipher, ciphertext, password, cfg) {
      // Apply config defaults
      cfg = this.cfg.extend(cfg);

      // Convert string to CipherParams
      ciphertext = this._parse(ciphertext, cfg.format);

      // Derive key and other params
      var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize, ciphertext.salt);

      // Add IV to config
      cfg.iv = derivedParams.iv;

      // Decrypt
      var plaintext = SerializableCipher.decrypt.call(this, cipher, ciphertext, derivedParams.key, cfg);

      return plaintext;
    } });

}();


/**
      * Cipher Feedback block mode.
      */
CryptoJS.mode.CFB = function () {
  var CFB = CryptoJS.lib.BlockCipherMode.extend();

  CFB.Encryptor = CFB.extend({
    processBlock: function processBlock(words, offset) {
      // Shortcuts
      var cipher = this._cipher;
      var blockSize = cipher.blockSize;

      generateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);

      // Remember this block to use with next block
      this._prevBlock = words.slice(offset, offset + blockSize);
    } });


  CFB.Decryptor = CFB.extend({
    processBlock: function processBlock(words, offset) {
      // Shortcuts
      var cipher = this._cipher;
      var blockSize = cipher.blockSize;

      // Remember this block to use with next block
      var thisBlock = words.slice(offset, offset + blockSize);

      generateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);

      // This block becomes the previous block
      this._prevBlock = thisBlock;
    } });


  function generateKeystreamAndEncrypt(words, offset, blockSize, cipher) {
    // Shortcut
    var iv = this._iv;

    // Generate keystream
    if (iv) {
      var keystream = iv.slice(0);

      // Remove IV for subsequent blocks
      this._iv = undefined;
    } else {
      var keystream = this._prevBlock;
    }
    cipher.encryptBlock(keystream, 0);

    // Encrypt
    for (var i = 0; i < blockSize; i++) {
      words[offset + i] ^= keystream[i];
    }
  }

  return CFB;
}();


/**
      * Electronic Codebook block mode.
      */
CryptoJS.mode.ECB = function () {
  var ECB = CryptoJS.lib.BlockCipherMode.extend();

  ECB.Encryptor = ECB.extend({
    processBlock: function processBlock(words, offset) {
      this._cipher.encryptBlock(words, offset);
    } });


  ECB.Decryptor = ECB.extend({
    processBlock: function processBlock(words, offset) {
      this._cipher.decryptBlock(words, offset);
    } });


  return ECB;
}();


/**
      * ANSI X.923 padding strategy.
      */
CryptoJS.pad.AnsiX923 = {
  pad: function pad(data, blockSize) {
    // Shortcuts
    var dataSigBytes = data.sigBytes;
    var blockSizeBytes = blockSize * 4;

    // Count padding bytes
    var nPaddingBytes = blockSizeBytes - dataSigBytes % blockSizeBytes;

    // Compute last byte position
    var lastBytePos = dataSigBytes + nPaddingBytes - 1;

    // Pad
    data.clamp();
    data.words[lastBytePos >>> 2] |= nPaddingBytes << 24 - lastBytePos % 4 * 8;
    data.sigBytes += nPaddingBytes;
  },

  unpad: function unpad(data) {
    // Get number of padding bytes from last byte
    var nPaddingBytes = data.words[data.sigBytes - 1 >>> 2] & 0xff;

    // Remove padding
    data.sigBytes -= nPaddingBytes;
  } };



/**
        * ISO 10126 padding strategy.
        */
CryptoJS.pad.Iso10126 = {
  pad: function pad(data, blockSize) {
    // Shortcut
    var blockSizeBytes = blockSize * 4;

    // Count padding bytes
    var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;

    // Pad
    data.concat(CryptoJS.lib.WordArray.random(nPaddingBytes - 1)).
    concat(CryptoJS.lib.WordArray.create([nPaddingBytes << 24], 1));
  },

  unpad: function unpad(data) {
    // Get number of padding bytes from last byte
    var nPaddingBytes = data.words[data.sigBytes - 1 >>> 2] & 0xff;

    // Remove padding
    data.sigBytes -= nPaddingBytes;
  } };



/**
        * ISO/IEC 9797-1 Padding Method 2.
        */
CryptoJS.pad.Iso97971 = {
  pad: function pad(data, blockSize) {
    // Add 0x80 byte
    data.concat(CryptoJS.lib.WordArray.create([0x80000000], 1));

    // Zero pad the rest
    CryptoJS.pad.ZeroPadding.pad(data, blockSize);
  },

  unpad: function unpad(data) {
    // Remove zero padding
    CryptoJS.pad.ZeroPadding.unpad(data);

    // Remove one more byte -- the 0x80 byte
    data.sigBytes--;
  } };



/**
        * Output Feedback block mode.
        */
CryptoJS.mode.OFB = function () {
  var OFB = CryptoJS.lib.BlockCipherMode.extend();

  var Encryptor = OFB.Encryptor = OFB.extend({
    processBlock: function processBlock(words, offset) {
      // Shortcuts
      var cipher = this._cipher;
      var blockSize = cipher.blockSize;
      var iv = this._iv;
      var keystream = this._keystream;

      // Generate keystream
      if (iv) {
        keystream = this._keystream = iv.slice(0);

        // Remove IV for subsequent blocks
        this._iv = undefined;
      }
      cipher.encryptBlock(keystream, 0);

      // Encrypt
      for (var i = 0; i < blockSize; i++) {
        words[offset + i] ^= keystream[i];
      }
    } });


  OFB.Decryptor = Encryptor;

  return OFB;
}();


/**
      * A noop padding strategy.
      */
CryptoJS.pad.NoPadding = {
  pad: function pad() {
  },

  unpad: function unpad() {
  } };



(function (undefined) {
  // Shortcuts
  var C = CryptoJS;
  var C_lib = C.lib;
  var CipherParams = C_lib.CipherParams;
  var C_enc = C.enc;
  var Hex = C_enc.Hex;
  var C_format = C.format;

  var HexFormatter = C_format.Hex = {
    /**
                                       * Converts the ciphertext of a cipher params object to a hexadecimally encoded string.
                                       *
                                       * @param {CipherParams} cipherParams The cipher params object.
                                       *
                                       * @return {string} The hexadecimally encoded string.
                                       *
                                       * @static
                                       *
                                       * @example
                                       *
                                       *     var hexString = CryptoJS.format.Hex.stringify(cipherParams);
                                       */
    stringify: function stringify(cipherParams) {
      return cipherParams.ciphertext.toString(Hex);
    },

    /**
        * Converts a hexadecimally encoded ciphertext string to a cipher params object.
        *
        * @param {string} input The hexadecimally encoded string.
        *
        * @return {CipherParams} The cipher params object.
        *
        * @static
        *
        * @example
        *
        *     var cipherParams = CryptoJS.format.Hex.parse(hexString);
        */
    parse: function parse(input) {
      var ciphertext = Hex.parse(input);
      return CipherParams.create({ ciphertext: ciphertext });
    } };

})();


(function () {
  // Shortcuts
  var C = CryptoJS;
  var C_lib = C.lib;
  var BlockCipher = C_lib.BlockCipher;
  var C_algo = C.algo;

  // Lookup tables
  var SBOX = [];
  var INV_SBOX = [];
  var SUB_MIX_0 = [];
  var SUB_MIX_1 = [];
  var SUB_MIX_2 = [];
  var SUB_MIX_3 = [];
  var INV_SUB_MIX_0 = [];
  var INV_SUB_MIX_1 = [];
  var INV_SUB_MIX_2 = [];
  var INV_SUB_MIX_3 = [];

  // Compute lookup tables
  (function () {
    // Compute double table
    var d = [];
    for (var i = 0; i < 256; i++) {
      if (i < 128) {
        d[i] = i << 1;
      } else {
        d[i] = i << 1 ^ 0x11b;
      }
    }

    // Walk GF(2^8)
    var x = 0;
    var xi = 0;
    for (var i = 0; i < 256; i++) {
      // Compute sbox
      var sx = xi ^ xi << 1 ^ xi << 2 ^ xi << 3 ^ xi << 4;
      sx = sx >>> 8 ^ sx & 0xff ^ 0x63;
      SBOX[x] = sx;
      INV_SBOX[sx] = x;

      // Compute multiplication
      var x2 = d[x];
      var x4 = d[x2];
      var x8 = d[x4];

      // Compute sub bytes, mix columns tables
      var t = d[sx] * 0x101 ^ sx * 0x1010100;
      SUB_MIX_0[x] = t << 24 | t >>> 8;
      SUB_MIX_1[x] = t << 16 | t >>> 16;
      SUB_MIX_2[x] = t << 8 | t >>> 24;
      SUB_MIX_3[x] = t;

      // Compute inv sub bytes, inv mix columns tables
      var t = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;
      INV_SUB_MIX_0[sx] = t << 24 | t >>> 8;
      INV_SUB_MIX_1[sx] = t << 16 | t >>> 16;
      INV_SUB_MIX_2[sx] = t << 8 | t >>> 24;
      INV_SUB_MIX_3[sx] = t;

      // Compute next counter
      if (!x) {
        x = xi = 1;
      } else {
        x = x2 ^ d[d[d[x8 ^ x2]]];
        xi ^= d[d[xi]];
      }
    }
  })();

  // Precomputed Rcon lookup
  var RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36];

  /**
                                                                                  * AES block cipher algorithm.
                                                                                  */
  var AES = C_algo.AES = BlockCipher.extend({
    _doReset: function _doReset() {
      // Skip reset of nRounds has been set before and key did not change
      if (this._nRounds && this._keyPriorReset === this._key) {
        return;
      }

      // Shortcuts
      var key = this._keyPriorReset = this._key;
      var keyWords = key.words;
      var keySize = key.sigBytes / 4;

      // Compute number of rounds
      var nRounds = this._nRounds = keySize + 6;

      // Compute number of key schedule rows
      var ksRows = (nRounds + 1) * 4;

      // Compute key schedule
      var keySchedule = this._keySchedule = [];
      for (var ksRow = 0; ksRow < ksRows; ksRow++) {
        if (ksRow < keySize) {
          keySchedule[ksRow] = keyWords[ksRow];
        } else {
          var t = keySchedule[ksRow - 1];

          if (!(ksRow % keySize)) {
            // Rot word
            t = t << 8 | t >>> 24;

            // Sub word
            t = SBOX[t >>> 24] << 24 | SBOX[t >>> 16 & 0xff] << 16 | SBOX[t >>> 8 & 0xff] << 8 | SBOX[t & 0xff];

            // Mix Rcon
            t ^= RCON[ksRow / keySize | 0] << 24;
          } else if (keySize > 6 && ksRow % keySize == 4) {
            // Sub word
            t = SBOX[t >>> 24] << 24 | SBOX[t >>> 16 & 0xff] << 16 | SBOX[t >>> 8 & 0xff] << 8 | SBOX[t & 0xff];
          }

          keySchedule[ksRow] = keySchedule[ksRow - keySize] ^ t;
        }
      }

      // Compute inv key schedule
      var invKeySchedule = this._invKeySchedule = [];
      for (var invKsRow = 0; invKsRow < ksRows; invKsRow++) {
        var ksRow = ksRows - invKsRow;

        if (invKsRow % 4) {
          var t = keySchedule[ksRow];
        } else {
          var t = keySchedule[ksRow - 4];
        }

        if (invKsRow < 4 || ksRow <= 4) {
          invKeySchedule[invKsRow] = t;
        } else {
          invKeySchedule[invKsRow] = INV_SUB_MIX_0[SBOX[t >>> 24]] ^ INV_SUB_MIX_1[SBOX[t >>> 16 & 0xff]] ^
          INV_SUB_MIX_2[SBOX[t >>> 8 & 0xff]] ^ INV_SUB_MIX_3[SBOX[t & 0xff]];
        }
      }
    },

    encryptBlock: function encryptBlock(M, offset) {
      this._doCryptBlock(M, offset, this._keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX);
    },

    decryptBlock: function decryptBlock(M, offset) {
      // Swap 2nd and 4th rows
      var t = M[offset + 1];
      M[offset + 1] = M[offset + 3];
      M[offset + 3] = t;

      this._doCryptBlock(M, offset, this._invKeySchedule, INV_SUB_MIX_0, INV_SUB_MIX_1, INV_SUB_MIX_2, INV_SUB_MIX_3, INV_SBOX);

      // Inv swap 2nd and 4th rows
      var t = M[offset + 1];
      M[offset + 1] = M[offset + 3];
      M[offset + 3] = t;
    },

    _doCryptBlock: function _doCryptBlock(M, offset, keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX) {
      // Shortcut
      var nRounds = this._nRounds;

      // Get input, add round key
      var s0 = M[offset] ^ keySchedule[0];
      var s1 = M[offset + 1] ^ keySchedule[1];
      var s2 = M[offset + 2] ^ keySchedule[2];
      var s3 = M[offset + 3] ^ keySchedule[3];

      // Key schedule row counter
      var ksRow = 4;

      // Rounds
      for (var round = 1; round < nRounds; round++) {
        // Shift rows, sub bytes, mix columns, add round key
        var t0 = SUB_MIX_0[s0 >>> 24] ^ SUB_MIX_1[s1 >>> 16 & 0xff] ^ SUB_MIX_2[s2 >>> 8 & 0xff] ^ SUB_MIX_3[s3 & 0xff] ^ keySchedule[ksRow++];
        var t1 = SUB_MIX_0[s1 >>> 24] ^ SUB_MIX_1[s2 >>> 16 & 0xff] ^ SUB_MIX_2[s3 >>> 8 & 0xff] ^ SUB_MIX_3[s0 & 0xff] ^ keySchedule[ksRow++];
        var t2 = SUB_MIX_0[s2 >>> 24] ^ SUB_MIX_1[s3 >>> 16 & 0xff] ^ SUB_MIX_2[s0 >>> 8 & 0xff] ^ SUB_MIX_3[s1 & 0xff] ^ keySchedule[ksRow++];
        var t3 = SUB_MIX_0[s3 >>> 24] ^ SUB_MIX_1[s0 >>> 16 & 0xff] ^ SUB_MIX_2[s1 >>> 8 & 0xff] ^ SUB_MIX_3[s2 & 0xff] ^ keySchedule[ksRow++];

        // Update state
        s0 = t0;
        s1 = t1;
        s2 = t2;
        s3 = t3;
      }

      // Shift rows, sub bytes, add round key
      var t0 = (SBOX[s0 >>> 24] << 24 | SBOX[s1 >>> 16 & 0xff] << 16 | SBOX[s2 >>> 8 & 0xff] << 8 | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++];
      var t1 = (SBOX[s1 >>> 24] << 24 | SBOX[s2 >>> 16 & 0xff] << 16 | SBOX[s3 >>> 8 & 0xff] << 8 | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++];
      var t2 = (SBOX[s2 >>> 24] << 24 | SBOX[s3 >>> 16 & 0xff] << 16 | SBOX[s0 >>> 8 & 0xff] << 8 | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++];
      var t3 = (SBOX[s3 >>> 24] << 24 | SBOX[s0 >>> 16 & 0xff] << 16 | SBOX[s1 >>> 8 & 0xff] << 8 | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++];

      // Set output
      M[offset] = t0;
      M[offset + 1] = t1;
      M[offset + 2] = t2;
      M[offset + 3] = t3;
    },

    keySize: 256 / 32 });


  /**
                           * Shortcut functions to the cipher's object interface.
                           *
                           * @example
                           *
                           *     var ciphertext = CryptoJS.AES.encrypt(message, key, cfg);
                           *     var plaintext  = CryptoJS.AES.decrypt(ciphertext, key, cfg);
                           */
  C.AES = BlockCipher._createHelper(AES);
})();


(function () {
  // Shortcuts
  var C = CryptoJS;
  var C_lib = C.lib;
  var WordArray = C_lib.WordArray;
  var BlockCipher = C_lib.BlockCipher;
  var C_algo = C.algo;

  // Permuted Choice 1 constants
  var PC1 = [
  57, 49, 41, 33, 25, 17, 9, 1,
  58, 50, 42, 34, 26, 18, 10, 2,
  59, 51, 43, 35, 27, 19, 11, 3,
  60, 52, 44, 36, 63, 55, 47, 39,
  31, 23, 15, 7, 62, 54, 46, 38,
  30, 22, 14, 6, 61, 53, 45, 37,
  29, 21, 13, 5, 28, 20, 12, 4];


  // Permuted Choice 2 constants
  var PC2 = [
  14, 17, 11, 24, 1, 5,
  3, 28, 15, 6, 21, 10,
  23, 19, 12, 4, 26, 8,
  16, 7, 27, 20, 13, 2,
  41, 52, 31, 37, 47, 55,
  30, 40, 51, 45, 33, 48,
  44, 49, 39, 56, 34, 53,
  46, 42, 50, 36, 29, 32];


  // Cumulative bit shift constants
  var BIT_SHIFTS = [1, 2, 4, 6, 8, 10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28];

  // SBOXes and round permutation constants
  var SBOX_P = [
  {
    0x0: 0x808200,
    0x10000000: 0x8000,
    0x20000000: 0x808002,
    0x30000000: 0x2,
    0x40000000: 0x200,
    0x50000000: 0x808202,
    0x60000000: 0x800202,
    0x70000000: 0x800000,
    0x80000000: 0x202,
    0x90000000: 0x800200,
    0xa0000000: 0x8200,
    0xb0000000: 0x808000,
    0xc0000000: 0x8002,
    0xd0000000: 0x800002,
    0xe0000000: 0x0,
    0xf0000000: 0x8202,
    0x8000000: 0x0,
    0x18000000: 0x808202,
    0x28000000: 0x8202,
    0x38000000: 0x8000,
    0x48000000: 0x808200,
    0x58000000: 0x200,
    0x68000000: 0x808002,
    0x78000000: 0x2,
    0x88000000: 0x800200,
    0x98000000: 0x8200,
    0xa8000000: 0x808000,
    0xb8000000: 0x800202,
    0xc8000000: 0x800002,
    0xd8000000: 0x8002,
    0xe8000000: 0x202,
    0xf8000000: 0x800000,
    0x1: 0x8000,
    0x10000001: 0x2,
    0x20000001: 0x808200,
    0x30000001: 0x800000,
    0x40000001: 0x808002,
    0x50000001: 0x8200,
    0x60000001: 0x200,
    0x70000001: 0x800202,
    0x80000001: 0x808202,
    0x90000001: 0x808000,
    0xa0000001: 0x800002,
    0xb0000001: 0x8202,
    0xc0000001: 0x202,
    0xd0000001: 0x800200,
    0xe0000001: 0x8002,
    0xf0000001: 0x0,
    0x8000001: 0x808202,
    0x18000001: 0x808000,
    0x28000001: 0x800000,
    0x38000001: 0x200,
    0x48000001: 0x8000,
    0x58000001: 0x800002,
    0x68000001: 0x2,
    0x78000001: 0x8202,
    0x88000001: 0x8002,
    0x98000001: 0x800202,
    0xa8000001: 0x202,
    0xb8000001: 0x808200,
    0xc8000001: 0x800200,
    0xd8000001: 0x0,
    0xe8000001: 0x8200,
    0xf8000001: 0x808002 },

  {
    0x0: 0x40084010,
    0x1000000: 0x4000,
    0x2000000: 0x80000,
    0x3000000: 0x40080010,
    0x4000000: 0x40000010,
    0x5000000: 0x40084000,
    0x6000000: 0x40004000,
    0x7000000: 0x10,
    0x8000000: 0x84000,
    0x9000000: 0x40004010,
    0xa000000: 0x40000000,
    0xb000000: 0x84010,
    0xc000000: 0x80010,
    0xd000000: 0x0,
    0xe000000: 0x4010,
    0xf000000: 0x40080000,
    0x800000: 0x40004000,
    0x1800000: 0x84010,
    0x2800000: 0x10,
    0x3800000: 0x40004010,
    0x4800000: 0x40084010,
    0x5800000: 0x40000000,
    0x6800000: 0x80000,
    0x7800000: 0x40080010,
    0x8800000: 0x80010,
    0x9800000: 0x0,
    0xa800000: 0x4000,
    0xb800000: 0x40080000,
    0xc800000: 0x40000010,
    0xd800000: 0x84000,
    0xe800000: 0x40084000,
    0xf800000: 0x4010,
    0x10000000: 0x0,
    0x11000000: 0x40080010,
    0x12000000: 0x40004010,
    0x13000000: 0x40084000,
    0x14000000: 0x40080000,
    0x15000000: 0x10,
    0x16000000: 0x84010,
    0x17000000: 0x4000,
    0x18000000: 0x4010,
    0x19000000: 0x80000,
    0x1a000000: 0x80010,
    0x1b000000: 0x40000010,
    0x1c000000: 0x84000,
    0x1d000000: 0x40004000,
    0x1e000000: 0x40000000,
    0x1f000000: 0x40084010,
    0x10800000: 0x84010,
    0x11800000: 0x80000,
    0x12800000: 0x40080000,
    0x13800000: 0x4000,
    0x14800000: 0x40004000,
    0x15800000: 0x40084010,
    0x16800000: 0x10,
    0x17800000: 0x40000000,
    0x18800000: 0x40084000,
    0x19800000: 0x40000010,
    0x1a800000: 0x40004010,
    0x1b800000: 0x80010,
    0x1c800000: 0x0,
    0x1d800000: 0x4010,
    0x1e800000: 0x40080010,
    0x1f800000: 0x84000 },

  {
    0x0: 0x104,
    0x100000: 0x0,
    0x200000: 0x4000100,
    0x300000: 0x10104,
    0x400000: 0x10004,
    0x500000: 0x4000004,
    0x600000: 0x4010104,
    0x700000: 0x4010000,
    0x800000: 0x4000000,
    0x900000: 0x4010100,
    0xa00000: 0x10100,
    0xb00000: 0x4010004,
    0xc00000: 0x4000104,
    0xd00000: 0x10000,
    0xe00000: 0x4,
    0xf00000: 0x100,
    0x80000: 0x4010100,
    0x180000: 0x4010004,
    0x280000: 0x0,
    0x380000: 0x4000100,
    0x480000: 0x4000004,
    0x580000: 0x10000,
    0x680000: 0x10004,
    0x780000: 0x104,
    0x880000: 0x4,
    0x980000: 0x100,
    0xa80000: 0x4010000,
    0xb80000: 0x10104,
    0xc80000: 0x10100,
    0xd80000: 0x4000104,
    0xe80000: 0x4010104,
    0xf80000: 0x4000000,
    0x1000000: 0x4010100,
    0x1100000: 0x10004,
    0x1200000: 0x10000,
    0x1300000: 0x4000100,
    0x1400000: 0x100,
    0x1500000: 0x4010104,
    0x1600000: 0x4000004,
    0x1700000: 0x0,
    0x1800000: 0x4000104,
    0x1900000: 0x4000000,
    0x1a00000: 0x4,
    0x1b00000: 0x10100,
    0x1c00000: 0x4010000,
    0x1d00000: 0x104,
    0x1e00000: 0x10104,
    0x1f00000: 0x4010004,
    0x1080000: 0x4000000,
    0x1180000: 0x104,
    0x1280000: 0x4010100,
    0x1380000: 0x0,
    0x1480000: 0x10004,
    0x1580000: 0x4000100,
    0x1680000: 0x100,
    0x1780000: 0x4010004,
    0x1880000: 0x10000,
    0x1980000: 0x4010104,
    0x1a80000: 0x10104,
    0x1b80000: 0x4000004,
    0x1c80000: 0x4000104,
    0x1d80000: 0x4010000,
    0x1e80000: 0x4,
    0x1f80000: 0x10100 },

  {
    0x0: 0x80401000,
    0x10000: 0x80001040,
    0x20000: 0x401040,
    0x30000: 0x80400000,
    0x40000: 0x0,
    0x50000: 0x401000,
    0x60000: 0x80000040,
    0x70000: 0x400040,
    0x80000: 0x80000000,
    0x90000: 0x400000,
    0xa0000: 0x40,
    0xb0000: 0x80001000,
    0xc0000: 0x80400040,
    0xd0000: 0x1040,
    0xe0000: 0x1000,
    0xf0000: 0x80401040,
    0x8000: 0x80001040,
    0x18000: 0x40,
    0x28000: 0x80400040,
    0x38000: 0x80001000,
    0x48000: 0x401000,
    0x58000: 0x80401040,
    0x68000: 0x0,
    0x78000: 0x80400000,
    0x88000: 0x1000,
    0x98000: 0x80401000,
    0xa8000: 0x400000,
    0xb8000: 0x1040,
    0xc8000: 0x80000000,
    0xd8000: 0x400040,
    0xe8000: 0x401040,
    0xf8000: 0x80000040,
    0x100000: 0x400040,
    0x110000: 0x401000,
    0x120000: 0x80000040,
    0x130000: 0x0,
    0x140000: 0x1040,
    0x150000: 0x80400040,
    0x160000: 0x80401000,
    0x170000: 0x80001040,
    0x180000: 0x80401040,
    0x190000: 0x80000000,
    0x1a0000: 0x80400000,
    0x1b0000: 0x401040,
    0x1c0000: 0x80001000,
    0x1d0000: 0x400000,
    0x1e0000: 0x40,
    0x1f0000: 0x1000,
    0x108000: 0x80400000,
    0x118000: 0x80401040,
    0x128000: 0x0,
    0x138000: 0x401000,
    0x148000: 0x400040,
    0x158000: 0x80000000,
    0x168000: 0x80001040,
    0x178000: 0x40,
    0x188000: 0x80000040,
    0x198000: 0x1000,
    0x1a8000: 0x80001000,
    0x1b8000: 0x80400040,
    0x1c8000: 0x1040,
    0x1d8000: 0x80401000,
    0x1e8000: 0x400000,
    0x1f8000: 0x401040 },

  {
    0x0: 0x80,
    0x1000: 0x1040000,
    0x2000: 0x40000,
    0x3000: 0x20000000,
    0x4000: 0x20040080,
    0x5000: 0x1000080,
    0x6000: 0x21000080,
    0x7000: 0x40080,
    0x8000: 0x1000000,
    0x9000: 0x20040000,
    0xa000: 0x20000080,
    0xb000: 0x21040080,
    0xc000: 0x21040000,
    0xd000: 0x0,
    0xe000: 0x1040080,
    0xf000: 0x21000000,
    0x800: 0x1040080,
    0x1800: 0x21000080,
    0x2800: 0x80,
    0x3800: 0x1040000,
    0x4800: 0x40000,
    0x5800: 0x20040080,
    0x6800: 0x21040000,
    0x7800: 0x20000000,
    0x8800: 0x20040000,
    0x9800: 0x0,
    0xa800: 0x21040080,
    0xb800: 0x1000080,
    0xc800: 0x20000080,
    0xd800: 0x21000000,
    0xe800: 0x1000000,
    0xf800: 0x40080,
    0x10000: 0x40000,
    0x11000: 0x80,
    0x12000: 0x20000000,
    0x13000: 0x21000080,
    0x14000: 0x1000080,
    0x15000: 0x21040000,
    0x16000: 0x20040080,
    0x17000: 0x1000000,
    0x18000: 0x21040080,
    0x19000: 0x21000000,
    0x1a000: 0x1040000,
    0x1b000: 0x20040000,
    0x1c000: 0x40080,
    0x1d000: 0x20000080,
    0x1e000: 0x0,
    0x1f000: 0x1040080,
    0x10800: 0x21000080,
    0x11800: 0x1000000,
    0x12800: 0x1040000,
    0x13800: 0x20040080,
    0x14800: 0x20000000,
    0x15800: 0x1040080,
    0x16800: 0x80,
    0x17800: 0x21040000,
    0x18800: 0x40080,
    0x19800: 0x21040080,
    0x1a800: 0x0,
    0x1b800: 0x21000000,
    0x1c800: 0x1000080,
    0x1d800: 0x40000,
    0x1e800: 0x20040000,
    0x1f800: 0x20000080 },

  {
    0x0: 0x10000008,
    0x100: 0x2000,
    0x200: 0x10200000,
    0x300: 0x10202008,
    0x400: 0x10002000,
    0x500: 0x200000,
    0x600: 0x200008,
    0x700: 0x10000000,
    0x800: 0x0,
    0x900: 0x10002008,
    0xa00: 0x202000,
    0xb00: 0x8,
    0xc00: 0x10200008,
    0xd00: 0x202008,
    0xe00: 0x2008,
    0xf00: 0x10202000,
    0x80: 0x10200000,
    0x180: 0x10202008,
    0x280: 0x8,
    0x380: 0x200000,
    0x480: 0x202008,
    0x580: 0x10000008,
    0x680: 0x10002000,
    0x780: 0x2008,
    0x880: 0x200008,
    0x980: 0x2000,
    0xa80: 0x10002008,
    0xb80: 0x10200008,
    0xc80: 0x0,
    0xd80: 0x10202000,
    0xe80: 0x202000,
    0xf80: 0x10000000,
    0x1000: 0x10002000,
    0x1100: 0x10200008,
    0x1200: 0x10202008,
    0x1300: 0x2008,
    0x1400: 0x200000,
    0x1500: 0x10000000,
    0x1600: 0x10000008,
    0x1700: 0x202000,
    0x1800: 0x202008,
    0x1900: 0x0,
    0x1a00: 0x8,
    0x1b00: 0x10200000,
    0x1c00: 0x2000,
    0x1d00: 0x10002008,
    0x1e00: 0x10202000,
    0x1f00: 0x200008,
    0x1080: 0x8,
    0x1180: 0x202000,
    0x1280: 0x200000,
    0x1380: 0x10000008,
    0x1480: 0x10002000,
    0x1580: 0x2008,
    0x1680: 0x10202008,
    0x1780: 0x10200000,
    0x1880: 0x10202000,
    0x1980: 0x10200008,
    0x1a80: 0x2000,
    0x1b80: 0x202008,
    0x1c80: 0x200008,
    0x1d80: 0x0,
    0x1e80: 0x10000000,
    0x1f80: 0x10002008 },

  {
    0x0: 0x100000,
    0x10: 0x2000401,
    0x20: 0x400,
    0x30: 0x100401,
    0x40: 0x2100401,
    0x50: 0x0,
    0x60: 0x1,
    0x70: 0x2100001,
    0x80: 0x2000400,
    0x90: 0x100001,
    0xa0: 0x2000001,
    0xb0: 0x2100400,
    0xc0: 0x2100000,
    0xd0: 0x401,
    0xe0: 0x100400,
    0xf0: 0x2000000,
    0x8: 0x2100001,
    0x18: 0x0,
    0x28: 0x2000401,
    0x38: 0x2100400,
    0x48: 0x100000,
    0x58: 0x2000001,
    0x68: 0x2000000,
    0x78: 0x401,
    0x88: 0x100401,
    0x98: 0x2000400,
    0xa8: 0x2100000,
    0xb8: 0x100001,
    0xc8: 0x400,
    0xd8: 0x2100401,
    0xe8: 0x1,
    0xf8: 0x100400,
    0x100: 0x2000000,
    0x110: 0x100000,
    0x120: 0x2000401,
    0x130: 0x2100001,
    0x140: 0x100001,
    0x150: 0x2000400,
    0x160: 0x2100400,
    0x170: 0x100401,
    0x180: 0x401,
    0x190: 0x2100401,
    0x1a0: 0x100400,
    0x1b0: 0x1,
    0x1c0: 0x0,
    0x1d0: 0x2100000,
    0x1e0: 0x2000001,
    0x1f0: 0x400,
    0x108: 0x100400,
    0x118: 0x2000401,
    0x128: 0x2100001,
    0x138: 0x1,
    0x148: 0x2000000,
    0x158: 0x100000,
    0x168: 0x401,
    0x178: 0x2100400,
    0x188: 0x2000001,
    0x198: 0x2100000,
    0x1a8: 0x0,
    0x1b8: 0x2100401,
    0x1c8: 0x100401,
    0x1d8: 0x400,
    0x1e8: 0x2000400,
    0x1f8: 0x100001 },

  {
    0x0: 0x8000820,
    0x1: 0x20000,
    0x2: 0x8000000,
    0x3: 0x20,
    0x4: 0x20020,
    0x5: 0x8020820,
    0x6: 0x8020800,
    0x7: 0x800,
    0x8: 0x8020000,
    0x9: 0x8000800,
    0xa: 0x20800,
    0xb: 0x8020020,
    0xc: 0x820,
    0xd: 0x0,
    0xe: 0x8000020,
    0xf: 0x20820,
    0x80000000: 0x800,
    0x80000001: 0x8020820,
    0x80000002: 0x8000820,
    0x80000003: 0x8000000,
    0x80000004: 0x8020000,
    0x80000005: 0x20800,
    0x80000006: 0x20820,
    0x80000007: 0x20,
    0x80000008: 0x8000020,
    0x80000009: 0x820,
    0x8000000a: 0x20020,
    0x8000000b: 0x8020800,
    0x8000000c: 0x0,
    0x8000000d: 0x8020020,
    0x8000000e: 0x8000800,
    0x8000000f: 0x20000,
    0x10: 0x20820,
    0x11: 0x8020800,
    0x12: 0x20,
    0x13: 0x800,
    0x14: 0x8000800,
    0x15: 0x8000020,
    0x16: 0x8020020,
    0x17: 0x20000,
    0x18: 0x0,
    0x19: 0x20020,
    0x1a: 0x8020000,
    0x1b: 0x8000820,
    0x1c: 0x8020820,
    0x1d: 0x20800,
    0x1e: 0x820,
    0x1f: 0x8000000,
    0x80000010: 0x20000,
    0x80000011: 0x800,
    0x80000012: 0x8020020,
    0x80000013: 0x20820,
    0x80000014: 0x20,
    0x80000015: 0x8020000,
    0x80000016: 0x8000000,
    0x80000017: 0x8000820,
    0x80000018: 0x8020820,
    0x80000019: 0x8000020,
    0x8000001a: 0x8000800,
    0x8000001b: 0x0,
    0x8000001c: 0x20800,
    0x8000001d: 0x820,
    0x8000001e: 0x20020,
    0x8000001f: 0x8020800 }];



  // Masks that select the SBOX input
  var SBOX_MASK = [
  0xf8000001, 0x1f800000, 0x01f80000, 0x001f8000,
  0x0001f800, 0x00001f80, 0x000001f8, 0x8000001f];


  /**
                                                    * DES block cipher algorithm.
                                                    */
  var DES = C_algo.DES = BlockCipher.extend({
    _doReset: function _doReset() {
      // Shortcuts
      var key = this._key;
      var keyWords = key.words;

      // Select 56 bits according to PC1
      var keyBits = [];
      for (var i = 0; i < 56; i++) {
        var keyBitPos = PC1[i] - 1;
        keyBits[i] = keyWords[keyBitPos >>> 5] >>> 31 - keyBitPos % 32 & 1;
      }

      // Assemble 16 subkeys
      var subKeys = this._subKeys = [];
      for (var nSubKey = 0; nSubKey < 16; nSubKey++) {
        // Create subkey
        var subKey = subKeys[nSubKey] = [];

        // Shortcut
        var bitShift = BIT_SHIFTS[nSubKey];

        // Select 48 bits according to PC2
        for (var i = 0; i < 24; i++) {
          // Select from the left 28 key bits
          subKey[i / 6 | 0] |= keyBits[(PC2[i] - 1 + bitShift) % 28] << 31 - i % 6;

          // Select from the right 28 key bits
          subKey[4 + (i / 6 | 0)] |= keyBits[28 + (PC2[i + 24] - 1 + bitShift) % 28] << 31 - i % 6;
        }

        // Since each subkey is applied to an expanded 32-bit input,
        // the subkey can be broken into 8 values scaled to 32-bits,
        // which allows the key to be used without expansion
        subKey[0] = subKey[0] << 1 | subKey[0] >>> 31;
        for (var i = 1; i < 7; i++) {
          subKey[i] = subKey[i] >>> (i - 1) * 4 + 3;
        }
        subKey[7] = subKey[7] << 5 | subKey[7] >>> 27;
      }

      // Compute inverse subkeys
      var invSubKeys = this._invSubKeys = [];
      for (var i = 0; i < 16; i++) {
        invSubKeys[i] = subKeys[15 - i];
      }
    },

    encryptBlock: function encryptBlock(M, offset) {
      this._doCryptBlock(M, offset, this._subKeys);
    },

    decryptBlock: function decryptBlock(M, offset) {
      this._doCryptBlock(M, offset, this._invSubKeys);
    },

    _doCryptBlock: function _doCryptBlock(M, offset, subKeys) {
      // Get input
      this._lBlock = M[offset];
      this._rBlock = M[offset + 1];

      // Initial permutation
      exchangeLR.call(this, 4, 0x0f0f0f0f);
      exchangeLR.call(this, 16, 0x0000ffff);
      exchangeRL.call(this, 2, 0x33333333);
      exchangeRL.call(this, 8, 0x00ff00ff);
      exchangeLR.call(this, 1, 0x55555555);

      // Rounds
      for (var round = 0; round < 16; round++) {
        // Shortcuts
        var subKey = subKeys[round];
        var lBlock = this._lBlock;
        var rBlock = this._rBlock;

        // Feistel function
        var f = 0;
        for (var i = 0; i < 8; i++) {
          f |= SBOX_P[i][((rBlock ^ subKey[i]) & SBOX_MASK[i]) >>> 0];
        }
        this._lBlock = rBlock;
        this._rBlock = lBlock ^ f;
      }

      // Undo swap from last round
      var t = this._lBlock;
      this._lBlock = this._rBlock;
      this._rBlock = t;

      // Final permutation
      exchangeLR.call(this, 1, 0x55555555);
      exchangeRL.call(this, 8, 0x00ff00ff);
      exchangeRL.call(this, 2, 0x33333333);
      exchangeLR.call(this, 16, 0x0000ffff);
      exchangeLR.call(this, 4, 0x0f0f0f0f);

      // Set output
      M[offset] = this._lBlock;
      M[offset + 1] = this._rBlock;
    },

    keySize: 64 / 32,

    ivSize: 64 / 32,

    blockSize: 64 / 32 });


  // Swap bits across the left and right words
  function exchangeLR(offset, mask) {
    var t = (this._lBlock >>> offset ^ this._rBlock) & mask;
    this._rBlock ^= t;
    this._lBlock ^= t << offset;
  }

  function exchangeRL(offset, mask) {
    var t = (this._rBlock >>> offset ^ this._lBlock) & mask;
    this._lBlock ^= t;
    this._rBlock ^= t << offset;
  }

  /**
     * Shortcut functions to the cipher's object interface.
     *
     * @example
     *
     *     var ciphertext = CryptoJS.DES.encrypt(message, key, cfg);
     *     var plaintext  = CryptoJS.DES.decrypt(ciphertext, key, cfg);
     */
  C.DES = BlockCipher._createHelper(DES);

  /**
                                           * Triple-DES block cipher algorithm.
                                           */
  var TripleDES = C_algo.TripleDES = BlockCipher.extend({
    _doReset: function _doReset() {
      // Shortcuts
      var key = this._key;
      var keyWords = key.words;

      // Create DES instances
      this._des1 = DES.createEncryptor(WordArray.create(keyWords.slice(0, 2)));
      this._des2 = DES.createEncryptor(WordArray.create(keyWords.slice(2, 4)));
      this._des3 = DES.createEncryptor(WordArray.create(keyWords.slice(4, 6)));
    },

    encryptBlock: function encryptBlock(M, offset) {
      this._des1.encryptBlock(M, offset);
      this._des2.decryptBlock(M, offset);
      this._des3.encryptBlock(M, offset);
    },

    decryptBlock: function decryptBlock(M, offset) {
      this._des3.decryptBlock(M, offset);
      this._des2.encryptBlock(M, offset);
      this._des1.decryptBlock(M, offset);
    },

    keySize: 192 / 32,

    ivSize: 64 / 32,

    blockSize: 64 / 32 });


  /**
                            * Shortcut functions to the cipher's object interface.
                            *
                            * @example
                            *
                            *     var ciphertext = CryptoJS.TripleDES.encrypt(message, key, cfg);
                            *     var plaintext  = CryptoJS.TripleDES.decrypt(ciphertext, key, cfg);
                            */
  C.TripleDES = BlockCipher._createHelper(TripleDES);
})();


(function () {
  // Shortcuts
  var C = CryptoJS;
  var C_lib = C.lib;
  var StreamCipher = C_lib.StreamCipher;
  var C_algo = C.algo;

  /**
                        * RC4 stream cipher algorithm.
                        */
  var RC4 = C_algo.RC4 = StreamCipher.extend({
    _doReset: function _doReset() {
      // Shortcuts
      var key = this._key;
      var keyWords = key.words;
      var keySigBytes = key.sigBytes;

      // Init sbox
      var S = this._S = [];
      for (var i = 0; i < 256; i++) {
        S[i] = i;
      }

      // Key setup
      for (var i = 0, j = 0; i < 256; i++) {
        var keyByteIndex = i % keySigBytes;
        var keyByte = keyWords[keyByteIndex >>> 2] >>> 24 - keyByteIndex % 4 * 8 & 0xff;

        j = (j + S[i] + keyByte) % 256;

        // Swap
        var t = S[i];
        S[i] = S[j];
        S[j] = t;
      }

      // Counters
      this._i = this._j = 0;
    },

    _doProcessBlock: function _doProcessBlock(M, offset) {
      M[offset] ^= generateKeystreamWord.call(this);
    },

    keySize: 256 / 32,

    ivSize: 0 });


  function generateKeystreamWord() {
    // Shortcuts
    var S = this._S;
    var i = this._i;
    var j = this._j;

    // Generate keystream word
    var keystreamWord = 0;
    for (var n = 0; n < 4; n++) {
      i = (i + 1) % 256;
      j = (j + S[i]) % 256;

      // Swap
      var t = S[i];
      S[i] = S[j];
      S[j] = t;

      keystreamWord |= S[(S[i] + S[j]) % 256] << 24 - n * 8;
    }

    // Update counters
    this._i = i;
    this._j = j;

    return keystreamWord;
  }

  /**
     * Shortcut functions to the cipher's object interface.
     *
     * @example
     *
     *     var ciphertext = CryptoJS.RC4.encrypt(message, key, cfg);
     *     var plaintext  = CryptoJS.RC4.decrypt(ciphertext, key, cfg);
     */
  C.RC4 = StreamCipher._createHelper(RC4);

  /**
                                            * Modified RC4 stream cipher algorithm.
                                            */
  var RC4Drop = C_algo.RC4Drop = RC4.extend({
    /**
                                               * Configuration options.
                                               *
                                               * @property {number} drop The number of keystream words to drop. Default 192
                                               */
    cfg: RC4.cfg.extend({
      drop: 192 }),


    _doReset: function _doReset() {
      RC4._doReset.call(this);

      // Drop
      for (var i = this.cfg.drop; i > 0; i--) {
        generateKeystreamWord.call(this);
      }
    } });


  /**
           * Shortcut functions to the cipher's object interface.
           *
           * @example
           *
           *     var ciphertext = CryptoJS.RC4Drop.encrypt(message, key, cfg);
           *     var plaintext  = CryptoJS.RC4Drop.decrypt(ciphertext, key, cfg);
           */
  C.RC4Drop = StreamCipher._createHelper(RC4Drop);
})();


/** @preserve
       * Counter block mode compatible with  Dr Brian Gladman fileenc.c
       * derived from CryptoJS.mode.CTR
       * Jan Hruby jhruby.web@gmail.com
       */
CryptoJS.mode.CTRGladman = function () {
  var CTRGladman = CryptoJS.lib.BlockCipherMode.extend();

  function incWord(word)
  {
    if ((word >> 24 & 0xff) === 0xff) {//overflow
      var b1 = word >> 16 & 0xff;
      var b2 = word >> 8 & 0xff;
      var b3 = word & 0xff;

      if (b1 === 0xff) // overflow b1
        {
          b1 = 0;
          if (b2 === 0xff)
          {
            b2 = 0;
            if (b3 === 0xff)
            {
              b3 = 0;
            } else

            {
              ++b3;
            }
          } else

          {
            ++b2;
          }
        } else

      {
        ++b1;
      }

      word = 0;
      word += b1 << 16;
      word += b2 << 8;
      word += b3;
    } else

    {
      word += 0x01 << 24;
    }
    return word;
  }

  function incCounter(counter)
  {
    if ((counter[0] = incWord(counter[0])) === 0)
    {
      // encr_data in fileenc.c from  Dr Brian Gladman's counts only with DWORD j < 8
      counter[1] = incWord(counter[1]);
    }
    return counter;
  }

  var Encryptor = CTRGladman.Encryptor = CTRGladman.extend({
    processBlock: function processBlock(words, offset) {
      // Shortcuts
      var cipher = this._cipher;
      var blockSize = cipher.blockSize;
      var iv = this._iv;
      var counter = this._counter;

      // Generate keystream
      if (iv) {
        counter = this._counter = iv.slice(0);

        // Remove IV for subsequent blocks
        this._iv = undefined;
      }

      incCounter(counter);

      var keystream = counter.slice(0);
      cipher.encryptBlock(keystream, 0);

      // Encrypt
      for (var i = 0; i < blockSize; i++) {
        words[offset + i] ^= keystream[i];
      }
    } });


  CTRGladman.Decryptor = Encryptor;

  return CTRGladman;
}();




(function () {
  // Shortcuts
  var C = CryptoJS;
  var C_lib = C.lib;
  var StreamCipher = C_lib.StreamCipher;
  var C_algo = C.algo;

  // Reusable objects
  var S = [];
  var C_ = [];
  var G = [];

  /**
               * Rabbit stream cipher algorithm
               */
  var Rabbit = C_algo.Rabbit = StreamCipher.extend({
    _doReset: function _doReset() {
      // Shortcuts
      var K = this._key.words;
      var iv = this.cfg.iv;

      // Swap endian
      for (var i = 0; i < 4; i++) {
        K[i] = (K[i] << 8 | K[i] >>> 24) & 0x00ff00ff |
        (K[i] << 24 | K[i] >>> 8) & 0xff00ff00;
      }

      // Generate initial state values
      var X = this._X = [
      K[0], K[3] << 16 | K[2] >>> 16,
      K[1], K[0] << 16 | K[3] >>> 16,
      K[2], K[1] << 16 | K[0] >>> 16,
      K[3], K[2] << 16 | K[1] >>> 16];


      // Generate initial counter values
      var C = this._C = [
      K[2] << 16 | K[2] >>> 16, K[0] & 0xffff0000 | K[1] & 0x0000ffff,
      K[3] << 16 | K[3] >>> 16, K[1] & 0xffff0000 | K[2] & 0x0000ffff,
      K[0] << 16 | K[0] >>> 16, K[2] & 0xffff0000 | K[3] & 0x0000ffff,
      K[1] << 16 | K[1] >>> 16, K[3] & 0xffff0000 | K[0] & 0x0000ffff];


      // Carry bit
      this._b = 0;

      // Iterate the system four times
      for (var i = 0; i < 4; i++) {
        nextState.call(this);
      }

      // Modify the counters
      for (var i = 0; i < 8; i++) {
        C[i] ^= X[i + 4 & 7];
      }

      // IV setup
      if (iv) {
        // Shortcuts
        var IV = iv.words;
        var IV_0 = IV[0];
        var IV_1 = IV[1];

        // Generate four subvectors
        var i0 = (IV_0 << 8 | IV_0 >>> 24) & 0x00ff00ff | (IV_0 << 24 | IV_0 >>> 8) & 0xff00ff00;
        var i2 = (IV_1 << 8 | IV_1 >>> 24) & 0x00ff00ff | (IV_1 << 24 | IV_1 >>> 8) & 0xff00ff00;
        var i1 = i0 >>> 16 | i2 & 0xffff0000;
        var i3 = i2 << 16 | i0 & 0x0000ffff;

        // Modify counter values
        C[0] ^= i0;
        C[1] ^= i1;
        C[2] ^= i2;
        C[3] ^= i3;
        C[4] ^= i0;
        C[5] ^= i1;
        C[6] ^= i2;
        C[7] ^= i3;

        // Iterate the system four times
        for (var i = 0; i < 4; i++) {
          nextState.call(this);
        }
      }
    },

    _doProcessBlock: function _doProcessBlock(M, offset) {
      // Shortcut
      var X = this._X;

      // Iterate the system
      nextState.call(this);

      // Generate four keystream words
      S[0] = X[0] ^ X[5] >>> 16 ^ X[3] << 16;
      S[1] = X[2] ^ X[7] >>> 16 ^ X[5] << 16;
      S[2] = X[4] ^ X[1] >>> 16 ^ X[7] << 16;
      S[3] = X[6] ^ X[3] >>> 16 ^ X[1] << 16;

      for (var i = 0; i < 4; i++) {
        // Swap endian
        S[i] = (S[i] << 8 | S[i] >>> 24) & 0x00ff00ff |
        (S[i] << 24 | S[i] >>> 8) & 0xff00ff00;

        // Encrypt
        M[offset + i] ^= S[i];
      }
    },

    blockSize: 128 / 32,

    ivSize: 64 / 32 });


  function nextState() {
    // Shortcuts
    var X = this._X;
    var C = this._C;

    // Save old counter values
    for (var i = 0; i < 8; i++) {
      C_[i] = C[i];
    }

    // Calculate new counter values
    C[0] = C[0] + 0x4d34d34d + this._b | 0;
    C[1] = C[1] + 0xd34d34d3 + (C[0] >>> 0 < C_[0] >>> 0 ? 1 : 0) | 0;
    C[2] = C[2] + 0x34d34d34 + (C[1] >>> 0 < C_[1] >>> 0 ? 1 : 0) | 0;
    C[3] = C[3] + 0x4d34d34d + (C[2] >>> 0 < C_[2] >>> 0 ? 1 : 0) | 0;
    C[4] = C[4] + 0xd34d34d3 + (C[3] >>> 0 < C_[3] >>> 0 ? 1 : 0) | 0;
    C[5] = C[5] + 0x34d34d34 + (C[4] >>> 0 < C_[4] >>> 0 ? 1 : 0) | 0;
    C[6] = C[6] + 0x4d34d34d + (C[5] >>> 0 < C_[5] >>> 0 ? 1 : 0) | 0;
    C[7] = C[7] + 0xd34d34d3 + (C[6] >>> 0 < C_[6] >>> 0 ? 1 : 0) | 0;
    this._b = C[7] >>> 0 < C_[7] >>> 0 ? 1 : 0;

    // Calculate the g-values
    for (var i = 0; i < 8; i++) {
      var gx = X[i] + C[i];

      // Construct high and low argument for squaring
      var ga = gx & 0xffff;
      var gb = gx >>> 16;

      // Calculate high and low result of squaring
      var gh = ((ga * ga >>> 17) + ga * gb >>> 15) + gb * gb;
      var gl = ((gx & 0xffff0000) * gx | 0) + ((gx & 0x0000ffff) * gx | 0);

      // High XOR low
      G[i] = gh ^ gl;
    }

    // Calculate new state values
    X[0] = G[0] + (G[7] << 16 | G[7] >>> 16) + (G[6] << 16 | G[6] >>> 16) | 0;
    X[1] = G[1] + (G[0] << 8 | G[0] >>> 24) + G[7] | 0;
    X[2] = G[2] + (G[1] << 16 | G[1] >>> 16) + (G[0] << 16 | G[0] >>> 16) | 0;
    X[3] = G[3] + (G[2] << 8 | G[2] >>> 24) + G[1] | 0;
    X[4] = G[4] + (G[3] << 16 | G[3] >>> 16) + (G[2] << 16 | G[2] >>> 16) | 0;
    X[5] = G[5] + (G[4] << 8 | G[4] >>> 24) + G[3] | 0;
    X[6] = G[6] + (G[5] << 16 | G[5] >>> 16) + (G[4] << 16 | G[4] >>> 16) | 0;
    X[7] = G[7] + (G[6] << 8 | G[6] >>> 24) + G[5] | 0;
  }

  /**
     * Shortcut functions to the cipher's object interface.
     *
     * @example
     *
     *     var ciphertext = CryptoJS.Rabbit.encrypt(message, key, cfg);
     *     var plaintext  = CryptoJS.Rabbit.decrypt(ciphertext, key, cfg);
     */
  C.Rabbit = StreamCipher._createHelper(Rabbit);
})();


/**
       * Counter block mode.
       */
CryptoJS.mode.CTR = function () {
  var CTR = CryptoJS.lib.BlockCipherMode.extend();

  var Encryptor = CTR.Encryptor = CTR.extend({
    processBlock: function processBlock(words, offset) {
      // Shortcuts
      var cipher = this._cipher;
      var blockSize = cipher.blockSize;
      var iv = this._iv;
      var counter = this._counter;

      // Generate keystream
      if (iv) {
        counter = this._counter = iv.slice(0);

        // Remove IV for subsequent blocks
        this._iv = undefined;
      }
      var keystream = counter.slice(0);
      cipher.encryptBlock(keystream, 0);

      // Increment counter
      counter[blockSize - 1] = counter[blockSize - 1] + 1 | 0;

      // Encrypt
      for (var i = 0; i < blockSize; i++) {
        words[offset + i] ^= keystream[i];
      }
    } });


  CTR.Decryptor = Encryptor;

  return CTR;
}();


(function () {
  // Shortcuts
  var C = CryptoJS;
  var C_lib = C.lib;
  var StreamCipher = C_lib.StreamCipher;
  var C_algo = C.algo;

  // Reusable objects
  var S = [];
  var C_ = [];
  var G = [];

  /**
               * Rabbit stream cipher algorithm.
               *
               * This is a legacy version that neglected to convert the key to little-endian.
               * This error doesn't affect the cipher's security,
               * but it does affect its compatibility with other implementations.
               */
  var RabbitLegacy = C_algo.RabbitLegacy = StreamCipher.extend({
    _doReset: function _doReset() {
      // Shortcuts
      var K = this._key.words;
      var iv = this.cfg.iv;

      // Generate initial state values
      var X = this._X = [
      K[0], K[3] << 16 | K[2] >>> 16,
      K[1], K[0] << 16 | K[3] >>> 16,
      K[2], K[1] << 16 | K[0] >>> 16,
      K[3], K[2] << 16 | K[1] >>> 16];


      // Generate initial counter values
      var C = this._C = [
      K[2] << 16 | K[2] >>> 16, K[0] & 0xffff0000 | K[1] & 0x0000ffff,
      K[3] << 16 | K[3] >>> 16, K[1] & 0xffff0000 | K[2] & 0x0000ffff,
      K[0] << 16 | K[0] >>> 16, K[2] & 0xffff0000 | K[3] & 0x0000ffff,
      K[1] << 16 | K[1] >>> 16, K[3] & 0xffff0000 | K[0] & 0x0000ffff];


      // Carry bit
      this._b = 0;

      // Iterate the system four times
      for (var i = 0; i < 4; i++) {
        nextState.call(this);
      }

      // Modify the counters
      for (var i = 0; i < 8; i++) {
        C[i] ^= X[i + 4 & 7];
      }

      // IV setup
      if (iv) {
        // Shortcuts
        var IV = iv.words;
        var IV_0 = IV[0];
        var IV_1 = IV[1];

        // Generate four subvectors
        var i0 = (IV_0 << 8 | IV_0 >>> 24) & 0x00ff00ff | (IV_0 << 24 | IV_0 >>> 8) & 0xff00ff00;
        var i2 = (IV_1 << 8 | IV_1 >>> 24) & 0x00ff00ff | (IV_1 << 24 | IV_1 >>> 8) & 0xff00ff00;
        var i1 = i0 >>> 16 | i2 & 0xffff0000;
        var i3 = i2 << 16 | i0 & 0x0000ffff;

        // Modify counter values
        C[0] ^= i0;
        C[1] ^= i1;
        C[2] ^= i2;
        C[3] ^= i3;
        C[4] ^= i0;
        C[5] ^= i1;
        C[6] ^= i2;
        C[7] ^= i3;

        // Iterate the system four times
        for (var i = 0; i < 4; i++) {
          nextState.call(this);
        }
      }
    },

    _doProcessBlock: function _doProcessBlock(M, offset) {
      // Shortcut
      var X = this._X;

      // Iterate the system
      nextState.call(this);

      // Generate four keystream words
      S[0] = X[0] ^ X[5] >>> 16 ^ X[3] << 16;
      S[1] = X[2] ^ X[7] >>> 16 ^ X[5] << 16;
      S[2] = X[4] ^ X[1] >>> 16 ^ X[7] << 16;
      S[3] = X[6] ^ X[3] >>> 16 ^ X[1] << 16;

      for (var i = 0; i < 4; i++) {
        // Swap endian
        S[i] = (S[i] << 8 | S[i] >>> 24) & 0x00ff00ff |
        (S[i] << 24 | S[i] >>> 8) & 0xff00ff00;

        // Encrypt
        M[offset + i] ^= S[i];
      }
    },

    blockSize: 128 / 32,

    ivSize: 64 / 32 });


  function nextState() {
    // Shortcuts
    var X = this._X;
    var C = this._C;

    // Save old counter values
    for (var i = 0; i < 8; i++) {
      C_[i] = C[i];
    }

    // Calculate new counter values
    C[0] = C[0] + 0x4d34d34d + this._b | 0;
    C[1] = C[1] + 0xd34d34d3 + (C[0] >>> 0 < C_[0] >>> 0 ? 1 : 0) | 0;
    C[2] = C[2] + 0x34d34d34 + (C[1] >>> 0 < C_[1] >>> 0 ? 1 : 0) | 0;
    C[3] = C[3] + 0x4d34d34d + (C[2] >>> 0 < C_[2] >>> 0 ? 1 : 0) | 0;
    C[4] = C[4] + 0xd34d34d3 + (C[3] >>> 0 < C_[3] >>> 0 ? 1 : 0) | 0;
    C[5] = C[5] + 0x34d34d34 + (C[4] >>> 0 < C_[4] >>> 0 ? 1 : 0) | 0;
    C[6] = C[6] + 0x4d34d34d + (C[5] >>> 0 < C_[5] >>> 0 ? 1 : 0) | 0;
    C[7] = C[7] + 0xd34d34d3 + (C[6] >>> 0 < C_[6] >>> 0 ? 1 : 0) | 0;
    this._b = C[7] >>> 0 < C_[7] >>> 0 ? 1 : 0;

    // Calculate the g-values
    for (var i = 0; i < 8; i++) {
      var gx = X[i] + C[i];

      // Construct high and low argument for squaring
      var ga = gx & 0xffff;
      var gb = gx >>> 16;

      // Calculate high and low result of squaring
      var gh = ((ga * ga >>> 17) + ga * gb >>> 15) + gb * gb;
      var gl = ((gx & 0xffff0000) * gx | 0) + ((gx & 0x0000ffff) * gx | 0);

      // High XOR low
      G[i] = gh ^ gl;
    }

    // Calculate new state values
    X[0] = G[0] + (G[7] << 16 | G[7] >>> 16) + (G[6] << 16 | G[6] >>> 16) | 0;
    X[1] = G[1] + (G[0] << 8 | G[0] >>> 24) + G[7] | 0;
    X[2] = G[2] + (G[1] << 16 | G[1] >>> 16) + (G[0] << 16 | G[0] >>> 16) | 0;
    X[3] = G[3] + (G[2] << 8 | G[2] >>> 24) + G[1] | 0;
    X[4] = G[4] + (G[3] << 16 | G[3] >>> 16) + (G[2] << 16 | G[2] >>> 16) | 0;
    X[5] = G[5] + (G[4] << 8 | G[4] >>> 24) + G[3] | 0;
    X[6] = G[6] + (G[5] << 16 | G[5] >>> 16) + (G[4] << 16 | G[4] >>> 16) | 0;
    X[7] = G[7] + (G[6] << 8 | G[6] >>> 24) + G[5] | 0;
  }

  /**
     * Shortcut functions to the cipher's object interface.
     *
     * @example
     *
     *     var ciphertext = CryptoJS.RabbitLegacy.encrypt(message, key, cfg);
     *     var plaintext  = CryptoJS.RabbitLegacy.decrypt(ciphertext, key, cfg);
     */
  C.RabbitLegacy = StreamCipher._createHelper(RabbitLegacy);
})();


/**
       * Zero padding strategy.
       */
CryptoJS.pad.ZeroPadding = {
  pad: function pad(data, blockSize) {
    // Shortcut
    var blockSizeBytes = blockSize * 4;

    // Pad
    data.clamp();
    data.sigBytes += blockSizeBytes - (data.sigBytes % blockSizeBytes || blockSizeBytes);
  },

  unpad: function unpad(data) {
    // Shortcut
    var dataWords = data.words;

    // Unpad
    var i = data.sigBytes - 1;
    while (!(dataWords[i >>> 2] >>> 24 - i % 4 * 8 & 0xff)) {
      i--;
    }
    data.sigBytes = i + 1;
  } };var _default =


{
  encryption: encryption };exports.default = _default;

/***/ }),
/* 49 */
/*!*********************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/utils/check/index.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.insName = insName;exports.insText = insText;exports.insPwd = insPwd;exports.isEmail = isEmail;exports.isAlphanumeric = isAlphanumeric;exports.insPhone = insPhone;exports.insBankCard = insBankCard;exports.insBranch = insBranch;exports.insEmpty = insEmpty;exports.keyLength = keyLength;exports.keyNumber = keyNumber;exports.keyIntegerNumber = keyIntegerNumber;exports.keyChinese = keyChinese;exports.diffObj = diffObj;exports.diffArr = diffArr;var _commonJs = __webpack_require__(/*! ../commonJs */ 17);

/* 提示弹窗 */
function insShowToast(title) {
  (0, _commonJs.showToast)({
    title: title,
    icon: "none" });

}

/* 判断姓名 */
function insName(name) {
  if (name.length < 0 || name == "") {
    insShowToast('姓名不能为空');
    return;
  } else if (/[^\u4E00-\u9FA5|\d|\a-zA-Z|\r\n\s,.?!，。？！…—&$=()-+/*{}[\]]|\s/g.test(name)) {
    insShowToast('姓名格式存在特殊符号');
    return;
  } else if (name.length > 6) {
    insShowToast('姓名最多为6位');
    return;
  } else {
    return true;
  }
}

/* 判断是否文字 */
function insText(val, desc) {
  //为空或全部为空格
  if (val.length < 1 || val.match(/^[ ]*$/)) {
    insShowToast(desc);
    return;
  } else if (!/^[\u4e00-\u9fa5]+$/.test(val)) {
    insShowToast('输入内容必须为中文汉字');
    return;
  }
  return true;
}

/* 判断密码 */
function insPwd(pwd) {var desc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "密码";
  if (pwd.length < 0 || pwd == "") {
    insShowToast("".concat(desc, "\u4E0D\u80FD\u4E3A\u7A7A"));
    return;
  } else if (!/^[0-9A-Za-z]{6,12}$/.test(pwd)) {
    insShowToast("".concat(desc, "\u5FC5\u987B\u4E3A6-12\u5B57\u6BCD\u6570\u5B57\u7EC4\u5408"));
    return;
  } else {
    return true;
  }
}

/* 常见11种邮箱判断 */
function isEmail(email) {
  var pattern = /^([A-Za-z0-9_\-\.])+\@([A-Za-z0-9_\-\.])+\.([A-Za-z]{2,4})$/;
  var domains = ["qq.com", "163.com", "vip.163.com", "263.net", "yeah.net", "sohu.com", "sina.cn", "sina.com",
  "eyou.com", "gmail.com", "hotmail.com", "42du.cn"];

  if (email.length < 0 || email == "") {
    insShowToast('邮箱账号不能为空');
    return;
  } else if (pattern.test(email)) {
    var domain = email.substring(email.indexOf("@") + 1);
    for (var i = 0; i < domains.length; i++) {
      if (domain == domains[i]) {
        return true;
      }
    }
  } else {
    insShowToast('邮箱账号格式有误');
    return;
  }
}

/* 判断是否为数字字母 */
function isAlphanumeric(value, desc) {
  var alphanumeric = /^[A-Za-z0-9]*$/;
  if (alphanumeric.test(value)) {
    return true;
  } else {
    insShowToast(desc);
    return;
  }
}

/* 判断手机号码 */
function insPhone(phone) {
  if (phone.length < 0 || phone == "") {
    insShowToast('手机号不能为空');
    return;
  } else if (!/^(13[0-9]|14[579]|15[0-3,5-9]|16[6]|17[0135678]|18[0-9]|19[89])\d{8}$/.test(phone)) {
    insShowToast('手机号码格式有误');
    return;
  } else {
    return true;
  }
}

/* 判断银行卡号 */
function insBankCard(bank) {
  if (!/^([1-9]{1})(\d{15}|\d{18})$/.test(bank)) {
    insShowToast('请输入正确的银行卡号');
    return;
  } else {
    return true;
  }
}

/* 判断银行卡开户支行 */
function insBranch(branch) {
  if (branch.length < 0 || branch == "") {
    insShowToast('开户支行不能为空');
    return;
  } else if (!/^[\u4e00-\u9fa5]+$/.test(branch)) {
    insShowToast('开户支行必须为中文汉字');
    return;
  } else if (branch.length > 20) {
    insShowToast('开户支行上限为21位');
    return;
  } else {
    return true;
  }
}

/* 判断是否为空 */
function insEmpty(val, desc) {
  //为空或全部为空格
  if (val.length < 1 || val.match(/^[ ]*$/)) {
    insShowToast(desc);
    return;
  }
  return true;
}

/* 监听输入长度 */
function keyLength(val, length) {
  var content = val;
  if (content.length > length) {//最后只能输入5位
    return content.substr(0, length);
  } else {
    return content;
  }
}

/* 监听输入数字 */
function keyNumber(val, length) {
  var content = val;
  content = content.replace(/[^\.\d]/g, '').replace('.', '');
  if (content.length > length) {//最后只能输入5位
    return content.substr(0, length);
  } else {
    return content;
  }
}

/* 监听输入数字(不能为0开头||不能大于输入值) */
function keyIntegerNumber(val, max) {
  var content = val;
  content = content.replace(/[^\.\d]/g, '').replace(/^0{1,}/g, '').replace('.', '');
  if (content > max) {//最后只能输入5位
    insShowToast('输入值不能大于' + max);
    return "";
  } else {
    return content;
  }
}

/* 监听输入输入中文 */
function keyChinese(val, length) {
  var content = val;
  // 必须为中文 (ue规则)
  if (content.length > length) {
    return content.substr(0, length);
  } else if (!/^[\u4e00-\u9fa5]+$/.test(content)) {
    return content.slice(0, content.length - 1);
  } else {
    return content;
  }
}

/* 判断两个对象是否相等 */
function diffObj(obj1, obj2) {
  var o1 = obj1 instanceof Object;
  var o2 = obj2 instanceof Object;
  if (!o1 || !o2) {/*  判断不是对象  */
    return obj1 === obj2;
  }
  if (Object.keys(obj1).length !== Object.keys(obj2).length) {
    return false;
    //Object.keys() 返回一个由对象的自身可枚举属性(key值)组成的数组,例如：数组返回下表：let arr = ["a", "b", "c"];console.log(Object.keys(arr))->0,1,2;
  }
  for (var attr in obj1) {
    var t1 = obj1[attr] instanceof Object;
    var t2 = obj2[attr] instanceof Object;
    if (t1 && t2) {
      return diff(obj1[attr], obj2[attr]);
    } else if (obj1[attr] !== obj2[attr]) {
      return false;
    }
  }
  return true;
}

/* 判断两个数组是否相等 */
function diffArr(array1, array2) {
  return array1.length == array2.length && array1.every(function (v, i) {
    return v === array2[i];
  });
}

/***/ }),
/* 50 */,
/* 51 */,
/* 52 */,
/* 53 */,
/* 54 */,
/* 55 */,
/* 56 */,
/* 57 */,
/* 58 */,
/* 59 */,
/* 60 */,
/* 61 */,
/* 62 */,
/* 63 */,
/* 64 */,
/* 65 */,
/* 66 */,
/* 67 */,
/* 68 */,
/* 69 */,
/* 70 */,
/* 71 */,
/* 72 */,
/* 73 */,
/* 74 */,
/* 75 */,
/* 76 */,
/* 77 */,
/* 78 */,
/* 79 */,
/* 80 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/static/qrcode/qr_doctor_logo.png ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "/static/qrcode/qr_doctor_logo.png";

/***/ }),
/* 81 */
/*!**********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/static/qrcode/qr_patient_logo.png ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "/static/qrcode/qr_patient_logo.png";

/***/ }),
/* 82 */,
/* 83 */,
/* 84 */,
/* 85 */,
/* 86 */,
/* 87 */,
/* 88 */,
/* 89 */,
/* 90 */,
/* 91 */,
/* 92 */,
/* 93 */,
/* 94 */,
/* 95 */,
/* 96 */,
/* 97 */,
/* 98 */,
/* 99 */,
/* 100 */,
/* 101 */,
/* 102 */,
/* 103 */,
/* 104 */,
/* 105 */,
/* 106 */,
/* 107 */,
/* 108 */,
/* 109 */,
/* 110 */,
/* 111 */,
/* 112 */,
/* 113 */,
/* 114 */,
/* 115 */,
/* 116 */,
/* 117 */,
/* 118 */,
/* 119 */,
/* 120 */,
/* 121 */,
/* 122 */,
/* 123 */,
/* 124 */,
/* 125 */,
/* 126 */,
/* 127 */,
/* 128 */,
/* 129 */,
/* 130 */,
/* 131 */,
/* 132 */,
/* 133 */,
/* 134 */,
/* 135 */,
/* 136 */,
/* 137 */,
/* 138 */
/*!********************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/utils/tool/index.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.timeRule = timeRule;exports.sendTimeRule = sendTimeRule;exports.computedNewMsgTime = computedNewMsgTime;exports.msgTimeRule = msgTimeRule;exports.grade = grade;exports.inquiry = inquiry; /* 咨询消息列表时间规则 */
function timeRule(date) {
  var moment = __webpack_require__(/*! moment */ 139);
  // let date = '2019-08-15 09:48:05'  //模拟后台返回时间
  var dateVal = moment(date).format('YYYY-MM-DD'); //得出后台时间年月日
  var currentDate = moment().format('YYYY-MM-DD'); //获取当天年月日
  var yearVal = moment(date).format('YYYY'); //得出后台的年份
  var currentYear = moment().format('YYYY'); //获取当天年份
  var hourMinute = moment(date).format('HH:mm'); //时分
  var monthDate = moment(date).format('MM-DD'); //月日
  if (dateVal == currentDate) {
    //判断是否为今天，当天的显示（时分
    return hourMinute;
  } else {
    //判断是否今年  当年的显示（月日）, 不是今年 未来时间与往年的显示（年月日）
    return yearVal == currentYear ? monthDate : dateVal;
  }
}

/* 拿上一条消息的时间与新的消息时间做对比 */
function sendTimeRule(lastTime, newTime) {
  var moment = __webpack_require__(/*! moment */ 139);
  var timeOut = 5 * 60 * 1000; //5分钟的毫秒
  // let lastTime = '2019-08-15 11:22:05'  //模拟消息发送时间
  // let newTime = '2019-08-15 11:26:05'  //模拟消息发送时间
  var sendStamp = moment(lastTime).valueOf(); //发送的时间戳
  var currentStamp = moment(newTime).valueOf(); //当前时间戳
  var hourMinute = moment(newTime).format('HH:mm'); //时分
  //是否大于5分钟 返回最新的时间 （时分）,否则不返回
  return currentStamp - sendStamp > timeOut ? hourMinute : false;
}

/* 计算消息前后时间(上一条时间，下一条时间) */
function computedNewMsgTime(last, next) {
  var moment = __webpack_require__(/*! moment */ 139);
  var lastTime = moment(last);
  var nextTime = moment(next);
  if (nextTime.diff(lastTime, 'minute') >= 5) {
    return true;
  } else {
    return false;
  }
}

/* 聊天消息时间规则 */
function msgTimeRule(date) {
  var moment = __webpack_require__(/*! moment */ 139);
  var dateVal = moment(date).format('YYYY-MM-DD'); //得出后台时间年月日
  var currentDate = moment().format('YYYY-MM-DD'); //获取当天年月日
  var yearVal = moment(date).format('YYYY'); //得出后台的年份
  var currentYear = moment().format('YYYY'); //获取当天年份
  var hourMinute = moment(date).format('HH:mm'); //时分
  var monthDate = moment(date).format('MM-DD HH:mm'); //月日
  var ymd = moment(date).format('YYYY-MM-DD HH:mm'); //月日
  if (dateVal == currentDate) {
    //判断是否为今天，当天的显示（时分
    return hourMinute;
  } else {
    //判断是否今年  当年的显示（月日时分）, 不是今年 未来时间与往年的显示（年月日）
    return yearVal == currentYear ? monthDate : ymd;
  }
}

/* 计算分数显示的颜色 */
function grade(conut) {
  if (conut >= 0 && conut <= 54) {
    return {
      name: "低危",
      color: "#2ACF91" };

  } else if (conut >= 55 && conut <= 74) {
    return {
      name: "中危",
      color: "#FFA600" };

  } else if (conut >= 75 && conut <= 100) {
    return {
      name: "高危",
      color: "#FF5957" };

  }
}

/* 咨询类型背景 */
function inquiry(type) {
  switch (type) {
    case "A": //图文
      return {
        name: "图文咨询",
        color: "#DA58FF" };

    case "B": //电话
      return {
        name: "电话咨询",
        color: "#3FC6FF" };

    case "C": //上门
      return {
        name: "上门咨询",
        color: "#FE9846" };

    case "D": //义诊
      return {
        name: "义诊活动",
        color: "#5FDC28" };

    case "E": //病房
      return {
        name: "病房服务",
        color: "#0E92F8" };}


}

/***/ }),
/* 139 */
/*!******************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/moment.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var require;//! moment.js
//! version : 2.29.1
//! authors : Tim Wood, Iskren Chernev, Moment.js contributors
//! license : MIT
//! momentjs.com

;(function (global, factory) {
   true ? module.exports = factory() :
  undefined;
})(this, function () {'use strict';

  var hookCallback;

  function hooks() {
    return hookCallback.apply(null, arguments);
  }

  // This is done to register the method called with moment()
  // without creating circular dependencies.
  function setHookCallback(callback) {
    hookCallback = callback;
  }

  function isArray(input) {
    return (
      input instanceof Array ||
      Object.prototype.toString.call(input) === '[object Array]');

  }

  function isObject(input) {
    // IE8 will treat undefined and null as object if it wasn't for
    // input != null
    return (
      input != null &&
      Object.prototype.toString.call(input) === '[object Object]');

  }

  function hasOwnProp(a, b) {
    return Object.prototype.hasOwnProperty.call(a, b);
  }

  function isObjectEmpty(obj) {
    if (Object.getOwnPropertyNames) {
      return Object.getOwnPropertyNames(obj).length === 0;
    } else {
      var k;
      for (k in obj) {
        if (hasOwnProp(obj, k)) {
          return false;
        }
      }
      return true;
    }
  }

  function isUndefined(input) {
    return input === void 0;
  }

  function isNumber(input) {
    return (
      typeof input === 'number' ||
      Object.prototype.toString.call(input) === '[object Number]');

  }

  function isDate(input) {
    return (
      input instanceof Date ||
      Object.prototype.toString.call(input) === '[object Date]');

  }

  function map(arr, fn) {
    var res = [],
    i;
    for (i = 0; i < arr.length; ++i) {
      res.push(fn(arr[i], i));
    }
    return res;
  }

  function extend(a, b) {
    for (var i in b) {
      if (hasOwnProp(b, i)) {
        a[i] = b[i];
      }
    }

    if (hasOwnProp(b, 'toString')) {
      a.toString = b.toString;
    }

    if (hasOwnProp(b, 'valueOf')) {
      a.valueOf = b.valueOf;
    }

    return a;
  }

  function createUTC(input, format, locale, strict) {
    return createLocalOrUTC(input, format, locale, strict, true).utc();
  }

  function defaultParsingFlags() {
    // We need to deep clone this object.
    return {
      empty: false,
      unusedTokens: [],
      unusedInput: [],
      overflow: -2,
      charsLeftOver: 0,
      nullInput: false,
      invalidEra: null,
      invalidMonth: null,
      invalidFormat: false,
      userInvalidated: false,
      iso: false,
      parsedDateParts: [],
      era: null,
      meridiem: null,
      rfc2822: false,
      weekdayMismatch: false };

  }

  function getParsingFlags(m) {
    if (m._pf == null) {
      m._pf = defaultParsingFlags();
    }
    return m._pf;
  }

  var some;
  if (Array.prototype.some) {
    some = Array.prototype.some;
  } else {
    some = function some(fun) {
      var t = Object(this),
      len = t.length >>> 0,
      i;

      for (i = 0; i < len; i++) {
        if (i in t && fun.call(this, t[i], i, t)) {
          return true;
        }
      }

      return false;
    };
  }

  function isValid(m) {
    if (m._isValid == null) {
      var flags = getParsingFlags(m),
      parsedParts = some.call(flags.parsedDateParts, function (i) {
        return i != null;
      }),
      isNowValid =
      !isNaN(m._d.getTime()) &&
      flags.overflow < 0 &&
      !flags.empty &&
      !flags.invalidEra &&
      !flags.invalidMonth &&
      !flags.invalidWeekday &&
      !flags.weekdayMismatch &&
      !flags.nullInput &&
      !flags.invalidFormat &&
      !flags.userInvalidated && (
      !flags.meridiem || flags.meridiem && parsedParts);

      if (m._strict) {
        isNowValid =
        isNowValid &&
        flags.charsLeftOver === 0 &&
        flags.unusedTokens.length === 0 &&
        flags.bigHour === undefined;
      }

      if (Object.isFrozen == null || !Object.isFrozen(m)) {
        m._isValid = isNowValid;
      } else {
        return isNowValid;
      }
    }
    return m._isValid;
  }

  function createInvalid(flags) {
    var m = createUTC(NaN);
    if (flags != null) {
      extend(getParsingFlags(m), flags);
    } else {
      getParsingFlags(m).userInvalidated = true;
    }

    return m;
  }

  // Plugins that add properties should also add the key here (null value),
  // so we can properly clone ourselves.
  var momentProperties = hooks.momentProperties = [],
  updateInProgress = false;

  function copyConfig(to, from) {
    var i, prop, val;

    if (!isUndefined(from._isAMomentObject)) {
      to._isAMomentObject = from._isAMomentObject;
    }
    if (!isUndefined(from._i)) {
      to._i = from._i;
    }
    if (!isUndefined(from._f)) {
      to._f = from._f;
    }
    if (!isUndefined(from._l)) {
      to._l = from._l;
    }
    if (!isUndefined(from._strict)) {
      to._strict = from._strict;
    }
    if (!isUndefined(from._tzm)) {
      to._tzm = from._tzm;
    }
    if (!isUndefined(from._isUTC)) {
      to._isUTC = from._isUTC;
    }
    if (!isUndefined(from._offset)) {
      to._offset = from._offset;
    }
    if (!isUndefined(from._pf)) {
      to._pf = getParsingFlags(from);
    }
    if (!isUndefined(from._locale)) {
      to._locale = from._locale;
    }

    if (momentProperties.length > 0) {
      for (i = 0; i < momentProperties.length; i++) {
        prop = momentProperties[i];
        val = from[prop];
        if (!isUndefined(val)) {
          to[prop] = val;
        }
      }
    }

    return to;
  }

  // Moment prototype object
  function Moment(config) {
    copyConfig(this, config);
    this._d = new Date(config._d != null ? config._d.getTime() : NaN);
    if (!this.isValid()) {
      this._d = new Date(NaN);
    }
    // Prevent infinite loop in case updateOffset creates new moment
    // objects.
    if (updateInProgress === false) {
      updateInProgress = true;
      hooks.updateOffset(this);
      updateInProgress = false;
    }
  }

  function isMoment(obj) {
    return (
      obj instanceof Moment || obj != null && obj._isAMomentObject != null);

  }

  function warn(msg) {
    if (
    hooks.suppressDeprecationWarnings === false &&
    typeof console !== 'undefined' &&
    console.warn)
    {
      console.warn('Deprecation warning: ' + msg);
    }
  }

  function deprecate(msg, fn) {
    var firstTime = true;

    return extend(function () {
      if (hooks.deprecationHandler != null) {
        hooks.deprecationHandler(null, msg);
      }
      if (firstTime) {
        var args = [],
        arg,
        i,
        key;
        for (i = 0; i < arguments.length; i++) {
          arg = '';
          if (typeof arguments[i] === 'object') {
            arg += '\n[' + i + '] ';
            for (key in arguments[0]) {
              if (hasOwnProp(arguments[0], key)) {
                arg += key + ': ' + arguments[0][key] + ', ';
              }
            }
            arg = arg.slice(0, -2); // Remove trailing comma and space
          } else {
            arg = arguments[i];
          }
          args.push(arg);
        }
        warn(
        msg +
        '\nArguments: ' +
        Array.prototype.slice.call(args).join('') +
        '\n' +
        new Error().stack);

        firstTime = false;
      }
      return fn.apply(this, arguments);
    }, fn);
  }

  var deprecations = {};

  function deprecateSimple(name, msg) {
    if (hooks.deprecationHandler != null) {
      hooks.deprecationHandler(name, msg);
    }
    if (!deprecations[name]) {
      warn(msg);
      deprecations[name] = true;
    }
  }

  hooks.suppressDeprecationWarnings = false;
  hooks.deprecationHandler = null;

  function isFunction(input) {
    return (
      typeof Function !== 'undefined' && input instanceof Function ||
      Object.prototype.toString.call(input) === '[object Function]');

  }

  function set(config) {
    var prop, i;
    for (i in config) {
      if (hasOwnProp(config, i)) {
        prop = config[i];
        if (isFunction(prop)) {
          this[i] = prop;
        } else {
          this['_' + i] = prop;
        }
      }
    }
    this._config = config;
    // Lenient ordinal parsing accepts just a number in addition to
    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.
    // TODO: Remove "ordinalParse" fallback in next major release.
    this._dayOfMonthOrdinalParseLenient = new RegExp(
    (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +
    '|' +
    /\d{1,2}/.source);

  }

  function mergeConfigs(parentConfig, childConfig) {
    var res = extend({}, parentConfig),
    prop;
    for (prop in childConfig) {
      if (hasOwnProp(childConfig, prop)) {
        if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {
          res[prop] = {};
          extend(res[prop], parentConfig[prop]);
          extend(res[prop], childConfig[prop]);
        } else if (childConfig[prop] != null) {
          res[prop] = childConfig[prop];
        } else {
          delete res[prop];
        }
      }
    }
    for (prop in parentConfig) {
      if (
      hasOwnProp(parentConfig, prop) &&
      !hasOwnProp(childConfig, prop) &&
      isObject(parentConfig[prop]))
      {
        // make sure changes to properties don't modify parent config
        res[prop] = extend({}, res[prop]);
      }
    }
    return res;
  }

  function Locale(config) {
    if (config != null) {
      this.set(config);
    }
  }

  var keys;

  if (Object.keys) {
    keys = Object.keys;
  } else {
    keys = function keys(obj) {
      var i,
      res = [];
      for (i in obj) {
        if (hasOwnProp(obj, i)) {
          res.push(i);
        }
      }
      return res;
    };
  }

  var defaultCalendar = {
    sameDay: '[Today at] LT',
    nextDay: '[Tomorrow at] LT',
    nextWeek: 'dddd [at] LT',
    lastDay: '[Yesterday at] LT',
    lastWeek: '[Last] dddd [at] LT',
    sameElse: 'L' };


  function calendar(key, mom, now) {
    var output = this._calendar[key] || this._calendar['sameElse'];
    return isFunction(output) ? output.call(mom, now) : output;
  }

  function zeroFill(number, targetLength, forceSign) {
    var absNumber = '' + Math.abs(number),
    zerosToFill = targetLength - absNumber.length,
    sign = number >= 0;
    return (
      (sign ? forceSign ? '+' : '' : '-') +
      Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) +
      absNumber);

  }

  var formattingTokens = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,
  localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,
  formatFunctions = {},
  formatTokenFunctions = {};

  // token:    'M'
  // padded:   ['MM', 2]
  // ordinal:  'Mo'
  // callback: function () { this.month() + 1 }
  function addFormatToken(token, padded, ordinal, callback) {
    var func = callback;
    if (typeof callback === 'string') {
      func = function func() {
        return this[callback]();
      };
    }
    if (token) {
      formatTokenFunctions[token] = func;
    }
    if (padded) {
      formatTokenFunctions[padded[0]] = function () {
        return zeroFill(func.apply(this, arguments), padded[1], padded[2]);
      };
    }
    if (ordinal) {
      formatTokenFunctions[ordinal] = function () {
        return this.localeData().ordinal(
        func.apply(this, arguments),
        token);

      };
    }
  }

  function removeFormattingTokens(input) {
    if (input.match(/\[[\s\S]/)) {
      return input.replace(/^\[|\]$/g, '');
    }
    return input.replace(/\\/g, '');
  }

  function makeFormatFunction(format) {
    var array = format.match(formattingTokens),
    i,
    length;

    for (i = 0, length = array.length; i < length; i++) {
      if (formatTokenFunctions[array[i]]) {
        array[i] = formatTokenFunctions[array[i]];
      } else {
        array[i] = removeFormattingTokens(array[i]);
      }
    }

    return function (mom) {
      var output = '',
      i;
      for (i = 0; i < length; i++) {
        output += isFunction(array[i]) ?
        array[i].call(mom, format) :
        array[i];
      }
      return output;
    };
  }

  // format date using native date object
  function formatMoment(m, format) {
    if (!m.isValid()) {
      return m.localeData().invalidDate();
    }

    format = expandFormat(format, m.localeData());
    formatFunctions[format] =
    formatFunctions[format] || makeFormatFunction(format);

    return formatFunctions[format](m);
  }

  function expandFormat(format, locale) {
    var i = 5;

    function replaceLongDateFormatTokens(input) {
      return locale.longDateFormat(input) || input;
    }

    localFormattingTokens.lastIndex = 0;
    while (i >= 0 && localFormattingTokens.test(format)) {
      format = format.replace(
      localFormattingTokens,
      replaceLongDateFormatTokens);

      localFormattingTokens.lastIndex = 0;
      i -= 1;
    }

    return format;
  }

  var defaultLongDateFormat = {
    LTS: 'h:mm:ss A',
    LT: 'h:mm A',
    L: 'MM/DD/YYYY',
    LL: 'MMMM D, YYYY',
    LLL: 'MMMM D, YYYY h:mm A',
    LLLL: 'dddd, MMMM D, YYYY h:mm A' };


  function longDateFormat(key) {
    var format = this._longDateFormat[key],
    formatUpper = this._longDateFormat[key.toUpperCase()];

    if (format || !formatUpper) {
      return format;
    }

    this._longDateFormat[key] = formatUpper.
    match(formattingTokens).
    map(function (tok) {
      if (
      tok === 'MMMM' ||
      tok === 'MM' ||
      tok === 'DD' ||
      tok === 'dddd')
      {
        return tok.slice(1);
      }
      return tok;
    }).
    join('');

    return this._longDateFormat[key];
  }

  var defaultInvalidDate = 'Invalid date';

  function invalidDate() {
    return this._invalidDate;
  }

  var defaultOrdinal = '%d',
  defaultDayOfMonthOrdinalParse = /\d{1,2}/;

  function ordinal(number) {
    return this._ordinal.replace('%d', number);
  }

  var defaultRelativeTime = {
    future: 'in %s',
    past: '%s ago',
    s: 'a few seconds',
    ss: '%d seconds',
    m: 'a minute',
    mm: '%d minutes',
    h: 'an hour',
    hh: '%d hours',
    d: 'a day',
    dd: '%d days',
    w: 'a week',
    ww: '%d weeks',
    M: 'a month',
    MM: '%d months',
    y: 'a year',
    yy: '%d years' };


  function relativeTime(number, withoutSuffix, string, isFuture) {
    var output = this._relativeTime[string];
    return isFunction(output) ?
    output(number, withoutSuffix, string, isFuture) :
    output.replace(/%d/i, number);
  }

  function pastFuture(diff, output) {
    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];
    return isFunction(format) ? format(output) : format.replace(/%s/i, output);
  }

  var aliases = {};

  function addUnitAlias(unit, shorthand) {
    var lowerCase = unit.toLowerCase();
    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;
  }

  function normalizeUnits(units) {
    return typeof units === 'string' ?
    aliases[units] || aliases[units.toLowerCase()] :
    undefined;
  }

  function normalizeObjectUnits(inputObject) {
    var normalizedInput = {},
    normalizedProp,
    prop;

    for (prop in inputObject) {
      if (hasOwnProp(inputObject, prop)) {
        normalizedProp = normalizeUnits(prop);
        if (normalizedProp) {
          normalizedInput[normalizedProp] = inputObject[prop];
        }
      }
    }

    return normalizedInput;
  }

  var priorities = {};

  function addUnitPriority(unit, priority) {
    priorities[unit] = priority;
  }

  function getPrioritizedUnits(unitsObj) {
    var units = [],
    u;
    for (u in unitsObj) {
      if (hasOwnProp(unitsObj, u)) {
        units.push({ unit: u, priority: priorities[u] });
      }
    }
    units.sort(function (a, b) {
      return a.priority - b.priority;
    });
    return units;
  }

  function isLeapYear(year) {
    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;
  }

  function absFloor(number) {
    if (number < 0) {
      // -0 -> 0
      return Math.ceil(number) || 0;
    } else {
      return Math.floor(number);
    }
  }

  function toInt(argumentForCoercion) {
    var coercedNumber = +argumentForCoercion,
    value = 0;

    if (coercedNumber !== 0 && isFinite(coercedNumber)) {
      value = absFloor(coercedNumber);
    }

    return value;
  }

  function makeGetSet(unit, keepTime) {
    return function (value) {
      if (value != null) {
        set$1(this, unit, value);
        hooks.updateOffset(this, keepTime);
        return this;
      } else {
        return get(this, unit);
      }
    };
  }

  function get(mom, unit) {
    return mom.isValid() ?
    mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() :
    NaN;
  }

  function set$1(mom, unit, value) {
    if (mom.isValid() && !isNaN(value)) {
      if (
      unit === 'FullYear' &&
      isLeapYear(mom.year()) &&
      mom.month() === 1 &&
      mom.date() === 29)
      {
        value = toInt(value);
        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](
        value,
        mom.month(),
        daysInMonth(value, mom.month()));

      } else {
        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);
      }
    }
  }

  // MOMENTS

  function stringGet(units) {
    units = normalizeUnits(units);
    if (isFunction(this[units])) {
      return this[units]();
    }
    return this;
  }

  function stringSet(units, value) {
    if (typeof units === 'object') {
      units = normalizeObjectUnits(units);
      var prioritized = getPrioritizedUnits(units),
      i;
      for (i = 0; i < prioritized.length; i++) {
        this[prioritized[i].unit](units[prioritized[i].unit]);
      }
    } else {
      units = normalizeUnits(units);
      if (isFunction(this[units])) {
        return this[units](value);
      }
    }
    return this;
  }

  var match1 = /\d/, //       0 - 9
  match2 = /\d\d/, //      00 - 99
  match3 = /\d{3}/, //     000 - 999
  match4 = /\d{4}/, //    0000 - 9999
  match6 = /[+-]?\d{6}/, // -999999 - 999999
  match1to2 = /\d\d?/, //       0 - 99
  match3to4 = /\d\d\d\d?/, //     999 - 9999
  match5to6 = /\d\d\d\d\d\d?/, //   99999 - 999999
  match1to3 = /\d{1,3}/, //       0 - 999
  match1to4 = /\d{1,4}/, //       0 - 9999
  match1to6 = /[+-]?\d{1,6}/, // -999999 - 999999
  matchUnsigned = /\d+/, //       0 - inf
  matchSigned = /[+-]?\d+/, //    -inf - inf
  matchOffset = /Z|[+-]\d\d:?\d\d/gi, // +00:00 -00:00 +0000 -0000 or Z
  matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi, // +00 -00 +00:00 -00:00 +0000 -0000 or Z
  matchTimestamp = /[+-]?\d+(\.\d{1,3})?/, // 123456789 123456789.123
  // any word (or two) characters or numbers including two/three word month in arabic.
  // includes scottish gaelic two word and hyphenated months
  matchWord = /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i,
  regexes;

  regexes = {};

  function addRegexToken(token, regex, strictRegex) {
    regexes[token] = isFunction(regex) ?
    regex :
    function (isStrict, localeData) {
      return isStrict && strictRegex ? strictRegex : regex;
    };
  }

  function getParseRegexForToken(token, config) {
    if (!hasOwnProp(regexes, token)) {
      return new RegExp(unescapeFormat(token));
    }

    return regexes[token](config._strict, config._locale);
  }

  // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript
  function unescapeFormat(s) {
    return regexEscape(
    s.
    replace('\\', '').
    replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (
    matched,
    p1,
    p2,
    p3,
    p4)
    {
      return p1 || p2 || p3 || p4;
    }));

  }

  function regexEscape(s) {
    return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
  }

  var tokens = {};

  function addParseToken(token, callback) {
    var i,
    func = callback;
    if (typeof token === 'string') {
      token = [token];
    }
    if (isNumber(callback)) {
      func = function func(input, array) {
        array[callback] = toInt(input);
      };
    }
    for (i = 0; i < token.length; i++) {
      tokens[token[i]] = func;
    }
  }

  function addWeekParseToken(token, callback) {
    addParseToken(token, function (input, array, config, token) {
      config._w = config._w || {};
      callback(input, config._w, config, token);
    });
  }

  function addTimeToArrayFromToken(token, input, config) {
    if (input != null && hasOwnProp(tokens, token)) {
      tokens[token](input, config._a, config, token);
    }
  }

  var YEAR = 0,
  MONTH = 1,
  DATE = 2,
  HOUR = 3,
  MINUTE = 4,
  SECOND = 5,
  MILLISECOND = 6,
  WEEK = 7,
  WEEKDAY = 8;

  function mod(n, x) {
    return (n % x + x) % x;
  }

  var indexOf;

  if (Array.prototype.indexOf) {
    indexOf = Array.prototype.indexOf;
  } else {
    indexOf = function indexOf(o) {
      // I know
      var i;
      for (i = 0; i < this.length; ++i) {
        if (this[i] === o) {
          return i;
        }
      }
      return -1;
    };
  }

  function daysInMonth(year, month) {
    if (isNaN(year) || isNaN(month)) {
      return NaN;
    }
    var modMonth = mod(month, 12);
    year += (month - modMonth) / 12;
    return modMonth === 1 ?
    isLeapYear(year) ?
    29 :
    28 :
    31 - modMonth % 7 % 2;
  }

  // FORMATTING

  addFormatToken('M', ['MM', 2], 'Mo', function () {
    return this.month() + 1;
  });

  addFormatToken('MMM', 0, 0, function (format) {
    return this.localeData().monthsShort(this, format);
  });

  addFormatToken('MMMM', 0, 0, function (format) {
    return this.localeData().months(this, format);
  });

  // ALIASES

  addUnitAlias('month', 'M');

  // PRIORITY

  addUnitPriority('month', 8);

  // PARSING

  addRegexToken('M', match1to2);
  addRegexToken('MM', match1to2, match2);
  addRegexToken('MMM', function (isStrict, locale) {
    return locale.monthsShortRegex(isStrict);
  });
  addRegexToken('MMMM', function (isStrict, locale) {
    return locale.monthsRegex(isStrict);
  });

  addParseToken(['M', 'MM'], function (input, array) {
    array[MONTH] = toInt(input) - 1;
  });

  addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {
    var month = config._locale.monthsParse(input, token, config._strict);
    // if we didn't find a month name, mark the date as invalid.
    if (month != null) {
      array[MONTH] = month;
    } else {
      getParsingFlags(config).invalidMonth = input;
    }
  });

  // LOCALES

  var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split(
  '_'),

  defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split(
  '_'),

  MONTHS_IN_FORMAT = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/,
  defaultMonthsShortRegex = matchWord,
  defaultMonthsRegex = matchWord;

  function localeMonths(m, format) {
    if (!m) {
      return isArray(this._months) ?
      this._months :
      this._months['standalone'];
    }
    return isArray(this._months) ?
    this._months[m.month()] :
    this._months[
    (this._months.isFormat || MONTHS_IN_FORMAT).test(format) ?
    'format' :
    'standalone'][
    m.month()];
  }

  function localeMonthsShort(m, format) {
    if (!m) {
      return isArray(this._monthsShort) ?
      this._monthsShort :
      this._monthsShort['standalone'];
    }
    return isArray(this._monthsShort) ?
    this._monthsShort[m.month()] :
    this._monthsShort[
    MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][
    m.month()];
  }

  function handleStrictParse(monthName, format, strict) {
    var i,
    ii,
    mom,
    llc = monthName.toLocaleLowerCase();
    if (!this._monthsParse) {
      // this is not used
      this._monthsParse = [];
      this._longMonthsParse = [];
      this._shortMonthsParse = [];
      for (i = 0; i < 12; ++i) {
        mom = createUTC([2000, i]);
        this._shortMonthsParse[i] = this.monthsShort(
        mom,
        '').
        toLocaleLowerCase();
        this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();
      }
    }

    if (strict) {
      if (format === 'MMM') {
        ii = indexOf.call(this._shortMonthsParse, llc);
        return ii !== -1 ? ii : null;
      } else {
        ii = indexOf.call(this._longMonthsParse, llc);
        return ii !== -1 ? ii : null;
      }
    } else {
      if (format === 'MMM') {
        ii = indexOf.call(this._shortMonthsParse, llc);
        if (ii !== -1) {
          return ii;
        }
        ii = indexOf.call(this._longMonthsParse, llc);
        return ii !== -1 ? ii : null;
      } else {
        ii = indexOf.call(this._longMonthsParse, llc);
        if (ii !== -1) {
          return ii;
        }
        ii = indexOf.call(this._shortMonthsParse, llc);
        return ii !== -1 ? ii : null;
      }
    }
  }

  function localeMonthsParse(monthName, format, strict) {
    var i, mom, regex;

    if (this._monthsParseExact) {
      return handleStrictParse.call(this, monthName, format, strict);
    }

    if (!this._monthsParse) {
      this._monthsParse = [];
      this._longMonthsParse = [];
      this._shortMonthsParse = [];
    }

    // TODO: add sorting
    // Sorting makes sure if one month (or abbr) is a prefix of another
    // see sorting in computeMonthsParse
    for (i = 0; i < 12; i++) {
      // make the regex if we don't have it already
      mom = createUTC([2000, i]);
      if (strict && !this._longMonthsParse[i]) {
        this._longMonthsParse[i] = new RegExp(
        '^' + this.months(mom, '').replace('.', '') + '$',
        'i');

        this._shortMonthsParse[i] = new RegExp(
        '^' + this.monthsShort(mom, '').replace('.', '') + '$',
        'i');

      }
      if (!strict && !this._monthsParse[i]) {
        regex =
        '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');
        this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');
      }
      // test the regex
      if (
      strict &&
      format === 'MMMM' &&
      this._longMonthsParse[i].test(monthName))
      {
        return i;
      } else if (
      strict &&
      format === 'MMM' &&
      this._shortMonthsParse[i].test(monthName))
      {
        return i;
      } else if (!strict && this._monthsParse[i].test(monthName)) {
        return i;
      }
    }
  }

  // MOMENTS

  function setMonth(mom, value) {
    var dayOfMonth;

    if (!mom.isValid()) {
      // No op
      return mom;
    }

    if (typeof value === 'string') {
      if (/^\d+$/.test(value)) {
        value = toInt(value);
      } else {
        value = mom.localeData().monthsParse(value);
        // TODO: Another silent failure?
        if (!isNumber(value)) {
          return mom;
        }
      }
    }

    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));
    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);
    return mom;
  }

  function getSetMonth(value) {
    if (value != null) {
      setMonth(this, value);
      hooks.updateOffset(this, true);
      return this;
    } else {
      return get(this, 'Month');
    }
  }

  function getDaysInMonth() {
    return daysInMonth(this.year(), this.month());
  }

  function monthsShortRegex(isStrict) {
    if (this._monthsParseExact) {
      if (!hasOwnProp(this, '_monthsRegex')) {
        computeMonthsParse.call(this);
      }
      if (isStrict) {
        return this._monthsShortStrictRegex;
      } else {
        return this._monthsShortRegex;
      }
    } else {
      if (!hasOwnProp(this, '_monthsShortRegex')) {
        this._monthsShortRegex = defaultMonthsShortRegex;
      }
      return this._monthsShortStrictRegex && isStrict ?
      this._monthsShortStrictRegex :
      this._monthsShortRegex;
    }
  }

  function monthsRegex(isStrict) {
    if (this._monthsParseExact) {
      if (!hasOwnProp(this, '_monthsRegex')) {
        computeMonthsParse.call(this);
      }
      if (isStrict) {
        return this._monthsStrictRegex;
      } else {
        return this._monthsRegex;
      }
    } else {
      if (!hasOwnProp(this, '_monthsRegex')) {
        this._monthsRegex = defaultMonthsRegex;
      }
      return this._monthsStrictRegex && isStrict ?
      this._monthsStrictRegex :
      this._monthsRegex;
    }
  }

  function computeMonthsParse() {
    function cmpLenRev(a, b) {
      return b.length - a.length;
    }

    var shortPieces = [],
    longPieces = [],
    mixedPieces = [],
    i,
    mom;
    for (i = 0; i < 12; i++) {
      // make the regex if we don't have it already
      mom = createUTC([2000, i]);
      shortPieces.push(this.monthsShort(mom, ''));
      longPieces.push(this.months(mom, ''));
      mixedPieces.push(this.months(mom, ''));
      mixedPieces.push(this.monthsShort(mom, ''));
    }
    // Sorting makes sure if one month (or abbr) is a prefix of another it
    // will match the longer piece.
    shortPieces.sort(cmpLenRev);
    longPieces.sort(cmpLenRev);
    mixedPieces.sort(cmpLenRev);
    for (i = 0; i < 12; i++) {
      shortPieces[i] = regexEscape(shortPieces[i]);
      longPieces[i] = regexEscape(longPieces[i]);
    }
    for (i = 0; i < 24; i++) {
      mixedPieces[i] = regexEscape(mixedPieces[i]);
    }

    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
    this._monthsShortRegex = this._monthsRegex;
    this._monthsStrictRegex = new RegExp(
    '^(' + longPieces.join('|') + ')',
    'i');

    this._monthsShortStrictRegex = new RegExp(
    '^(' + shortPieces.join('|') + ')',
    'i');

  }

  // FORMATTING

  addFormatToken('Y', 0, 0, function () {
    var y = this.year();
    return y <= 9999 ? zeroFill(y, 4) : '+' + y;
  });

  addFormatToken(0, ['YY', 2], 0, function () {
    return this.year() % 100;
  });

  addFormatToken(0, ['YYYY', 4], 0, 'year');
  addFormatToken(0, ['YYYYY', 5], 0, 'year');
  addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');

  // ALIASES

  addUnitAlias('year', 'y');

  // PRIORITIES

  addUnitPriority('year', 1);

  // PARSING

  addRegexToken('Y', matchSigned);
  addRegexToken('YY', match1to2, match2);
  addRegexToken('YYYY', match1to4, match4);
  addRegexToken('YYYYY', match1to6, match6);
  addRegexToken('YYYYYY', match1to6, match6);

  addParseToken(['YYYYY', 'YYYYYY'], YEAR);
  addParseToken('YYYY', function (input, array) {
    array[YEAR] =
    input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);
  });
  addParseToken('YY', function (input, array) {
    array[YEAR] = hooks.parseTwoDigitYear(input);
  });
  addParseToken('Y', function (input, array) {
    array[YEAR] = parseInt(input, 10);
  });

  // HELPERS

  function daysInYear(year) {
    return isLeapYear(year) ? 366 : 365;
  }

  // HOOKS

  hooks.parseTwoDigitYear = function (input) {
    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);
  };

  // MOMENTS

  var getSetYear = makeGetSet('FullYear', true);

  function getIsLeapYear() {
    return isLeapYear(this.year());
  }

  function createDate(y, m, d, h, M, s, ms) {
    // can't just apply() to create a date:
    // https://stackoverflow.com/q/181348
    var date;
    // the date constructor remaps years 0-99 to 1900-1999
    if (y < 100 && y >= 0) {
      // preserve leap years using a full 400 year cycle, then reset
      date = new Date(y + 400, m, d, h, M, s, ms);
      if (isFinite(date.getFullYear())) {
        date.setFullYear(y);
      }
    } else {
      date = new Date(y, m, d, h, M, s, ms);
    }

    return date;
  }

  function createUTCDate(y) {
    var date, args;
    // the Date.UTC function remaps years 0-99 to 1900-1999
    if (y < 100 && y >= 0) {
      args = Array.prototype.slice.call(arguments);
      // preserve leap years using a full 400 year cycle, then reset
      args[0] = y + 400;
      date = new Date(Date.UTC.apply(null, args));
      if (isFinite(date.getUTCFullYear())) {
        date.setUTCFullYear(y);
      }
    } else {
      date = new Date(Date.UTC.apply(null, arguments));
    }

    return date;
  }

  // start-of-first-week - start-of-year
  function firstWeekOffset(year, dow, doy) {
    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)
    fwd = 7 + dow - doy,
    // first-week day local weekday -- which local weekday is fwd
    fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;

    return -fwdlw + fwd - 1;
  }

  // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday
  function dayOfYearFromWeeks(year, week, weekday, dow, doy) {
    var localWeekday = (7 + weekday - dow) % 7,
    weekOffset = firstWeekOffset(year, dow, doy),
    dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,
    resYear,
    resDayOfYear;

    if (dayOfYear <= 0) {
      resYear = year - 1;
      resDayOfYear = daysInYear(resYear) + dayOfYear;
    } else if (dayOfYear > daysInYear(year)) {
      resYear = year + 1;
      resDayOfYear = dayOfYear - daysInYear(year);
    } else {
      resYear = year;
      resDayOfYear = dayOfYear;
    }

    return {
      year: resYear,
      dayOfYear: resDayOfYear };

  }

  function weekOfYear(mom, dow, doy) {
    var weekOffset = firstWeekOffset(mom.year(), dow, doy),
    week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,
    resWeek,
    resYear;

    if (week < 1) {
      resYear = mom.year() - 1;
      resWeek = week + weeksInYear(resYear, dow, doy);
    } else if (week > weeksInYear(mom.year(), dow, doy)) {
      resWeek = week - weeksInYear(mom.year(), dow, doy);
      resYear = mom.year() + 1;
    } else {
      resYear = mom.year();
      resWeek = week;
    }

    return {
      week: resWeek,
      year: resYear };

  }

  function weeksInYear(year, dow, doy) {
    var weekOffset = firstWeekOffset(year, dow, doy),
    weekOffsetNext = firstWeekOffset(year + 1, dow, doy);
    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;
  }

  // FORMATTING

  addFormatToken('w', ['ww', 2], 'wo', 'week');
  addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');

  // ALIASES

  addUnitAlias('week', 'w');
  addUnitAlias('isoWeek', 'W');

  // PRIORITIES

  addUnitPriority('week', 5);
  addUnitPriority('isoWeek', 5);

  // PARSING

  addRegexToken('w', match1to2);
  addRegexToken('ww', match1to2, match2);
  addRegexToken('W', match1to2);
  addRegexToken('WW', match1to2, match2);

  addWeekParseToken(['w', 'ww', 'W', 'WW'], function (
  input,
  week,
  config,
  token)
  {
    week[token.substr(0, 1)] = toInt(input);
  });

  // HELPERS

  // LOCALES

  function localeWeek(mom) {
    return weekOfYear(mom, this._week.dow, this._week.doy).week;
  }

  var defaultLocaleWeek = {
    dow: 0, // Sunday is the first day of the week.
    doy: 6 // The week that contains Jan 6th is the first week of the year.
  };

  function localeFirstDayOfWeek() {
    return this._week.dow;
  }

  function localeFirstDayOfYear() {
    return this._week.doy;
  }

  // MOMENTS

  function getSetWeek(input) {
    var week = this.localeData().week(this);
    return input == null ? week : this.add((input - week) * 7, 'd');
  }

  function getSetISOWeek(input) {
    var week = weekOfYear(this, 1, 4).week;
    return input == null ? week : this.add((input - week) * 7, 'd');
  }

  // FORMATTING

  addFormatToken('d', 0, 'do', 'day');

  addFormatToken('dd', 0, 0, function (format) {
    return this.localeData().weekdaysMin(this, format);
  });

  addFormatToken('ddd', 0, 0, function (format) {
    return this.localeData().weekdaysShort(this, format);
  });

  addFormatToken('dddd', 0, 0, function (format) {
    return this.localeData().weekdays(this, format);
  });

  addFormatToken('e', 0, 0, 'weekday');
  addFormatToken('E', 0, 0, 'isoWeekday');

  // ALIASES

  addUnitAlias('day', 'd');
  addUnitAlias('weekday', 'e');
  addUnitAlias('isoWeekday', 'E');

  // PRIORITY
  addUnitPriority('day', 11);
  addUnitPriority('weekday', 11);
  addUnitPriority('isoWeekday', 11);

  // PARSING

  addRegexToken('d', match1to2);
  addRegexToken('e', match1to2);
  addRegexToken('E', match1to2);
  addRegexToken('dd', function (isStrict, locale) {
    return locale.weekdaysMinRegex(isStrict);
  });
  addRegexToken('ddd', function (isStrict, locale) {
    return locale.weekdaysShortRegex(isStrict);
  });
  addRegexToken('dddd', function (isStrict, locale) {
    return locale.weekdaysRegex(isStrict);
  });

  addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {
    var weekday = config._locale.weekdaysParse(input, token, config._strict);
    // if we didn't get a weekday name, mark the date as invalid
    if (weekday != null) {
      week.d = weekday;
    } else {
      getParsingFlags(config).invalidWeekday = input;
    }
  });

  addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {
    week[token] = toInt(input);
  });

  // HELPERS

  function parseWeekday(input, locale) {
    if (typeof input !== 'string') {
      return input;
    }

    if (!isNaN(input)) {
      return parseInt(input, 10);
    }

    input = locale.weekdaysParse(input);
    if (typeof input === 'number') {
      return input;
    }

    return null;
  }

  function parseIsoWeekday(input, locale) {
    if (typeof input === 'string') {
      return locale.weekdaysParse(input) % 7 || 7;
    }
    return isNaN(input) ? null : input;
  }

  // LOCALES
  function shiftWeekdays(ws, n) {
    return ws.slice(n, 7).concat(ws.slice(0, n));
  }

  var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
  '_'),

  defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
  defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
  defaultWeekdaysRegex = matchWord,
  defaultWeekdaysShortRegex = matchWord,
  defaultWeekdaysMinRegex = matchWord;

  function localeWeekdays(m, format) {
    var weekdays = isArray(this._weekdays) ?
    this._weekdays :
    this._weekdays[
    m && m !== true && this._weekdays.isFormat.test(format) ?
    'format' :
    'standalone'];

    return m === true ?
    shiftWeekdays(weekdays, this._week.dow) :
    m ?
    weekdays[m.day()] :
    weekdays;
  }

  function localeWeekdaysShort(m) {
    return m === true ?
    shiftWeekdays(this._weekdaysShort, this._week.dow) :
    m ?
    this._weekdaysShort[m.day()] :
    this._weekdaysShort;
  }

  function localeWeekdaysMin(m) {
    return m === true ?
    shiftWeekdays(this._weekdaysMin, this._week.dow) :
    m ?
    this._weekdaysMin[m.day()] :
    this._weekdaysMin;
  }

  function handleStrictParse$1(weekdayName, format, strict) {
    var i,
    ii,
    mom,
    llc = weekdayName.toLocaleLowerCase();
    if (!this._weekdaysParse) {
      this._weekdaysParse = [];
      this._shortWeekdaysParse = [];
      this._minWeekdaysParse = [];

      for (i = 0; i < 7; ++i) {
        mom = createUTC([2000, 1]).day(i);
        this._minWeekdaysParse[i] = this.weekdaysMin(
        mom,
        '').
        toLocaleLowerCase();
        this._shortWeekdaysParse[i] = this.weekdaysShort(
        mom,
        '').
        toLocaleLowerCase();
        this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();
      }
    }

    if (strict) {
      if (format === 'dddd') {
        ii = indexOf.call(this._weekdaysParse, llc);
        return ii !== -1 ? ii : null;
      } else if (format === 'ddd') {
        ii = indexOf.call(this._shortWeekdaysParse, llc);
        return ii !== -1 ? ii : null;
      } else {
        ii = indexOf.call(this._minWeekdaysParse, llc);
        return ii !== -1 ? ii : null;
      }
    } else {
      if (format === 'dddd') {
        ii = indexOf.call(this._weekdaysParse, llc);
        if (ii !== -1) {
          return ii;
        }
        ii = indexOf.call(this._shortWeekdaysParse, llc);
        if (ii !== -1) {
          return ii;
        }
        ii = indexOf.call(this._minWeekdaysParse, llc);
        return ii !== -1 ? ii : null;
      } else if (format === 'ddd') {
        ii = indexOf.call(this._shortWeekdaysParse, llc);
        if (ii !== -1) {
          return ii;
        }
        ii = indexOf.call(this._weekdaysParse, llc);
        if (ii !== -1) {
          return ii;
        }
        ii = indexOf.call(this._minWeekdaysParse, llc);
        return ii !== -1 ? ii : null;
      } else {
        ii = indexOf.call(this._minWeekdaysParse, llc);
        if (ii !== -1) {
          return ii;
        }
        ii = indexOf.call(this._weekdaysParse, llc);
        if (ii !== -1) {
          return ii;
        }
        ii = indexOf.call(this._shortWeekdaysParse, llc);
        return ii !== -1 ? ii : null;
      }
    }
  }

  function localeWeekdaysParse(weekdayName, format, strict) {
    var i, mom, regex;

    if (this._weekdaysParseExact) {
      return handleStrictParse$1.call(this, weekdayName, format, strict);
    }

    if (!this._weekdaysParse) {
      this._weekdaysParse = [];
      this._minWeekdaysParse = [];
      this._shortWeekdaysParse = [];
      this._fullWeekdaysParse = [];
    }

    for (i = 0; i < 7; i++) {
      // make the regex if we don't have it already

      mom = createUTC([2000, 1]).day(i);
      if (strict && !this._fullWeekdaysParse[i]) {
        this._fullWeekdaysParse[i] = new RegExp(
        '^' + this.weekdays(mom, '').replace('.', '\\.?') + '$',
        'i');

        this._shortWeekdaysParse[i] = new RegExp(
        '^' + this.weekdaysShort(mom, '').replace('.', '\\.?') + '$',
        'i');

        this._minWeekdaysParse[i] = new RegExp(
        '^' + this.weekdaysMin(mom, '').replace('.', '\\.?') + '$',
        'i');

      }
      if (!this._weekdaysParse[i]) {
        regex =
        '^' +
        this.weekdays(mom, '') +
        '|^' +
        this.weekdaysShort(mom, '') +
        '|^' +
        this.weekdaysMin(mom, '');
        this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');
      }
      // test the regex
      if (
      strict &&
      format === 'dddd' &&
      this._fullWeekdaysParse[i].test(weekdayName))
      {
        return i;
      } else if (
      strict &&
      format === 'ddd' &&
      this._shortWeekdaysParse[i].test(weekdayName))
      {
        return i;
      } else if (
      strict &&
      format === 'dd' &&
      this._minWeekdaysParse[i].test(weekdayName))
      {
        return i;
      } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {
        return i;
      }
    }
  }

  // MOMENTS

  function getSetDayOfWeek(input) {
    if (!this.isValid()) {
      return input != null ? this : NaN;
    }
    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
    if (input != null) {
      input = parseWeekday(input, this.localeData());
      return this.add(input - day, 'd');
    } else {
      return day;
    }
  }

  function getSetLocaleDayOfWeek(input) {
    if (!this.isValid()) {
      return input != null ? this : NaN;
    }
    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
    return input == null ? weekday : this.add(input - weekday, 'd');
  }

  function getSetISODayOfWeek(input) {
    if (!this.isValid()) {
      return input != null ? this : NaN;
    }

    // behaves the same as moment#day except
    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
    // as a setter, sunday should belong to the previous week.

    if (input != null) {
      var weekday = parseIsoWeekday(input, this.localeData());
      return this.day(this.day() % 7 ? weekday : weekday - 7);
    } else {
      return this.day() || 7;
    }
  }

  function weekdaysRegex(isStrict) {
    if (this._weekdaysParseExact) {
      if (!hasOwnProp(this, '_weekdaysRegex')) {
        computeWeekdaysParse.call(this);
      }
      if (isStrict) {
        return this._weekdaysStrictRegex;
      } else {
        return this._weekdaysRegex;
      }
    } else {
      if (!hasOwnProp(this, '_weekdaysRegex')) {
        this._weekdaysRegex = defaultWeekdaysRegex;
      }
      return this._weekdaysStrictRegex && isStrict ?
      this._weekdaysStrictRegex :
      this._weekdaysRegex;
    }
  }

  function weekdaysShortRegex(isStrict) {
    if (this._weekdaysParseExact) {
      if (!hasOwnProp(this, '_weekdaysRegex')) {
        computeWeekdaysParse.call(this);
      }
      if (isStrict) {
        return this._weekdaysShortStrictRegex;
      } else {
        return this._weekdaysShortRegex;
      }
    } else {
      if (!hasOwnProp(this, '_weekdaysShortRegex')) {
        this._weekdaysShortRegex = defaultWeekdaysShortRegex;
      }
      return this._weekdaysShortStrictRegex && isStrict ?
      this._weekdaysShortStrictRegex :
      this._weekdaysShortRegex;
    }
  }

  function weekdaysMinRegex(isStrict) {
    if (this._weekdaysParseExact) {
      if (!hasOwnProp(this, '_weekdaysRegex')) {
        computeWeekdaysParse.call(this);
      }
      if (isStrict) {
        return this._weekdaysMinStrictRegex;
      } else {
        return this._weekdaysMinRegex;
      }
    } else {
      if (!hasOwnProp(this, '_weekdaysMinRegex')) {
        this._weekdaysMinRegex = defaultWeekdaysMinRegex;
      }
      return this._weekdaysMinStrictRegex && isStrict ?
      this._weekdaysMinStrictRegex :
      this._weekdaysMinRegex;
    }
  }

  function computeWeekdaysParse() {
    function cmpLenRev(a, b) {
      return b.length - a.length;
    }

    var minPieces = [],
    shortPieces = [],
    longPieces = [],
    mixedPieces = [],
    i,
    mom,
    minp,
    shortp,
    longp;
    for (i = 0; i < 7; i++) {
      // make the regex if we don't have it already
      mom = createUTC([2000, 1]).day(i);
      minp = regexEscape(this.weekdaysMin(mom, ''));
      shortp = regexEscape(this.weekdaysShort(mom, ''));
      longp = regexEscape(this.weekdays(mom, ''));
      minPieces.push(minp);
      shortPieces.push(shortp);
      longPieces.push(longp);
      mixedPieces.push(minp);
      mixedPieces.push(shortp);
      mixedPieces.push(longp);
    }
    // Sorting makes sure if one weekday (or abbr) is a prefix of another it
    // will match the longer piece.
    minPieces.sort(cmpLenRev);
    shortPieces.sort(cmpLenRev);
    longPieces.sort(cmpLenRev);
    mixedPieces.sort(cmpLenRev);

    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
    this._weekdaysShortRegex = this._weekdaysRegex;
    this._weekdaysMinRegex = this._weekdaysRegex;

    this._weekdaysStrictRegex = new RegExp(
    '^(' + longPieces.join('|') + ')',
    'i');

    this._weekdaysShortStrictRegex = new RegExp(
    '^(' + shortPieces.join('|') + ')',
    'i');

    this._weekdaysMinStrictRegex = new RegExp(
    '^(' + minPieces.join('|') + ')',
    'i');

  }

  // FORMATTING

  function hFormat() {
    return this.hours() % 12 || 12;
  }

  function kFormat() {
    return this.hours() || 24;
  }

  addFormatToken('H', ['HH', 2], 0, 'hour');
  addFormatToken('h', ['hh', 2], 0, hFormat);
  addFormatToken('k', ['kk', 2], 0, kFormat);

  addFormatToken('hmm', 0, 0, function () {
    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);
  });

  addFormatToken('hmmss', 0, 0, function () {
    return (
      '' +
      hFormat.apply(this) +
      zeroFill(this.minutes(), 2) +
      zeroFill(this.seconds(), 2));

  });

  addFormatToken('Hmm', 0, 0, function () {
    return '' + this.hours() + zeroFill(this.minutes(), 2);
  });

  addFormatToken('Hmmss', 0, 0, function () {
    return (
      '' +
      this.hours() +
      zeroFill(this.minutes(), 2) +
      zeroFill(this.seconds(), 2));

  });

  function meridiem(token, lowercase) {
    addFormatToken(token, 0, 0, function () {
      return this.localeData().meridiem(
      this.hours(),
      this.minutes(),
      lowercase);

    });
  }

  meridiem('a', true);
  meridiem('A', false);

  // ALIASES

  addUnitAlias('hour', 'h');

  // PRIORITY
  addUnitPriority('hour', 13);

  // PARSING

  function matchMeridiem(isStrict, locale) {
    return locale._meridiemParse;
  }

  addRegexToken('a', matchMeridiem);
  addRegexToken('A', matchMeridiem);
  addRegexToken('H', match1to2);
  addRegexToken('h', match1to2);
  addRegexToken('k', match1to2);
  addRegexToken('HH', match1to2, match2);
  addRegexToken('hh', match1to2, match2);
  addRegexToken('kk', match1to2, match2);

  addRegexToken('hmm', match3to4);
  addRegexToken('hmmss', match5to6);
  addRegexToken('Hmm', match3to4);
  addRegexToken('Hmmss', match5to6);

  addParseToken(['H', 'HH'], HOUR);
  addParseToken(['k', 'kk'], function (input, array, config) {
    var kInput = toInt(input);
    array[HOUR] = kInput === 24 ? 0 : kInput;
  });
  addParseToken(['a', 'A'], function (input, array, config) {
    config._isPm = config._locale.isPM(input);
    config._meridiem = input;
  });
  addParseToken(['h', 'hh'], function (input, array, config) {
    array[HOUR] = toInt(input);
    getParsingFlags(config).bigHour = true;
  });
  addParseToken('hmm', function (input, array, config) {
    var pos = input.length - 2;
    array[HOUR] = toInt(input.substr(0, pos));
    array[MINUTE] = toInt(input.substr(pos));
    getParsingFlags(config).bigHour = true;
  });
  addParseToken('hmmss', function (input, array, config) {
    var pos1 = input.length - 4,
    pos2 = input.length - 2;
    array[HOUR] = toInt(input.substr(0, pos1));
    array[MINUTE] = toInt(input.substr(pos1, 2));
    array[SECOND] = toInt(input.substr(pos2));
    getParsingFlags(config).bigHour = true;
  });
  addParseToken('Hmm', function (input, array, config) {
    var pos = input.length - 2;
    array[HOUR] = toInt(input.substr(0, pos));
    array[MINUTE] = toInt(input.substr(pos));
  });
  addParseToken('Hmmss', function (input, array, config) {
    var pos1 = input.length - 4,
    pos2 = input.length - 2;
    array[HOUR] = toInt(input.substr(0, pos1));
    array[MINUTE] = toInt(input.substr(pos1, 2));
    array[SECOND] = toInt(input.substr(pos2));
  });

  // LOCALES

  function localeIsPM(input) {
    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
    // Using charAt should be more compatible.
    return (input + '').toLowerCase().charAt(0) === 'p';
  }

  var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i,
  // Setting the hour should keep the time, because the user explicitly
  // specified which hour they want. So trying to maintain the same hour (in
  // a new timezone) makes sense. Adding/subtracting hours does not follow
  // this rule.
  getSetHour = makeGetSet('Hours', true);

  function localeMeridiem(hours, minutes, isLower) {
    if (hours > 11) {
      return isLower ? 'pm' : 'PM';
    } else {
      return isLower ? 'am' : 'AM';
    }
  }

  var baseConfig = {
    calendar: defaultCalendar,
    longDateFormat: defaultLongDateFormat,
    invalidDate: defaultInvalidDate,
    ordinal: defaultOrdinal,
    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,
    relativeTime: defaultRelativeTime,

    months: defaultLocaleMonths,
    monthsShort: defaultLocaleMonthsShort,

    week: defaultLocaleWeek,

    weekdays: defaultLocaleWeekdays,
    weekdaysMin: defaultLocaleWeekdaysMin,
    weekdaysShort: defaultLocaleWeekdaysShort,

    meridiemParse: defaultLocaleMeridiemParse };


  // internal storage for locale config files
  var locales = {},
  localeFamilies = {},
  globalLocale;

  function commonPrefix(arr1, arr2) {
    var i,
    minl = Math.min(arr1.length, arr2.length);
    for (i = 0; i < minl; i += 1) {
      if (arr1[i] !== arr2[i]) {
        return i;
      }
    }
    return minl;
  }

  function normalizeLocale(key) {
    return key ? key.toLowerCase().replace('_', '-') : key;
  }

  // pick the locale from the array
  // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
  // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root
  function chooseLocale(names) {
    var i = 0,
    j,
    next,
    locale,
    split;

    while (i < names.length) {
      split = normalizeLocale(names[i]).split('-');
      j = split.length;
      next = normalizeLocale(names[i + 1]);
      next = next ? next.split('-') : null;
      while (j > 0) {
        locale = loadLocale(split.slice(0, j).join('-'));
        if (locale) {
          return locale;
        }
        if (
        next &&
        next.length >= j &&
        commonPrefix(split, next) >= j - 1)
        {
          //the next array item is better than a shallower substring of this one
          break;
        }
        j--;
      }
      i++;
    }
    return globalLocale;
  }

  function loadLocale(name) {
    var oldLocale = null,
    aliasedRequire;
    // TODO: Find a better way to register and load all the locales in Node
    if (
    locales[name] === undefined &&
    typeof module !== 'undefined' &&
    module &&
    module.exports)
    {
      try {
        oldLocale = globalLocale._abbr;
        aliasedRequire = require;
        __webpack_require__(141)("./" + name);
        getSetGlobalLocale(oldLocale);
      } catch (e) {
        // mark as not found to avoid repeating expensive file require call causing high CPU
        // when trying to find en-US, en_US, en-us for every format call
        locales[name] = null; // null means not found
      }
    }
    return locales[name];
  }

  // This function will load locale and then set the global locale.  If
  // no arguments are passed in, it will simply return the current global
  // locale key.
  function getSetGlobalLocale(key, values) {
    var data;
    if (key) {
      if (isUndefined(values)) {
        data = getLocale(key);
      } else {
        data = defineLocale(key, values);
      }

      if (data) {
        // moment.duration._locale = moment._locale = data;
        globalLocale = data;
      } else {
        if (typeof console !== 'undefined' && console.warn) {
          //warn user if arguments are passed but the locale could not be set
          console.warn(
          'Locale ' + key + ' not found. Did you forget to load it?');

        }
      }
    }

    return globalLocale._abbr;
  }

  function defineLocale(name, config) {
    if (config !== null) {
      var locale,
      parentConfig = baseConfig;
      config.abbr = name;
      if (locales[name] != null) {
        deprecateSimple(
        'defineLocaleOverride',
        'use moment.updateLocale(localeName, config) to change ' +
        'an existing locale. moment.defineLocale(localeName, ' +
        'config) should only be used for creating a new locale ' +
        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');

        parentConfig = locales[name]._config;
      } else if (config.parentLocale != null) {
        if (locales[config.parentLocale] != null) {
          parentConfig = locales[config.parentLocale]._config;
        } else {
          locale = loadLocale(config.parentLocale);
          if (locale != null) {
            parentConfig = locale._config;
          } else {
            if (!localeFamilies[config.parentLocale]) {
              localeFamilies[config.parentLocale] = [];
            }
            localeFamilies[config.parentLocale].push({
              name: name,
              config: config });

            return null;
          }
        }
      }
      locales[name] = new Locale(mergeConfigs(parentConfig, config));

      if (localeFamilies[name]) {
        localeFamilies[name].forEach(function (x) {
          defineLocale(x.name, x.config);
        });
      }

      // backwards compat for now: also set the locale
      // make sure we set the locale AFTER all child locales have been
      // created, so we won't end up with the child locale set.
      getSetGlobalLocale(name);

      return locales[name];
    } else {
      // useful for testing
      delete locales[name];
      return null;
    }
  }

  function updateLocale(name, config) {
    if (config != null) {
      var locale,
      tmpLocale,
      parentConfig = baseConfig;

      if (locales[name] != null && locales[name].parentLocale != null) {
        // Update existing child locale in-place to avoid memory-leaks
        locales[name].set(mergeConfigs(locales[name]._config, config));
      } else {
        // MERGE
        tmpLocale = loadLocale(name);
        if (tmpLocale != null) {
          parentConfig = tmpLocale._config;
        }
        config = mergeConfigs(parentConfig, config);
        if (tmpLocale == null) {
          // updateLocale is called for creating a new locale
          // Set abbr so it will have a name (getters return
          // undefined otherwise).
          config.abbr = name;
        }
        locale = new Locale(config);
        locale.parentLocale = locales[name];
        locales[name] = locale;
      }

      // backwards compat for now: also set the locale
      getSetGlobalLocale(name);
    } else {
      // pass null for config to unupdate, useful for tests
      if (locales[name] != null) {
        if (locales[name].parentLocale != null) {
          locales[name] = locales[name].parentLocale;
          if (name === getSetGlobalLocale()) {
            getSetGlobalLocale(name);
          }
        } else if (locales[name] != null) {
          delete locales[name];
        }
      }
    }
    return locales[name];
  }

  // returns locale data
  function getLocale(key) {
    var locale;

    if (key && key._locale && key._locale._abbr) {
      key = key._locale._abbr;
    }

    if (!key) {
      return globalLocale;
    }

    if (!isArray(key)) {
      //short-circuit everything else
      locale = loadLocale(key);
      if (locale) {
        return locale;
      }
      key = [key];
    }

    return chooseLocale(key);
  }

  function listLocales() {
    return keys(locales);
  }

  function checkOverflow(m) {
    var overflow,
    a = m._a;

    if (a && getParsingFlags(m).overflow === -2) {
      overflow =
      a[MONTH] < 0 || a[MONTH] > 11 ?
      MONTH :
      a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ?
      DATE :
      a[HOUR] < 0 ||
      a[HOUR] > 24 ||
      a[HOUR] === 24 && (
      a[MINUTE] !== 0 ||
      a[SECOND] !== 0 ||
      a[MILLISECOND] !== 0) ?
      HOUR :
      a[MINUTE] < 0 || a[MINUTE] > 59 ?
      MINUTE :
      a[SECOND] < 0 || a[SECOND] > 59 ?
      SECOND :
      a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ?
      MILLISECOND :
      -1;

      if (
      getParsingFlags(m)._overflowDayOfYear && (
      overflow < YEAR || overflow > DATE))
      {
        overflow = DATE;
      }
      if (getParsingFlags(m)._overflowWeeks && overflow === -1) {
        overflow = WEEK;
      }
      if (getParsingFlags(m)._overflowWeekday && overflow === -1) {
        overflow = WEEKDAY;
      }

      getParsingFlags(m).overflow = overflow;
    }

    return m;
  }

  // iso 8601 regex
  // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)
  var extendedIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/,
  basicIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d|))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/,
  tzRegex = /Z|[+-]\d\d(?::?\d\d)?/,
  isoDates = [
  ['YYYYYY-MM-DD', /[+-]\d{6}-\d\d-\d\d/],
  ['YYYY-MM-DD', /\d{4}-\d\d-\d\d/],
  ['GGGG-[W]WW-E', /\d{4}-W\d\d-\d/],
  ['GGGG-[W]WW', /\d{4}-W\d\d/, false],
  ['YYYY-DDD', /\d{4}-\d{3}/],
  ['YYYY-MM', /\d{4}-\d\d/, false],
  ['YYYYYYMMDD', /[+-]\d{10}/],
  ['YYYYMMDD', /\d{8}/],
  ['GGGG[W]WWE', /\d{4}W\d{3}/],
  ['GGGG[W]WW', /\d{4}W\d{2}/, false],
  ['YYYYDDD', /\d{7}/],
  ['YYYYMM', /\d{6}/, false],
  ['YYYY', /\d{4}/, false]],

  // iso time formats and regexes
  isoTimes = [
  ['HH:mm:ss.SSSS', /\d\d:\d\d:\d\d\.\d+/],
  ['HH:mm:ss,SSSS', /\d\d:\d\d:\d\d,\d+/],
  ['HH:mm:ss', /\d\d:\d\d:\d\d/],
  ['HH:mm', /\d\d:\d\d/],
  ['HHmmss.SSSS', /\d\d\d\d\d\d\.\d+/],
  ['HHmmss,SSSS', /\d\d\d\d\d\d,\d+/],
  ['HHmmss', /\d\d\d\d\d\d/],
  ['HHmm', /\d\d\d\d/],
  ['HH', /\d\d/]],

  aspNetJsonRegex = /^\/?Date\((-?\d+)/i,
  // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3
  rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/,
  obsOffsets = {
    UT: 0,
    GMT: 0,
    EDT: -4 * 60,
    EST: -5 * 60,
    CDT: -5 * 60,
    CST: -6 * 60,
    MDT: -6 * 60,
    MST: -7 * 60,
    PDT: -7 * 60,
    PST: -8 * 60 };


  // date from iso format
  function configFromISO(config) {
    var i,
    l,
    string = config._i,
    match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),
    allowTime,
    dateFormat,
    timeFormat,
    tzFormat;

    if (match) {
      getParsingFlags(config).iso = true;

      for (i = 0, l = isoDates.length; i < l; i++) {
        if (isoDates[i][1].exec(match[1])) {
          dateFormat = isoDates[i][0];
          allowTime = isoDates[i][2] !== false;
          break;
        }
      }
      if (dateFormat == null) {
        config._isValid = false;
        return;
      }
      if (match[3]) {
        for (i = 0, l = isoTimes.length; i < l; i++) {
          if (isoTimes[i][1].exec(match[3])) {
            // match[2] should be 'T' or space
            timeFormat = (match[2] || ' ') + isoTimes[i][0];
            break;
          }
        }
        if (timeFormat == null) {
          config._isValid = false;
          return;
        }
      }
      if (!allowTime && timeFormat != null) {
        config._isValid = false;
        return;
      }
      if (match[4]) {
        if (tzRegex.exec(match[4])) {
          tzFormat = 'Z';
        } else {
          config._isValid = false;
          return;
        }
      }
      config._f = dateFormat + (timeFormat || '') + (tzFormat || '');
      configFromStringAndFormat(config);
    } else {
      config._isValid = false;
    }
  }

  function extractFromRFC2822Strings(
  yearStr,
  monthStr,
  dayStr,
  hourStr,
  minuteStr,
  secondStr)
  {
    var result = [
    untruncateYear(yearStr),
    defaultLocaleMonthsShort.indexOf(monthStr),
    parseInt(dayStr, 10),
    parseInt(hourStr, 10),
    parseInt(minuteStr, 10)];


    if (secondStr) {
      result.push(parseInt(secondStr, 10));
    }

    return result;
  }

  function untruncateYear(yearStr) {
    var year = parseInt(yearStr, 10);
    if (year <= 49) {
      return 2000 + year;
    } else if (year <= 999) {
      return 1900 + year;
    }
    return year;
  }

  function preprocessRFC2822(s) {
    // Remove comments and folding whitespace and replace multiple-spaces with a single space
    return s.
    replace(/\([^)]*\)|[\n\t]/g, ' ').
    replace(/(\s\s+)/g, ' ').
    replace(/^\s\s*/, '').
    replace(/\s\s*$/, '');
  }

  function checkWeekday(weekdayStr, parsedInput, config) {
    if (weekdayStr) {
      // TODO: Replace the vanilla JS Date object with an independent day-of-week check.
      var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),
      weekdayActual = new Date(
      parsedInput[0],
      parsedInput[1],
      parsedInput[2]).
      getDay();
      if (weekdayProvided !== weekdayActual) {
        getParsingFlags(config).weekdayMismatch = true;
        config._isValid = false;
        return false;
      }
    }
    return true;
  }

  function calculateOffset(obsOffset, militaryOffset, numOffset) {
    if (obsOffset) {
      return obsOffsets[obsOffset];
    } else if (militaryOffset) {
      // the only allowed military tz is Z
      return 0;
    } else {
      var hm = parseInt(numOffset, 10),
      m = hm % 100,
      h = (hm - m) / 100;
      return h * 60 + m;
    }
  }

  // date and time from ref 2822 format
  function configFromRFC2822(config) {
    var match = rfc2822.exec(preprocessRFC2822(config._i)),
    parsedArray;
    if (match) {
      parsedArray = extractFromRFC2822Strings(
      match[4],
      match[3],
      match[2],
      match[5],
      match[6],
      match[7]);

      if (!checkWeekday(match[1], parsedArray, config)) {
        return;
      }

      config._a = parsedArray;
      config._tzm = calculateOffset(match[8], match[9], match[10]);

      config._d = createUTCDate.apply(null, config._a);
      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);

      getParsingFlags(config).rfc2822 = true;
    } else {
      config._isValid = false;
    }
  }

  // date from 1) ASP.NET, 2) ISO, 3) RFC 2822 formats, or 4) optional fallback if parsing isn't strict
  function configFromString(config) {
    var matched = aspNetJsonRegex.exec(config._i);
    if (matched !== null) {
      config._d = new Date(+matched[1]);
      return;
    }

    configFromISO(config);
    if (config._isValid === false) {
      delete config._isValid;
    } else {
      return;
    }

    configFromRFC2822(config);
    if (config._isValid === false) {
      delete config._isValid;
    } else {
      return;
    }

    if (config._strict) {
      config._isValid = false;
    } else {
      // Final attempt, use Input Fallback
      hooks.createFromInputFallback(config);
    }
  }

  hooks.createFromInputFallback = deprecate(
  'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +
  'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +
  'discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.',
  function (config) {
    config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));
  });


  // Pick the first defined of two or three arguments.
  function defaults(a, b, c) {
    if (a != null) {
      return a;
    }
    if (b != null) {
      return b;
    }
    return c;
  }

  function currentDateArray(config) {
    // hooks is actually the exported moment object
    var nowValue = new Date(hooks.now());
    if (config._useUTC) {
      return [
      nowValue.getUTCFullYear(),
      nowValue.getUTCMonth(),
      nowValue.getUTCDate()];

    }
    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];
  }

  // convert an array to a date.
  // the array should mirror the parameters below
  // note: all values past the year are optional and will default to the lowest possible value.
  // [year, month, day , hour, minute, second, millisecond]
  function configFromArray(config) {
    var i,
    date,
    input = [],
    currentDate,
    expectedWeekday,
    yearToUse;

    if (config._d) {
      return;
    }

    currentDate = currentDateArray(config);

    //compute day of the year from weeks and weekdays
    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {
      dayOfYearFromWeekInfo(config);
    }

    //if the day of the year is set, figure out what it is
    if (config._dayOfYear != null) {
      yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);

      if (
      config._dayOfYear > daysInYear(yearToUse) ||
      config._dayOfYear === 0)
      {
        getParsingFlags(config)._overflowDayOfYear = true;
      }

      date = createUTCDate(yearToUse, 0, config._dayOfYear);
      config._a[MONTH] = date.getUTCMonth();
      config._a[DATE] = date.getUTCDate();
    }

    // Default to current date.
    // * if no year, month, day of month are given, default to today
    // * if day of month is given, default month and year
    // * if month is given, default only year
    // * if year is given, don't default anything
    for (i = 0; i < 3 && config._a[i] == null; ++i) {
      config._a[i] = input[i] = currentDate[i];
    }

    // Zero out whatever was not defaulted, including time
    for (; i < 7; i++) {
      config._a[i] = input[i] =
      config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];
    }

    // Check for 24:00:00.000
    if (
    config._a[HOUR] === 24 &&
    config._a[MINUTE] === 0 &&
    config._a[SECOND] === 0 &&
    config._a[MILLISECOND] === 0)
    {
      config._nextDay = true;
      config._a[HOUR] = 0;
    }

    config._d = (config._useUTC ? createUTCDate : createDate).apply(
    null,
    input);

    expectedWeekday = config._useUTC ?
    config._d.getUTCDay() :
    config._d.getDay();

    // Apply timezone offset from input. The actual utcOffset can be changed
    // with parseZone.
    if (config._tzm != null) {
      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
    }

    if (config._nextDay) {
      config._a[HOUR] = 24;
    }

    // check for mismatching day of week
    if (
    config._w &&
    typeof config._w.d !== 'undefined' &&
    config._w.d !== expectedWeekday)
    {
      getParsingFlags(config).weekdayMismatch = true;
    }
  }

  function dayOfYearFromWeekInfo(config) {
    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow, curWeek;

    w = config._w;
    if (w.GG != null || w.W != null || w.E != null) {
      dow = 1;
      doy = 4;

      // TODO: We need to take the current isoWeekYear, but that depends on
      // how we interpret now (local, utc, fixed offset). So create
      // a now version of current config (take local/utc/offset flags, and
      // create now).
      weekYear = defaults(
      w.GG,
      config._a[YEAR],
      weekOfYear(createLocal(), 1, 4).year);

      week = defaults(w.W, 1);
      weekday = defaults(w.E, 1);
      if (weekday < 1 || weekday > 7) {
        weekdayOverflow = true;
      }
    } else {
      dow = config._locale._week.dow;
      doy = config._locale._week.doy;

      curWeek = weekOfYear(createLocal(), dow, doy);

      weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);

      // Default to current week.
      week = defaults(w.w, curWeek.week);

      if (w.d != null) {
        // weekday -- low day numbers are considered next week
        weekday = w.d;
        if (weekday < 0 || weekday > 6) {
          weekdayOverflow = true;
        }
      } else if (w.e != null) {
        // local weekday -- counting starts from beginning of week
        weekday = w.e + dow;
        if (w.e < 0 || w.e > 6) {
          weekdayOverflow = true;
        }
      } else {
        // default to beginning of week
        weekday = dow;
      }
    }
    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {
      getParsingFlags(config)._overflowWeeks = true;
    } else if (weekdayOverflow != null) {
      getParsingFlags(config)._overflowWeekday = true;
    } else {
      temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);
      config._a[YEAR] = temp.year;
      config._dayOfYear = temp.dayOfYear;
    }
  }

  // constant that refers to the ISO standard
  hooks.ISO_8601 = function () {};

  // constant that refers to the RFC 2822 form
  hooks.RFC_2822 = function () {};

  // date from string and format string
  function configFromStringAndFormat(config) {
    // TODO: Move this to another part of the creation flow to prevent circular deps
    if (config._f === hooks.ISO_8601) {
      configFromISO(config);
      return;
    }
    if (config._f === hooks.RFC_2822) {
      configFromRFC2822(config);
      return;
    }
    config._a = [];
    getParsingFlags(config).empty = true;

    // This array is used to make a Date, either with `new Date` or `Date.UTC`
    var string = '' + config._i,
    i,
    parsedInput,
    tokens,
    token,
    skipped,
    stringLength = string.length,
    totalParsedInputLength = 0,
    era;

    tokens =
    expandFormat(config._f, config._locale).match(formattingTokens) || [];

    for (i = 0; i < tokens.length; i++) {
      token = tokens[i];
      parsedInput = (string.match(getParseRegexForToken(token, config)) ||
      [])[0];
      if (parsedInput) {
        skipped = string.substr(0, string.indexOf(parsedInput));
        if (skipped.length > 0) {
          getParsingFlags(config).unusedInput.push(skipped);
        }
        string = string.slice(
        string.indexOf(parsedInput) + parsedInput.length);

        totalParsedInputLength += parsedInput.length;
      }
      // don't parse if it's not a known token
      if (formatTokenFunctions[token]) {
        if (parsedInput) {
          getParsingFlags(config).empty = false;
        } else {
          getParsingFlags(config).unusedTokens.push(token);
        }
        addTimeToArrayFromToken(token, parsedInput, config);
      } else if (config._strict && !parsedInput) {
        getParsingFlags(config).unusedTokens.push(token);
      }
    }

    // add remaining unparsed input length to the string
    getParsingFlags(config).charsLeftOver =
    stringLength - totalParsedInputLength;
    if (string.length > 0) {
      getParsingFlags(config).unusedInput.push(string);
    }

    // clear _12h flag if hour is <= 12
    if (
    config._a[HOUR] <= 12 &&
    getParsingFlags(config).bigHour === true &&
    config._a[HOUR] > 0)
    {
      getParsingFlags(config).bigHour = undefined;
    }

    getParsingFlags(config).parsedDateParts = config._a.slice(0);
    getParsingFlags(config).meridiem = config._meridiem;
    // handle meridiem
    config._a[HOUR] = meridiemFixWrap(
    config._locale,
    config._a[HOUR],
    config._meridiem);


    // handle era
    era = getParsingFlags(config).era;
    if (era !== null) {
      config._a[YEAR] = config._locale.erasConvertYear(era, config._a[YEAR]);
    }

    configFromArray(config);
    checkOverflow(config);
  }

  function meridiemFixWrap(locale, hour, meridiem) {
    var isPm;

    if (meridiem == null) {
      // nothing to do
      return hour;
    }
    if (locale.meridiemHour != null) {
      return locale.meridiemHour(hour, meridiem);
    } else if (locale.isPM != null) {
      // Fallback
      isPm = locale.isPM(meridiem);
      if (isPm && hour < 12) {
        hour += 12;
      }
      if (!isPm && hour === 12) {
        hour = 0;
      }
      return hour;
    } else {
      // this is not supposed to happen
      return hour;
    }
  }

  // date from string and array of format strings
  function configFromStringAndArray(config) {
    var tempConfig,
    bestMoment,
    scoreToBeat,
    i,
    currentScore,
    validFormatFound,
    bestFormatIsValid = false;

    if (config._f.length === 0) {
      getParsingFlags(config).invalidFormat = true;
      config._d = new Date(NaN);
      return;
    }

    for (i = 0; i < config._f.length; i++) {
      currentScore = 0;
      validFormatFound = false;
      tempConfig = copyConfig({}, config);
      if (config._useUTC != null) {
        tempConfig._useUTC = config._useUTC;
      }
      tempConfig._f = config._f[i];
      configFromStringAndFormat(tempConfig);

      if (isValid(tempConfig)) {
        validFormatFound = true;
      }

      // if there is any input that was not parsed add a penalty for that format
      currentScore += getParsingFlags(tempConfig).charsLeftOver;

      //or tokens
      currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;

      getParsingFlags(tempConfig).score = currentScore;

      if (!bestFormatIsValid) {
        if (
        scoreToBeat == null ||
        currentScore < scoreToBeat ||
        validFormatFound)
        {
          scoreToBeat = currentScore;
          bestMoment = tempConfig;
          if (validFormatFound) {
            bestFormatIsValid = true;
          }
        }
      } else {
        if (currentScore < scoreToBeat) {
          scoreToBeat = currentScore;
          bestMoment = tempConfig;
        }
      }
    }

    extend(config, bestMoment || tempConfig);
  }

  function configFromObject(config) {
    if (config._d) {
      return;
    }

    var i = normalizeObjectUnits(config._i),
    dayOrDate = i.day === undefined ? i.date : i.day;
    config._a = map(
    [i.year, i.month, dayOrDate, i.hour, i.minute, i.second, i.millisecond],
    function (obj) {
      return obj && parseInt(obj, 10);
    });


    configFromArray(config);
  }

  function createFromConfig(config) {
    var res = new Moment(checkOverflow(prepareConfig(config)));
    if (res._nextDay) {
      // Adding is smart enough around DST
      res.add(1, 'd');
      res._nextDay = undefined;
    }

    return res;
  }

  function prepareConfig(config) {
    var input = config._i,
    format = config._f;

    config._locale = config._locale || getLocale(config._l);

    if (input === null || format === undefined && input === '') {
      return createInvalid({ nullInput: true });
    }

    if (typeof input === 'string') {
      config._i = input = config._locale.preparse(input);
    }

    if (isMoment(input)) {
      return new Moment(checkOverflow(input));
    } else if (isDate(input)) {
      config._d = input;
    } else if (isArray(format)) {
      configFromStringAndArray(config);
    } else if (format) {
      configFromStringAndFormat(config);
    } else {
      configFromInput(config);
    }

    if (!isValid(config)) {
      config._d = null;
    }

    return config;
  }

  function configFromInput(config) {
    var input = config._i;
    if (isUndefined(input)) {
      config._d = new Date(hooks.now());
    } else if (isDate(input)) {
      config._d = new Date(input.valueOf());
    } else if (typeof input === 'string') {
      configFromString(config);
    } else if (isArray(input)) {
      config._a = map(input.slice(0), function (obj) {
        return parseInt(obj, 10);
      });
      configFromArray(config);
    } else if (isObject(input)) {
      configFromObject(config);
    } else if (isNumber(input)) {
      // from milliseconds
      config._d = new Date(input);
    } else {
      hooks.createFromInputFallback(config);
    }
  }

  function createLocalOrUTC(input, format, locale, strict, isUTC) {
    var c = {};

    if (format === true || format === false) {
      strict = format;
      format = undefined;
    }

    if (locale === true || locale === false) {
      strict = locale;
      locale = undefined;
    }

    if (
    isObject(input) && isObjectEmpty(input) ||
    isArray(input) && input.length === 0)
    {
      input = undefined;
    }
    // object construction must be done this way.
    // https://github.com/moment/moment/issues/1423
    c._isAMomentObject = true;
    c._useUTC = c._isUTC = isUTC;
    c._l = locale;
    c._i = input;
    c._f = format;
    c._strict = strict;

    return createFromConfig(c);
  }

  function createLocal(input, format, locale, strict) {
    return createLocalOrUTC(input, format, locale, strict, false);
  }

  var prototypeMin = deprecate(
  'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',
  function () {
    var other = createLocal.apply(null, arguments);
    if (this.isValid() && other.isValid()) {
      return other < this ? this : other;
    } else {
      return createInvalid();
    }
  }),

  prototypeMax = deprecate(
  'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',
  function () {
    var other = createLocal.apply(null, arguments);
    if (this.isValid() && other.isValid()) {
      return other > this ? this : other;
    } else {
      return createInvalid();
    }
  });


  // Pick a moment m from moments so that m[fn](other) is true for all
  // other. This relies on the function fn to be transitive.
  //
  // moments should either be an array of moment objects or an array, whose
  // first element is an array of moment objects.
  function pickBy(fn, moments) {
    var res, i;
    if (moments.length === 1 && isArray(moments[0])) {
      moments = moments[0];
    }
    if (!moments.length) {
      return createLocal();
    }
    res = moments[0];
    for (i = 1; i < moments.length; ++i) {
      if (!moments[i].isValid() || moments[i][fn](res)) {
        res = moments[i];
      }
    }
    return res;
  }

  // TODO: Use [].sort instead?
  function min() {
    var args = [].slice.call(arguments, 0);

    return pickBy('isBefore', args);
  }

  function max() {
    var args = [].slice.call(arguments, 0);

    return pickBy('isAfter', args);
  }

  var now = function now() {
    return Date.now ? Date.now() : +new Date();
  };

  var ordering = [
  'year',
  'quarter',
  'month',
  'week',
  'day',
  'hour',
  'minute',
  'second',
  'millisecond'];


  function isDurationValid(m) {
    var key,
    unitHasDecimal = false,
    i;
    for (key in m) {
      if (
      hasOwnProp(m, key) &&
      !(
      indexOf.call(ordering, key) !== -1 && (
      m[key] == null || !isNaN(m[key]))))

      {
        return false;
      }
    }

    for (i = 0; i < ordering.length; ++i) {
      if (m[ordering[i]]) {
        if (unitHasDecimal) {
          return false; // only allow non-integers for smallest unit
        }
        if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {
          unitHasDecimal = true;
        }
      }
    }

    return true;
  }

  function isValid$1() {
    return this._isValid;
  }

  function createInvalid$1() {
    return createDuration(NaN);
  }

  function Duration(duration) {
    var normalizedInput = normalizeObjectUnits(duration),
    years = normalizedInput.year || 0,
    quarters = normalizedInput.quarter || 0,
    months = normalizedInput.month || 0,
    weeks = normalizedInput.week || normalizedInput.isoWeek || 0,
    days = normalizedInput.day || 0,
    hours = normalizedInput.hour || 0,
    minutes = normalizedInput.minute || 0,
    seconds = normalizedInput.second || 0,
    milliseconds = normalizedInput.millisecond || 0;

    this._isValid = isDurationValid(normalizedInput);

    // representation for dateAddRemove
    this._milliseconds =
    +milliseconds +
    seconds * 1e3 + // 1000
    minutes * 6e4 + // 1000 * 60
    hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978
    // Because of dateAddRemove treats 24 hours as different from a
    // day when working around DST, we need to store them separately
    this._days = +days + weeks * 7;
    // It is impossible to translate months into days without knowing
    // which months you are are talking about, so we have to store
    // it separately.
    this._months = +months + quarters * 3 + years * 12;

    this._data = {};

    this._locale = getLocale();

    this._bubble();
  }

  function isDuration(obj) {
    return obj instanceof Duration;
  }

  function absRound(number) {
    if (number < 0) {
      return Math.round(-1 * number) * -1;
    } else {
      return Math.round(number);
    }
  }

  // compare two arrays, return the number of differences
  function compareArrays(array1, array2, dontConvert) {
    var len = Math.min(array1.length, array2.length),
    lengthDiff = Math.abs(array1.length - array2.length),
    diffs = 0,
    i;
    for (i = 0; i < len; i++) {
      if (
      dontConvert && array1[i] !== array2[i] ||
      !dontConvert && toInt(array1[i]) !== toInt(array2[i]))
      {
        diffs++;
      }
    }
    return diffs + lengthDiff;
  }

  // FORMATTING

  function offset(token, separator) {
    addFormatToken(token, 0, 0, function () {
      var offset = this.utcOffset(),
      sign = '+';
      if (offset < 0) {
        offset = -offset;
        sign = '-';
      }
      return (
        sign +
        zeroFill(~~(offset / 60), 2) +
        separator +
        zeroFill(~~offset % 60, 2));

    });
  }

  offset('Z', ':');
  offset('ZZ', '');

  // PARSING

  addRegexToken('Z', matchShortOffset);
  addRegexToken('ZZ', matchShortOffset);
  addParseToken(['Z', 'ZZ'], function (input, array, config) {
    config._useUTC = true;
    config._tzm = offsetFromString(matchShortOffset, input);
  });

  // HELPERS

  // timezone chunker
  // '+10:00' > ['10',  '00']
  // '-1530'  > ['-15', '30']
  var chunkOffset = /([\+\-]|\d\d)/gi;

  function offsetFromString(matcher, string) {
    var matches = (string || '').match(matcher),
    chunk,
    parts,
    minutes;

    if (matches === null) {
      return null;
    }

    chunk = matches[matches.length - 1] || [];
    parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];
    minutes = +(parts[1] * 60) + toInt(parts[2]);

    return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;
  }

  // Return a moment from input, that is local/utc/zone equivalent to model.
  function cloneWithOffset(input, model) {
    var res, diff;
    if (model._isUTC) {
      res = model.clone();
      diff =
      (isMoment(input) || isDate(input) ?
      input.valueOf() :
      createLocal(input).valueOf()) - res.valueOf();
      // Use low-level api, because this fn is low-level api.
      res._d.setTime(res._d.valueOf() + diff);
      hooks.updateOffset(res, false);
      return res;
    } else {
      return createLocal(input).local();
    }
  }

  function getDateOffset(m) {
    // On Firefox.24 Date#getTimezoneOffset returns a floating point.
    // https://github.com/moment/moment/pull/1871
    return -Math.round(m._d.getTimezoneOffset());
  }

  // HOOKS

  // This function will be called whenever a moment is mutated.
  // It is intended to keep the offset in sync with the timezone.
  hooks.updateOffset = function () {};

  // MOMENTS

  // keepLocalTime = true means only change the timezone, without
  // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->
  // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset
  // +0200, so we adjust the time as needed, to be valid.
  //
  // Keeping the time actually adds/subtracts (one hour)
  // from the actual represented time. That is why we call updateOffset
  // a second time. In case it wants us to change the offset again
  // _changeInProgress == true case, then we have to adjust, because
  // there is no such time in the given timezone.
  function getSetOffset(input, keepLocalTime, keepMinutes) {
    var offset = this._offset || 0,
    localAdjust;
    if (!this.isValid()) {
      return input != null ? this : NaN;
    }
    if (input != null) {
      if (typeof input === 'string') {
        input = offsetFromString(matchShortOffset, input);
        if (input === null) {
          return this;
        }
      } else if (Math.abs(input) < 16 && !keepMinutes) {
        input = input * 60;
      }
      if (!this._isUTC && keepLocalTime) {
        localAdjust = getDateOffset(this);
      }
      this._offset = input;
      this._isUTC = true;
      if (localAdjust != null) {
        this.add(localAdjust, 'm');
      }
      if (offset !== input) {
        if (!keepLocalTime || this._changeInProgress) {
          addSubtract(
          this,
          createDuration(input - offset, 'm'),
          1,
          false);

        } else if (!this._changeInProgress) {
          this._changeInProgress = true;
          hooks.updateOffset(this, true);
          this._changeInProgress = null;
        }
      }
      return this;
    } else {
      return this._isUTC ? offset : getDateOffset(this);
    }
  }

  function getSetZone(input, keepLocalTime) {
    if (input != null) {
      if (typeof input !== 'string') {
        input = -input;
      }

      this.utcOffset(input, keepLocalTime);

      return this;
    } else {
      return -this.utcOffset();
    }
  }

  function setOffsetToUTC(keepLocalTime) {
    return this.utcOffset(0, keepLocalTime);
  }

  function setOffsetToLocal(keepLocalTime) {
    if (this._isUTC) {
      this.utcOffset(0, keepLocalTime);
      this._isUTC = false;

      if (keepLocalTime) {
        this.subtract(getDateOffset(this), 'm');
      }
    }
    return this;
  }

  function setOffsetToParsedOffset() {
    if (this._tzm != null) {
      this.utcOffset(this._tzm, false, true);
    } else if (typeof this._i === 'string') {
      var tZone = offsetFromString(matchOffset, this._i);
      if (tZone != null) {
        this.utcOffset(tZone);
      } else {
        this.utcOffset(0, true);
      }
    }
    return this;
  }

  function hasAlignedHourOffset(input) {
    if (!this.isValid()) {
      return false;
    }
    input = input ? createLocal(input).utcOffset() : 0;

    return (this.utcOffset() - input) % 60 === 0;
  }

  function isDaylightSavingTime() {
    return (
      this.utcOffset() > this.clone().month(0).utcOffset() ||
      this.utcOffset() > this.clone().month(5).utcOffset());

  }

  function isDaylightSavingTimeShifted() {
    if (!isUndefined(this._isDSTShifted)) {
      return this._isDSTShifted;
    }

    var c = {},
    other;

    copyConfig(c, this);
    c = prepareConfig(c);

    if (c._a) {
      other = c._isUTC ? createUTC(c._a) : createLocal(c._a);
      this._isDSTShifted =
      this.isValid() && compareArrays(c._a, other.toArray()) > 0;
    } else {
      this._isDSTShifted = false;
    }

    return this._isDSTShifted;
  }

  function isLocal() {
    return this.isValid() ? !this._isUTC : false;
  }

  function isUtcOffset() {
    return this.isValid() ? this._isUTC : false;
  }

  function isUtc() {
    return this.isValid() ? this._isUTC && this._offset === 0 : false;
  }

  // ASP.NET json date format regex
  var aspNetRegex = /^(-|\+)?(?:(\d*)[. ])?(\d+):(\d+)(?::(\d+)(\.\d*)?)?$/,
  // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
  // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
  // and further modified to allow for strings containing both week and day
  isoRegex = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;

  function createDuration(input, key) {
    var duration = input,
    // matching against regexp is expensive, do it on demand
    match = null,
    sign,
    ret,
    diffRes;

    if (isDuration(input)) {
      duration = {
        ms: input._milliseconds,
        d: input._days,
        M: input._months };

    } else if (isNumber(input) || !isNaN(+input)) {
      duration = {};
      if (key) {
        duration[key] = +input;
      } else {
        duration.milliseconds = +input;
      }
    } else if (match = aspNetRegex.exec(input)) {
      sign = match[1] === '-' ? -1 : 1;
      duration = {
        y: 0,
        d: toInt(match[DATE]) * sign,
        h: toInt(match[HOUR]) * sign,
        m: toInt(match[MINUTE]) * sign,
        s: toInt(match[SECOND]) * sign,
        ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match
      };
    } else if (match = isoRegex.exec(input)) {
      sign = match[1] === '-' ? -1 : 1;
      duration = {
        y: parseIso(match[2], sign),
        M: parseIso(match[3], sign),
        w: parseIso(match[4], sign),
        d: parseIso(match[5], sign),
        h: parseIso(match[6], sign),
        m: parseIso(match[7], sign),
        s: parseIso(match[8], sign) };

    } else if (duration == null) {
      // checks for null or undefined
      duration = {};
    } else if (
    typeof duration === 'object' && (
    'from' in duration || 'to' in duration))
    {
      diffRes = momentsDifference(
      createLocal(duration.from),
      createLocal(duration.to));


      duration = {};
      duration.ms = diffRes.milliseconds;
      duration.M = diffRes.months;
    }

    ret = new Duration(duration);

    if (isDuration(input) && hasOwnProp(input, '_locale')) {
      ret._locale = input._locale;
    }

    if (isDuration(input) && hasOwnProp(input, '_isValid')) {
      ret._isValid = input._isValid;
    }

    return ret;
  }

  createDuration.fn = Duration.prototype;
  createDuration.invalid = createInvalid$1;

  function parseIso(inp, sign) {
    // We'd normally use ~~inp for this, but unfortunately it also
    // converts floats to ints.
    // inp may be undefined, so careful calling replace on it.
    var res = inp && parseFloat(inp.replace(',', '.'));
    // apply sign while we're at it
    return (isNaN(res) ? 0 : res) * sign;
  }

  function positiveMomentsDifference(base, other) {
    var res = {};

    res.months =
    other.month() - base.month() + (other.year() - base.year()) * 12;
    if (base.clone().add(res.months, 'M').isAfter(other)) {
      --res.months;
    }

    res.milliseconds = +other - +base.clone().add(res.months, 'M');

    return res;
  }

  function momentsDifference(base, other) {
    var res;
    if (!(base.isValid() && other.isValid())) {
      return { milliseconds: 0, months: 0 };
    }

    other = cloneWithOffset(other, base);
    if (base.isBefore(other)) {
      res = positiveMomentsDifference(base, other);
    } else {
      res = positiveMomentsDifference(other, base);
      res.milliseconds = -res.milliseconds;
      res.months = -res.months;
    }

    return res;
  }

  // TODO: remove 'name' arg after deprecation is removed
  function createAdder(direction, name) {
    return function (val, period) {
      var dur, tmp;
      //invert the arguments, but complain about it
      if (period !== null && !isNaN(+period)) {
        deprecateSimple(
        name,
        'moment().' +
        name +
        '(period, number) is deprecated. Please use moment().' +
        name +
        '(number, period). ' +
        'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');

        tmp = val;
        val = period;
        period = tmp;
      }

      dur = createDuration(val, period);
      addSubtract(this, dur, direction);
      return this;
    };
  }

  function addSubtract(mom, duration, isAdding, updateOffset) {
    var milliseconds = duration._milliseconds,
    days = absRound(duration._days),
    months = absRound(duration._months);

    if (!mom.isValid()) {
      // No op
      return;
    }

    updateOffset = updateOffset == null ? true : updateOffset;

    if (months) {
      setMonth(mom, get(mom, 'Month') + months * isAdding);
    }
    if (days) {
      set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);
    }
    if (milliseconds) {
      mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);
    }
    if (updateOffset) {
      hooks.updateOffset(mom, days || months);
    }
  }

  var add = createAdder(1, 'add'),
  subtract = createAdder(-1, 'subtract');

  function isString(input) {
    return typeof input === 'string' || input instanceof String;
  }

  // type MomentInput = Moment | Date | string | number | (number | string)[] | MomentInputObject | void; // null | undefined
  function isMomentInput(input) {
    return (
      isMoment(input) ||
      isDate(input) ||
      isString(input) ||
      isNumber(input) ||
      isNumberOrStringArray(input) ||
      isMomentInputObject(input) ||
      input === null ||
      input === undefined);

  }

  function isMomentInputObject(input) {
    var objectTest = isObject(input) && !isObjectEmpty(input),
    propertyTest = false,
    properties = [
    'years',
    'year',
    'y',
    'months',
    'month',
    'M',
    'days',
    'day',
    'd',
    'dates',
    'date',
    'D',
    'hours',
    'hour',
    'h',
    'minutes',
    'minute',
    'm',
    'seconds',
    'second',
    's',
    'milliseconds',
    'millisecond',
    'ms'],

    i,
    property;

    for (i = 0; i < properties.length; i += 1) {
      property = properties[i];
      propertyTest = propertyTest || hasOwnProp(input, property);
    }

    return objectTest && propertyTest;
  }

  function isNumberOrStringArray(input) {
    var arrayTest = isArray(input),
    dataTypeTest = false;
    if (arrayTest) {
      dataTypeTest =
      input.filter(function (item) {
        return !isNumber(item) && isString(input);
      }).length === 0;
    }
    return arrayTest && dataTypeTest;
  }

  function isCalendarSpec(input) {
    var objectTest = isObject(input) && !isObjectEmpty(input),
    propertyTest = false,
    properties = [
    'sameDay',
    'nextDay',
    'lastDay',
    'nextWeek',
    'lastWeek',
    'sameElse'],

    i,
    property;

    for (i = 0; i < properties.length; i += 1) {
      property = properties[i];
      propertyTest = propertyTest || hasOwnProp(input, property);
    }

    return objectTest && propertyTest;
  }

  function getCalendarFormat(myMoment, now) {
    var diff = myMoment.diff(now, 'days', true);
    return diff < -6 ?
    'sameElse' :
    diff < -1 ?
    'lastWeek' :
    diff < 0 ?
    'lastDay' :
    diff < 1 ?
    'sameDay' :
    diff < 2 ?
    'nextDay' :
    diff < 7 ?
    'nextWeek' :
    'sameElse';
  }

  function calendar$1(time, formats) {
    // Support for single parameter, formats only overload to the calendar function
    if (arguments.length === 1) {
      if (!arguments[0]) {
        time = undefined;
        formats = undefined;
      } else if (isMomentInput(arguments[0])) {
        time = arguments[0];
        formats = undefined;
      } else if (isCalendarSpec(arguments[0])) {
        formats = arguments[0];
        time = undefined;
      }
    }
    // We want to compare the start of today, vs this.
    // Getting start-of-today depends on whether we're local/utc/offset or not.
    var now = time || createLocal(),
    sod = cloneWithOffset(now, this).startOf('day'),
    format = hooks.calendarFormat(this, sod) || 'sameElse',
    output =
    formats && (
    isFunction(formats[format]) ?
    formats[format].call(this, now) :
    formats[format]);

    return this.format(
    output || this.localeData().calendar(format, this, createLocal(now)));

  }

  function clone() {
    return new Moment(this);
  }

  function isAfter(input, units) {
    var localInput = isMoment(input) ? input : createLocal(input);
    if (!(this.isValid() && localInput.isValid())) {
      return false;
    }
    units = normalizeUnits(units) || 'millisecond';
    if (units === 'millisecond') {
      return this.valueOf() > localInput.valueOf();
    } else {
      return localInput.valueOf() < this.clone().startOf(units).valueOf();
    }
  }

  function isBefore(input, units) {
    var localInput = isMoment(input) ? input : createLocal(input);
    if (!(this.isValid() && localInput.isValid())) {
      return false;
    }
    units = normalizeUnits(units) || 'millisecond';
    if (units === 'millisecond') {
      return this.valueOf() < localInput.valueOf();
    } else {
      return this.clone().endOf(units).valueOf() < localInput.valueOf();
    }
  }

  function isBetween(from, to, units, inclusivity) {
    var localFrom = isMoment(from) ? from : createLocal(from),
    localTo = isMoment(to) ? to : createLocal(to);
    if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {
      return false;
    }
    inclusivity = inclusivity || '()';
    return (
      (inclusivity[0] === '(' ?
      this.isAfter(localFrom, units) :
      !this.isBefore(localFrom, units)) && (
      inclusivity[1] === ')' ?
      this.isBefore(localTo, units) :
      !this.isAfter(localTo, units)));

  }

  function isSame(input, units) {
    var localInput = isMoment(input) ? input : createLocal(input),
    inputMs;
    if (!(this.isValid() && localInput.isValid())) {
      return false;
    }
    units = normalizeUnits(units) || 'millisecond';
    if (units === 'millisecond') {
      return this.valueOf() === localInput.valueOf();
    } else {
      inputMs = localInput.valueOf();
      return (
        this.clone().startOf(units).valueOf() <= inputMs &&
        inputMs <= this.clone().endOf(units).valueOf());

    }
  }

  function isSameOrAfter(input, units) {
    return this.isSame(input, units) || this.isAfter(input, units);
  }

  function isSameOrBefore(input, units) {
    return this.isSame(input, units) || this.isBefore(input, units);
  }

  function diff(input, units, asFloat) {
    var that, zoneDelta, output;

    if (!this.isValid()) {
      return NaN;
    }

    that = cloneWithOffset(input, this);

    if (!that.isValid()) {
      return NaN;
    }

    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;

    units = normalizeUnits(units);

    switch (units) {
      case 'year':
        output = monthDiff(this, that) / 12;
        break;
      case 'month':
        output = monthDiff(this, that);
        break;
      case 'quarter':
        output = monthDiff(this, that) / 3;
        break;
      case 'second':
        output = (this - that) / 1e3;
        break; // 1000
      case 'minute':
        output = (this - that) / 6e4;
        break; // 1000 * 60
      case 'hour':
        output = (this - that) / 36e5;
        break; // 1000 * 60 * 60
      case 'day':
        output = (this - that - zoneDelta) / 864e5;
        break; // 1000 * 60 * 60 * 24, negate dst
      case 'week':
        output = (this - that - zoneDelta) / 6048e5;
        break; // 1000 * 60 * 60 * 24 * 7, negate dst
      default:
        output = this - that;}


    return asFloat ? output : absFloor(output);
  }

  function monthDiff(a, b) {
    if (a.date() < b.date()) {
      // end-of-month calculations work correct when the start month has more
      // days than the end month.
      return -monthDiff(b, a);
    }
    // difference in months
    var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),
    // b is in (anchor - 1 month, anchor + 1 month)
    anchor = a.clone().add(wholeMonthDiff, 'months'),
    anchor2,
    adjust;

    if (b - anchor < 0) {
      anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');
      // linear across the month
      adjust = (b - anchor) / (anchor - anchor2);
    } else {
      anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');
      // linear across the month
      adjust = (b - anchor) / (anchor2 - anchor);
    }

    //check for negative zero, return zero if negative zero
    return -(wholeMonthDiff + adjust) || 0;
  }

  hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';
  hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';

  function toString() {
    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');
  }

  function toISOString(keepOffset) {
    if (!this.isValid()) {
      return null;
    }
    var utc = keepOffset !== true,
    m = utc ? this.clone().utc() : this;
    if (m.year() < 0 || m.year() > 9999) {
      return formatMoment(
      m,
      utc ?
      'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' :
      'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');

    }
    if (isFunction(Date.prototype.toISOString)) {
      // native implementation is ~50x faster, use it when we can
      if (utc) {
        return this.toDate().toISOString();
      } else {
        return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).
        toISOString().
        replace('Z', formatMoment(m, 'Z'));
      }
    }
    return formatMoment(
    m,
    utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');

  }

  /**
     * Return a human readable representation of a moment that can
     * also be evaluated to get a new moment which is the same
     *
     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects
     */
  function inspect() {
    if (!this.isValid()) {
      return 'moment.invalid(/* ' + this._i + ' */)';
    }
    var func = 'moment',
    zone = '',
    prefix,
    year,
    datetime,
    suffix;
    if (!this.isLocal()) {
      func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';
      zone = 'Z';
    }
    prefix = '[' + func + '("]';
    year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';
    datetime = '-MM-DD[T]HH:mm:ss.SSS';
    suffix = zone + '[")]';

    return this.format(prefix + year + datetime + suffix);
  }

  function format(inputString) {
    if (!inputString) {
      inputString = this.isUtc() ?
      hooks.defaultFormatUtc :
      hooks.defaultFormat;
    }
    var output = formatMoment(this, inputString);
    return this.localeData().postformat(output);
  }

  function from(time, withoutSuffix) {
    if (
    this.isValid() && (
    isMoment(time) && time.isValid() || createLocal(time).isValid()))
    {
      return createDuration({ to: this, from: time }).
      locale(this.locale()).
      humanize(!withoutSuffix);
    } else {
      return this.localeData().invalidDate();
    }
  }

  function fromNow(withoutSuffix) {
    return this.from(createLocal(), withoutSuffix);
  }

  function to(time, withoutSuffix) {
    if (
    this.isValid() && (
    isMoment(time) && time.isValid() || createLocal(time).isValid()))
    {
      return createDuration({ from: this, to: time }).
      locale(this.locale()).
      humanize(!withoutSuffix);
    } else {
      return this.localeData().invalidDate();
    }
  }

  function toNow(withoutSuffix) {
    return this.to(createLocal(), withoutSuffix);
  }

  // If passed a locale key, it will set the locale for this
  // instance.  Otherwise, it will return the locale configuration
  // variables for this instance.
  function locale(key) {
    var newLocaleData;

    if (key === undefined) {
      return this._locale._abbr;
    } else {
      newLocaleData = getLocale(key);
      if (newLocaleData != null) {
        this._locale = newLocaleData;
      }
      return this;
    }
  }

  var lang = deprecate(
  'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',
  function (key) {
    if (key === undefined) {
      return this.localeData();
    } else {
      return this.locale(key);
    }
  });


  function localeData() {
    return this._locale;
  }

  var MS_PER_SECOND = 1000,
  MS_PER_MINUTE = 60 * MS_PER_SECOND,
  MS_PER_HOUR = 60 * MS_PER_MINUTE,
  MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;

  // actual modulo - handles negative numbers (for dates before 1970):
  function mod$1(dividend, divisor) {
    return (dividend % divisor + divisor) % divisor;
  }

  function localStartOfDate(y, m, d) {
    // the date constructor remaps years 0-99 to 1900-1999
    if (y < 100 && y >= 0) {
      // preserve leap years using a full 400 year cycle, then reset
      return new Date(y + 400, m, d) - MS_PER_400_YEARS;
    } else {
      return new Date(y, m, d).valueOf();
    }
  }

  function utcStartOfDate(y, m, d) {
    // Date.UTC remaps years 0-99 to 1900-1999
    if (y < 100 && y >= 0) {
      // preserve leap years using a full 400 year cycle, then reset
      return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;
    } else {
      return Date.UTC(y, m, d);
    }
  }

  function startOf(units) {
    var time, startOfDate;
    units = normalizeUnits(units);
    if (units === undefined || units === 'millisecond' || !this.isValid()) {
      return this;
    }

    startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;

    switch (units) {
      case 'year':
        time = startOfDate(this.year(), 0, 1);
        break;
      case 'quarter':
        time = startOfDate(
        this.year(),
        this.month() - this.month() % 3,
        1);

        break;
      case 'month':
        time = startOfDate(this.year(), this.month(), 1);
        break;
      case 'week':
        time = startOfDate(
        this.year(),
        this.month(),
        this.date() - this.weekday());

        break;
      case 'isoWeek':
        time = startOfDate(
        this.year(),
        this.month(),
        this.date() - (this.isoWeekday() - 1));

        break;
      case 'day':
      case 'date':
        time = startOfDate(this.year(), this.month(), this.date());
        break;
      case 'hour':
        time = this._d.valueOf();
        time -= mod$1(
        time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),
        MS_PER_HOUR);

        break;
      case 'minute':
        time = this._d.valueOf();
        time -= mod$1(time, MS_PER_MINUTE);
        break;
      case 'second':
        time = this._d.valueOf();
        time -= mod$1(time, MS_PER_SECOND);
        break;}


    this._d.setTime(time);
    hooks.updateOffset(this, true);
    return this;
  }

  function endOf(units) {
    var time, startOfDate;
    units = normalizeUnits(units);
    if (units === undefined || units === 'millisecond' || !this.isValid()) {
      return this;
    }

    startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;

    switch (units) {
      case 'year':
        time = startOfDate(this.year() + 1, 0, 1) - 1;
        break;
      case 'quarter':
        time =
        startOfDate(
        this.year(),
        this.month() - this.month() % 3 + 3,
        1) -
        1;
        break;
      case 'month':
        time = startOfDate(this.year(), this.month() + 1, 1) - 1;
        break;
      case 'week':
        time =
        startOfDate(
        this.year(),
        this.month(),
        this.date() - this.weekday() + 7) -
        1;
        break;
      case 'isoWeek':
        time =
        startOfDate(
        this.year(),
        this.month(),
        this.date() - (this.isoWeekday() - 1) + 7) -
        1;
        break;
      case 'day':
      case 'date':
        time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;
        break;
      case 'hour':
        time = this._d.valueOf();
        time +=
        MS_PER_HOUR -
        mod$1(
        time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),
        MS_PER_HOUR) -

        1;
        break;
      case 'minute':
        time = this._d.valueOf();
        time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;
        break;
      case 'second':
        time = this._d.valueOf();
        time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;
        break;}


    this._d.setTime(time);
    hooks.updateOffset(this, true);
    return this;
  }

  function valueOf() {
    return this._d.valueOf() - (this._offset || 0) * 60000;
  }

  function unix() {
    return Math.floor(this.valueOf() / 1000);
  }

  function toDate() {
    return new Date(this.valueOf());
  }

  function toArray() {
    var m = this;
    return [
    m.year(),
    m.month(),
    m.date(),
    m.hour(),
    m.minute(),
    m.second(),
    m.millisecond()];

  }

  function toObject() {
    var m = this;
    return {
      years: m.year(),
      months: m.month(),
      date: m.date(),
      hours: m.hours(),
      minutes: m.minutes(),
      seconds: m.seconds(),
      milliseconds: m.milliseconds() };

  }

  function toJSON() {
    // new Date(NaN).toJSON() === null
    return this.isValid() ? this.toISOString() : null;
  }

  function isValid$2() {
    return isValid(this);
  }

  function parsingFlags() {
    return extend({}, getParsingFlags(this));
  }

  function invalidAt() {
    return getParsingFlags(this).overflow;
  }

  function creationData() {
    return {
      input: this._i,
      format: this._f,
      locale: this._locale,
      isUTC: this._isUTC,
      strict: this._strict };

  }

  addFormatToken('N', 0, 0, 'eraAbbr');
  addFormatToken('NN', 0, 0, 'eraAbbr');
  addFormatToken('NNN', 0, 0, 'eraAbbr');
  addFormatToken('NNNN', 0, 0, 'eraName');
  addFormatToken('NNNNN', 0, 0, 'eraNarrow');

  addFormatToken('y', ['y', 1], 'yo', 'eraYear');
  addFormatToken('y', ['yy', 2], 0, 'eraYear');
  addFormatToken('y', ['yyy', 3], 0, 'eraYear');
  addFormatToken('y', ['yyyy', 4], 0, 'eraYear');

  addRegexToken('N', matchEraAbbr);
  addRegexToken('NN', matchEraAbbr);
  addRegexToken('NNN', matchEraAbbr);
  addRegexToken('NNNN', matchEraName);
  addRegexToken('NNNNN', matchEraNarrow);

  addParseToken(['N', 'NN', 'NNN', 'NNNN', 'NNNNN'], function (
  input,
  array,
  config,
  token)
  {
    var era = config._locale.erasParse(input, token, config._strict);
    if (era) {
      getParsingFlags(config).era = era;
    } else {
      getParsingFlags(config).invalidEra = input;
    }
  });

  addRegexToken('y', matchUnsigned);
  addRegexToken('yy', matchUnsigned);
  addRegexToken('yyy', matchUnsigned);
  addRegexToken('yyyy', matchUnsigned);
  addRegexToken('yo', matchEraYearOrdinal);

  addParseToken(['y', 'yy', 'yyy', 'yyyy'], YEAR);
  addParseToken(['yo'], function (input, array, config, token) {
    var match;
    if (config._locale._eraYearOrdinalRegex) {
      match = input.match(config._locale._eraYearOrdinalRegex);
    }

    if (config._locale.eraYearOrdinalParse) {
      array[YEAR] = config._locale.eraYearOrdinalParse(input, match);
    } else {
      array[YEAR] = parseInt(input, 10);
    }
  });

  function localeEras(m, format) {
    var i,
    l,
    date,
    eras = this._eras || getLocale('en')._eras;
    for (i = 0, l = eras.length; i < l; ++i) {
      switch (typeof eras[i].since) {
        case 'string':
          // truncate time
          date = hooks(eras[i].since).startOf('day');
          eras[i].since = date.valueOf();
          break;}


      switch (typeof eras[i].until) {
        case 'undefined':
          eras[i].until = +Infinity;
          break;
        case 'string':
          // truncate time
          date = hooks(eras[i].until).startOf('day').valueOf();
          eras[i].until = date.valueOf();
          break;}

    }
    return eras;
  }

  function localeErasParse(eraName, format, strict) {
    var i,
    l,
    eras = this.eras(),
    name,
    abbr,
    narrow;
    eraName = eraName.toUpperCase();

    for (i = 0, l = eras.length; i < l; ++i) {
      name = eras[i].name.toUpperCase();
      abbr = eras[i].abbr.toUpperCase();
      narrow = eras[i].narrow.toUpperCase();

      if (strict) {
        switch (format) {
          case 'N':
          case 'NN':
          case 'NNN':
            if (abbr === eraName) {
              return eras[i];
            }
            break;

          case 'NNNN':
            if (name === eraName) {
              return eras[i];
            }
            break;

          case 'NNNNN':
            if (narrow === eraName) {
              return eras[i];
            }
            break;}

      } else if ([name, abbr, narrow].indexOf(eraName) >= 0) {
        return eras[i];
      }
    }
  }

  function localeErasConvertYear(era, year) {
    var dir = era.since <= era.until ? +1 : -1;
    if (year === undefined) {
      return hooks(era.since).year();
    } else {
      return hooks(era.since).year() + (year - era.offset) * dir;
    }
  }

  function getEraName() {
    var i,
    l,
    val,
    eras = this.localeData().eras();
    for (i = 0, l = eras.length; i < l; ++i) {
      // truncate time
      val = this.clone().startOf('day').valueOf();

      if (eras[i].since <= val && val <= eras[i].until) {
        return eras[i].name;
      }
      if (eras[i].until <= val && val <= eras[i].since) {
        return eras[i].name;
      }
    }

    return '';
  }

  function getEraNarrow() {
    var i,
    l,
    val,
    eras = this.localeData().eras();
    for (i = 0, l = eras.length; i < l; ++i) {
      // truncate time
      val = this.clone().startOf('day').valueOf();

      if (eras[i].since <= val && val <= eras[i].until) {
        return eras[i].narrow;
      }
      if (eras[i].until <= val && val <= eras[i].since) {
        return eras[i].narrow;
      }
    }

    return '';
  }

  function getEraAbbr() {
    var i,
    l,
    val,
    eras = this.localeData().eras();
    for (i = 0, l = eras.length; i < l; ++i) {
      // truncate time
      val = this.clone().startOf('day').valueOf();

      if (eras[i].since <= val && val <= eras[i].until) {
        return eras[i].abbr;
      }
      if (eras[i].until <= val && val <= eras[i].since) {
        return eras[i].abbr;
      }
    }

    return '';
  }

  function getEraYear() {
    var i,
    l,
    dir,
    val,
    eras = this.localeData().eras();
    for (i = 0, l = eras.length; i < l; ++i) {
      dir = eras[i].since <= eras[i].until ? +1 : -1;

      // truncate time
      val = this.clone().startOf('day').valueOf();

      if (
      eras[i].since <= val && val <= eras[i].until ||
      eras[i].until <= val && val <= eras[i].since)
      {
        return (
          (this.year() - hooks(eras[i].since).year()) * dir +
          eras[i].offset);

      }
    }

    return this.year();
  }

  function erasNameRegex(isStrict) {
    if (!hasOwnProp(this, '_erasNameRegex')) {
      computeErasParse.call(this);
    }
    return isStrict ? this._erasNameRegex : this._erasRegex;
  }

  function erasAbbrRegex(isStrict) {
    if (!hasOwnProp(this, '_erasAbbrRegex')) {
      computeErasParse.call(this);
    }
    return isStrict ? this._erasAbbrRegex : this._erasRegex;
  }

  function erasNarrowRegex(isStrict) {
    if (!hasOwnProp(this, '_erasNarrowRegex')) {
      computeErasParse.call(this);
    }
    return isStrict ? this._erasNarrowRegex : this._erasRegex;
  }

  function matchEraAbbr(isStrict, locale) {
    return locale.erasAbbrRegex(isStrict);
  }

  function matchEraName(isStrict, locale) {
    return locale.erasNameRegex(isStrict);
  }

  function matchEraNarrow(isStrict, locale) {
    return locale.erasNarrowRegex(isStrict);
  }

  function matchEraYearOrdinal(isStrict, locale) {
    return locale._eraYearOrdinalRegex || matchUnsigned;
  }

  function computeErasParse() {
    var abbrPieces = [],
    namePieces = [],
    narrowPieces = [],
    mixedPieces = [],
    i,
    l,
    eras = this.eras();

    for (i = 0, l = eras.length; i < l; ++i) {
      namePieces.push(regexEscape(eras[i].name));
      abbrPieces.push(regexEscape(eras[i].abbr));
      narrowPieces.push(regexEscape(eras[i].narrow));

      mixedPieces.push(regexEscape(eras[i].name));
      mixedPieces.push(regexEscape(eras[i].abbr));
      mixedPieces.push(regexEscape(eras[i].narrow));
    }

    this._erasRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
    this._erasNameRegex = new RegExp('^(' + namePieces.join('|') + ')', 'i');
    this._erasAbbrRegex = new RegExp('^(' + abbrPieces.join('|') + ')', 'i');
    this._erasNarrowRegex = new RegExp(
    '^(' + narrowPieces.join('|') + ')',
    'i');

  }

  // FORMATTING

  addFormatToken(0, ['gg', 2], 0, function () {
    return this.weekYear() % 100;
  });

  addFormatToken(0, ['GG', 2], 0, function () {
    return this.isoWeekYear() % 100;
  });

  function addWeekYearFormatToken(token, getter) {
    addFormatToken(0, [token, token.length], 0, getter);
  }

  addWeekYearFormatToken('gggg', 'weekYear');
  addWeekYearFormatToken('ggggg', 'weekYear');
  addWeekYearFormatToken('GGGG', 'isoWeekYear');
  addWeekYearFormatToken('GGGGG', 'isoWeekYear');

  // ALIASES

  addUnitAlias('weekYear', 'gg');
  addUnitAlias('isoWeekYear', 'GG');

  // PRIORITY

  addUnitPriority('weekYear', 1);
  addUnitPriority('isoWeekYear', 1);

  // PARSING

  addRegexToken('G', matchSigned);
  addRegexToken('g', matchSigned);
  addRegexToken('GG', match1to2, match2);
  addRegexToken('gg', match1to2, match2);
  addRegexToken('GGGG', match1to4, match4);
  addRegexToken('gggg', match1to4, match4);
  addRegexToken('GGGGG', match1to6, match6);
  addRegexToken('ggggg', match1to6, match6);

  addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (
  input,
  week,
  config,
  token)
  {
    week[token.substr(0, 2)] = toInt(input);
  });

  addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {
    week[token] = hooks.parseTwoDigitYear(input);
  });

  // MOMENTS

  function getSetWeekYear(input) {
    return getSetWeekYearHelper.call(
    this,
    input,
    this.week(),
    this.weekday(),
    this.localeData()._week.dow,
    this.localeData()._week.doy);

  }

  function getSetISOWeekYear(input) {
    return getSetWeekYearHelper.call(
    this,
    input,
    this.isoWeek(),
    this.isoWeekday(),
    1,
    4);

  }

  function getISOWeeksInYear() {
    return weeksInYear(this.year(), 1, 4);
  }

  function getISOWeeksInISOWeekYear() {
    return weeksInYear(this.isoWeekYear(), 1, 4);
  }

  function getWeeksInYear() {
    var weekInfo = this.localeData()._week;
    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
  }

  function getWeeksInWeekYear() {
    var weekInfo = this.localeData()._week;
    return weeksInYear(this.weekYear(), weekInfo.dow, weekInfo.doy);
  }

  function getSetWeekYearHelper(input, week, weekday, dow, doy) {
    var weeksTarget;
    if (input == null) {
      return weekOfYear(this, dow, doy).year;
    } else {
      weeksTarget = weeksInYear(input, dow, doy);
      if (week > weeksTarget) {
        week = weeksTarget;
      }
      return setWeekAll.call(this, input, week, weekday, dow, doy);
    }
  }

  function setWeekAll(weekYear, week, weekday, dow, doy) {
    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),
    date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);

    this.year(date.getUTCFullYear());
    this.month(date.getUTCMonth());
    this.date(date.getUTCDate());
    return this;
  }

  // FORMATTING

  addFormatToken('Q', 0, 'Qo', 'quarter');

  // ALIASES

  addUnitAlias('quarter', 'Q');

  // PRIORITY

  addUnitPriority('quarter', 7);

  // PARSING

  addRegexToken('Q', match1);
  addParseToken('Q', function (input, array) {
    array[MONTH] = (toInt(input) - 1) * 3;
  });

  // MOMENTS

  function getSetQuarter(input) {
    return input == null ?
    Math.ceil((this.month() + 1) / 3) :
    this.month((input - 1) * 3 + this.month() % 3);
  }

  // FORMATTING

  addFormatToken('D', ['DD', 2], 'Do', 'date');

  // ALIASES

  addUnitAlias('date', 'D');

  // PRIORITY
  addUnitPriority('date', 9);

  // PARSING

  addRegexToken('D', match1to2);
  addRegexToken('DD', match1to2, match2);
  addRegexToken('Do', function (isStrict, locale) {
    // TODO: Remove "ordinalParse" fallback in next major release.
    return isStrict ?
    locale._dayOfMonthOrdinalParse || locale._ordinalParse :
    locale._dayOfMonthOrdinalParseLenient;
  });

  addParseToken(['D', 'DD'], DATE);
  addParseToken('Do', function (input, array) {
    array[DATE] = toInt(input.match(match1to2)[0]);
  });

  // MOMENTS

  var getSetDayOfMonth = makeGetSet('Date', true);

  // FORMATTING

  addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');

  // ALIASES

  addUnitAlias('dayOfYear', 'DDD');

  // PRIORITY
  addUnitPriority('dayOfYear', 4);

  // PARSING

  addRegexToken('DDD', match1to3);
  addRegexToken('DDDD', match3);
  addParseToken(['DDD', 'DDDD'], function (input, array, config) {
    config._dayOfYear = toInt(input);
  });

  // HELPERS

  // MOMENTS

  function getSetDayOfYear(input) {
    var dayOfYear =
    Math.round(
    (this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) +
    1;
    return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');
  }

  // FORMATTING

  addFormatToken('m', ['mm', 2], 0, 'minute');

  // ALIASES

  addUnitAlias('minute', 'm');

  // PRIORITY

  addUnitPriority('minute', 14);

  // PARSING

  addRegexToken('m', match1to2);
  addRegexToken('mm', match1to2, match2);
  addParseToken(['m', 'mm'], MINUTE);

  // MOMENTS

  var getSetMinute = makeGetSet('Minutes', false);

  // FORMATTING

  addFormatToken('s', ['ss', 2], 0, 'second');

  // ALIASES

  addUnitAlias('second', 's');

  // PRIORITY

  addUnitPriority('second', 15);

  // PARSING

  addRegexToken('s', match1to2);
  addRegexToken('ss', match1to2, match2);
  addParseToken(['s', 'ss'], SECOND);

  // MOMENTS

  var getSetSecond = makeGetSet('Seconds', false);

  // FORMATTING

  addFormatToken('S', 0, 0, function () {
    return ~~(this.millisecond() / 100);
  });

  addFormatToken(0, ['SS', 2], 0, function () {
    return ~~(this.millisecond() / 10);
  });

  addFormatToken(0, ['SSS', 3], 0, 'millisecond');
  addFormatToken(0, ['SSSS', 4], 0, function () {
    return this.millisecond() * 10;
  });
  addFormatToken(0, ['SSSSS', 5], 0, function () {
    return this.millisecond() * 100;
  });
  addFormatToken(0, ['SSSSSS', 6], 0, function () {
    return this.millisecond() * 1000;
  });
  addFormatToken(0, ['SSSSSSS', 7], 0, function () {
    return this.millisecond() * 10000;
  });
  addFormatToken(0, ['SSSSSSSS', 8], 0, function () {
    return this.millisecond() * 100000;
  });
  addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {
    return this.millisecond() * 1000000;
  });

  // ALIASES

  addUnitAlias('millisecond', 'ms');

  // PRIORITY

  addUnitPriority('millisecond', 16);

  // PARSING

  addRegexToken('S', match1to3, match1);
  addRegexToken('SS', match1to3, match2);
  addRegexToken('SSS', match1to3, match3);

  var token, getSetMillisecond;
  for (token = 'SSSS'; token.length <= 9; token += 'S') {
    addRegexToken(token, matchUnsigned);
  }

  function parseMs(input, array) {
    array[MILLISECOND] = toInt(('0.' + input) * 1000);
  }

  for (token = 'S'; token.length <= 9; token += 'S') {
    addParseToken(token, parseMs);
  }

  getSetMillisecond = makeGetSet('Milliseconds', false);

  // FORMATTING

  addFormatToken('z', 0, 0, 'zoneAbbr');
  addFormatToken('zz', 0, 0, 'zoneName');

  // MOMENTS

  function getZoneAbbr() {
    return this._isUTC ? 'UTC' : '';
  }

  function getZoneName() {
    return this._isUTC ? 'Coordinated Universal Time' : '';
  }

  var proto = Moment.prototype;

  proto.add = add;
  proto.calendar = calendar$1;
  proto.clone = clone;
  proto.diff = diff;
  proto.endOf = endOf;
  proto.format = format;
  proto.from = from;
  proto.fromNow = fromNow;
  proto.to = to;
  proto.toNow = toNow;
  proto.get = stringGet;
  proto.invalidAt = invalidAt;
  proto.isAfter = isAfter;
  proto.isBefore = isBefore;
  proto.isBetween = isBetween;
  proto.isSame = isSame;
  proto.isSameOrAfter = isSameOrAfter;
  proto.isSameOrBefore = isSameOrBefore;
  proto.isValid = isValid$2;
  proto.lang = lang;
  proto.locale = locale;
  proto.localeData = localeData;
  proto.max = prototypeMax;
  proto.min = prototypeMin;
  proto.parsingFlags = parsingFlags;
  proto.set = stringSet;
  proto.startOf = startOf;
  proto.subtract = subtract;
  proto.toArray = toArray;
  proto.toObject = toObject;
  proto.toDate = toDate;
  proto.toISOString = toISOString;
  proto.inspect = inspect;
  if (typeof Symbol !== 'undefined' && Symbol.for != null) {
    proto[Symbol.for('nodejs.util.inspect.custom')] = function () {
      return 'Moment<' + this.format() + '>';
    };
  }
  proto.toJSON = toJSON;
  proto.toString = toString;
  proto.unix = unix;
  proto.valueOf = valueOf;
  proto.creationData = creationData;
  proto.eraName = getEraName;
  proto.eraNarrow = getEraNarrow;
  proto.eraAbbr = getEraAbbr;
  proto.eraYear = getEraYear;
  proto.year = getSetYear;
  proto.isLeapYear = getIsLeapYear;
  proto.weekYear = getSetWeekYear;
  proto.isoWeekYear = getSetISOWeekYear;
  proto.quarter = proto.quarters = getSetQuarter;
  proto.month = getSetMonth;
  proto.daysInMonth = getDaysInMonth;
  proto.week = proto.weeks = getSetWeek;
  proto.isoWeek = proto.isoWeeks = getSetISOWeek;
  proto.weeksInYear = getWeeksInYear;
  proto.weeksInWeekYear = getWeeksInWeekYear;
  proto.isoWeeksInYear = getISOWeeksInYear;
  proto.isoWeeksInISOWeekYear = getISOWeeksInISOWeekYear;
  proto.date = getSetDayOfMonth;
  proto.day = proto.days = getSetDayOfWeek;
  proto.weekday = getSetLocaleDayOfWeek;
  proto.isoWeekday = getSetISODayOfWeek;
  proto.dayOfYear = getSetDayOfYear;
  proto.hour = proto.hours = getSetHour;
  proto.minute = proto.minutes = getSetMinute;
  proto.second = proto.seconds = getSetSecond;
  proto.millisecond = proto.milliseconds = getSetMillisecond;
  proto.utcOffset = getSetOffset;
  proto.utc = setOffsetToUTC;
  proto.local = setOffsetToLocal;
  proto.parseZone = setOffsetToParsedOffset;
  proto.hasAlignedHourOffset = hasAlignedHourOffset;
  proto.isDST = isDaylightSavingTime;
  proto.isLocal = isLocal;
  proto.isUtcOffset = isUtcOffset;
  proto.isUtc = isUtc;
  proto.isUTC = isUtc;
  proto.zoneAbbr = getZoneAbbr;
  proto.zoneName = getZoneName;
  proto.dates = deprecate(
  'dates accessor is deprecated. Use date instead.',
  getSetDayOfMonth);

  proto.months = deprecate(
  'months accessor is deprecated. Use month instead',
  getSetMonth);

  proto.years = deprecate(
  'years accessor is deprecated. Use year instead',
  getSetYear);

  proto.zone = deprecate(
  'moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/',
  getSetZone);

  proto.isDSTShifted = deprecate(
  'isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information',
  isDaylightSavingTimeShifted);


  function createUnix(input) {
    return createLocal(input * 1000);
  }

  function createInZone() {
    return createLocal.apply(null, arguments).parseZone();
  }

  function preParsePostFormat(string) {
    return string;
  }

  var proto$1 = Locale.prototype;

  proto$1.calendar = calendar;
  proto$1.longDateFormat = longDateFormat;
  proto$1.invalidDate = invalidDate;
  proto$1.ordinal = ordinal;
  proto$1.preparse = preParsePostFormat;
  proto$1.postformat = preParsePostFormat;
  proto$1.relativeTime = relativeTime;
  proto$1.pastFuture = pastFuture;
  proto$1.set = set;
  proto$1.eras = localeEras;
  proto$1.erasParse = localeErasParse;
  proto$1.erasConvertYear = localeErasConvertYear;
  proto$1.erasAbbrRegex = erasAbbrRegex;
  proto$1.erasNameRegex = erasNameRegex;
  proto$1.erasNarrowRegex = erasNarrowRegex;

  proto$1.months = localeMonths;
  proto$1.monthsShort = localeMonthsShort;
  proto$1.monthsParse = localeMonthsParse;
  proto$1.monthsRegex = monthsRegex;
  proto$1.monthsShortRegex = monthsShortRegex;
  proto$1.week = localeWeek;
  proto$1.firstDayOfYear = localeFirstDayOfYear;
  proto$1.firstDayOfWeek = localeFirstDayOfWeek;

  proto$1.weekdays = localeWeekdays;
  proto$1.weekdaysMin = localeWeekdaysMin;
  proto$1.weekdaysShort = localeWeekdaysShort;
  proto$1.weekdaysParse = localeWeekdaysParse;

  proto$1.weekdaysRegex = weekdaysRegex;
  proto$1.weekdaysShortRegex = weekdaysShortRegex;
  proto$1.weekdaysMinRegex = weekdaysMinRegex;

  proto$1.isPM = localeIsPM;
  proto$1.meridiem = localeMeridiem;

  function get$1(format, index, field, setter) {
    var locale = getLocale(),
    utc = createUTC().set(setter, index);
    return locale[field](utc, format);
  }

  function listMonthsImpl(format, index, field) {
    if (isNumber(format)) {
      index = format;
      format = undefined;
    }

    format = format || '';

    if (index != null) {
      return get$1(format, index, field, 'month');
    }

    var i,
    out = [];
    for (i = 0; i < 12; i++) {
      out[i] = get$1(format, i, field, 'month');
    }
    return out;
  }

  // ()
  // (5)
  // (fmt, 5)
  // (fmt)
  // (true)
  // (true, 5)
  // (true, fmt, 5)
  // (true, fmt)
  function listWeekdaysImpl(localeSorted, format, index, field) {
    if (typeof localeSorted === 'boolean') {
      if (isNumber(format)) {
        index = format;
        format = undefined;
      }

      format = format || '';
    } else {
      format = localeSorted;
      index = format;
      localeSorted = false;

      if (isNumber(format)) {
        index = format;
        format = undefined;
      }

      format = format || '';
    }

    var locale = getLocale(),
    shift = localeSorted ? locale._week.dow : 0,
    i,
    out = [];

    if (index != null) {
      return get$1(format, (index + shift) % 7, field, 'day');
    }

    for (i = 0; i < 7; i++) {
      out[i] = get$1(format, (i + shift) % 7, field, 'day');
    }
    return out;
  }

  function listMonths(format, index) {
    return listMonthsImpl(format, index, 'months');
  }

  function listMonthsShort(format, index) {
    return listMonthsImpl(format, index, 'monthsShort');
  }

  function listWeekdays(localeSorted, format, index) {
    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');
  }

  function listWeekdaysShort(localeSorted, format, index) {
    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');
  }

  function listWeekdaysMin(localeSorted, format, index) {
    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');
  }

  getSetGlobalLocale('en', {
    eras: [
    {
      since: '0001-01-01',
      until: +Infinity,
      offset: 1,
      name: 'Anno Domini',
      narrow: 'AD',
      abbr: 'AD' },

    {
      since: '0000-12-31',
      until: -Infinity,
      offset: 1,
      name: 'Before Christ',
      narrow: 'BC',
      abbr: 'BC' }],


    dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
    ordinal: function ordinal(number) {
      var b = number % 10,
      output =
      toInt(number % 100 / 10) === 1 ?
      'th' :
      b === 1 ?
      'st' :
      b === 2 ?
      'nd' :
      b === 3 ?
      'rd' :
      'th';
      return number + output;
    } });


  // Side effect imports

  hooks.lang = deprecate(
  'moment.lang is deprecated. Use moment.locale instead.',
  getSetGlobalLocale);

  hooks.langData = deprecate(
  'moment.langData is deprecated. Use moment.localeData instead.',
  getLocale);


  var mathAbs = Math.abs;

  function abs() {
    var data = this._data;

    this._milliseconds = mathAbs(this._milliseconds);
    this._days = mathAbs(this._days);
    this._months = mathAbs(this._months);

    data.milliseconds = mathAbs(data.milliseconds);
    data.seconds = mathAbs(data.seconds);
    data.minutes = mathAbs(data.minutes);
    data.hours = mathAbs(data.hours);
    data.months = mathAbs(data.months);
    data.years = mathAbs(data.years);

    return this;
  }

  function addSubtract$1(duration, input, value, direction) {
    var other = createDuration(input, value);

    duration._milliseconds += direction * other._milliseconds;
    duration._days += direction * other._days;
    duration._months += direction * other._months;

    return duration._bubble();
  }

  // supports only 2.0-style add(1, 's') or add(duration)
  function add$1(input, value) {
    return addSubtract$1(this, input, value, 1);
  }

  // supports only 2.0-style subtract(1, 's') or subtract(duration)
  function subtract$1(input, value) {
    return addSubtract$1(this, input, value, -1);
  }

  function absCeil(number) {
    if (number < 0) {
      return Math.floor(number);
    } else {
      return Math.ceil(number);
    }
  }

  function bubble() {
    var milliseconds = this._milliseconds,
    days = this._days,
    months = this._months,
    data = this._data,
    seconds,
    minutes,
    hours,
    years,
    monthsFromDays;

    // if we have a mix of positive and negative values, bubble down first
    // check: https://github.com/moment/moment/issues/2166
    if (
    !(
    milliseconds >= 0 && days >= 0 && months >= 0 ||
    milliseconds <= 0 && days <= 0 && months <= 0))

    {
      milliseconds += absCeil(monthsToDays(months) + days) * 864e5;
      days = 0;
      months = 0;
    }

    // The following code bubbles up values, see the tests for
    // examples of what that means.
    data.milliseconds = milliseconds % 1000;

    seconds = absFloor(milliseconds / 1000);
    data.seconds = seconds % 60;

    minutes = absFloor(seconds / 60);
    data.minutes = minutes % 60;

    hours = absFloor(minutes / 60);
    data.hours = hours % 24;

    days += absFloor(hours / 24);

    // convert days to months
    monthsFromDays = absFloor(daysToMonths(days));
    months += monthsFromDays;
    days -= absCeil(monthsToDays(monthsFromDays));

    // 12 months -> 1 year
    years = absFloor(months / 12);
    months %= 12;

    data.days = days;
    data.months = months;
    data.years = years;

    return this;
  }

  function daysToMonths(days) {
    // 400 years have 146097 days (taking into account leap year rules)
    // 400 years have 12 months === 4800
    return days * 4800 / 146097;
  }

  function monthsToDays(months) {
    // the reverse of daysToMonths
    return months * 146097 / 4800;
  }

  function as(units) {
    if (!this.isValid()) {
      return NaN;
    }
    var days,
    months,
    milliseconds = this._milliseconds;

    units = normalizeUnits(units);

    if (units === 'month' || units === 'quarter' || units === 'year') {
      days = this._days + milliseconds / 864e5;
      months = this._months + daysToMonths(days);
      switch (units) {
        case 'month':
          return months;
        case 'quarter':
          return months / 3;
        case 'year':
          return months / 12;}

    } else {
      // handle milliseconds separately because of floating point math errors (issue #1867)
      days = this._days + Math.round(monthsToDays(this._months));
      switch (units) {
        case 'week':
          return days / 7 + milliseconds / 6048e5;
        case 'day':
          return days + milliseconds / 864e5;
        case 'hour':
          return days * 24 + milliseconds / 36e5;
        case 'minute':
          return days * 1440 + milliseconds / 6e4;
        case 'second':
          return days * 86400 + milliseconds / 1000;
        // Math.floor prevents floating point math errors here
        case 'millisecond':
          return Math.floor(days * 864e5) + milliseconds;
        default:
          throw new Error('Unknown unit ' + units);}

    }
  }

  // TODO: Use this.as('ms')?
  function valueOf$1() {
    if (!this.isValid()) {
      return NaN;
    }
    return (
      this._milliseconds +
      this._days * 864e5 +
      this._months % 12 * 2592e6 +
      toInt(this._months / 12) * 31536e6);

  }

  function makeAs(alias) {
    return function () {
      return this.as(alias);
    };
  }

  var asMilliseconds = makeAs('ms'),
  asSeconds = makeAs('s'),
  asMinutes = makeAs('m'),
  asHours = makeAs('h'),
  asDays = makeAs('d'),
  asWeeks = makeAs('w'),
  asMonths = makeAs('M'),
  asQuarters = makeAs('Q'),
  asYears = makeAs('y');

  function clone$1() {
    return createDuration(this);
  }

  function get$2(units) {
    units = normalizeUnits(units);
    return this.isValid() ? this[units + 's']() : NaN;
  }

  function makeGetter(name) {
    return function () {
      return this.isValid() ? this._data[name] : NaN;
    };
  }

  var milliseconds = makeGetter('milliseconds'),
  seconds = makeGetter('seconds'),
  minutes = makeGetter('minutes'),
  hours = makeGetter('hours'),
  days = makeGetter('days'),
  months = makeGetter('months'),
  years = makeGetter('years');

  function weeks() {
    return absFloor(this.days() / 7);
  }

  var round = Math.round,
  thresholds = {
    ss: 44, // a few seconds to seconds
    s: 45, // seconds to minute
    m: 45, // minutes to hour
    h: 22, // hours to day
    d: 26, // days to month/week
    w: null, // weeks to month
    M: 11 // months to year
  };

  // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
  function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {
    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
  }

  function relativeTime$1(posNegDuration, withoutSuffix, thresholds, locale) {
    var duration = createDuration(posNegDuration).abs(),
    seconds = round(duration.as('s')),
    minutes = round(duration.as('m')),
    hours = round(duration.as('h')),
    days = round(duration.as('d')),
    months = round(duration.as('M')),
    weeks = round(duration.as('w')),
    years = round(duration.as('y')),
    a =
    seconds <= thresholds.ss && ['s', seconds] ||
    seconds < thresholds.s && ['ss', seconds] ||
    minutes <= 1 && ['m'] ||
    minutes < thresholds.m && ['mm', minutes] ||
    hours <= 1 && ['h'] ||
    hours < thresholds.h && ['hh', hours] ||
    days <= 1 && ['d'] ||
    days < thresholds.d && ['dd', days];

    if (thresholds.w != null) {
      a =
      a ||
      weeks <= 1 && ['w'] ||
      weeks < thresholds.w && ['ww', weeks];
    }
    a = a ||
    months <= 1 && ['M'] ||
    months < thresholds.M && ['MM', months] ||
    years <= 1 && ['y'] || ['yy', years];

    a[2] = withoutSuffix;
    a[3] = +posNegDuration > 0;
    a[4] = locale;
    return substituteTimeAgo.apply(null, a);
  }

  // This function allows you to set the rounding function for relative time strings
  function getSetRelativeTimeRounding(roundingFunction) {
    if (roundingFunction === undefined) {
      return round;
    }
    if (typeof roundingFunction === 'function') {
      round = roundingFunction;
      return true;
    }
    return false;
  }

  // This function allows you to set a threshold for relative time strings
  function getSetRelativeTimeThreshold(threshold, limit) {
    if (thresholds[threshold] === undefined) {
      return false;
    }
    if (limit === undefined) {
      return thresholds[threshold];
    }
    thresholds[threshold] = limit;
    if (threshold === 's') {
      thresholds.ss = limit - 1;
    }
    return true;
  }

  function humanize(argWithSuffix, argThresholds) {
    if (!this.isValid()) {
      return this.localeData().invalidDate();
    }

    var withSuffix = false,
    th = thresholds,
    locale,
    output;

    if (typeof argWithSuffix === 'object') {
      argThresholds = argWithSuffix;
      argWithSuffix = false;
    }
    if (typeof argWithSuffix === 'boolean') {
      withSuffix = argWithSuffix;
    }
    if (typeof argThresholds === 'object') {
      th = Object.assign({}, thresholds, argThresholds);
      if (argThresholds.s != null && argThresholds.ss == null) {
        th.ss = argThresholds.s - 1;
      }
    }

    locale = this.localeData();
    output = relativeTime$1(this, !withSuffix, th, locale);

    if (withSuffix) {
      output = locale.pastFuture(+this, output);
    }

    return locale.postformat(output);
  }

  var abs$1 = Math.abs;

  function sign(x) {
    return (x > 0) - (x < 0) || +x;
  }

  function toISOString$1() {
    // for ISO strings we do not use the normal bubbling rules:
    //  * milliseconds bubble up until they become hours
    //  * days do not bubble at all
    //  * months bubble up until they become years
    // This is because there is no context-free conversion between hours and days
    // (think of clock changes)
    // and also not between days and months (28-31 days per month)
    if (!this.isValid()) {
      return this.localeData().invalidDate();
    }

    var seconds = abs$1(this._milliseconds) / 1000,
    days = abs$1(this._days),
    months = abs$1(this._months),
    minutes,
    hours,
    years,
    s,
    total = this.asSeconds(),
    totalSign,
    ymSign,
    daysSign,
    hmsSign;

    if (!total) {
      // this is the same as C#'s (Noda) and python (isodate)...
      // but not other JS (goog.date)
      return 'P0D';
    }

    // 3600 seconds -> 60 minutes -> 1 hour
    minutes = absFloor(seconds / 60);
    hours = absFloor(minutes / 60);
    seconds %= 60;
    minutes %= 60;

    // 12 months -> 1 year
    years = absFloor(months / 12);
    months %= 12;

    // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js
    s = seconds ? seconds.toFixed(3).replace(/\.?0+$/, '') : '';

    totalSign = total < 0 ? '-' : '';
    ymSign = sign(this._months) !== sign(total) ? '-' : '';
    daysSign = sign(this._days) !== sign(total) ? '-' : '';
    hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';

    return (
      totalSign +
      'P' + (
      years ? ymSign + years + 'Y' : '') + (
      months ? ymSign + months + 'M' : '') + (
      days ? daysSign + days + 'D' : '') + (
      hours || minutes || seconds ? 'T' : '') + (
      hours ? hmsSign + hours + 'H' : '') + (
      minutes ? hmsSign + minutes + 'M' : '') + (
      seconds ? hmsSign + s + 'S' : ''));

  }

  var proto$2 = Duration.prototype;

  proto$2.isValid = isValid$1;
  proto$2.abs = abs;
  proto$2.add = add$1;
  proto$2.subtract = subtract$1;
  proto$2.as = as;
  proto$2.asMilliseconds = asMilliseconds;
  proto$2.asSeconds = asSeconds;
  proto$2.asMinutes = asMinutes;
  proto$2.asHours = asHours;
  proto$2.asDays = asDays;
  proto$2.asWeeks = asWeeks;
  proto$2.asMonths = asMonths;
  proto$2.asQuarters = asQuarters;
  proto$2.asYears = asYears;
  proto$2.valueOf = valueOf$1;
  proto$2._bubble = bubble;
  proto$2.clone = clone$1;
  proto$2.get = get$2;
  proto$2.milliseconds = milliseconds;
  proto$2.seconds = seconds;
  proto$2.minutes = minutes;
  proto$2.hours = hours;
  proto$2.days = days;
  proto$2.weeks = weeks;
  proto$2.months = months;
  proto$2.years = years;
  proto$2.humanize = humanize;
  proto$2.toISOString = toISOString$1;
  proto$2.toString = toISOString$1;
  proto$2.toJSON = toISOString$1;
  proto$2.locale = locale;
  proto$2.localeData = localeData;

  proto$2.toIsoString = deprecate(
  'toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)',
  toISOString$1);

  proto$2.lang = lang;

  // FORMATTING

  addFormatToken('X', 0, 0, 'unix');
  addFormatToken('x', 0, 0, 'valueOf');

  // PARSING

  addRegexToken('x', matchSigned);
  addRegexToken('X', matchTimestamp);
  addParseToken('X', function (input, array, config) {
    config._d = new Date(parseFloat(input) * 1000);
  });
  addParseToken('x', function (input, array, config) {
    config._d = new Date(toInt(input));
  });

  //! moment.js

  hooks.version = '2.29.1';

  setHookCallback(createLocal);

  hooks.fn = proto;
  hooks.min = min;
  hooks.max = max;
  hooks.now = now;
  hooks.utc = createUTC;
  hooks.unix = createUnix;
  hooks.months = listMonths;
  hooks.isDate = isDate;
  hooks.locale = getSetGlobalLocale;
  hooks.invalid = createInvalid;
  hooks.duration = createDuration;
  hooks.isMoment = isMoment;
  hooks.weekdays = listWeekdays;
  hooks.parseZone = createInZone;
  hooks.localeData = getLocale;
  hooks.isDuration = isDuration;
  hooks.monthsShort = listMonthsShort;
  hooks.weekdaysMin = listWeekdaysMin;
  hooks.defineLocale = defineLocale;
  hooks.updateLocale = updateLocale;
  hooks.locales = listLocales;
  hooks.weekdaysShort = listWeekdaysShort;
  hooks.normalizeUnits = normalizeUnits;
  hooks.relativeTimeRounding = getSetRelativeTimeRounding;
  hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;
  hooks.calendarFormat = getCalendarFormat;
  hooks.prototype = proto;

  // currently HTML5 input type only supports 24-hour formats
  hooks.HTML5_FMT = {
    DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm', // <input type="datetime-local" />
    DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss', // <input type="datetime-local" step="1" />
    DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS', // <input type="datetime-local" step="0.001" />
    DATE: 'YYYY-MM-DD', // <input type="date" />
    TIME: 'HH:mm', // <input type="time" />
    TIME_SECONDS: 'HH:mm:ss', // <input type="time" step="1" />
    TIME_MS: 'HH:mm:ss.SSS', // <input type="time" step="0.001" />
    WEEK: 'GGGG-[W]WW', // <input type="week" />
    MONTH: 'YYYY-MM' // <input type="month" />
  };

  return hooks;

});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! (webpack)/buildin/module.js */ 140)(module)))

/***/ }),
/* 140 */
/*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function(module) {
	if (!module.webpackPolyfill) {
		module.deprecate = function() {};
		module.paths = [];
		// module.parent = undefined by default
		if (!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),
/* 141 */
/*!*****************************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale sync ^\.\/.*$ ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var map = {
	"./af": 142,
	"./af.js": 142,
	"./ar": 143,
	"./ar-dz": 144,
	"./ar-dz.js": 144,
	"./ar-kw": 145,
	"./ar-kw.js": 145,
	"./ar-ly": 146,
	"./ar-ly.js": 146,
	"./ar-ma": 147,
	"./ar-ma.js": 147,
	"./ar-sa": 148,
	"./ar-sa.js": 148,
	"./ar-tn": 149,
	"./ar-tn.js": 149,
	"./ar.js": 143,
	"./az": 150,
	"./az.js": 150,
	"./be": 151,
	"./be.js": 151,
	"./bg": 152,
	"./bg.js": 152,
	"./bm": 153,
	"./bm.js": 153,
	"./bn": 154,
	"./bn-bd": 155,
	"./bn-bd.js": 155,
	"./bn.js": 154,
	"./bo": 156,
	"./bo.js": 156,
	"./br": 157,
	"./br.js": 157,
	"./bs": 158,
	"./bs.js": 158,
	"./ca": 159,
	"./ca.js": 159,
	"./cs": 160,
	"./cs.js": 160,
	"./cv": 161,
	"./cv.js": 161,
	"./cy": 162,
	"./cy.js": 162,
	"./da": 163,
	"./da.js": 163,
	"./de": 164,
	"./de-at": 165,
	"./de-at.js": 165,
	"./de-ch": 166,
	"./de-ch.js": 166,
	"./de.js": 164,
	"./dv": 167,
	"./dv.js": 167,
	"./el": 168,
	"./el.js": 168,
	"./en-au": 169,
	"./en-au.js": 169,
	"./en-ca": 170,
	"./en-ca.js": 170,
	"./en-gb": 171,
	"./en-gb.js": 171,
	"./en-ie": 172,
	"./en-ie.js": 172,
	"./en-il": 173,
	"./en-il.js": 173,
	"./en-in": 174,
	"./en-in.js": 174,
	"./en-nz": 175,
	"./en-nz.js": 175,
	"./en-sg": 176,
	"./en-sg.js": 176,
	"./eo": 177,
	"./eo.js": 177,
	"./es": 178,
	"./es-do": 179,
	"./es-do.js": 179,
	"./es-mx": 180,
	"./es-mx.js": 180,
	"./es-us": 181,
	"./es-us.js": 181,
	"./es.js": 178,
	"./et": 182,
	"./et.js": 182,
	"./eu": 183,
	"./eu.js": 183,
	"./fa": 184,
	"./fa.js": 184,
	"./fi": 185,
	"./fi.js": 185,
	"./fil": 186,
	"./fil.js": 186,
	"./fo": 187,
	"./fo.js": 187,
	"./fr": 188,
	"./fr-ca": 189,
	"./fr-ca.js": 189,
	"./fr-ch": 190,
	"./fr-ch.js": 190,
	"./fr.js": 188,
	"./fy": 191,
	"./fy.js": 191,
	"./ga": 192,
	"./ga.js": 192,
	"./gd": 193,
	"./gd.js": 193,
	"./gl": 194,
	"./gl.js": 194,
	"./gom-deva": 195,
	"./gom-deva.js": 195,
	"./gom-latn": 196,
	"./gom-latn.js": 196,
	"./gu": 197,
	"./gu.js": 197,
	"./he": 198,
	"./he.js": 198,
	"./hi": 199,
	"./hi.js": 199,
	"./hr": 200,
	"./hr.js": 200,
	"./hu": 201,
	"./hu.js": 201,
	"./hy-am": 202,
	"./hy-am.js": 202,
	"./id": 203,
	"./id.js": 203,
	"./is": 204,
	"./is.js": 204,
	"./it": 205,
	"./it-ch": 206,
	"./it-ch.js": 206,
	"./it.js": 205,
	"./ja": 207,
	"./ja.js": 207,
	"./jv": 208,
	"./jv.js": 208,
	"./ka": 209,
	"./ka.js": 209,
	"./kk": 210,
	"./kk.js": 210,
	"./km": 211,
	"./km.js": 211,
	"./kn": 212,
	"./kn.js": 212,
	"./ko": 213,
	"./ko.js": 213,
	"./ku": 214,
	"./ku.js": 214,
	"./ky": 215,
	"./ky.js": 215,
	"./lb": 216,
	"./lb.js": 216,
	"./lo": 217,
	"./lo.js": 217,
	"./lt": 218,
	"./lt.js": 218,
	"./lv": 219,
	"./lv.js": 219,
	"./me": 220,
	"./me.js": 220,
	"./mi": 221,
	"./mi.js": 221,
	"./mk": 222,
	"./mk.js": 222,
	"./ml": 223,
	"./ml.js": 223,
	"./mn": 224,
	"./mn.js": 224,
	"./mr": 225,
	"./mr.js": 225,
	"./ms": 226,
	"./ms-my": 227,
	"./ms-my.js": 227,
	"./ms.js": 226,
	"./mt": 228,
	"./mt.js": 228,
	"./my": 229,
	"./my.js": 229,
	"./nb": 230,
	"./nb.js": 230,
	"./ne": 231,
	"./ne.js": 231,
	"./nl": 232,
	"./nl-be": 233,
	"./nl-be.js": 233,
	"./nl.js": 232,
	"./nn": 234,
	"./nn.js": 234,
	"./oc-lnc": 235,
	"./oc-lnc.js": 235,
	"./pa-in": 236,
	"./pa-in.js": 236,
	"./pl": 237,
	"./pl.js": 237,
	"./pt": 238,
	"./pt-br": 239,
	"./pt-br.js": 239,
	"./pt.js": 238,
	"./ro": 240,
	"./ro.js": 240,
	"./ru": 241,
	"./ru.js": 241,
	"./sd": 242,
	"./sd.js": 242,
	"./se": 243,
	"./se.js": 243,
	"./si": 244,
	"./si.js": 244,
	"./sk": 245,
	"./sk.js": 245,
	"./sl": 246,
	"./sl.js": 246,
	"./sq": 247,
	"./sq.js": 247,
	"./sr": 248,
	"./sr-cyrl": 249,
	"./sr-cyrl.js": 249,
	"./sr.js": 248,
	"./ss": 250,
	"./ss.js": 250,
	"./sv": 251,
	"./sv.js": 251,
	"./sw": 252,
	"./sw.js": 252,
	"./ta": 253,
	"./ta.js": 253,
	"./te": 254,
	"./te.js": 254,
	"./tet": 255,
	"./tet.js": 255,
	"./tg": 256,
	"./tg.js": 256,
	"./th": 257,
	"./th.js": 257,
	"./tk": 258,
	"./tk.js": 258,
	"./tl-ph": 259,
	"./tl-ph.js": 259,
	"./tlh": 260,
	"./tlh.js": 260,
	"./tr": 261,
	"./tr.js": 261,
	"./tzl": 262,
	"./tzl.js": 262,
	"./tzm": 263,
	"./tzm-latn": 264,
	"./tzm-latn.js": 264,
	"./tzm.js": 263,
	"./ug-cn": 265,
	"./ug-cn.js": 265,
	"./uk": 266,
	"./uk.js": 266,
	"./ur": 267,
	"./ur.js": 267,
	"./uz": 268,
	"./uz-latn": 269,
	"./uz-latn.js": 269,
	"./uz.js": 268,
	"./vi": 270,
	"./vi.js": 270,
	"./x-pseudo": 271,
	"./x-pseudo.js": 271,
	"./yo": 272,
	"./yo.js": 272,
	"./zh-cn": 273,
	"./zh-cn.js": 273,
	"./zh-hk": 274,
	"./zh-hk.js": 274,
	"./zh-mo": 275,
	"./zh-mo.js": 275,
	"./zh-tw": 276,
	"./zh-tw.js": 276
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	if(!__webpack_require__.o(map, req)) {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return map[req];
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = 141;

/***/ }),
/* 142 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/af.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Afrikaans [af]
//! author : Werner Mollentze : https://github.com/wernerm

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var af = moment.defineLocale('af', {
    months: 'Januarie_Februarie_Maart_April_Mei_Junie_Julie_Augustus_September_Oktober_November_Desember'.split(
    '_'),

    monthsShort: 'Jan_Feb_Mrt_Apr_Mei_Jun_Jul_Aug_Sep_Okt_Nov_Des'.split('_'),
    weekdays: 'Sondag_Maandag_Dinsdag_Woensdag_Donderdag_Vrydag_Saterdag'.split(
    '_'),

    weekdaysShort: 'Son_Maa_Din_Woe_Don_Vry_Sat'.split('_'),
    weekdaysMin: 'So_Ma_Di_Wo_Do_Vr_Sa'.split('_'),
    meridiemParse: /vm|nm/i,
    isPM: function isPM(input) {
      return /^nm$/i.test(input);
    },
    meridiem: function meridiem(hours, minutes, isLower) {
      if (hours < 12) {
        return isLower ? 'vm' : 'VM';
      } else {
        return isLower ? 'nm' : 'NM';
      }
    },
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd, D MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[Vandag om] LT',
      nextDay: '[Môre om] LT',
      nextWeek: 'dddd [om] LT',
      lastDay: '[Gister om] LT',
      lastWeek: '[Laas] dddd [om] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'oor %s',
      past: '%s gelede',
      s: "'n paar sekondes",
      ss: '%d sekondes',
      m: "'n minuut",
      mm: '%d minute',
      h: "'n uur",
      hh: '%d ure',
      d: "'n dag",
      dd: '%d dae',
      M: "'n maand",
      MM: '%d maande',
      y: "'n jaar",
      yy: '%d jaar' },

    dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
    ordinal: function ordinal(number) {
      return (
        number + (
        number === 1 || number === 8 || number >= 20 ? 'ste' : 'de'));
      // Thanks to Joris Röling : https://github.com/jjupiter
    },
    week: {
      dow: 1, // Maandag is die eerste dag van die week.
      doy: 4 // Die week wat die 4de Januarie bevat is die eerste week van die jaar.
    } });


  return af;

});

/***/ }),
/* 143 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/ar.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Arabic [ar]
//! author : Abdel Said: https://github.com/abdelsaid
//! author : Ahmed Elkhatib
//! author : forabi https://github.com/forabi

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var symbolMap = {
    1: '١',
    2: '٢',
    3: '٣',
    4: '٤',
    5: '٥',
    6: '٦',
    7: '٧',
    8: '٨',
    9: '٩',
    0: '٠' },

  numberMap = {
    '١': '1',
    '٢': '2',
    '٣': '3',
    '٤': '4',
    '٥': '5',
    '٦': '6',
    '٧': '7',
    '٨': '8',
    '٩': '9',
    '٠': '0' },

  pluralForm = function pluralForm(n) {
    return n === 0 ?
    0 :
    n === 1 ?
    1 :
    n === 2 ?
    2 :
    n % 100 >= 3 && n % 100 <= 10 ?
    3 :
    n % 100 >= 11 ?
    4 :
    5;
  },
  plurals = {
    s: [
    'أقل من ثانية',
    'ثانية واحدة',
    ['ثانيتان', 'ثانيتين'],
    '%d ثوان',
    '%d ثانية',
    '%d ثانية'],

    m: [
    'أقل من دقيقة',
    'دقيقة واحدة',
    ['دقيقتان', 'دقيقتين'],
    '%d دقائق',
    '%d دقيقة',
    '%d دقيقة'],

    h: [
    'أقل من ساعة',
    'ساعة واحدة',
    ['ساعتان', 'ساعتين'],
    '%d ساعات',
    '%d ساعة',
    '%d ساعة'],

    d: [
    'أقل من يوم',
    'يوم واحد',
    ['يومان', 'يومين'],
    '%d أيام',
    '%d يومًا',
    '%d يوم'],

    M: [
    'أقل من شهر',
    'شهر واحد',
    ['شهران', 'شهرين'],
    '%d أشهر',
    '%d شهرا',
    '%d شهر'],

    y: [
    'أقل من عام',
    'عام واحد',
    ['عامان', 'عامين'],
    '%d أعوام',
    '%d عامًا',
    '%d عام'] },


  pluralize = function pluralize(u) {
    return function (number, withoutSuffix, string, isFuture) {
      var f = pluralForm(number),
      str = plurals[u][pluralForm(number)];
      if (f === 2) {
        str = str[withoutSuffix ? 0 : 1];
      }
      return str.replace(/%d/i, number);
    };
  },
  months = [
  'يناير',
  'فبراير',
  'مارس',
  'أبريل',
  'مايو',
  'يونيو',
  'يوليو',
  'أغسطس',
  'سبتمبر',
  'أكتوبر',
  'نوفمبر',
  'ديسمبر'];


  var ar = moment.defineLocale('ar', {
    months: months,
    monthsShort: months,
    weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
    weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
    weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: "D/\u200FM/\u200FYYYY",
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd D MMMM YYYY HH:mm' },

    meridiemParse: /ص|م/,
    isPM: function isPM(input) {
      return 'م' === input;
    },
    meridiem: function meridiem(hour, minute, isLower) {
      if (hour < 12) {
        return 'ص';
      } else {
        return 'م';
      }
    },
    calendar: {
      sameDay: '[اليوم عند الساعة] LT',
      nextDay: '[غدًا عند الساعة] LT',
      nextWeek: 'dddd [عند الساعة] LT',
      lastDay: '[أمس عند الساعة] LT',
      lastWeek: 'dddd [عند الساعة] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'بعد %s',
      past: 'منذ %s',
      s: pluralize('s'),
      ss: pluralize('s'),
      m: pluralize('m'),
      mm: pluralize('m'),
      h: pluralize('h'),
      hh: pluralize('h'),
      d: pluralize('d'),
      dd: pluralize('d'),
      M: pluralize('M'),
      MM: pluralize('M'),
      y: pluralize('y'),
      yy: pluralize('y') },

    preparse: function preparse(string) {
      return string.
      replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
        return numberMap[match];
      }).
      replace(/،/g, ',');
    },
    postformat: function postformat(string) {
      return string.
      replace(/\d/g, function (match) {
        return symbolMap[match];
      }).
      replace(/,/g, '،');
    },
    week: {
      dow: 6, // Saturday is the first day of the week.
      doy: 12 // The week that contains Jan 12th is the first week of the year.
    } });


  return ar;

});

/***/ }),
/* 144 */
/*!************************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/ar-dz.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Arabic (Algeria) [ar-dz]
//! author : Amine Roukh: https://github.com/Amine27
//! author : Abdel Said: https://github.com/abdelsaid
//! author : Ahmed Elkhatib
//! author : forabi https://github.com/forabi
//! author : Noureddine LOUAHEDJ : https://github.com/noureddinem

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var pluralForm = function pluralForm(n) {
    return n === 0 ?
    0 :
    n === 1 ?
    1 :
    n === 2 ?
    2 :
    n % 100 >= 3 && n % 100 <= 10 ?
    3 :
    n % 100 >= 11 ?
    4 :
    5;
  },
  plurals = {
    s: [
    'أقل من ثانية',
    'ثانية واحدة',
    ['ثانيتان', 'ثانيتين'],
    '%d ثوان',
    '%d ثانية',
    '%d ثانية'],

    m: [
    'أقل من دقيقة',
    'دقيقة واحدة',
    ['دقيقتان', 'دقيقتين'],
    '%d دقائق',
    '%d دقيقة',
    '%d دقيقة'],

    h: [
    'أقل من ساعة',
    'ساعة واحدة',
    ['ساعتان', 'ساعتين'],
    '%d ساعات',
    '%d ساعة',
    '%d ساعة'],

    d: [
    'أقل من يوم',
    'يوم واحد',
    ['يومان', 'يومين'],
    '%d أيام',
    '%d يومًا',
    '%d يوم'],

    M: [
    'أقل من شهر',
    'شهر واحد',
    ['شهران', 'شهرين'],
    '%d أشهر',
    '%d شهرا',
    '%d شهر'],

    y: [
    'أقل من عام',
    'عام واحد',
    ['عامان', 'عامين'],
    '%d أعوام',
    '%d عامًا',
    '%d عام'] },


  pluralize = function pluralize(u) {
    return function (number, withoutSuffix, string, isFuture) {
      var f = pluralForm(number),
      str = plurals[u][pluralForm(number)];
      if (f === 2) {
        str = str[withoutSuffix ? 0 : 1];
      }
      return str.replace(/%d/i, number);
    };
  },
  months = [
  'جانفي',
  'فيفري',
  'مارس',
  'أفريل',
  'ماي',
  'جوان',
  'جويلية',
  'أوت',
  'سبتمبر',
  'أكتوبر',
  'نوفمبر',
  'ديسمبر'];


  var arDz = moment.defineLocale('ar-dz', {
    months: months,
    monthsShort: months,
    weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
    weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
    weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: "D/\u200FM/\u200FYYYY",
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd D MMMM YYYY HH:mm' },

    meridiemParse: /ص|م/,
    isPM: function isPM(input) {
      return 'م' === input;
    },
    meridiem: function meridiem(hour, minute, isLower) {
      if (hour < 12) {
        return 'ص';
      } else {
        return 'م';
      }
    },
    calendar: {
      sameDay: '[اليوم عند الساعة] LT',
      nextDay: '[غدًا عند الساعة] LT',
      nextWeek: 'dddd [عند الساعة] LT',
      lastDay: '[أمس عند الساعة] LT',
      lastWeek: 'dddd [عند الساعة] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'بعد %s',
      past: 'منذ %s',
      s: pluralize('s'),
      ss: pluralize('s'),
      m: pluralize('m'),
      mm: pluralize('m'),
      h: pluralize('h'),
      hh: pluralize('h'),
      d: pluralize('d'),
      dd: pluralize('d'),
      M: pluralize('M'),
      MM: pluralize('M'),
      y: pluralize('y'),
      yy: pluralize('y') },

    postformat: function postformat(string) {
      return string.replace(/,/g, '،');
    },
    week: {
      dow: 0, // Sunday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return arDz;

});

/***/ }),
/* 145 */
/*!************************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/ar-kw.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Arabic (Kuwait) [ar-kw]
//! author : Nusret Parlak: https://github.com/nusretparlak

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var arKw = moment.defineLocale('ar-kw', {
    months: 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split(
    '_'),

    monthsShort: 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split(
    '_'),

    weekdays: 'الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
    weekdaysShort: 'احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),
    weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd D MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[اليوم على الساعة] LT',
      nextDay: '[غدا على الساعة] LT',
      nextWeek: 'dddd [على الساعة] LT',
      lastDay: '[أمس على الساعة] LT',
      lastWeek: 'dddd [على الساعة] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'في %s',
      past: 'منذ %s',
      s: 'ثوان',
      ss: '%d ثانية',
      m: 'دقيقة',
      mm: '%d دقائق',
      h: 'ساعة',
      hh: '%d ساعات',
      d: 'يوم',
      dd: '%d أيام',
      M: 'شهر',
      MM: '%d أشهر',
      y: 'سنة',
      yy: '%d سنوات' },

    week: {
      dow: 0, // Sunday is the first day of the week.
      doy: 12 // The week that contains Jan 12th is the first week of the year.
    } });


  return arKw;

});

/***/ }),
/* 146 */
/*!************************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/ar-ly.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Arabic (Lybia) [ar-ly]
//! author : Ali Hmer: https://github.com/kikoanis

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var symbolMap = {
    1: '1',
    2: '2',
    3: '3',
    4: '4',
    5: '5',
    6: '6',
    7: '7',
    8: '8',
    9: '9',
    0: '0' },

  pluralForm = function pluralForm(n) {
    return n === 0 ?
    0 :
    n === 1 ?
    1 :
    n === 2 ?
    2 :
    n % 100 >= 3 && n % 100 <= 10 ?
    3 :
    n % 100 >= 11 ?
    4 :
    5;
  },
  plurals = {
    s: [
    'أقل من ثانية',
    'ثانية واحدة',
    ['ثانيتان', 'ثانيتين'],
    '%d ثوان',
    '%d ثانية',
    '%d ثانية'],

    m: [
    'أقل من دقيقة',
    'دقيقة واحدة',
    ['دقيقتان', 'دقيقتين'],
    '%d دقائق',
    '%d دقيقة',
    '%d دقيقة'],

    h: [
    'أقل من ساعة',
    'ساعة واحدة',
    ['ساعتان', 'ساعتين'],
    '%d ساعات',
    '%d ساعة',
    '%d ساعة'],

    d: [
    'أقل من يوم',
    'يوم واحد',
    ['يومان', 'يومين'],
    '%d أيام',
    '%d يومًا',
    '%d يوم'],

    M: [
    'أقل من شهر',
    'شهر واحد',
    ['شهران', 'شهرين'],
    '%d أشهر',
    '%d شهرا',
    '%d شهر'],

    y: [
    'أقل من عام',
    'عام واحد',
    ['عامان', 'عامين'],
    '%d أعوام',
    '%d عامًا',
    '%d عام'] },


  pluralize = function pluralize(u) {
    return function (number, withoutSuffix, string, isFuture) {
      var f = pluralForm(number),
      str = plurals[u][pluralForm(number)];
      if (f === 2) {
        str = str[withoutSuffix ? 0 : 1];
      }
      return str.replace(/%d/i, number);
    };
  },
  months = [
  'يناير',
  'فبراير',
  'مارس',
  'أبريل',
  'مايو',
  'يونيو',
  'يوليو',
  'أغسطس',
  'سبتمبر',
  'أكتوبر',
  'نوفمبر',
  'ديسمبر'];


  var arLy = moment.defineLocale('ar-ly', {
    months: months,
    monthsShort: months,
    weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
    weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
    weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: "D/\u200FM/\u200FYYYY",
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd D MMMM YYYY HH:mm' },

    meridiemParse: /ص|م/,
    isPM: function isPM(input) {
      return 'م' === input;
    },
    meridiem: function meridiem(hour, minute, isLower) {
      if (hour < 12) {
        return 'ص';
      } else {
        return 'م';
      }
    },
    calendar: {
      sameDay: '[اليوم عند الساعة] LT',
      nextDay: '[غدًا عند الساعة] LT',
      nextWeek: 'dddd [عند الساعة] LT',
      lastDay: '[أمس عند الساعة] LT',
      lastWeek: 'dddd [عند الساعة] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'بعد %s',
      past: 'منذ %s',
      s: pluralize('s'),
      ss: pluralize('s'),
      m: pluralize('m'),
      mm: pluralize('m'),
      h: pluralize('h'),
      hh: pluralize('h'),
      d: pluralize('d'),
      dd: pluralize('d'),
      M: pluralize('M'),
      MM: pluralize('M'),
      y: pluralize('y'),
      yy: pluralize('y') },

    preparse: function preparse(string) {
      return string.replace(/،/g, ',');
    },
    postformat: function postformat(string) {
      return string.
      replace(/\d/g, function (match) {
        return symbolMap[match];
      }).
      replace(/,/g, '،');
    },
    week: {
      dow: 6, // Saturday is the first day of the week.
      doy: 12 // The week that contains Jan 12th is the first week of the year.
    } });


  return arLy;

});

/***/ }),
/* 147 */
/*!************************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/ar-ma.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Arabic (Morocco) [ar-ma]
//! author : ElFadili Yassine : https://github.com/ElFadiliY
//! author : Abdel Said : https://github.com/abdelsaid

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var arMa = moment.defineLocale('ar-ma', {
    months: 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split(
    '_'),

    monthsShort: 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split(
    '_'),

    weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
    weekdaysShort: 'احد_اثنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),
    weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd D MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[اليوم على الساعة] LT',
      nextDay: '[غدا على الساعة] LT',
      nextWeek: 'dddd [على الساعة] LT',
      lastDay: '[أمس على الساعة] LT',
      lastWeek: 'dddd [على الساعة] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'في %s',
      past: 'منذ %s',
      s: 'ثوان',
      ss: '%d ثانية',
      m: 'دقيقة',
      mm: '%d دقائق',
      h: 'ساعة',
      hh: '%d ساعات',
      d: 'يوم',
      dd: '%d أيام',
      M: 'شهر',
      MM: '%d أشهر',
      y: 'سنة',
      yy: '%d سنوات' },

    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return arMa;

});

/***/ }),
/* 148 */
/*!************************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/ar-sa.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Arabic (Saudi Arabia) [ar-sa]
//! author : Suhail Alkowaileet : https://github.com/xsoh

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var symbolMap = {
    1: '١',
    2: '٢',
    3: '٣',
    4: '٤',
    5: '٥',
    6: '٦',
    7: '٧',
    8: '٨',
    9: '٩',
    0: '٠' },

  numberMap = {
    '١': '1',
    '٢': '2',
    '٣': '3',
    '٤': '4',
    '٥': '5',
    '٦': '6',
    '٧': '7',
    '٨': '8',
    '٩': '9',
    '٠': '0' };


  var arSa = moment.defineLocale('ar-sa', {
    months: 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split(
    '_'),

    monthsShort: 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split(
    '_'),

    weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
    weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
    weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd D MMMM YYYY HH:mm' },

    meridiemParse: /ص|م/,
    isPM: function isPM(input) {
      return 'م' === input;
    },
    meridiem: function meridiem(hour, minute, isLower) {
      if (hour < 12) {
        return 'ص';
      } else {
        return 'م';
      }
    },
    calendar: {
      sameDay: '[اليوم على الساعة] LT',
      nextDay: '[غدا على الساعة] LT',
      nextWeek: 'dddd [على الساعة] LT',
      lastDay: '[أمس على الساعة] LT',
      lastWeek: 'dddd [على الساعة] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'في %s',
      past: 'منذ %s',
      s: 'ثوان',
      ss: '%d ثانية',
      m: 'دقيقة',
      mm: '%d دقائق',
      h: 'ساعة',
      hh: '%d ساعات',
      d: 'يوم',
      dd: '%d أيام',
      M: 'شهر',
      MM: '%d أشهر',
      y: 'سنة',
      yy: '%d سنوات' },

    preparse: function preparse(string) {
      return string.
      replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
        return numberMap[match];
      }).
      replace(/،/g, ',');
    },
    postformat: function postformat(string) {
      return string.
      replace(/\d/g, function (match) {
        return symbolMap[match];
      }).
      replace(/,/g, '،');
    },
    week: {
      dow: 0, // Sunday is the first day of the week.
      doy: 6 // The week that contains Jan 6th is the first week of the year.
    } });


  return arSa;

});

/***/ }),
/* 149 */
/*!************************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/ar-tn.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale  :  Arabic (Tunisia) [ar-tn]
//! author : Nader Toukabri : https://github.com/naderio

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var arTn = moment.defineLocale('ar-tn', {
    months: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split(
    '_'),

    monthsShort: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split(
    '_'),

    weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
    weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
    weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd D MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[اليوم على الساعة] LT',
      nextDay: '[غدا على الساعة] LT',
      nextWeek: 'dddd [على الساعة] LT',
      lastDay: '[أمس على الساعة] LT',
      lastWeek: 'dddd [على الساعة] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'في %s',
      past: 'منذ %s',
      s: 'ثوان',
      ss: '%d ثانية',
      m: 'دقيقة',
      mm: '%d دقائق',
      h: 'ساعة',
      hh: '%d ساعات',
      d: 'يوم',
      dd: '%d أيام',
      M: 'شهر',
      MM: '%d أشهر',
      y: 'سنة',
      yy: '%d سنوات' },

    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return arTn;

});

/***/ }),
/* 150 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/az.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Azerbaijani [az]
//! author : topchiyev : https://github.com/topchiyev

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var suffixes = {
    1: '-inci',
    5: '-inci',
    8: '-inci',
    70: '-inci',
    80: '-inci',
    2: '-nci',
    7: '-nci',
    20: '-nci',
    50: '-nci',
    3: '-üncü',
    4: '-üncü',
    100: '-üncü',
    6: '-ncı',
    9: '-uncu',
    10: '-uncu',
    30: '-uncu',
    60: '-ıncı',
    90: '-ıncı' };


  var az = moment.defineLocale('az', {
    months: 'yanvar_fevral_mart_aprel_may_iyun_iyul_avqust_sentyabr_oktyabr_noyabr_dekabr'.split(
    '_'),

    monthsShort: 'yan_fev_mar_apr_may_iyn_iyl_avq_sen_okt_noy_dek'.split('_'),
    weekdays: 'Bazar_Bazar ertəsi_Çərşənbə axşamı_Çərşənbə_Cümə axşamı_Cümə_Şənbə'.split(
    '_'),

    weekdaysShort: 'Baz_BzE_ÇAx_Çər_CAx_Cüm_Şən'.split('_'),
    weekdaysMin: 'Bz_BE_ÇA_Çə_CA_Cü_Şə'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD.MM.YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd, D MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[bugün saat] LT',
      nextDay: '[sabah saat] LT',
      nextWeek: '[gələn həftə] dddd [saat] LT',
      lastDay: '[dünən] LT',
      lastWeek: '[keçən həftə] dddd [saat] LT',
      sameElse: 'L' },

    relativeTime: {
      future: '%s sonra',
      past: '%s əvvəl',
      s: 'bir neçə saniyə',
      ss: '%d saniyə',
      m: 'bir dəqiqə',
      mm: '%d dəqiqə',
      h: 'bir saat',
      hh: '%d saat',
      d: 'bir gün',
      dd: '%d gün',
      M: 'bir ay',
      MM: '%d ay',
      y: 'bir il',
      yy: '%d il' },

    meridiemParse: /gecə|səhər|gündüz|axşam/,
    isPM: function isPM(input) {
      return /^(gündüz|axşam)$/.test(input);
    },
    meridiem: function meridiem(hour, minute, isLower) {
      if (hour < 4) {
        return 'gecə';
      } else if (hour < 12) {
        return 'səhər';
      } else if (hour < 17) {
        return 'gündüz';
      } else {
        return 'axşam';
      }
    },
    dayOfMonthOrdinalParse: /\d{1,2}-(ıncı|inci|nci|üncü|ncı|uncu)/,
    ordinal: function ordinal(number) {
      if (number === 0) {
        // special case for zero
        return number + '-ıncı';
      }
      var a = number % 10,
      b = number % 100 - a,
      c = number >= 100 ? 100 : null;
      return number + (suffixes[a] || suffixes[b] || suffixes[c]);
    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 7 // The week that contains Jan 7th is the first week of the year.
    } });


  return az;

});

/***/ }),
/* 151 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/be.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Belarusian [be]
//! author : Dmitry Demidov : https://github.com/demidov91
//! author: Praleska: http://praleska.pro/
//! Author : Menelion Elensúle : https://github.com/Oire

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  function plural(word, num) {
    var forms = word.split('_');
    return num % 10 === 1 && num % 100 !== 11 ?
    forms[0] :
    num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ?
    forms[1] :
    forms[2];
  }
  function relativeTimeWithPlural(number, withoutSuffix, key) {
    var format = {
      ss: withoutSuffix ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд',
      mm: withoutSuffix ? 'хвіліна_хвіліны_хвілін' : 'хвіліну_хвіліны_хвілін',
      hh: withoutSuffix ? 'гадзіна_гадзіны_гадзін' : 'гадзіну_гадзіны_гадзін',
      dd: 'дзень_дні_дзён',
      MM: 'месяц_месяцы_месяцаў',
      yy: 'год_гады_гадоў' };

    if (key === 'm') {
      return withoutSuffix ? 'хвіліна' : 'хвіліну';
    } else if (key === 'h') {
      return withoutSuffix ? 'гадзіна' : 'гадзіну';
    } else {
      return number + ' ' + plural(format[key], +number);
    }
  }

  var be = moment.defineLocale('be', {
    months: {
      format: 'студзеня_лютага_сакавіка_красавіка_траўня_чэрвеня_ліпеня_жніўня_верасня_кастрычніка_лістапада_снежня'.split(
      '_'),

      standalone: 'студзень_люты_сакавік_красавік_травень_чэрвень_ліпень_жнівень_верасень_кастрычнік_лістапад_снежань'.split(
      '_') },


    monthsShort: 'студ_лют_сак_крас_трав_чэрв_ліп_жнів_вер_каст_ліст_снеж'.split(
    '_'),

    weekdays: {
      format: 'нядзелю_панядзелак_аўторак_сераду_чацвер_пятніцу_суботу'.split(
      '_'),

      standalone: 'нядзеля_панядзелак_аўторак_серада_чацвер_пятніца_субота'.split(
      '_'),

      isFormat: /\[ ?[Ууў] ?(?:мінулую|наступную)? ?\] ?dddd/ },

    weekdaysShort: 'нд_пн_ат_ср_чц_пт_сб'.split('_'),
    weekdaysMin: 'нд_пн_ат_ср_чц_пт_сб'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD.MM.YYYY',
      LL: 'D MMMM YYYY г.',
      LLL: 'D MMMM YYYY г., HH:mm',
      LLLL: 'dddd, D MMMM YYYY г., HH:mm' },

    calendar: {
      sameDay: '[Сёння ў] LT',
      nextDay: '[Заўтра ў] LT',
      lastDay: '[Учора ў] LT',
      nextWeek: function nextWeek() {
        return '[У] dddd [ў] LT';
      },
      lastWeek: function lastWeek() {
        switch (this.day()) {
          case 0:
          case 3:
          case 5:
          case 6:
            return '[У мінулую] dddd [ў] LT';
          case 1:
          case 2:
          case 4:
            return '[У мінулы] dddd [ў] LT';}

      },
      sameElse: 'L' },

    relativeTime: {
      future: 'праз %s',
      past: '%s таму',
      s: 'некалькі секунд',
      m: relativeTimeWithPlural,
      mm: relativeTimeWithPlural,
      h: relativeTimeWithPlural,
      hh: relativeTimeWithPlural,
      d: 'дзень',
      dd: relativeTimeWithPlural,
      M: 'месяц',
      MM: relativeTimeWithPlural,
      y: 'год',
      yy: relativeTimeWithPlural },

    meridiemParse: /ночы|раніцы|дня|вечара/,
    isPM: function isPM(input) {
      return /^(дня|вечара)$/.test(input);
    },
    meridiem: function meridiem(hour, minute, isLower) {
      if (hour < 4) {
        return 'ночы';
      } else if (hour < 12) {
        return 'раніцы';
      } else if (hour < 17) {
        return 'дня';
      } else {
        return 'вечара';
      }
    },
    dayOfMonthOrdinalParse: /\d{1,2}-(і|ы|га)/,
    ordinal: function ordinal(number, period) {
      switch (period) {
        case 'M':
        case 'd':
        case 'DDD':
        case 'w':
        case 'W':
          return (number % 10 === 2 || number % 10 === 3) &&
          number % 100 !== 12 &&
          number % 100 !== 13 ?
          number + '-і' :
          number + '-ы';
        case 'D':
          return number + '-га';
        default:
          return number;}

    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 7 // The week that contains Jan 7th is the first week of the year.
    } });


  return be;

});

/***/ }),
/* 152 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/bg.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Bulgarian [bg]
//! author : Krasen Borisov : https://github.com/kraz

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var bg = moment.defineLocale('bg', {
    months: 'януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември'.split(
    '_'),

    monthsShort: 'яну_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек'.split('_'),
    weekdays: 'неделя_понеделник_вторник_сряда_четвъртък_петък_събота'.split(
    '_'),

    weekdaysShort: 'нед_пон_вто_сря_чет_пет_съб'.split('_'),
    weekdaysMin: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
    longDateFormat: {
      LT: 'H:mm',
      LTS: 'H:mm:ss',
      L: 'D.MM.YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY H:mm',
      LLLL: 'dddd, D MMMM YYYY H:mm' },

    calendar: {
      sameDay: '[Днес в] LT',
      nextDay: '[Утре в] LT',
      nextWeek: 'dddd [в] LT',
      lastDay: '[Вчера в] LT',
      lastWeek: function lastWeek() {
        switch (this.day()) {
          case 0:
          case 3:
          case 6:
            return '[Миналата] dddd [в] LT';
          case 1:
          case 2:
          case 4:
          case 5:
            return '[Миналия] dddd [в] LT';}

      },
      sameElse: 'L' },

    relativeTime: {
      future: 'след %s',
      past: 'преди %s',
      s: 'няколко секунди',
      ss: '%d секунди',
      m: 'минута',
      mm: '%d минути',
      h: 'час',
      hh: '%d часа',
      d: 'ден',
      dd: '%d дена',
      w: 'седмица',
      ww: '%d седмици',
      M: 'месец',
      MM: '%d месеца',
      y: 'година',
      yy: '%d години' },

    dayOfMonthOrdinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
    ordinal: function ordinal(number) {
      var lastDigit = number % 10,
      last2Digits = number % 100;
      if (number === 0) {
        return number + '-ев';
      } else if (last2Digits === 0) {
        return number + '-ен';
      } else if (last2Digits > 10 && last2Digits < 20) {
        return number + '-ти';
      } else if (lastDigit === 1) {
        return number + '-ви';
      } else if (lastDigit === 2) {
        return number + '-ри';
      } else if (lastDigit === 7 || lastDigit === 8) {
        return number + '-ми';
      } else {
        return number + '-ти';
      }
    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 7 // The week that contains Jan 7th is the first week of the year.
    } });


  return bg;

});

/***/ }),
/* 153 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/bm.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Bambara [bm]
//! author : Estelle Comment : https://github.com/estellecomment

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var bm = moment.defineLocale('bm', {
    months: 'Zanwuyekalo_Fewuruyekalo_Marisikalo_Awirilikalo_Mɛkalo_Zuwɛnkalo_Zuluyekalo_Utikalo_Sɛtanburukalo_ɔkutɔburukalo_Nowanburukalo_Desanburukalo'.split(
    '_'),

    monthsShort: 'Zan_Few_Mar_Awi_Mɛ_Zuw_Zul_Uti_Sɛt_ɔku_Now_Des'.split('_'),
    weekdays: 'Kari_Ntɛnɛn_Tarata_Araba_Alamisa_Juma_Sibiri'.split('_'),
    weekdaysShort: 'Kar_Ntɛ_Tar_Ara_Ala_Jum_Sib'.split('_'),
    weekdaysMin: 'Ka_Nt_Ta_Ar_Al_Ju_Si'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'MMMM [tile] D [san] YYYY',
      LLL: 'MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm',
      LLLL: 'dddd MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm' },

    calendar: {
      sameDay: '[Bi lɛrɛ] LT',
      nextDay: '[Sini lɛrɛ] LT',
      nextWeek: 'dddd [don lɛrɛ] LT',
      lastDay: '[Kunu lɛrɛ] LT',
      lastWeek: 'dddd [tɛmɛnen lɛrɛ] LT',
      sameElse: 'L' },

    relativeTime: {
      future: '%s kɔnɔ',
      past: 'a bɛ %s bɔ',
      s: 'sanga dama dama',
      ss: 'sekondi %d',
      m: 'miniti kelen',
      mm: 'miniti %d',
      h: 'lɛrɛ kelen',
      hh: 'lɛrɛ %d',
      d: 'tile kelen',
      dd: 'tile %d',
      M: 'kalo kelen',
      MM: 'kalo %d',
      y: 'san kelen',
      yy: 'san %d' },

    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return bm;

});

/***/ }),
/* 154 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/bn.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Bengali [bn]
//! author : Kaushik Gandhi : https://github.com/kaushikgandhi

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var symbolMap = {
    1: '১',
    2: '২',
    3: '৩',
    4: '৪',
    5: '৫',
    6: '৬',
    7: '৭',
    8: '৮',
    9: '৯',
    0: '০' },

  numberMap = {
    '১': '1',
    '২': '2',
    '৩': '3',
    '৪': '4',
    '৫': '5',
    '৬': '6',
    '৭': '7',
    '৮': '8',
    '৯': '9',
    '০': '0' };


  var bn = moment.defineLocale('bn', {
    months: 'জানুয়ারি_ফেব্রুয়ারি_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর'.split(
    '_'),

    monthsShort: 'জানু_ফেব্রু_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্ট_অক্টো_নভে_ডিসে'.split(
    '_'),

    weekdays: 'রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পতিবার_শুক্রবার_শনিবার'.split(
    '_'),

    weekdaysShort: 'রবি_সোম_মঙ্গল_বুধ_বৃহস্পতি_শুক্র_শনি'.split('_'),
    weekdaysMin: 'রবি_সোম_মঙ্গল_বুধ_বৃহ_শুক্র_শনি'.split('_'),
    longDateFormat: {
      LT: 'A h:mm সময়',
      LTS: 'A h:mm:ss সময়',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY, A h:mm সময়',
      LLLL: 'dddd, D MMMM YYYY, A h:mm সময়' },

    calendar: {
      sameDay: '[আজ] LT',
      nextDay: '[আগামীকাল] LT',
      nextWeek: 'dddd, LT',
      lastDay: '[গতকাল] LT',
      lastWeek: '[গত] dddd, LT',
      sameElse: 'L' },

    relativeTime: {
      future: '%s পরে',
      past: '%s আগে',
      s: 'কয়েক সেকেন্ড',
      ss: '%d সেকেন্ড',
      m: 'এক মিনিট',
      mm: '%d মিনিট',
      h: 'এক ঘন্টা',
      hh: '%d ঘন্টা',
      d: 'এক দিন',
      dd: '%d দিন',
      M: 'এক মাস',
      MM: '%d মাস',
      y: 'এক বছর',
      yy: '%d বছর' },

    preparse: function preparse(string) {
      return string.replace(/[১২৩৪৫৬৭৮৯০]/g, function (match) {
        return numberMap[match];
      });
    },
    postformat: function postformat(string) {
      return string.replace(/\d/g, function (match) {
        return symbolMap[match];
      });
    },
    meridiemParse: /রাত|সকাল|দুপুর|বিকাল|রাত/,
    meridiemHour: function meridiemHour(hour, meridiem) {
      if (hour === 12) {
        hour = 0;
      }
      if (
      meridiem === 'রাত' && hour >= 4 ||
      meridiem === 'দুপুর' && hour < 5 ||
      meridiem === 'বিকাল')
      {
        return hour + 12;
      } else {
        return hour;
      }
    },
    meridiem: function meridiem(hour, minute, isLower) {
      if (hour < 4) {
        return 'রাত';
      } else if (hour < 10) {
        return 'সকাল';
      } else if (hour < 17) {
        return 'দুপুর';
      } else if (hour < 20) {
        return 'বিকাল';
      } else {
        return 'রাত';
      }
    },
    week: {
      dow: 0, // Sunday is the first day of the week.
      doy: 6 // The week that contains Jan 6th is the first week of the year.
    } });


  return bn;

});

/***/ }),
/* 155 */
/*!************************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/bn-bd.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Bengali (Bangladesh) [bn-bd]
//! author : Asraf Hossain Patoary : https://github.com/ashwoolford

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var symbolMap = {
    1: '১',
    2: '২',
    3: '৩',
    4: '৪',
    5: '৫',
    6: '৬',
    7: '৭',
    8: '৮',
    9: '৯',
    0: '০' },

  numberMap = {
    '১': '1',
    '২': '2',
    '৩': '3',
    '৪': '4',
    '৫': '5',
    '৬': '6',
    '৭': '7',
    '৮': '8',
    '৯': '9',
    '০': '0' };


  var bnBd = moment.defineLocale('bn-bd', {
    months: 'জানুয়ারি_ফেব্রুয়ারি_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর'.split(
    '_'),

    monthsShort: 'জানু_ফেব্রু_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্ট_অক্টো_নভে_ডিসে'.split(
    '_'),

    weekdays: 'রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পতিবার_শুক্রবার_শনিবার'.split(
    '_'),

    weekdaysShort: 'রবি_সোম_মঙ্গল_বুধ_বৃহস্পতি_শুক্র_শনি'.split('_'),
    weekdaysMin: 'রবি_সোম_মঙ্গল_বুধ_বৃহ_শুক্র_শনি'.split('_'),
    longDateFormat: {
      LT: 'A h:mm সময়',
      LTS: 'A h:mm:ss সময়',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY, A h:mm সময়',
      LLLL: 'dddd, D MMMM YYYY, A h:mm সময়' },

    calendar: {
      sameDay: '[আজ] LT',
      nextDay: '[আগামীকাল] LT',
      nextWeek: 'dddd, LT',
      lastDay: '[গতকাল] LT',
      lastWeek: '[গত] dddd, LT',
      sameElse: 'L' },

    relativeTime: {
      future: '%s পরে',
      past: '%s আগে',
      s: 'কয়েক সেকেন্ড',
      ss: '%d সেকেন্ড',
      m: 'এক মিনিট',
      mm: '%d মিনিট',
      h: 'এক ঘন্টা',
      hh: '%d ঘন্টা',
      d: 'এক দিন',
      dd: '%d দিন',
      M: 'এক মাস',
      MM: '%d মাস',
      y: 'এক বছর',
      yy: '%d বছর' },

    preparse: function preparse(string) {
      return string.replace(/[১২৩৪৫৬৭৮৯০]/g, function (match) {
        return numberMap[match];
      });
    },
    postformat: function postformat(string) {
      return string.replace(/\d/g, function (match) {
        return symbolMap[match];
      });
    },

    meridiemParse: /রাত|ভোর|সকাল|দুপুর|বিকাল|সন্ধ্যা|রাত/,
    meridiemHour: function meridiemHour(hour, meridiem) {
      if (hour === 12) {
        hour = 0;
      }
      if (meridiem === 'রাত') {
        return hour < 4 ? hour : hour + 12;
      } else if (meridiem === 'ভোর') {
        return hour;
      } else if (meridiem === 'সকাল') {
        return hour;
      } else if (meridiem === 'দুপুর') {
        return hour >= 3 ? hour : hour + 12;
      } else if (meridiem === 'বিকাল') {
        return hour + 12;
      } else if (meridiem === 'সন্ধ্যা') {
        return hour + 12;
      }
    },

    meridiem: function meridiem(hour, minute, isLower) {
      if (hour < 4) {
        return 'রাত';
      } else if (hour < 6) {
        return 'ভোর';
      } else if (hour < 12) {
        return 'সকাল';
      } else if (hour < 15) {
        return 'দুপুর';
      } else if (hour < 18) {
        return 'বিকাল';
      } else if (hour < 20) {
        return 'সন্ধ্যা';
      } else {
        return 'রাত';
      }
    },
    week: {
      dow: 0, // Sunday is the first day of the week.
      doy: 6 // The week that contains Jan 6th is the first week of the year.
    } });


  return bnBd;

});

/***/ }),
/* 156 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/bo.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Tibetan [bo]
//! author : Thupten N. Chakrishar : https://github.com/vajradog

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var symbolMap = {
    1: '༡',
    2: '༢',
    3: '༣',
    4: '༤',
    5: '༥',
    6: '༦',
    7: '༧',
    8: '༨',
    9: '༩',
    0: '༠' },

  numberMap = {
    '༡': '1',
    '༢': '2',
    '༣': '3',
    '༤': '4',
    '༥': '5',
    '༦': '6',
    '༧': '7',
    '༨': '8',
    '༩': '9',
    '༠': '0' };


  var bo = moment.defineLocale('bo', {
    months: 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split(
    '_'),

    monthsShort: 'ཟླ་1_ཟླ་2_ཟླ་3_ཟླ་4_ཟླ་5_ཟླ་6_ཟླ་7_ཟླ་8_ཟླ་9_ཟླ་10_ཟླ་11_ཟླ་12'.split(
    '_'),

    monthsShortRegex: /^(ཟླ་\d{1,2})/,
    monthsParseExact: true,
    weekdays: 'གཟའ་ཉི་མ་_གཟའ་ཟླ་བ་_གཟའ་མིག་དམར་_གཟའ་ལྷག་པ་_གཟའ་ཕུར་བུ_གཟའ་པ་སངས་_གཟའ་སྤེན་པ་'.split(
    '_'),

    weekdaysShort: 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split(
    '_'),

    weekdaysMin: 'ཉི_ཟླ_མིག_ལྷག_ཕུར_སངས_སྤེན'.split('_'),
    longDateFormat: {
      LT: 'A h:mm',
      LTS: 'A h:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY, A h:mm',
      LLLL: 'dddd, D MMMM YYYY, A h:mm' },

    calendar: {
      sameDay: '[དི་རིང] LT',
      nextDay: '[སང་ཉིན] LT',
      nextWeek: '[བདུན་ཕྲག་རྗེས་མ], LT',
      lastDay: '[ཁ་སང] LT',
      lastWeek: '[བདུན་ཕྲག་མཐའ་མ] dddd, LT',
      sameElse: 'L' },

    relativeTime: {
      future: '%s ལ་',
      past: '%s སྔན་ལ',
      s: 'ལམ་སང',
      ss: '%d སྐར་ཆ།',
      m: 'སྐར་མ་གཅིག',
      mm: '%d སྐར་མ',
      h: 'ཆུ་ཚོད་གཅིག',
      hh: '%d ཆུ་ཚོད',
      d: 'ཉིན་གཅིག',
      dd: '%d ཉིན་',
      M: 'ཟླ་བ་གཅིག',
      MM: '%d ཟླ་བ',
      y: 'ལོ་གཅིག',
      yy: '%d ལོ' },

    preparse: function preparse(string) {
      return string.replace(/[༡༢༣༤༥༦༧༨༩༠]/g, function (match) {
        return numberMap[match];
      });
    },
    postformat: function postformat(string) {
      return string.replace(/\d/g, function (match) {
        return symbolMap[match];
      });
    },
    meridiemParse: /མཚན་མོ|ཞོགས་ཀས|ཉིན་གུང|དགོང་དག|མཚན་མོ/,
    meridiemHour: function meridiemHour(hour, meridiem) {
      if (hour === 12) {
        hour = 0;
      }
      if (
      meridiem === 'མཚན་མོ' && hour >= 4 ||
      meridiem === 'ཉིན་གུང' && hour < 5 ||
      meridiem === 'དགོང་དག')
      {
        return hour + 12;
      } else {
        return hour;
      }
    },
    meridiem: function meridiem(hour, minute, isLower) {
      if (hour < 4) {
        return 'མཚན་མོ';
      } else if (hour < 10) {
        return 'ཞོགས་ཀས';
      } else if (hour < 17) {
        return 'ཉིན་གུང';
      } else if (hour < 20) {
        return 'དགོང་དག';
      } else {
        return 'མཚན་མོ';
      }
    },
    week: {
      dow: 0, // Sunday is the first day of the week.
      doy: 6 // The week that contains Jan 6th is the first week of the year.
    } });


  return bo;

});

/***/ }),
/* 157 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/br.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Breton [br]
//! author : Jean-Baptiste Le Duigou : https://github.com/jbleduigou

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  function relativeTimeWithMutation(number, withoutSuffix, key) {
    var format = {
      mm: 'munutenn',
      MM: 'miz',
      dd: 'devezh' };

    return number + ' ' + mutation(format[key], number);
  }
  function specialMutationForYears(number) {
    switch (lastNumber(number)) {
      case 1:
      case 3:
      case 4:
      case 5:
      case 9:
        return number + ' bloaz';
      default:
        return number + ' vloaz';}

  }
  function lastNumber(number) {
    if (number > 9) {
      return lastNumber(number % 10);
    }
    return number;
  }
  function mutation(text, number) {
    if (number === 2) {
      return softMutation(text);
    }
    return text;
  }
  function softMutation(text) {
    var mutationTable = {
      m: 'v',
      b: 'v',
      d: 'z' };

    if (mutationTable[text.charAt(0)] === undefined) {
      return text;
    }
    return mutationTable[text.charAt(0)] + text.substring(1);
  }

  var monthsParse = [
  /^gen/i,
  /^c[ʼ\']hwe/i,
  /^meu/i,
  /^ebr/i,
  /^mae/i,
  /^(mez|eve)/i,
  /^gou/i,
  /^eos/i,
  /^gwe/i,
  /^her/i,
  /^du/i,
  /^ker/i],

  monthsRegex = /^(genver|c[ʼ\']hwevrer|meurzh|ebrel|mae|mezheven|gouere|eost|gwengolo|here|du|kerzu|gen|c[ʼ\']hwe|meu|ebr|mae|eve|gou|eos|gwe|her|du|ker)/i,
  monthsStrictRegex = /^(genver|c[ʼ\']hwevrer|meurzh|ebrel|mae|mezheven|gouere|eost|gwengolo|here|du|kerzu)/i,
  monthsShortStrictRegex = /^(gen|c[ʼ\']hwe|meu|ebr|mae|eve|gou|eos|gwe|her|du|ker)/i,
  fullWeekdaysParse = [
  /^sul/i,
  /^lun/i,
  /^meurzh/i,
  /^merc[ʼ\']her/i,
  /^yaou/i,
  /^gwener/i,
  /^sadorn/i],

  shortWeekdaysParse = [
  /^Sul/i,
  /^Lun/i,
  /^Meu/i,
  /^Mer/i,
  /^Yao/i,
  /^Gwe/i,
  /^Sad/i],

  minWeekdaysParse = [
  /^Su/i,
  /^Lu/i,
  /^Me([^r]|$)/i,
  /^Mer/i,
  /^Ya/i,
  /^Gw/i,
  /^Sa/i];


  var br = moment.defineLocale('br', {
    months: 'Genver_Cʼhwevrer_Meurzh_Ebrel_Mae_Mezheven_Gouere_Eost_Gwengolo_Here_Du_Kerzu'.split(
    '_'),

    monthsShort: 'Gen_Cʼhwe_Meu_Ebr_Mae_Eve_Gou_Eos_Gwe_Her_Du_Ker'.split('_'),
    weekdays: 'Sul_Lun_Meurzh_Mercʼher_Yaou_Gwener_Sadorn'.split('_'),
    weekdaysShort: 'Sul_Lun_Meu_Mer_Yao_Gwe_Sad'.split('_'),
    weekdaysMin: 'Su_Lu_Me_Mer_Ya_Gw_Sa'.split('_'),
    weekdaysParse: minWeekdaysParse,
    fullWeekdaysParse: fullWeekdaysParse,
    shortWeekdaysParse: shortWeekdaysParse,
    minWeekdaysParse: minWeekdaysParse,

    monthsRegex: monthsRegex,
    monthsShortRegex: monthsRegex,
    monthsStrictRegex: monthsStrictRegex,
    monthsShortStrictRegex: monthsShortStrictRegex,
    monthsParse: monthsParse,
    longMonthsParse: monthsParse,
    shortMonthsParse: monthsParse,

    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D [a viz] MMMM YYYY',
      LLL: 'D [a viz] MMMM YYYY HH:mm',
      LLLL: 'dddd, D [a viz] MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[Hiziv da] LT',
      nextDay: '[Warcʼhoazh da] LT',
      nextWeek: 'dddd [da] LT',
      lastDay: '[Decʼh da] LT',
      lastWeek: 'dddd [paset da] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'a-benn %s',
      past: '%s ʼzo',
      s: 'un nebeud segondennoù',
      ss: '%d eilenn',
      m: 'ur vunutenn',
      mm: relativeTimeWithMutation,
      h: 'un eur',
      hh: '%d eur',
      d: 'un devezh',
      dd: relativeTimeWithMutation,
      M: 'ur miz',
      MM: relativeTimeWithMutation,
      y: 'ur bloaz',
      yy: specialMutationForYears },

    dayOfMonthOrdinalParse: /\d{1,2}(añ|vet)/,
    ordinal: function ordinal(number) {
      var output = number === 1 ? 'añ' : 'vet';
      return number + output;
    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    },
    meridiemParse: /a.m.|g.m./, // goude merenn | a-raok merenn
    isPM: function isPM(token) {
      return token === 'g.m.';
    },
    meridiem: function meridiem(hour, minute, isLower) {
      return hour < 12 ? 'a.m.' : 'g.m.';
    } });


  return br;

});

/***/ }),
/* 158 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/bs.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Bosnian [bs]
//! author : Nedim Cholich : https://github.com/frontyard
//! based on (hr) translation by Bojan Marković

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  function translate(number, withoutSuffix, key) {
    var result = number + ' ';
    switch (key) {
      case 'ss':
        if (number === 1) {
          result += 'sekunda';
        } else if (number === 2 || number === 3 || number === 4) {
          result += 'sekunde';
        } else {
          result += 'sekundi';
        }
        return result;
      case 'm':
        return withoutSuffix ? 'jedna minuta' : 'jedne minute';
      case 'mm':
        if (number === 1) {
          result += 'minuta';
        } else if (number === 2 || number === 3 || number === 4) {
          result += 'minute';
        } else {
          result += 'minuta';
        }
        return result;
      case 'h':
        return withoutSuffix ? 'jedan sat' : 'jednog sata';
      case 'hh':
        if (number === 1) {
          result += 'sat';
        } else if (number === 2 || number === 3 || number === 4) {
          result += 'sata';
        } else {
          result += 'sati';
        }
        return result;
      case 'dd':
        if (number === 1) {
          result += 'dan';
        } else {
          result += 'dana';
        }
        return result;
      case 'MM':
        if (number === 1) {
          result += 'mjesec';
        } else if (number === 2 || number === 3 || number === 4) {
          result += 'mjeseca';
        } else {
          result += 'mjeseci';
        }
        return result;
      case 'yy':
        if (number === 1) {
          result += 'godina';
        } else if (number === 2 || number === 3 || number === 4) {
          result += 'godine';
        } else {
          result += 'godina';
        }
        return result;}

  }

  var bs = moment.defineLocale('bs', {
    months: 'januar_februar_mart_april_maj_juni_juli_august_septembar_oktobar_novembar_decembar'.split(
    '_'),

    monthsShort: 'jan._feb._mar._apr._maj._jun._jul._aug._sep._okt._nov._dec.'.split(
    '_'),

    monthsParseExact: true,
    weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split(
    '_'),

    weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
    weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'H:mm',
      LTS: 'H:mm:ss',
      L: 'DD.MM.YYYY',
      LL: 'D. MMMM YYYY',
      LLL: 'D. MMMM YYYY H:mm',
      LLLL: 'dddd, D. MMMM YYYY H:mm' },

    calendar: {
      sameDay: '[danas u] LT',
      nextDay: '[sutra u] LT',
      nextWeek: function nextWeek() {
        switch (this.day()) {
          case 0:
            return '[u] [nedjelju] [u] LT';
          case 3:
            return '[u] [srijedu] [u] LT';
          case 6:
            return '[u] [subotu] [u] LT';
          case 1:
          case 2:
          case 4:
          case 5:
            return '[u] dddd [u] LT';}

      },
      lastDay: '[jučer u] LT',
      lastWeek: function lastWeek() {
        switch (this.day()) {
          case 0:
          case 3:
            return '[prošlu] dddd [u] LT';
          case 6:
            return '[prošle] [subote] [u] LT';
          case 1:
          case 2:
          case 4:
          case 5:
            return '[prošli] dddd [u] LT';}

      },
      sameElse: 'L' },

    relativeTime: {
      future: 'za %s',
      past: 'prije %s',
      s: 'par sekundi',
      ss: translate,
      m: translate,
      mm: translate,
      h: translate,
      hh: translate,
      d: 'dan',
      dd: translate,
      M: 'mjesec',
      MM: translate,
      y: 'godinu',
      yy: translate },

    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal: '%d.',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 7 // The week that contains Jan 7th is the first week of the year.
    } });


  return bs;

});

/***/ }),
/* 159 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/ca.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Catalan [ca]
//! author : Juan G. Hurtado : https://github.com/juanghurtado

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var ca = moment.defineLocale('ca', {
    months: {
      standalone: 'gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre'.split(
      '_'),

      format: "de gener_de febrer_de març_d'abril_de maig_de juny_de juliol_d'agost_de setembre_d'octubre_de novembre_de desembre".split(
      '_'),

      isFormat: /D[oD]?(\s)+MMMM/ },

    monthsShort: 'gen._febr._març_abr._maig_juny_jul._ag._set._oct._nov._des.'.split(
    '_'),

    monthsParseExact: true,
    weekdays: 'diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte'.split(
    '_'),

    weekdaysShort: 'dg._dl._dt._dc._dj._dv._ds.'.split('_'),
    weekdaysMin: 'dg_dl_dt_dc_dj_dv_ds'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'H:mm',
      LTS: 'H:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM [de] YYYY',
      ll: 'D MMM YYYY',
      LLL: 'D MMMM [de] YYYY [a les] H:mm',
      lll: 'D MMM YYYY, H:mm',
      LLLL: 'dddd D MMMM [de] YYYY [a les] H:mm',
      llll: 'ddd D MMM YYYY, H:mm' },

    calendar: {
      sameDay: function sameDay() {
        return '[avui a ' + (this.hours() !== 1 ? 'les' : 'la') + '] LT';
      },
      nextDay: function nextDay() {
        return '[demà a ' + (this.hours() !== 1 ? 'les' : 'la') + '] LT';
      },
      nextWeek: function nextWeek() {
        return 'dddd [a ' + (this.hours() !== 1 ? 'les' : 'la') + '] LT';
      },
      lastDay: function lastDay() {
        return '[ahir a ' + (this.hours() !== 1 ? 'les' : 'la') + '] LT';
      },
      lastWeek: function lastWeek() {
        return (
          '[el] dddd [passat a ' + (
          this.hours() !== 1 ? 'les' : 'la') +
          '] LT');

      },
      sameElse: 'L' },

    relativeTime: {
      future: "d'aquí %s",
      past: 'fa %s',
      s: 'uns segons',
      ss: '%d segons',
      m: 'un minut',
      mm: '%d minuts',
      h: 'una hora',
      hh: '%d hores',
      d: 'un dia',
      dd: '%d dies',
      M: 'un mes',
      MM: '%d mesos',
      y: 'un any',
      yy: '%d anys' },

    dayOfMonthOrdinalParse: /\d{1,2}(r|n|t|è|a)/,
    ordinal: function ordinal(number, period) {
      var output =
      number === 1 ?
      'r' :
      number === 2 ?
      'n' :
      number === 3 ?
      'r' :
      number === 4 ?
      't' :
      'è';
      if (period === 'w' || period === 'W') {
        output = 'a';
      }
      return number + output;
    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return ca;

});

/***/ }),
/* 160 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/cs.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Czech [cs]
//! author : petrbela : https://github.com/petrbela

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var months = 'leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec'.split(
  '_'),

  monthsShort = 'led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro'.split('_'),
  monthsParse = [
  /^led/i,
  /^úno/i,
  /^bře/i,
  /^dub/i,
  /^kvě/i,
  /^(čvn|červen$|června)/i,
  /^(čvc|červenec|července)/i,
  /^srp/i,
  /^zář/i,
  /^říj/i,
  /^lis/i,
  /^pro/i],

  // NOTE: 'červen' is substring of 'červenec'; therefore 'červenec' must precede 'červen' in the regex to be fully matched.
  // Otherwise parser matches '1. červenec' as '1. červen' + 'ec'.
  monthsRegex = /^(leden|únor|březen|duben|květen|červenec|července|červen|června|srpen|září|říjen|listopad|prosinec|led|úno|bře|dub|kvě|čvn|čvc|srp|zář|říj|lis|pro)/i;

  function plural(n) {
    return n > 1 && n < 5 && ~~(n / 10) !== 1;
  }
  function translate(number, withoutSuffix, key, isFuture) {
    var result = number + ' ';
    switch (key) {
      case 's': // a few seconds / in a few seconds / a few seconds ago
        return withoutSuffix || isFuture ? 'pár sekund' : 'pár sekundami';
      case 'ss': // 9 seconds / in 9 seconds / 9 seconds ago
        if (withoutSuffix || isFuture) {
          return result + (plural(number) ? 'sekundy' : 'sekund');
        } else {
          return result + 'sekundami';
        }
      case 'm': // a minute / in a minute / a minute ago
        return withoutSuffix ? 'minuta' : isFuture ? 'minutu' : 'minutou';
      case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago
        if (withoutSuffix || isFuture) {
          return result + (plural(number) ? 'minuty' : 'minut');
        } else {
          return result + 'minutami';
        }
      case 'h': // an hour / in an hour / an hour ago
        return withoutSuffix ? 'hodina' : isFuture ? 'hodinu' : 'hodinou';
      case 'hh': // 9 hours / in 9 hours / 9 hours ago
        if (withoutSuffix || isFuture) {
          return result + (plural(number) ? 'hodiny' : 'hodin');
        } else {
          return result + 'hodinami';
        }
      case 'd': // a day / in a day / a day ago
        return withoutSuffix || isFuture ? 'den' : 'dnem';
      case 'dd': // 9 days / in 9 days / 9 days ago
        if (withoutSuffix || isFuture) {
          return result + (plural(number) ? 'dny' : 'dní');
        } else {
          return result + 'dny';
        }
      case 'M': // a month / in a month / a month ago
        return withoutSuffix || isFuture ? 'měsíc' : 'měsícem';
      case 'MM': // 9 months / in 9 months / 9 months ago
        if (withoutSuffix || isFuture) {
          return result + (plural(number) ? 'měsíce' : 'měsíců');
        } else {
          return result + 'měsíci';
        }
      case 'y': // a year / in a year / a year ago
        return withoutSuffix || isFuture ? 'rok' : 'rokem';
      case 'yy': // 9 years / in 9 years / 9 years ago
        if (withoutSuffix || isFuture) {
          return result + (plural(number) ? 'roky' : 'let');
        } else {
          return result + 'lety';
        }}

  }

  var cs = moment.defineLocale('cs', {
    months: months,
    monthsShort: monthsShort,
    monthsRegex: monthsRegex,
    monthsShortRegex: monthsRegex,
    // NOTE: 'červen' is substring of 'červenec'; therefore 'červenec' must precede 'červen' in the regex to be fully matched.
    // Otherwise parser matches '1. červenec' as '1. červen' + 'ec'.
    monthsStrictRegex: /^(leden|ledna|února|únor|březen|března|duben|dubna|květen|května|červenec|července|červen|června|srpen|srpna|září|říjen|října|listopadu|listopad|prosinec|prosince)/i,
    monthsShortStrictRegex: /^(led|úno|bře|dub|kvě|čvn|čvc|srp|zář|říj|lis|pro)/i,
    monthsParse: monthsParse,
    longMonthsParse: monthsParse,
    shortMonthsParse: monthsParse,
    weekdays: 'neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota'.split('_'),
    weekdaysShort: 'ne_po_út_st_čt_pá_so'.split('_'),
    weekdaysMin: 'ne_po_út_st_čt_pá_so'.split('_'),
    longDateFormat: {
      LT: 'H:mm',
      LTS: 'H:mm:ss',
      L: 'DD.MM.YYYY',
      LL: 'D. MMMM YYYY',
      LLL: 'D. MMMM YYYY H:mm',
      LLLL: 'dddd D. MMMM YYYY H:mm',
      l: 'D. M. YYYY' },

    calendar: {
      sameDay: '[dnes v] LT',
      nextDay: '[zítra v] LT',
      nextWeek: function nextWeek() {
        switch (this.day()) {
          case 0:
            return '[v neděli v] LT';
          case 1:
          case 2:
            return '[v] dddd [v] LT';
          case 3:
            return '[ve středu v] LT';
          case 4:
            return '[ve čtvrtek v] LT';
          case 5:
            return '[v pátek v] LT';
          case 6:
            return '[v sobotu v] LT';}

      },
      lastDay: '[včera v] LT',
      lastWeek: function lastWeek() {
        switch (this.day()) {
          case 0:
            return '[minulou neděli v] LT';
          case 1:
          case 2:
            return '[minulé] dddd [v] LT';
          case 3:
            return '[minulou středu v] LT';
          case 4:
          case 5:
            return '[minulý] dddd [v] LT';
          case 6:
            return '[minulou sobotu v] LT';}

      },
      sameElse: 'L' },

    relativeTime: {
      future: 'za %s',
      past: 'před %s',
      s: translate,
      ss: translate,
      m: translate,
      mm: translate,
      h: translate,
      hh: translate,
      d: translate,
      dd: translate,
      M: translate,
      MM: translate,
      y: translate,
      yy: translate },

    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal: '%d.',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return cs;

});

/***/ }),
/* 161 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/cv.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Chuvash [cv]
//! author : Anatoly Mironov : https://github.com/mirontoli

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var cv = moment.defineLocale('cv', {
    months: 'кӑрлач_нарӑс_пуш_ака_май_ҫӗртме_утӑ_ҫурла_авӑн_юпа_чӳк_раштав'.split(
    '_'),

    monthsShort: 'кӑр_нар_пуш_ака_май_ҫӗр_утӑ_ҫур_авн_юпа_чӳк_раш'.split('_'),
    weekdays: 'вырсарникун_тунтикун_ытларикун_юнкун_кӗҫнерникун_эрнекун_шӑматкун'.split(
    '_'),

    weekdaysShort: 'выр_тун_ытл_юн_кӗҫ_эрн_шӑм'.split('_'),
    weekdaysMin: 'вр_тн_ыт_юн_кҫ_эр_шм'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD-MM-YYYY',
      LL: 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ]',
      LLL: 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm',
      LLLL: 'dddd, YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm' },

    calendar: {
      sameDay: '[Паян] LT [сехетре]',
      nextDay: '[Ыран] LT [сехетре]',
      lastDay: '[Ӗнер] LT [сехетре]',
      nextWeek: '[Ҫитес] dddd LT [сехетре]',
      lastWeek: '[Иртнӗ] dddd LT [сехетре]',
      sameElse: 'L' },

    relativeTime: {
      future: function future(output) {
        var affix = /сехет$/i.exec(output) ?
        'рен' :
        /ҫул$/i.exec(output) ?
        'тан' :
        'ран';
        return output + affix;
      },
      past: '%s каялла',
      s: 'пӗр-ик ҫеккунт',
      ss: '%d ҫеккунт',
      m: 'пӗр минут',
      mm: '%d минут',
      h: 'пӗр сехет',
      hh: '%d сехет',
      d: 'пӗр кун',
      dd: '%d кун',
      M: 'пӗр уйӑх',
      MM: '%d уйӑх',
      y: 'пӗр ҫул',
      yy: '%d ҫул' },

    dayOfMonthOrdinalParse: /\d{1,2}-мӗш/,
    ordinal: '%d-мӗш',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 7 // The week that contains Jan 7th is the first week of the year.
    } });


  return cv;

});

/***/ }),
/* 162 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/cy.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Welsh [cy]
//! author : Robert Allen : https://github.com/robgallen
//! author : https://github.com/ryangreaves

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var cy = moment.defineLocale('cy', {
    months: 'Ionawr_Chwefror_Mawrth_Ebrill_Mai_Mehefin_Gorffennaf_Awst_Medi_Hydref_Tachwedd_Rhagfyr'.split(
    '_'),

    monthsShort: 'Ion_Chwe_Maw_Ebr_Mai_Meh_Gor_Aws_Med_Hyd_Tach_Rhag'.split(
    '_'),

    weekdays: 'Dydd Sul_Dydd Llun_Dydd Mawrth_Dydd Mercher_Dydd Iau_Dydd Gwener_Dydd Sadwrn'.split(
    '_'),

    weekdaysShort: 'Sul_Llun_Maw_Mer_Iau_Gwe_Sad'.split('_'),
    weekdaysMin: 'Su_Ll_Ma_Me_Ia_Gw_Sa'.split('_'),
    weekdaysParseExact: true,
    // time formats are the same as en-gb
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd, D MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[Heddiw am] LT',
      nextDay: '[Yfory am] LT',
      nextWeek: 'dddd [am] LT',
      lastDay: '[Ddoe am] LT',
      lastWeek: 'dddd [diwethaf am] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'mewn %s',
      past: '%s yn ôl',
      s: 'ychydig eiliadau',
      ss: '%d eiliad',
      m: 'munud',
      mm: '%d munud',
      h: 'awr',
      hh: '%d awr',
      d: 'diwrnod',
      dd: '%d diwrnod',
      M: 'mis',
      MM: '%d mis',
      y: 'blwyddyn',
      yy: '%d flynedd' },

    dayOfMonthOrdinalParse: /\d{1,2}(fed|ain|af|il|ydd|ed|eg)/,
    // traditional ordinal numbers above 31 are not commonly used in colloquial Welsh
    ordinal: function ordinal(number) {
      var b = number,
      output = '',
      lookup = [
      '',
      'af',
      'il',
      'ydd',
      'ydd',
      'ed',
      'ed',
      'ed',
      'fed',
      'fed',
      'fed', // 1af to 10fed
      'eg',
      'fed',
      'eg',
      'eg',
      'fed',
      'eg',
      'eg',
      'fed',
      'eg',
      'fed' // 11eg to 20fed
      ];
      if (b > 20) {
        if (b === 40 || b === 50 || b === 60 || b === 80 || b === 100) {
          output = 'fed'; // not 30ain, 70ain or 90ain
        } else {
          output = 'ain';
        }
      } else if (b > 0) {
        output = lookup[b];
      }
      return number + output;
    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return cy;

});

/***/ }),
/* 163 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/da.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Danish [da]
//! author : Ulrik Nielsen : https://github.com/mrbase

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var da = moment.defineLocale('da', {
    months: 'januar_februar_marts_april_maj_juni_juli_august_september_oktober_november_december'.split(
    '_'),

    monthsShort: 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),
    weekdays: 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),
    weekdaysShort: 'søn_man_tir_ons_tor_fre_lør'.split('_'),
    weekdaysMin: 'sø_ma_ti_on_to_fr_lø'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD.MM.YYYY',
      LL: 'D. MMMM YYYY',
      LLL: 'D. MMMM YYYY HH:mm',
      LLLL: 'dddd [d.] D. MMMM YYYY [kl.] HH:mm' },

    calendar: {
      sameDay: '[i dag kl.] LT',
      nextDay: '[i morgen kl.] LT',
      nextWeek: 'på dddd [kl.] LT',
      lastDay: '[i går kl.] LT',
      lastWeek: '[i] dddd[s kl.] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'om %s',
      past: '%s siden',
      s: 'få sekunder',
      ss: '%d sekunder',
      m: 'et minut',
      mm: '%d minutter',
      h: 'en time',
      hh: '%d timer',
      d: 'en dag',
      dd: '%d dage',
      M: 'en måned',
      MM: '%d måneder',
      y: 'et år',
      yy: '%d år' },

    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal: '%d.',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return da;

});

/***/ }),
/* 164 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/de.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : German [de]
//! author : lluchs : https://github.com/lluchs
//! author: Menelion Elensúle: https://github.com/Oire
//! author : Mikolaj Dadela : https://github.com/mik01aj

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  function processRelativeTime(number, withoutSuffix, key, isFuture) {
    var format = {
      m: ['eine Minute', 'einer Minute'],
      h: ['eine Stunde', 'einer Stunde'],
      d: ['ein Tag', 'einem Tag'],
      dd: [number + ' Tage', number + ' Tagen'],
      w: ['eine Woche', 'einer Woche'],
      M: ['ein Monat', 'einem Monat'],
      MM: [number + ' Monate', number + ' Monaten'],
      y: ['ein Jahr', 'einem Jahr'],
      yy: [number + ' Jahre', number + ' Jahren'] };

    return withoutSuffix ? format[key][0] : format[key][1];
  }

  var de = moment.defineLocale('de', {
    months: 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split(
    '_'),

    monthsShort: 'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split(
    '_'),

    monthsParseExact: true,
    weekdays: 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split(
    '_'),

    weekdaysShort: 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),
    weekdaysMin: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD.MM.YYYY',
      LL: 'D. MMMM YYYY',
      LLL: 'D. MMMM YYYY HH:mm',
      LLLL: 'dddd, D. MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[heute um] LT [Uhr]',
      sameElse: 'L',
      nextDay: '[morgen um] LT [Uhr]',
      nextWeek: 'dddd [um] LT [Uhr]',
      lastDay: '[gestern um] LT [Uhr]',
      lastWeek: '[letzten] dddd [um] LT [Uhr]' },

    relativeTime: {
      future: 'in %s',
      past: 'vor %s',
      s: 'ein paar Sekunden',
      ss: '%d Sekunden',
      m: processRelativeTime,
      mm: '%d Minuten',
      h: processRelativeTime,
      hh: '%d Stunden',
      d: processRelativeTime,
      dd: processRelativeTime,
      w: processRelativeTime,
      ww: '%d Wochen',
      M: processRelativeTime,
      MM: processRelativeTime,
      y: processRelativeTime,
      yy: processRelativeTime },

    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal: '%d.',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return de;

});

/***/ }),
/* 165 */
/*!************************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/de-at.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : German (Austria) [de-at]
//! author : lluchs : https://github.com/lluchs
//! author: Menelion Elensúle: https://github.com/Oire
//! author : Martin Groller : https://github.com/MadMG
//! author : Mikolaj Dadela : https://github.com/mik01aj

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  function processRelativeTime(number, withoutSuffix, key, isFuture) {
    var format = {
      m: ['eine Minute', 'einer Minute'],
      h: ['eine Stunde', 'einer Stunde'],
      d: ['ein Tag', 'einem Tag'],
      dd: [number + ' Tage', number + ' Tagen'],
      w: ['eine Woche', 'einer Woche'],
      M: ['ein Monat', 'einem Monat'],
      MM: [number + ' Monate', number + ' Monaten'],
      y: ['ein Jahr', 'einem Jahr'],
      yy: [number + ' Jahre', number + ' Jahren'] };

    return withoutSuffix ? format[key][0] : format[key][1];
  }

  var deAt = moment.defineLocale('de-at', {
    months: 'Jänner_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split(
    '_'),

    monthsShort: 'Jän._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split(
    '_'),

    monthsParseExact: true,
    weekdays: 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split(
    '_'),

    weekdaysShort: 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),
    weekdaysMin: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD.MM.YYYY',
      LL: 'D. MMMM YYYY',
      LLL: 'D. MMMM YYYY HH:mm',
      LLLL: 'dddd, D. MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[heute um] LT [Uhr]',
      sameElse: 'L',
      nextDay: '[morgen um] LT [Uhr]',
      nextWeek: 'dddd [um] LT [Uhr]',
      lastDay: '[gestern um] LT [Uhr]',
      lastWeek: '[letzten] dddd [um] LT [Uhr]' },

    relativeTime: {
      future: 'in %s',
      past: 'vor %s',
      s: 'ein paar Sekunden',
      ss: '%d Sekunden',
      m: processRelativeTime,
      mm: '%d Minuten',
      h: processRelativeTime,
      hh: '%d Stunden',
      d: processRelativeTime,
      dd: processRelativeTime,
      w: processRelativeTime,
      ww: '%d Wochen',
      M: processRelativeTime,
      MM: processRelativeTime,
      y: processRelativeTime,
      yy: processRelativeTime },

    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal: '%d.',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return deAt;

});

/***/ }),
/* 166 */
/*!************************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/de-ch.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : German (Switzerland) [de-ch]
//! author : sschueller : https://github.com/sschueller

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  function processRelativeTime(number, withoutSuffix, key, isFuture) {
    var format = {
      m: ['eine Minute', 'einer Minute'],
      h: ['eine Stunde', 'einer Stunde'],
      d: ['ein Tag', 'einem Tag'],
      dd: [number + ' Tage', number + ' Tagen'],
      w: ['eine Woche', 'einer Woche'],
      M: ['ein Monat', 'einem Monat'],
      MM: [number + ' Monate', number + ' Monaten'],
      y: ['ein Jahr', 'einem Jahr'],
      yy: [number + ' Jahre', number + ' Jahren'] };

    return withoutSuffix ? format[key][0] : format[key][1];
  }

  var deCh = moment.defineLocale('de-ch', {
    months: 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split(
    '_'),

    monthsShort: 'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split(
    '_'),

    monthsParseExact: true,
    weekdays: 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split(
    '_'),

    weekdaysShort: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
    weekdaysMin: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD.MM.YYYY',
      LL: 'D. MMMM YYYY',
      LLL: 'D. MMMM YYYY HH:mm',
      LLLL: 'dddd, D. MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[heute um] LT [Uhr]',
      sameElse: 'L',
      nextDay: '[morgen um] LT [Uhr]',
      nextWeek: 'dddd [um] LT [Uhr]',
      lastDay: '[gestern um] LT [Uhr]',
      lastWeek: '[letzten] dddd [um] LT [Uhr]' },

    relativeTime: {
      future: 'in %s',
      past: 'vor %s',
      s: 'ein paar Sekunden',
      ss: '%d Sekunden',
      m: processRelativeTime,
      mm: '%d Minuten',
      h: processRelativeTime,
      hh: '%d Stunden',
      d: processRelativeTime,
      dd: processRelativeTime,
      w: processRelativeTime,
      ww: '%d Wochen',
      M: processRelativeTime,
      MM: processRelativeTime,
      y: processRelativeTime,
      yy: processRelativeTime },

    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal: '%d.',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return deCh;

});

/***/ }),
/* 167 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/dv.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Maldivian [dv]
//! author : Jawish Hameed : https://github.com/jawish

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var months = [
  'ޖެނުއަރީ',
  'ފެބްރުއަރީ',
  'މާރިޗު',
  'އޭޕްރީލު',
  'މޭ',
  'ޖޫން',
  'ޖުލައި',
  'އޯގަސްޓު',
  'ސެޕްޓެމްބަރު',
  'އޮކްޓޯބަރު',
  'ނޮވެމްބަރު',
  'ޑިސެމްބަރު'],

  weekdays = [
  'އާދިއްތަ',
  'ހޯމަ',
  'އަންގާރަ',
  'ބުދަ',
  'ބުރާސްފަތި',
  'ހުކުރު',
  'ހޮނިހިރު'];


  var dv = moment.defineLocale('dv', {
    months: months,
    monthsShort: months,
    weekdays: weekdays,
    weekdaysShort: weekdays,
    weekdaysMin: 'އާދި_ހޯމަ_އަން_ބުދަ_ބުރާ_ހުކު_ހޮނި'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'D/M/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd D MMMM YYYY HH:mm' },

    meridiemParse: /މކ|މފ/,
    isPM: function isPM(input) {
      return 'މފ' === input;
    },
    meridiem: function meridiem(hour, minute, isLower) {
      if (hour < 12) {
        return 'މކ';
      } else {
        return 'މފ';
      }
    },
    calendar: {
      sameDay: '[މިއަދު] LT',
      nextDay: '[މާދަމާ] LT',
      nextWeek: 'dddd LT',
      lastDay: '[އިއްޔެ] LT',
      lastWeek: '[ފާއިތުވި] dddd LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'ތެރޭގައި %s',
      past: 'ކުރިން %s',
      s: 'ސިކުންތުކޮޅެއް',
      ss: 'd% ސިކުންތު',
      m: 'މިނިޓެއް',
      mm: 'މިނިޓު %d',
      h: 'ގަޑިއިރެއް',
      hh: 'ގަޑިއިރު %d',
      d: 'ދުވަހެއް',
      dd: 'ދުވަސް %d',
      M: 'މަހެއް',
      MM: 'މަސް %d',
      y: 'އަހަރެއް',
      yy: 'އަހަރު %d' },

    preparse: function preparse(string) {
      return string.replace(/،/g, ',');
    },
    postformat: function postformat(string) {
      return string.replace(/,/g, '،');
    },
    week: {
      dow: 7, // Sunday is the first day of the week.
      doy: 12 // The week that contains Jan 12th is the first week of the year.
    } });


  return dv;

});

/***/ }),
/* 168 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/el.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Greek [el]
//! author : Aggelos Karalias : https://github.com/mehiel

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  function isFunction(input) {
    return (
      typeof Function !== 'undefined' && input instanceof Function ||
      Object.prototype.toString.call(input) === '[object Function]');

  }

  var el = moment.defineLocale('el', {
    monthsNominativeEl: 'Ιανουάριος_Φεβρουάριος_Μάρτιος_Απρίλιος_Μάιος_Ιούνιος_Ιούλιος_Αύγουστος_Σεπτέμβριος_Οκτώβριος_Νοέμβριος_Δεκέμβριος'.split(
    '_'),

    monthsGenitiveEl: 'Ιανουαρίου_Φεβρουαρίου_Μαρτίου_Απριλίου_Μαΐου_Ιουνίου_Ιουλίου_Αυγούστου_Σεπτεμβρίου_Οκτωβρίου_Νοεμβρίου_Δεκεμβρίου'.split(
    '_'),

    months: function months(momentToFormat, format) {
      if (!momentToFormat) {
        return this._monthsNominativeEl;
      } else if (
      typeof format === 'string' &&
      /D/.test(format.substring(0, format.indexOf('MMMM'))))
      {
        // if there is a day number before 'MMMM'
        return this._monthsGenitiveEl[momentToFormat.month()];
      } else {
        return this._monthsNominativeEl[momentToFormat.month()];
      }
    },
    monthsShort: 'Ιαν_Φεβ_Μαρ_Απρ_Μαϊ_Ιουν_Ιουλ_Αυγ_Σεπ_Οκτ_Νοε_Δεκ'.split('_'),
    weekdays: 'Κυριακή_Δευτέρα_Τρίτη_Τετάρτη_Πέμπτη_Παρασκευή_Σάββατο'.split(
    '_'),

    weekdaysShort: 'Κυρ_Δευ_Τρι_Τετ_Πεμ_Παρ_Σαβ'.split('_'),
    weekdaysMin: 'Κυ_Δε_Τρ_Τε_Πε_Πα_Σα'.split('_'),
    meridiem: function meridiem(hours, minutes, isLower) {
      if (hours > 11) {
        return isLower ? 'μμ' : 'ΜΜ';
      } else {
        return isLower ? 'πμ' : 'ΠΜ';
      }
    },
    isPM: function isPM(input) {
      return (input + '').toLowerCase()[0] === 'μ';
    },
    meridiemParse: /[ΠΜ]\.?Μ?\.?/i,
    longDateFormat: {
      LT: 'h:mm A',
      LTS: 'h:mm:ss A',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY h:mm A',
      LLLL: 'dddd, D MMMM YYYY h:mm A' },

    calendarEl: {
      sameDay: '[Σήμερα {}] LT',
      nextDay: '[Αύριο {}] LT',
      nextWeek: 'dddd [{}] LT',
      lastDay: '[Χθες {}] LT',
      lastWeek: function lastWeek() {
        switch (this.day()) {
          case 6:
            return '[το προηγούμενο] dddd [{}] LT';
          default:
            return '[την προηγούμενη] dddd [{}] LT';}

      },
      sameElse: 'L' },

    calendar: function calendar(key, mom) {
      var output = this._calendarEl[key],
      hours = mom && mom.hours();
      if (isFunction(output)) {
        output = output.apply(mom);
      }
      return output.replace('{}', hours % 12 === 1 ? 'στη' : 'στις');
    },
    relativeTime: {
      future: 'σε %s',
      past: '%s πριν',
      s: 'λίγα δευτερόλεπτα',
      ss: '%d δευτερόλεπτα',
      m: 'ένα λεπτό',
      mm: '%d λεπτά',
      h: 'μία ώρα',
      hh: '%d ώρες',
      d: 'μία μέρα',
      dd: '%d μέρες',
      M: 'ένας μήνας',
      MM: '%d μήνες',
      y: 'ένας χρόνος',
      yy: '%d χρόνια' },

    dayOfMonthOrdinalParse: /\d{1,2}η/,
    ordinal: '%dη',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4st is the first week of the year.
    } });


  return el;

});

/***/ }),
/* 169 */
/*!************************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/en-au.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : English (Australia) [en-au]
//! author : Jared Morse : https://github.com/jarcoal

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var enAu = moment.defineLocale('en-au', {
    months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split(
    '_'),

    monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
    weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
    '_'),

    weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
    weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
    longDateFormat: {
      LT: 'h:mm A',
      LTS: 'h:mm:ss A',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY h:mm A',
      LLLL: 'dddd, D MMMM YYYY h:mm A' },

    calendar: {
      sameDay: '[Today at] LT',
      nextDay: '[Tomorrow at] LT',
      nextWeek: 'dddd [at] LT',
      lastDay: '[Yesterday at] LT',
      lastWeek: '[Last] dddd [at] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'in %s',
      past: '%s ago',
      s: 'a few seconds',
      ss: '%d seconds',
      m: 'a minute',
      mm: '%d minutes',
      h: 'an hour',
      hh: '%d hours',
      d: 'a day',
      dd: '%d days',
      M: 'a month',
      MM: '%d months',
      y: 'a year',
      yy: '%d years' },

    dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
    ordinal: function ordinal(number) {
      var b = number % 10,
      output =
      ~~(number % 100 / 10) === 1 ?
      'th' :
      b === 1 ?
      'st' :
      b === 2 ?
      'nd' :
      b === 3 ?
      'rd' :
      'th';
      return number + output;
    },
    week: {
      dow: 0, // Sunday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return enAu;

});

/***/ }),
/* 170 */
/*!************************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/en-ca.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : English (Canada) [en-ca]
//! author : Jonathan Abourbih : https://github.com/jonbca

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var enCa = moment.defineLocale('en-ca', {
    months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split(
    '_'),

    monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
    weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
    '_'),

    weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
    weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
    longDateFormat: {
      LT: 'h:mm A',
      LTS: 'h:mm:ss A',
      L: 'YYYY-MM-DD',
      LL: 'MMMM D, YYYY',
      LLL: 'MMMM D, YYYY h:mm A',
      LLLL: 'dddd, MMMM D, YYYY h:mm A' },

    calendar: {
      sameDay: '[Today at] LT',
      nextDay: '[Tomorrow at] LT',
      nextWeek: 'dddd [at] LT',
      lastDay: '[Yesterday at] LT',
      lastWeek: '[Last] dddd [at] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'in %s',
      past: '%s ago',
      s: 'a few seconds',
      ss: '%d seconds',
      m: 'a minute',
      mm: '%d minutes',
      h: 'an hour',
      hh: '%d hours',
      d: 'a day',
      dd: '%d days',
      M: 'a month',
      MM: '%d months',
      y: 'a year',
      yy: '%d years' },

    dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
    ordinal: function ordinal(number) {
      var b = number % 10,
      output =
      ~~(number % 100 / 10) === 1 ?
      'th' :
      b === 1 ?
      'st' :
      b === 2 ?
      'nd' :
      b === 3 ?
      'rd' :
      'th';
      return number + output;
    } });


  return enCa;

});

/***/ }),
/* 171 */
/*!************************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/en-gb.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : English (United Kingdom) [en-gb]
//! author : Chris Gedrim : https://github.com/chrisgedrim

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var enGb = moment.defineLocale('en-gb', {
    months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split(
    '_'),

    monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
    weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
    '_'),

    weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
    weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd, D MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[Today at] LT',
      nextDay: '[Tomorrow at] LT',
      nextWeek: 'dddd [at] LT',
      lastDay: '[Yesterday at] LT',
      lastWeek: '[Last] dddd [at] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'in %s',
      past: '%s ago',
      s: 'a few seconds',
      ss: '%d seconds',
      m: 'a minute',
      mm: '%d minutes',
      h: 'an hour',
      hh: '%d hours',
      d: 'a day',
      dd: '%d days',
      M: 'a month',
      MM: '%d months',
      y: 'a year',
      yy: '%d years' },

    dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
    ordinal: function ordinal(number) {
      var b = number % 10,
      output =
      ~~(number % 100 / 10) === 1 ?
      'th' :
      b === 1 ?
      'st' :
      b === 2 ?
      'nd' :
      b === 3 ?
      'rd' :
      'th';
      return number + output;
    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return enGb;

});

/***/ }),
/* 172 */
/*!************************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/en-ie.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : English (Ireland) [en-ie]
//! author : Chris Cartlidge : https://github.com/chriscartlidge

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var enIe = moment.defineLocale('en-ie', {
    months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split(
    '_'),

    monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
    weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
    '_'),

    weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
    weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd D MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[Today at] LT',
      nextDay: '[Tomorrow at] LT',
      nextWeek: 'dddd [at] LT',
      lastDay: '[Yesterday at] LT',
      lastWeek: '[Last] dddd [at] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'in %s',
      past: '%s ago',
      s: 'a few seconds',
      ss: '%d seconds',
      m: 'a minute',
      mm: '%d minutes',
      h: 'an hour',
      hh: '%d hours',
      d: 'a day',
      dd: '%d days',
      M: 'a month',
      MM: '%d months',
      y: 'a year',
      yy: '%d years' },

    dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
    ordinal: function ordinal(number) {
      var b = number % 10,
      output =
      ~~(number % 100 / 10) === 1 ?
      'th' :
      b === 1 ?
      'st' :
      b === 2 ?
      'nd' :
      b === 3 ?
      'rd' :
      'th';
      return number + output;
    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return enIe;

});

/***/ }),
/* 173 */
/*!************************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/en-il.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : English (Israel) [en-il]
//! author : Chris Gedrim : https://github.com/chrisgedrim

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var enIl = moment.defineLocale('en-il', {
    months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split(
    '_'),

    monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
    weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
    '_'),

    weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
    weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd, D MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[Today at] LT',
      nextDay: '[Tomorrow at] LT',
      nextWeek: 'dddd [at] LT',
      lastDay: '[Yesterday at] LT',
      lastWeek: '[Last] dddd [at] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'in %s',
      past: '%s ago',
      s: 'a few seconds',
      ss: '%d seconds',
      m: 'a minute',
      mm: '%d minutes',
      h: 'an hour',
      hh: '%d hours',
      d: 'a day',
      dd: '%d days',
      M: 'a month',
      MM: '%d months',
      y: 'a year',
      yy: '%d years' },

    dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
    ordinal: function ordinal(number) {
      var b = number % 10,
      output =
      ~~(number % 100 / 10) === 1 ?
      'th' :
      b === 1 ?
      'st' :
      b === 2 ?
      'nd' :
      b === 3 ?
      'rd' :
      'th';
      return number + output;
    } });


  return enIl;

});

/***/ }),
/* 174 */
/*!************************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/en-in.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : English (India) [en-in]
//! author : Jatin Agrawal : https://github.com/jatinag22

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var enIn = moment.defineLocale('en-in', {
    months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split(
    '_'),

    monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
    weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
    '_'),

    weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
    weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
    longDateFormat: {
      LT: 'h:mm A',
      LTS: 'h:mm:ss A',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY h:mm A',
      LLLL: 'dddd, D MMMM YYYY h:mm A' },

    calendar: {
      sameDay: '[Today at] LT',
      nextDay: '[Tomorrow at] LT',
      nextWeek: 'dddd [at] LT',
      lastDay: '[Yesterday at] LT',
      lastWeek: '[Last] dddd [at] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'in %s',
      past: '%s ago',
      s: 'a few seconds',
      ss: '%d seconds',
      m: 'a minute',
      mm: '%d minutes',
      h: 'an hour',
      hh: '%d hours',
      d: 'a day',
      dd: '%d days',
      M: 'a month',
      MM: '%d months',
      y: 'a year',
      yy: '%d years' },

    dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
    ordinal: function ordinal(number) {
      var b = number % 10,
      output =
      ~~(number % 100 / 10) === 1 ?
      'th' :
      b === 1 ?
      'st' :
      b === 2 ?
      'nd' :
      b === 3 ?
      'rd' :
      'th';
      return number + output;
    },
    week: {
      dow: 0, // Sunday is the first day of the week.
      doy: 6 // The week that contains Jan 1st is the first week of the year.
    } });


  return enIn;

});

/***/ }),
/* 175 */
/*!************************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/en-nz.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : English (New Zealand) [en-nz]
//! author : Luke McGregor : https://github.com/lukemcgregor

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var enNz = moment.defineLocale('en-nz', {
    months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split(
    '_'),

    monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
    weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
    '_'),

    weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
    weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
    longDateFormat: {
      LT: 'h:mm A',
      LTS: 'h:mm:ss A',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY h:mm A',
      LLLL: 'dddd, D MMMM YYYY h:mm A' },

    calendar: {
      sameDay: '[Today at] LT',
      nextDay: '[Tomorrow at] LT',
      nextWeek: 'dddd [at] LT',
      lastDay: '[Yesterday at] LT',
      lastWeek: '[Last] dddd [at] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'in %s',
      past: '%s ago',
      s: 'a few seconds',
      ss: '%d seconds',
      m: 'a minute',
      mm: '%d minutes',
      h: 'an hour',
      hh: '%d hours',
      d: 'a day',
      dd: '%d days',
      M: 'a month',
      MM: '%d months',
      y: 'a year',
      yy: '%d years' },

    dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
    ordinal: function ordinal(number) {
      var b = number % 10,
      output =
      ~~(number % 100 / 10) === 1 ?
      'th' :
      b === 1 ?
      'st' :
      b === 2 ?
      'nd' :
      b === 3 ?
      'rd' :
      'th';
      return number + output;
    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return enNz;

});

/***/ }),
/* 176 */
/*!************************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/en-sg.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : English (Singapore) [en-sg]
//! author : Matthew Castrillon-Madrigal : https://github.com/techdimension

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var enSg = moment.defineLocale('en-sg', {
    months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split(
    '_'),

    monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
    weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
    '_'),

    weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
    weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd, D MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[Today at] LT',
      nextDay: '[Tomorrow at] LT',
      nextWeek: 'dddd [at] LT',
      lastDay: '[Yesterday at] LT',
      lastWeek: '[Last] dddd [at] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'in %s',
      past: '%s ago',
      s: 'a few seconds',
      ss: '%d seconds',
      m: 'a minute',
      mm: '%d minutes',
      h: 'an hour',
      hh: '%d hours',
      d: 'a day',
      dd: '%d days',
      M: 'a month',
      MM: '%d months',
      y: 'a year',
      yy: '%d years' },

    dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
    ordinal: function ordinal(number) {
      var b = number % 10,
      output =
      ~~(number % 100 / 10) === 1 ?
      'th' :
      b === 1 ?
      'st' :
      b === 2 ?
      'nd' :
      b === 3 ?
      'rd' :
      'th';
      return number + output;
    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return enSg;

});

/***/ }),
/* 177 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/eo.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Esperanto [eo]
//! author : Colin Dean : https://github.com/colindean
//! author : Mia Nordentoft Imperatori : https://github.com/miestasmia
//! comment : miestasmia corrected the translation by colindean
//! comment : Vivakvo corrected the translation by colindean and miestasmia

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var eo = moment.defineLocale('eo', {
    months: 'januaro_februaro_marto_aprilo_majo_junio_julio_aŭgusto_septembro_oktobro_novembro_decembro'.split(
    '_'),

    monthsShort: 'jan_feb_mart_apr_maj_jun_jul_aŭg_sept_okt_nov_dec'.split('_'),
    weekdays: 'dimanĉo_lundo_mardo_merkredo_ĵaŭdo_vendredo_sabato'.split('_'),
    weekdaysShort: 'dim_lun_mard_merk_ĵaŭ_ven_sab'.split('_'),
    weekdaysMin: 'di_lu_ma_me_ĵa_ve_sa'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'YYYY-MM-DD',
      LL: '[la] D[-an de] MMMM, YYYY',
      LLL: '[la] D[-an de] MMMM, YYYY HH:mm',
      LLLL: 'dddd[n], [la] D[-an de] MMMM, YYYY HH:mm',
      llll: 'ddd, [la] D[-an de] MMM, YYYY HH:mm' },

    meridiemParse: /[ap]\.t\.m/i,
    isPM: function isPM(input) {
      return input.charAt(0).toLowerCase() === 'p';
    },
    meridiem: function meridiem(hours, minutes, isLower) {
      if (hours > 11) {
        return isLower ? 'p.t.m.' : 'P.T.M.';
      } else {
        return isLower ? 'a.t.m.' : 'A.T.M.';
      }
    },
    calendar: {
      sameDay: '[Hodiaŭ je] LT',
      nextDay: '[Morgaŭ je] LT',
      nextWeek: 'dddd[n je] LT',
      lastDay: '[Hieraŭ je] LT',
      lastWeek: '[pasintan] dddd[n je] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'post %s',
      past: 'antaŭ %s',
      s: 'kelkaj sekundoj',
      ss: '%d sekundoj',
      m: 'unu minuto',
      mm: '%d minutoj',
      h: 'unu horo',
      hh: '%d horoj',
      d: 'unu tago', //ne 'diurno', ĉar estas uzita por proksimumo
      dd: '%d tagoj',
      M: 'unu monato',
      MM: '%d monatoj',
      y: 'unu jaro',
      yy: '%d jaroj' },

    dayOfMonthOrdinalParse: /\d{1,2}a/,
    ordinal: '%da',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 7 // The week that contains Jan 7th is the first week of the year.
    } });


  return eo;

});

/***/ }),
/* 178 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/es.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Spanish [es]
//! author : Julio Napurí : https://github.com/julionc

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split(
  '_'),

  _monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_'),
  monthsParse = [
  /^ene/i,
  /^feb/i,
  /^mar/i,
  /^abr/i,
  /^may/i,
  /^jun/i,
  /^jul/i,
  /^ago/i,
  /^sep/i,
  /^oct/i,
  /^nov/i,
  /^dic/i],

  monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;

  var es = moment.defineLocale('es', {
    months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split(
    '_'),

    monthsShort: function monthsShort(m, format) {
      if (!m) {
        return monthsShortDot;
      } else if (/-MMM-/.test(format)) {
        return _monthsShort[m.month()];
      } else {
        return monthsShortDot[m.month()];
      }
    },
    monthsRegex: monthsRegex,
    monthsShortRegex: monthsRegex,
    monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
    monthsShortStrictRegex: /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
    monthsParse: monthsParse,
    longMonthsParse: monthsParse,
    shortMonthsParse: monthsParse,
    weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
    weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
    weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'H:mm',
      LTS: 'H:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D [de] MMMM [de] YYYY',
      LLL: 'D [de] MMMM [de] YYYY H:mm',
      LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm' },

    calendar: {
      sameDay: function sameDay() {
        return '[hoy a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
      },
      nextDay: function nextDay() {
        return '[mañana a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
      },
      nextWeek: function nextWeek() {
        return 'dddd [a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
      },
      lastDay: function lastDay() {
        return '[ayer a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
      },
      lastWeek: function lastWeek() {
        return (
          '[el] dddd [pasado a la' + (
          this.hours() !== 1 ? 's' : '') +
          '] LT');

      },
      sameElse: 'L' },

    relativeTime: {
      future: 'en %s',
      past: 'hace %s',
      s: 'unos segundos',
      ss: '%d segundos',
      m: 'un minuto',
      mm: '%d minutos',
      h: 'una hora',
      hh: '%d horas',
      d: 'un día',
      dd: '%d días',
      w: 'una semana',
      ww: '%d semanas',
      M: 'un mes',
      MM: '%d meses',
      y: 'un año',
      yy: '%d años' },

    dayOfMonthOrdinalParse: /\d{1,2}º/,
    ordinal: '%dº',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    },
    invalidDate: 'Fecha inválida' });


  return es;

});

/***/ }),
/* 179 */
/*!************************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/es-do.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Spanish (Dominican Republic) [es-do]

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split(
  '_'),

  _monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_'),
  monthsParse = [
  /^ene/i,
  /^feb/i,
  /^mar/i,
  /^abr/i,
  /^may/i,
  /^jun/i,
  /^jul/i,
  /^ago/i,
  /^sep/i,
  /^oct/i,
  /^nov/i,
  /^dic/i],

  monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;

  var esDo = moment.defineLocale('es-do', {
    months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split(
    '_'),

    monthsShort: function monthsShort(m, format) {
      if (!m) {
        return monthsShortDot;
      } else if (/-MMM-/.test(format)) {
        return _monthsShort[m.month()];
      } else {
        return monthsShortDot[m.month()];
      }
    },
    monthsRegex: monthsRegex,
    monthsShortRegex: monthsRegex,
    monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
    monthsShortStrictRegex: /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
    monthsParse: monthsParse,
    longMonthsParse: monthsParse,
    shortMonthsParse: monthsParse,
    weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
    weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
    weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'h:mm A',
      LTS: 'h:mm:ss A',
      L: 'DD/MM/YYYY',
      LL: 'D [de] MMMM [de] YYYY',
      LLL: 'D [de] MMMM [de] YYYY h:mm A',
      LLLL: 'dddd, D [de] MMMM [de] YYYY h:mm A' },

    calendar: {
      sameDay: function sameDay() {
        return '[hoy a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
      },
      nextDay: function nextDay() {
        return '[mañana a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
      },
      nextWeek: function nextWeek() {
        return 'dddd [a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
      },
      lastDay: function lastDay() {
        return '[ayer a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
      },
      lastWeek: function lastWeek() {
        return (
          '[el] dddd [pasado a la' + (
          this.hours() !== 1 ? 's' : '') +
          '] LT');

      },
      sameElse: 'L' },

    relativeTime: {
      future: 'en %s',
      past: 'hace %s',
      s: 'unos segundos',
      ss: '%d segundos',
      m: 'un minuto',
      mm: '%d minutos',
      h: 'una hora',
      hh: '%d horas',
      d: 'un día',
      dd: '%d días',
      w: 'una semana',
      ww: '%d semanas',
      M: 'un mes',
      MM: '%d meses',
      y: 'un año',
      yy: '%d años' },

    dayOfMonthOrdinalParse: /\d{1,2}º/,
    ordinal: '%dº',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return esDo;

});

/***/ }),
/* 180 */
/*!************************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/es-mx.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Spanish (Mexico) [es-mx]
//! author : JC Franco : https://github.com/jcfranco

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split(
  '_'),

  _monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_'),
  monthsParse = [
  /^ene/i,
  /^feb/i,
  /^mar/i,
  /^abr/i,
  /^may/i,
  /^jun/i,
  /^jul/i,
  /^ago/i,
  /^sep/i,
  /^oct/i,
  /^nov/i,
  /^dic/i],

  monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;

  var esMx = moment.defineLocale('es-mx', {
    months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split(
    '_'),

    monthsShort: function monthsShort(m, format) {
      if (!m) {
        return monthsShortDot;
      } else if (/-MMM-/.test(format)) {
        return _monthsShort[m.month()];
      } else {
        return monthsShortDot[m.month()];
      }
    },
    monthsRegex: monthsRegex,
    monthsShortRegex: monthsRegex,
    monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
    monthsShortStrictRegex: /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
    monthsParse: monthsParse,
    longMonthsParse: monthsParse,
    shortMonthsParse: monthsParse,
    weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
    weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
    weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'H:mm',
      LTS: 'H:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D [de] MMMM [de] YYYY',
      LLL: 'D [de] MMMM [de] YYYY H:mm',
      LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm' },

    calendar: {
      sameDay: function sameDay() {
        return '[hoy a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
      },
      nextDay: function nextDay() {
        return '[mañana a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
      },
      nextWeek: function nextWeek() {
        return 'dddd [a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
      },
      lastDay: function lastDay() {
        return '[ayer a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
      },
      lastWeek: function lastWeek() {
        return (
          '[el] dddd [pasado a la' + (
          this.hours() !== 1 ? 's' : '') +
          '] LT');

      },
      sameElse: 'L' },

    relativeTime: {
      future: 'en %s',
      past: 'hace %s',
      s: 'unos segundos',
      ss: '%d segundos',
      m: 'un minuto',
      mm: '%d minutos',
      h: 'una hora',
      hh: '%d horas',
      d: 'un día',
      dd: '%d días',
      w: 'una semana',
      ww: '%d semanas',
      M: 'un mes',
      MM: '%d meses',
      y: 'un año',
      yy: '%d años' },

    dayOfMonthOrdinalParse: /\d{1,2}º/,
    ordinal: '%dº',
    week: {
      dow: 0, // Sunday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    },
    invalidDate: 'Fecha inválida' });


  return esMx;

});

/***/ }),
/* 181 */
/*!************************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/es-us.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Spanish (United States) [es-us]
//! author : bustta : https://github.com/bustta
//! author : chrisrodz : https://github.com/chrisrodz

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split(
  '_'),

  _monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_'),
  monthsParse = [
  /^ene/i,
  /^feb/i,
  /^mar/i,
  /^abr/i,
  /^may/i,
  /^jun/i,
  /^jul/i,
  /^ago/i,
  /^sep/i,
  /^oct/i,
  /^nov/i,
  /^dic/i],

  monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;

  var esUs = moment.defineLocale('es-us', {
    months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split(
    '_'),

    monthsShort: function monthsShort(m, format) {
      if (!m) {
        return monthsShortDot;
      } else if (/-MMM-/.test(format)) {
        return _monthsShort[m.month()];
      } else {
        return monthsShortDot[m.month()];
      }
    },
    monthsRegex: monthsRegex,
    monthsShortRegex: monthsRegex,
    monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
    monthsShortStrictRegex: /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
    monthsParse: monthsParse,
    longMonthsParse: monthsParse,
    shortMonthsParse: monthsParse,
    weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
    weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
    weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'h:mm A',
      LTS: 'h:mm:ss A',
      L: 'MM/DD/YYYY',
      LL: 'D [de] MMMM [de] YYYY',
      LLL: 'D [de] MMMM [de] YYYY h:mm A',
      LLLL: 'dddd, D [de] MMMM [de] YYYY h:mm A' },

    calendar: {
      sameDay: function sameDay() {
        return '[hoy a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
      },
      nextDay: function nextDay() {
        return '[mañana a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
      },
      nextWeek: function nextWeek() {
        return 'dddd [a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
      },
      lastDay: function lastDay() {
        return '[ayer a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
      },
      lastWeek: function lastWeek() {
        return (
          '[el] dddd [pasado a la' + (
          this.hours() !== 1 ? 's' : '') +
          '] LT');

      },
      sameElse: 'L' },

    relativeTime: {
      future: 'en %s',
      past: 'hace %s',
      s: 'unos segundos',
      ss: '%d segundos',
      m: 'un minuto',
      mm: '%d minutos',
      h: 'una hora',
      hh: '%d horas',
      d: 'un día',
      dd: '%d días',
      w: 'una semana',
      ww: '%d semanas',
      M: 'un mes',
      MM: '%d meses',
      y: 'un año',
      yy: '%d años' },

    dayOfMonthOrdinalParse: /\d{1,2}º/,
    ordinal: '%dº',
    week: {
      dow: 0, // Sunday is the first day of the week.
      doy: 6 // The week that contains Jan 6th is the first week of the year.
    } });


  return esUs;

});

/***/ }),
/* 182 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/et.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Estonian [et]
//! author : Henry Kehlmann : https://github.com/madhenry
//! improvements : Illimar Tambek : https://github.com/ragulka

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  function processRelativeTime(number, withoutSuffix, key, isFuture) {
    var format = {
      s: ['mõne sekundi', 'mõni sekund', 'paar sekundit'],
      ss: [number + 'sekundi', number + 'sekundit'],
      m: ['ühe minuti', 'üks minut'],
      mm: [number + ' minuti', number + ' minutit'],
      h: ['ühe tunni', 'tund aega', 'üks tund'],
      hh: [number + ' tunni', number + ' tundi'],
      d: ['ühe päeva', 'üks päev'],
      M: ['kuu aja', 'kuu aega', 'üks kuu'],
      MM: [number + ' kuu', number + ' kuud'],
      y: ['ühe aasta', 'aasta', 'üks aasta'],
      yy: [number + ' aasta', number + ' aastat'] };

    if (withoutSuffix) {
      return format[key][2] ? format[key][2] : format[key][1];
    }
    return isFuture ? format[key][0] : format[key][1];
  }

  var et = moment.defineLocale('et', {
    months: 'jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember'.split(
    '_'),

    monthsShort: 'jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets'.split(
    '_'),

    weekdays: 'pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev'.split(
    '_'),

    weekdaysShort: 'P_E_T_K_N_R_L'.split('_'),
    weekdaysMin: 'P_E_T_K_N_R_L'.split('_'),
    longDateFormat: {
      LT: 'H:mm',
      LTS: 'H:mm:ss',
      L: 'DD.MM.YYYY',
      LL: 'D. MMMM YYYY',
      LLL: 'D. MMMM YYYY H:mm',
      LLLL: 'dddd, D. MMMM YYYY H:mm' },

    calendar: {
      sameDay: '[Täna,] LT',
      nextDay: '[Homme,] LT',
      nextWeek: '[Järgmine] dddd LT',
      lastDay: '[Eile,] LT',
      lastWeek: '[Eelmine] dddd LT',
      sameElse: 'L' },

    relativeTime: {
      future: '%s pärast',
      past: '%s tagasi',
      s: processRelativeTime,
      ss: processRelativeTime,
      m: processRelativeTime,
      mm: processRelativeTime,
      h: processRelativeTime,
      hh: processRelativeTime,
      d: processRelativeTime,
      dd: '%d päeva',
      M: processRelativeTime,
      MM: processRelativeTime,
      y: processRelativeTime,
      yy: processRelativeTime },

    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal: '%d.',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return et;

});

/***/ }),
/* 183 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/eu.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Basque [eu]
//! author : Eneko Illarramendi : https://github.com/eillarra

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var eu = moment.defineLocale('eu', {
    months: 'urtarrila_otsaila_martxoa_apirila_maiatza_ekaina_uztaila_abuztua_iraila_urria_azaroa_abendua'.split(
    '_'),

    monthsShort: 'urt._ots._mar._api._mai._eka._uzt._abu._ira._urr._aza._abe.'.split(
    '_'),

    monthsParseExact: true,
    weekdays: 'igandea_astelehena_asteartea_asteazkena_osteguna_ostirala_larunbata'.split(
    '_'),

    weekdaysShort: 'ig._al._ar._az._og._ol._lr.'.split('_'),
    weekdaysMin: 'ig_al_ar_az_og_ol_lr'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'YYYY-MM-DD',
      LL: 'YYYY[ko] MMMM[ren] D[a]',
      LLL: 'YYYY[ko] MMMM[ren] D[a] HH:mm',
      LLLL: 'dddd, YYYY[ko] MMMM[ren] D[a] HH:mm',
      l: 'YYYY-M-D',
      ll: 'YYYY[ko] MMM D[a]',
      lll: 'YYYY[ko] MMM D[a] HH:mm',
      llll: 'ddd, YYYY[ko] MMM D[a] HH:mm' },

    calendar: {
      sameDay: '[gaur] LT[etan]',
      nextDay: '[bihar] LT[etan]',
      nextWeek: 'dddd LT[etan]',
      lastDay: '[atzo] LT[etan]',
      lastWeek: '[aurreko] dddd LT[etan]',
      sameElse: 'L' },

    relativeTime: {
      future: '%s barru',
      past: 'duela %s',
      s: 'segundo batzuk',
      ss: '%d segundo',
      m: 'minutu bat',
      mm: '%d minutu',
      h: 'ordu bat',
      hh: '%d ordu',
      d: 'egun bat',
      dd: '%d egun',
      M: 'hilabete bat',
      MM: '%d hilabete',
      y: 'urte bat',
      yy: '%d urte' },

    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal: '%d.',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 7 // The week that contains Jan 7th is the first week of the year.
    } });


  return eu;

});

/***/ }),
/* 184 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/fa.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Persian [fa]
//! author : Ebrahim Byagowi : https://github.com/ebraminio

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var symbolMap = {
    1: '۱',
    2: '۲',
    3: '۳',
    4: '۴',
    5: '۵',
    6: '۶',
    7: '۷',
    8: '۸',
    9: '۹',
    0: '۰' },

  numberMap = {
    '۱': '1',
    '۲': '2',
    '۳': '3',
    '۴': '4',
    '۵': '5',
    '۶': '6',
    '۷': '7',
    '۸': '8',
    '۹': '9',
    '۰': '0' };


  var fa = moment.defineLocale('fa', {
    months: 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split(
    '_'),

    monthsShort: 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split(
    '_'),

    weekdays: "\u06CC\u06A9\u200C\u0634\u0646\u0628\u0647_\u062F\u0648\u0634\u0646\u0628\u0647_\u0633\u0647\u200C\u0634\u0646\u0628\u0647_\u0686\u0647\u0627\u0631\u0634\u0646\u0628\u0647_\u067E\u0646\u062C\u200C\u0634\u0646\u0628\u0647_\u062C\u0645\u0639\u0647_\u0634\u0646\u0628\u0647".split(
    '_'),

    weekdaysShort: "\u06CC\u06A9\u200C\u0634\u0646\u0628\u0647_\u062F\u0648\u0634\u0646\u0628\u0647_\u0633\u0647\u200C\u0634\u0646\u0628\u0647_\u0686\u0647\u0627\u0631\u0634\u0646\u0628\u0647_\u067E\u0646\u062C\u200C\u0634\u0646\u0628\u0647_\u062C\u0645\u0639\u0647_\u0634\u0646\u0628\u0647".split(
    '_'),

    weekdaysMin: 'ی_د_س_چ_پ_ج_ش'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd, D MMMM YYYY HH:mm' },

    meridiemParse: /قبل از ظهر|بعد از ظهر/,
    isPM: function isPM(input) {
      return /بعد از ظهر/.test(input);
    },
    meridiem: function meridiem(hour, minute, isLower) {
      if (hour < 12) {
        return 'قبل از ظهر';
      } else {
        return 'بعد از ظهر';
      }
    },
    calendar: {
      sameDay: '[امروز ساعت] LT',
      nextDay: '[فردا ساعت] LT',
      nextWeek: 'dddd [ساعت] LT',
      lastDay: '[دیروز ساعت] LT',
      lastWeek: 'dddd [پیش] [ساعت] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'در %s',
      past: '%s پیش',
      s: 'چند ثانیه',
      ss: '%d ثانیه',
      m: 'یک دقیقه',
      mm: '%d دقیقه',
      h: 'یک ساعت',
      hh: '%d ساعت',
      d: 'یک روز',
      dd: '%d روز',
      M: 'یک ماه',
      MM: '%d ماه',
      y: 'یک سال',
      yy: '%d سال' },

    preparse: function preparse(string) {
      return string.
      replace(/[۰-۹]/g, function (match) {
        return numberMap[match];
      }).
      replace(/،/g, ',');
    },
    postformat: function postformat(string) {
      return string.
      replace(/\d/g, function (match) {
        return symbolMap[match];
      }).
      replace(/,/g, '،');
    },
    dayOfMonthOrdinalParse: /\d{1,2}م/,
    ordinal: '%dم',
    week: {
      dow: 6, // Saturday is the first day of the week.
      doy: 12 // The week that contains Jan 12th is the first week of the year.
    } });


  return fa;

});

/***/ }),
/* 185 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/fi.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Finnish [fi]
//! author : Tarmo Aidantausta : https://github.com/bleadof

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var numbersPast = 'nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän'.split(
  ' '),

  numbersFuture = [
  'nolla',
  'yhden',
  'kahden',
  'kolmen',
  'neljän',
  'viiden',
  'kuuden',
  numbersPast[7],
  numbersPast[8],
  numbersPast[9]];

  function translate(number, withoutSuffix, key, isFuture) {
    var result = '';
    switch (key) {
      case 's':
        return isFuture ? 'muutaman sekunnin' : 'muutama sekunti';
      case 'ss':
        result = isFuture ? 'sekunnin' : 'sekuntia';
        break;
      case 'm':
        return isFuture ? 'minuutin' : 'minuutti';
      case 'mm':
        result = isFuture ? 'minuutin' : 'minuuttia';
        break;
      case 'h':
        return isFuture ? 'tunnin' : 'tunti';
      case 'hh':
        result = isFuture ? 'tunnin' : 'tuntia';
        break;
      case 'd':
        return isFuture ? 'päivän' : 'päivä';
      case 'dd':
        result = isFuture ? 'päivän' : 'päivää';
        break;
      case 'M':
        return isFuture ? 'kuukauden' : 'kuukausi';
      case 'MM':
        result = isFuture ? 'kuukauden' : 'kuukautta';
        break;
      case 'y':
        return isFuture ? 'vuoden' : 'vuosi';
      case 'yy':
        result = isFuture ? 'vuoden' : 'vuotta';
        break;}

    result = verbalNumber(number, isFuture) + ' ' + result;
    return result;
  }
  function verbalNumber(number, isFuture) {
    return number < 10 ?
    isFuture ?
    numbersFuture[number] :
    numbersPast[number] :
    number;
  }

  var fi = moment.defineLocale('fi', {
    months: 'tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu'.split(
    '_'),

    monthsShort: 'tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu'.split(
    '_'),

    weekdays: 'sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai'.split(
    '_'),

    weekdaysShort: 'su_ma_ti_ke_to_pe_la'.split('_'),
    weekdaysMin: 'su_ma_ti_ke_to_pe_la'.split('_'),
    longDateFormat: {
      LT: 'HH.mm',
      LTS: 'HH.mm.ss',
      L: 'DD.MM.YYYY',
      LL: 'Do MMMM[ta] YYYY',
      LLL: 'Do MMMM[ta] YYYY, [klo] HH.mm',
      LLLL: 'dddd, Do MMMM[ta] YYYY, [klo] HH.mm',
      l: 'D.M.YYYY',
      ll: 'Do MMM YYYY',
      lll: 'Do MMM YYYY, [klo] HH.mm',
      llll: 'ddd, Do MMM YYYY, [klo] HH.mm' },

    calendar: {
      sameDay: '[tänään] [klo] LT',
      nextDay: '[huomenna] [klo] LT',
      nextWeek: 'dddd [klo] LT',
      lastDay: '[eilen] [klo] LT',
      lastWeek: '[viime] dddd[na] [klo] LT',
      sameElse: 'L' },

    relativeTime: {
      future: '%s päästä',
      past: '%s sitten',
      s: translate,
      ss: translate,
      m: translate,
      mm: translate,
      h: translate,
      hh: translate,
      d: translate,
      dd: translate,
      M: translate,
      MM: translate,
      y: translate,
      yy: translate },

    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal: '%d.',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return fi;

});

/***/ }),
/* 186 */
/*!**********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/fil.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Filipino [fil]
//! author : Dan Hagman : https://github.com/hagmandan
//! author : Matthew Co : https://github.com/matthewdeeco

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var fil = moment.defineLocale('fil', {
    months: 'Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre'.split(
    '_'),

    monthsShort: 'Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis'.split('_'),
    weekdays: 'Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado'.split(
    '_'),

    weekdaysShort: 'Lin_Lun_Mar_Miy_Huw_Biy_Sab'.split('_'),
    weekdaysMin: 'Li_Lu_Ma_Mi_Hu_Bi_Sab'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'MM/D/YYYY',
      LL: 'MMMM D, YYYY',
      LLL: 'MMMM D, YYYY HH:mm',
      LLLL: 'dddd, MMMM DD, YYYY HH:mm' },

    calendar: {
      sameDay: 'LT [ngayong araw]',
      nextDay: '[Bukas ng] LT',
      nextWeek: 'LT [sa susunod na] dddd',
      lastDay: 'LT [kahapon]',
      lastWeek: 'LT [noong nakaraang] dddd',
      sameElse: 'L' },

    relativeTime: {
      future: 'sa loob ng %s',
      past: '%s ang nakalipas',
      s: 'ilang segundo',
      ss: '%d segundo',
      m: 'isang minuto',
      mm: '%d minuto',
      h: 'isang oras',
      hh: '%d oras',
      d: 'isang araw',
      dd: '%d araw',
      M: 'isang buwan',
      MM: '%d buwan',
      y: 'isang taon',
      yy: '%d taon' },

    dayOfMonthOrdinalParse: /\d{1,2}/,
    ordinal: function ordinal(number) {
      return number;
    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return fil;

});

/***/ }),
/* 187 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/fo.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Faroese [fo]
//! author : Ragnar Johannesen : https://github.com/ragnar123
//! author : Kristian Sakarisson : https://github.com/sakarisson

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var fo = moment.defineLocale('fo', {
    months: 'januar_februar_mars_apríl_mai_juni_juli_august_september_oktober_november_desember'.split(
    '_'),

    monthsShort: 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),
    weekdays: 'sunnudagur_mánadagur_týsdagur_mikudagur_hósdagur_fríggjadagur_leygardagur'.split(
    '_'),

    weekdaysShort: 'sun_mán_týs_mik_hós_frí_ley'.split('_'),
    weekdaysMin: 'su_má_tý_mi_hó_fr_le'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd D. MMMM, YYYY HH:mm' },

    calendar: {
      sameDay: '[Í dag kl.] LT',
      nextDay: '[Í morgin kl.] LT',
      nextWeek: 'dddd [kl.] LT',
      lastDay: '[Í gjár kl.] LT',
      lastWeek: '[síðstu] dddd [kl] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'um %s',
      past: '%s síðani',
      s: 'fá sekund',
      ss: '%d sekundir',
      m: 'ein minuttur',
      mm: '%d minuttir',
      h: 'ein tími',
      hh: '%d tímar',
      d: 'ein dagur',
      dd: '%d dagar',
      M: 'ein mánaður',
      MM: '%d mánaðir',
      y: 'eitt ár',
      yy: '%d ár' },

    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal: '%d.',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return fo;

});

/***/ }),
/* 188 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/fr.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : French [fr]
//! author : John Fischer : https://github.com/jfroffice

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var monthsStrictRegex = /^(janvier|février|mars|avril|mai|juin|juillet|août|septembre|octobre|novembre|décembre)/i,
  monthsShortStrictRegex = /(janv\.?|févr\.?|mars|avr\.?|mai|juin|juil\.?|août|sept\.?|oct\.?|nov\.?|déc\.?)/i,
  monthsRegex = /(janv\.?|févr\.?|mars|avr\.?|mai|juin|juil\.?|août|sept\.?|oct\.?|nov\.?|déc\.?|janvier|février|mars|avril|mai|juin|juillet|août|septembre|octobre|novembre|décembre)/i,
  monthsParse = [
  /^janv/i,
  /^févr/i,
  /^mars/i,
  /^avr/i,
  /^mai/i,
  /^juin/i,
  /^juil/i,
  /^août/i,
  /^sept/i,
  /^oct/i,
  /^nov/i,
  /^déc/i];


  var fr = moment.defineLocale('fr', {
    months: 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split(
    '_'),

    monthsShort: 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split(
    '_'),

    monthsRegex: monthsRegex,
    monthsShortRegex: monthsRegex,
    monthsStrictRegex: monthsStrictRegex,
    monthsShortStrictRegex: monthsShortStrictRegex,
    monthsParse: monthsParse,
    longMonthsParse: monthsParse,
    shortMonthsParse: monthsParse,
    weekdays: 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
    weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
    weekdaysMin: 'di_lu_ma_me_je_ve_sa'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd D MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[Aujourd’hui à] LT',
      nextDay: '[Demain à] LT',
      nextWeek: 'dddd [à] LT',
      lastDay: '[Hier à] LT',
      lastWeek: 'dddd [dernier à] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'dans %s',
      past: 'il y a %s',
      s: 'quelques secondes',
      ss: '%d secondes',
      m: 'une minute',
      mm: '%d minutes',
      h: 'une heure',
      hh: '%d heures',
      d: 'un jour',
      dd: '%d jours',
      w: 'une semaine',
      ww: '%d semaines',
      M: 'un mois',
      MM: '%d mois',
      y: 'un an',
      yy: '%d ans' },

    dayOfMonthOrdinalParse: /\d{1,2}(er|)/,
    ordinal: function ordinal(number, period) {
      switch (period) {
        // TODO: Return 'e' when day of month > 1. Move this case inside
        // block for masculine words below.
        // See https://github.com/moment/moment/issues/3375
        case 'D':
          return number + (number === 1 ? 'er' : '');

        // Words with masculine grammatical gender: mois, trimestre, jour
        default:
        case 'M':
        case 'Q':
        case 'DDD':
        case 'd':
          return number + (number === 1 ? 'er' : 'e');

        // Words with feminine grammatical gender: semaine
        case 'w':
        case 'W':
          return number + (number === 1 ? 're' : 'e');}

    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return fr;

});

/***/ }),
/* 189 */
/*!************************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/fr-ca.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : French (Canada) [fr-ca]
//! author : Jonathan Abourbih : https://github.com/jonbca

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var frCa = moment.defineLocale('fr-ca', {
    months: 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split(
    '_'),

    monthsShort: 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split(
    '_'),

    monthsParseExact: true,
    weekdays: 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
    weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
    weekdaysMin: 'di_lu_ma_me_je_ve_sa'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'YYYY-MM-DD',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd D MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[Aujourd’hui à] LT',
      nextDay: '[Demain à] LT',
      nextWeek: 'dddd [à] LT',
      lastDay: '[Hier à] LT',
      lastWeek: 'dddd [dernier à] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'dans %s',
      past: 'il y a %s',
      s: 'quelques secondes',
      ss: '%d secondes',
      m: 'une minute',
      mm: '%d minutes',
      h: 'une heure',
      hh: '%d heures',
      d: 'un jour',
      dd: '%d jours',
      M: 'un mois',
      MM: '%d mois',
      y: 'un an',
      yy: '%d ans' },

    dayOfMonthOrdinalParse: /\d{1,2}(er|e)/,
    ordinal: function ordinal(number, period) {
      switch (period) {
        // Words with masculine grammatical gender: mois, trimestre, jour
        default:
        case 'M':
        case 'Q':
        case 'D':
        case 'DDD':
        case 'd':
          return number + (number === 1 ? 'er' : 'e');

        // Words with feminine grammatical gender: semaine
        case 'w':
        case 'W':
          return number + (number === 1 ? 're' : 'e');}

    } });


  return frCa;

});

/***/ }),
/* 190 */
/*!************************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/fr-ch.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : French (Switzerland) [fr-ch]
//! author : Gaspard Bucher : https://github.com/gaspard

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var frCh = moment.defineLocale('fr-ch', {
    months: 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split(
    '_'),

    monthsShort: 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split(
    '_'),

    monthsParseExact: true,
    weekdays: 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
    weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
    weekdaysMin: 'di_lu_ma_me_je_ve_sa'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD.MM.YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd D MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[Aujourd’hui à] LT',
      nextDay: '[Demain à] LT',
      nextWeek: 'dddd [à] LT',
      lastDay: '[Hier à] LT',
      lastWeek: 'dddd [dernier à] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'dans %s',
      past: 'il y a %s',
      s: 'quelques secondes',
      ss: '%d secondes',
      m: 'une minute',
      mm: '%d minutes',
      h: 'une heure',
      hh: '%d heures',
      d: 'un jour',
      dd: '%d jours',
      M: 'un mois',
      MM: '%d mois',
      y: 'un an',
      yy: '%d ans' },

    dayOfMonthOrdinalParse: /\d{1,2}(er|e)/,
    ordinal: function ordinal(number, period) {
      switch (period) {
        // Words with masculine grammatical gender: mois, trimestre, jour
        default:
        case 'M':
        case 'Q':
        case 'D':
        case 'DDD':
        case 'd':
          return number + (number === 1 ? 'er' : 'e');

        // Words with feminine grammatical gender: semaine
        case 'w':
        case 'W':
          return number + (number === 1 ? 're' : 'e');}

    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return frCh;

});

/***/ }),
/* 191 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/fy.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Frisian [fy]
//! author : Robin van der Vliet : https://github.com/robin0van0der0v

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var monthsShortWithDots = 'jan._feb._mrt._apr._mai_jun._jul._aug._sep._okt._nov._des.'.split(
  '_'),

  monthsShortWithoutDots = 'jan_feb_mrt_apr_mai_jun_jul_aug_sep_okt_nov_des'.split(
  '_');


  var fy = moment.defineLocale('fy', {
    months: 'jannewaris_febrewaris_maart_april_maaie_juny_july_augustus_septimber_oktober_novimber_desimber'.split(
    '_'),

    monthsShort: function monthsShort(m, format) {
      if (!m) {
        return monthsShortWithDots;
      } else if (/-MMM-/.test(format)) {
        return monthsShortWithoutDots[m.month()];
      } else {
        return monthsShortWithDots[m.month()];
      }
    },
    monthsParseExact: true,
    weekdays: 'snein_moandei_tiisdei_woansdei_tongersdei_freed_sneon'.split(
    '_'),

    weekdaysShort: 'si._mo._ti._wo._to._fr._so.'.split('_'),
    weekdaysMin: 'Si_Mo_Ti_Wo_To_Fr_So'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD-MM-YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd D MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[hjoed om] LT',
      nextDay: '[moarn om] LT',
      nextWeek: 'dddd [om] LT',
      lastDay: '[juster om] LT',
      lastWeek: '[ôfrûne] dddd [om] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'oer %s',
      past: '%s lyn',
      s: 'in pear sekonden',
      ss: '%d sekonden',
      m: 'ien minút',
      mm: '%d minuten',
      h: 'ien oere',
      hh: '%d oeren',
      d: 'ien dei',
      dd: '%d dagen',
      M: 'ien moanne',
      MM: '%d moannen',
      y: 'ien jier',
      yy: '%d jierren' },

    dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
    ordinal: function ordinal(number) {
      return (
        number + (
        number === 1 || number === 8 || number >= 20 ? 'ste' : 'de'));

    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return fy;

});

/***/ }),
/* 192 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/ga.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Irish or Irish Gaelic [ga]
//! author : André Silva : https://github.com/askpt

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var months = [
  'Eanáir',
  'Feabhra',
  'Márta',
  'Aibreán',
  'Bealtaine',
  'Meitheamh',
  'Iúil',
  'Lúnasa',
  'Meán Fómhair',
  'Deireadh Fómhair',
  'Samhain',
  'Nollaig'],

  monthsShort = [
  'Ean',
  'Feabh',
  'Márt',
  'Aib',
  'Beal',
  'Meith',
  'Iúil',
  'Lún',
  'M.F.',
  'D.F.',
  'Samh',
  'Noll'],

  weekdays = [
  'Dé Domhnaigh',
  'Dé Luain',
  'Dé Máirt',
  'Dé Céadaoin',
  'Déardaoin',
  'Dé hAoine',
  'Dé Sathairn'],

  weekdaysShort = ['Domh', 'Luan', 'Máirt', 'Céad', 'Déar', 'Aoine', 'Sath'],
  weekdaysMin = ['Do', 'Lu', 'Má', 'Cé', 'Dé', 'A', 'Sa'];

  var ga = moment.defineLocale('ga', {
    months: months,
    monthsShort: monthsShort,
    monthsParseExact: true,
    weekdays: weekdays,
    weekdaysShort: weekdaysShort,
    weekdaysMin: weekdaysMin,
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd, D MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[Inniu ag] LT',
      nextDay: '[Amárach ag] LT',
      nextWeek: 'dddd [ag] LT',
      lastDay: '[Inné ag] LT',
      lastWeek: 'dddd [seo caite] [ag] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'i %s',
      past: '%s ó shin',
      s: 'cúpla soicind',
      ss: '%d soicind',
      m: 'nóiméad',
      mm: '%d nóiméad',
      h: 'uair an chloig',
      hh: '%d uair an chloig',
      d: 'lá',
      dd: '%d lá',
      M: 'mí',
      MM: '%d míonna',
      y: 'bliain',
      yy: '%d bliain' },

    dayOfMonthOrdinalParse: /\d{1,2}(d|na|mh)/,
    ordinal: function ordinal(number) {
      var output = number === 1 ? 'd' : number % 10 === 2 ? 'na' : 'mh';
      return number + output;
    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return ga;

});

/***/ }),
/* 193 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/gd.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Scottish Gaelic [gd]
//! author : Jon Ashdown : https://github.com/jonashdown

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var months = [
  'Am Faoilleach',
  'An Gearran',
  'Am Màrt',
  'An Giblean',
  'An Cèitean',
  'An t-Ògmhios',
  'An t-Iuchar',
  'An Lùnastal',
  'An t-Sultain',
  'An Dàmhair',
  'An t-Samhain',
  'An Dùbhlachd'],

  monthsShort = [
  'Faoi',
  'Gear',
  'Màrt',
  'Gibl',
  'Cèit',
  'Ògmh',
  'Iuch',
  'Lùn',
  'Sult',
  'Dàmh',
  'Samh',
  'Dùbh'],

  weekdays = [
  'Didòmhnaich',
  'Diluain',
  'Dimàirt',
  'Diciadain',
  'Diardaoin',
  'Dihaoine',
  'Disathairne'],

  weekdaysShort = ['Did', 'Dil', 'Dim', 'Dic', 'Dia', 'Dih', 'Dis'],
  weekdaysMin = ['Dò', 'Lu', 'Mà', 'Ci', 'Ar', 'Ha', 'Sa'];

  var gd = moment.defineLocale('gd', {
    months: months,
    monthsShort: monthsShort,
    monthsParseExact: true,
    weekdays: weekdays,
    weekdaysShort: weekdaysShort,
    weekdaysMin: weekdaysMin,
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd, D MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[An-diugh aig] LT',
      nextDay: '[A-màireach aig] LT',
      nextWeek: 'dddd [aig] LT',
      lastDay: '[An-dè aig] LT',
      lastWeek: 'dddd [seo chaidh] [aig] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'ann an %s',
      past: 'bho chionn %s',
      s: 'beagan diogan',
      ss: '%d diogan',
      m: 'mionaid',
      mm: '%d mionaidean',
      h: 'uair',
      hh: '%d uairean',
      d: 'latha',
      dd: '%d latha',
      M: 'mìos',
      MM: '%d mìosan',
      y: 'bliadhna',
      yy: '%d bliadhna' },

    dayOfMonthOrdinalParse: /\d{1,2}(d|na|mh)/,
    ordinal: function ordinal(number) {
      var output = number === 1 ? 'd' : number % 10 === 2 ? 'na' : 'mh';
      return number + output;
    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return gd;

});

/***/ }),
/* 194 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/gl.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Galician [gl]
//! author : Juan G. Hurtado : https://github.com/juanghurtado

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var gl = moment.defineLocale('gl', {
    months: 'xaneiro_febreiro_marzo_abril_maio_xuño_xullo_agosto_setembro_outubro_novembro_decembro'.split(
    '_'),

    monthsShort: 'xan._feb._mar._abr._mai._xuñ._xul._ago._set._out._nov._dec.'.split(
    '_'),

    monthsParseExact: true,
    weekdays: 'domingo_luns_martes_mércores_xoves_venres_sábado'.split('_'),
    weekdaysShort: 'dom._lun._mar._mér._xov._ven._sáb.'.split('_'),
    weekdaysMin: 'do_lu_ma_mé_xo_ve_sá'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'H:mm',
      LTS: 'H:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D [de] MMMM [de] YYYY',
      LLL: 'D [de] MMMM [de] YYYY H:mm',
      LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm' },

    calendar: {
      sameDay: function sameDay() {
        return '[hoxe ' + (this.hours() !== 1 ? 'ás' : 'á') + '] LT';
      },
      nextDay: function nextDay() {
        return '[mañá ' + (this.hours() !== 1 ? 'ás' : 'á') + '] LT';
      },
      nextWeek: function nextWeek() {
        return 'dddd [' + (this.hours() !== 1 ? 'ás' : 'a') + '] LT';
      },
      lastDay: function lastDay() {
        return '[onte ' + (this.hours() !== 1 ? 'á' : 'a') + '] LT';
      },
      lastWeek: function lastWeek() {
        return (
          '[o] dddd [pasado ' + (this.hours() !== 1 ? 'ás' : 'a') + '] LT');

      },
      sameElse: 'L' },

    relativeTime: {
      future: function future(str) {
        if (str.indexOf('un') === 0) {
          return 'n' + str;
        }
        return 'en ' + str;
      },
      past: 'hai %s',
      s: 'uns segundos',
      ss: '%d segundos',
      m: 'un minuto',
      mm: '%d minutos',
      h: 'unha hora',
      hh: '%d horas',
      d: 'un día',
      dd: '%d días',
      M: 'un mes',
      MM: '%d meses',
      y: 'un ano',
      yy: '%d anos' },

    dayOfMonthOrdinalParse: /\d{1,2}º/,
    ordinal: '%dº',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return gl;

});

/***/ }),
/* 195 */
/*!***************************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/gom-deva.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Konkani Devanagari script [gom-deva]
//! author : The Discoverer : https://github.com/WikiDiscoverer

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  function processRelativeTime(number, withoutSuffix, key, isFuture) {
    var format = {
      s: ['थोडया सॅकंडांनी', 'थोडे सॅकंड'],
      ss: [number + ' सॅकंडांनी', number + ' सॅकंड'],
      m: ['एका मिणटान', 'एक मिनूट'],
      mm: [number + ' मिणटांनी', number + ' मिणटां'],
      h: ['एका वरान', 'एक वर'],
      hh: [number + ' वरांनी', number + ' वरां'],
      d: ['एका दिसान', 'एक दीस'],
      dd: [number + ' दिसांनी', number + ' दीस'],
      M: ['एका म्हयन्यान', 'एक म्हयनो'],
      MM: [number + ' म्हयन्यानी', number + ' म्हयने'],
      y: ['एका वर्सान', 'एक वर्स'],
      yy: [number + ' वर्सांनी', number + ' वर्सां'] };

    return isFuture ? format[key][0] : format[key][1];
  }

  var gomDeva = moment.defineLocale('gom-deva', {
    months: {
      standalone: 'जानेवारी_फेब्रुवारी_मार्च_एप्रील_मे_जून_जुलय_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर'.split(
      '_'),

      format: 'जानेवारीच्या_फेब्रुवारीच्या_मार्चाच्या_एप्रीलाच्या_मेयाच्या_जूनाच्या_जुलयाच्या_ऑगस्टाच्या_सप्टेंबराच्या_ऑक्टोबराच्या_नोव्हेंबराच्या_डिसेंबराच्या'.split(
      '_'),

      isFormat: /MMMM(\s)+D[oD]?/ },

    monthsShort: 'जाने._फेब्रु._मार्च_एप्री._मे_जून_जुल._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.'.split(
    '_'),

    monthsParseExact: true,
    weekdays: 'आयतार_सोमार_मंगळार_बुधवार_बिरेस्तार_सुक्रार_शेनवार'.split('_'),
    weekdaysShort: 'आयत._सोम._मंगळ._बुध._ब्रेस्त._सुक्र._शेन.'.split('_'),
    weekdaysMin: 'आ_सो_मं_बु_ब्रे_सु_शे'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'A h:mm [वाजतां]',
      LTS: 'A h:mm:ss [वाजतां]',
      L: 'DD-MM-YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY A h:mm [वाजतां]',
      LLLL: 'dddd, MMMM Do, YYYY, A h:mm [वाजतां]',
      llll: 'ddd, D MMM YYYY, A h:mm [वाजतां]' },

    calendar: {
      sameDay: '[आयज] LT',
      nextDay: '[फाल्यां] LT',
      nextWeek: '[फुडलो] dddd[,] LT',
      lastDay: '[काल] LT',
      lastWeek: '[फाटलो] dddd[,] LT',
      sameElse: 'L' },

    relativeTime: {
      future: '%s',
      past: '%s आदीं',
      s: processRelativeTime,
      ss: processRelativeTime,
      m: processRelativeTime,
      mm: processRelativeTime,
      h: processRelativeTime,
      hh: processRelativeTime,
      d: processRelativeTime,
      dd: processRelativeTime,
      M: processRelativeTime,
      MM: processRelativeTime,
      y: processRelativeTime,
      yy: processRelativeTime },

    dayOfMonthOrdinalParse: /\d{1,2}(वेर)/,
    ordinal: function ordinal(number, period) {
      switch (period) {
        // the ordinal 'वेर' only applies to day of the month
        case 'D':
          return number + 'वेर';
        default:
        case 'M':
        case 'Q':
        case 'DDD':
        case 'd':
        case 'w':
        case 'W':
          return number;}

    },
    week: {
      dow: 0, // Sunday is the first day of the week
      doy: 3 // The week that contains Jan 4th is the first week of the year (7 + 0 - 4)
    },
    meridiemParse: /राती|सकाळीं|दनपारां|सांजे/,
    meridiemHour: function meridiemHour(hour, meridiem) {
      if (hour === 12) {
        hour = 0;
      }
      if (meridiem === 'राती') {
        return hour < 4 ? hour : hour + 12;
      } else if (meridiem === 'सकाळीं') {
        return hour;
      } else if (meridiem === 'दनपारां') {
        return hour > 12 ? hour : hour + 12;
      } else if (meridiem === 'सांजे') {
        return hour + 12;
      }
    },
    meridiem: function meridiem(hour, minute, isLower) {
      if (hour < 4) {
        return 'राती';
      } else if (hour < 12) {
        return 'सकाळीं';
      } else if (hour < 16) {
        return 'दनपारां';
      } else if (hour < 20) {
        return 'सांजे';
      } else {
        return 'राती';
      }
    } });


  return gomDeva;

});

/***/ }),
/* 196 */
/*!***************************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/gom-latn.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Konkani Latin script [gom-latn]
//! author : The Discoverer : https://github.com/WikiDiscoverer

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  function processRelativeTime(number, withoutSuffix, key, isFuture) {
    var format = {
      s: ['thoddea sekondamni', 'thodde sekond'],
      ss: [number + ' sekondamni', number + ' sekond'],
      m: ['eka mintan', 'ek minut'],
      mm: [number + ' mintamni', number + ' mintam'],
      h: ['eka voran', 'ek vor'],
      hh: [number + ' voramni', number + ' voram'],
      d: ['eka disan', 'ek dis'],
      dd: [number + ' disamni', number + ' dis'],
      M: ['eka mhoinean', 'ek mhoino'],
      MM: [number + ' mhoineamni', number + ' mhoine'],
      y: ['eka vorsan', 'ek voros'],
      yy: [number + ' vorsamni', number + ' vorsam'] };

    return isFuture ? format[key][0] : format[key][1];
  }

  var gomLatn = moment.defineLocale('gom-latn', {
    months: {
      standalone: 'Janer_Febrer_Mars_Abril_Mai_Jun_Julai_Agost_Setembr_Otubr_Novembr_Dezembr'.split(
      '_'),

      format: 'Janerachea_Febrerachea_Marsachea_Abrilachea_Maiachea_Junachea_Julaiachea_Agostachea_Setembrachea_Otubrachea_Novembrachea_Dezembrachea'.split(
      '_'),

      isFormat: /MMMM(\s)+D[oD]?/ },

    monthsShort: 'Jan._Feb._Mars_Abr._Mai_Jun_Jul._Ago._Set._Otu._Nov._Dez.'.split(
    '_'),

    monthsParseExact: true,
    weekdays: "Aitar_Somar_Mongllar_Budhvar_Birestar_Sukrar_Son'var".split('_'),
    weekdaysShort: 'Ait._Som._Mon._Bud._Bre._Suk._Son.'.split('_'),
    weekdaysMin: 'Ai_Sm_Mo_Bu_Br_Su_Sn'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'A h:mm [vazta]',
      LTS: 'A h:mm:ss [vazta]',
      L: 'DD-MM-YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY A h:mm [vazta]',
      LLLL: 'dddd, MMMM Do, YYYY, A h:mm [vazta]',
      llll: 'ddd, D MMM YYYY, A h:mm [vazta]' },

    calendar: {
      sameDay: '[Aiz] LT',
      nextDay: '[Faleam] LT',
      nextWeek: '[Fuddlo] dddd[,] LT',
      lastDay: '[Kal] LT',
      lastWeek: '[Fattlo] dddd[,] LT',
      sameElse: 'L' },

    relativeTime: {
      future: '%s',
      past: '%s adim',
      s: processRelativeTime,
      ss: processRelativeTime,
      m: processRelativeTime,
      mm: processRelativeTime,
      h: processRelativeTime,
      hh: processRelativeTime,
      d: processRelativeTime,
      dd: processRelativeTime,
      M: processRelativeTime,
      MM: processRelativeTime,
      y: processRelativeTime,
      yy: processRelativeTime },

    dayOfMonthOrdinalParse: /\d{1,2}(er)/,
    ordinal: function ordinal(number, period) {
      switch (period) {
        // the ordinal 'er' only applies to day of the month
        case 'D':
          return number + 'er';
        default:
        case 'M':
        case 'Q':
        case 'DDD':
        case 'd':
        case 'w':
        case 'W':
          return number;}

    },
    week: {
      dow: 0, // Sunday is the first day of the week
      doy: 3 // The week that contains Jan 4th is the first week of the year (7 + 0 - 4)
    },
    meridiemParse: /rati|sokallim|donparam|sanje/,
    meridiemHour: function meridiemHour(hour, meridiem) {
      if (hour === 12) {
        hour = 0;
      }
      if (meridiem === 'rati') {
        return hour < 4 ? hour : hour + 12;
      } else if (meridiem === 'sokallim') {
        return hour;
      } else if (meridiem === 'donparam') {
        return hour > 12 ? hour : hour + 12;
      } else if (meridiem === 'sanje') {
        return hour + 12;
      }
    },
    meridiem: function meridiem(hour, minute, isLower) {
      if (hour < 4) {
        return 'rati';
      } else if (hour < 12) {
        return 'sokallim';
      } else if (hour < 16) {
        return 'donparam';
      } else if (hour < 20) {
        return 'sanje';
      } else {
        return 'rati';
      }
    } });


  return gomLatn;

});

/***/ }),
/* 197 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/gu.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Gujarati [gu]
//! author : Kaushik Thanki : https://github.com/Kaushik1987

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var symbolMap = {
    1: '૧',
    2: '૨',
    3: '૩',
    4: '૪',
    5: '૫',
    6: '૬',
    7: '૭',
    8: '૮',
    9: '૯',
    0: '૦' },

  numberMap = {
    '૧': '1',
    '૨': '2',
    '૩': '3',
    '૪': '4',
    '૫': '5',
    '૬': '6',
    '૭': '7',
    '૮': '8',
    '૯': '9',
    '૦': '0' };


  var gu = moment.defineLocale('gu', {
    months: 'જાન્યુઆરી_ફેબ્રુઆરી_માર્ચ_એપ્રિલ_મે_જૂન_જુલાઈ_ઑગસ્ટ_સપ્ટેમ્બર_ઑક્ટ્બર_નવેમ્બર_ડિસેમ્બર'.split(
    '_'),

    monthsShort: 'જાન્યુ._ફેબ્રુ._માર્ચ_એપ્રિ._મે_જૂન_જુલા._ઑગ._સપ્ટે._ઑક્ટ્._નવે._ડિસે.'.split(
    '_'),

    monthsParseExact: true,
    weekdays: 'રવિવાર_સોમવાર_મંગળવાર_બુધ્વાર_ગુરુવાર_શુક્રવાર_શનિવાર'.split(
    '_'),

    weekdaysShort: 'રવિ_સોમ_મંગળ_બુધ્_ગુરુ_શુક્ર_શનિ'.split('_'),
    weekdaysMin: 'ર_સો_મં_બુ_ગુ_શુ_શ'.split('_'),
    longDateFormat: {
      LT: 'A h:mm વાગ્યે',
      LTS: 'A h:mm:ss વાગ્યે',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY, A h:mm વાગ્યે',
      LLLL: 'dddd, D MMMM YYYY, A h:mm વાગ્યે' },

    calendar: {
      sameDay: '[આજ] LT',
      nextDay: '[કાલે] LT',
      nextWeek: 'dddd, LT',
      lastDay: '[ગઇકાલે] LT',
      lastWeek: '[પાછલા] dddd, LT',
      sameElse: 'L' },

    relativeTime: {
      future: '%s મા',
      past: '%s પહેલા',
      s: 'અમુક પળો',
      ss: '%d સેકંડ',
      m: 'એક મિનિટ',
      mm: '%d મિનિટ',
      h: 'એક કલાક',
      hh: '%d કલાક',
      d: 'એક દિવસ',
      dd: '%d દિવસ',
      M: 'એક મહિનો',
      MM: '%d મહિનો',
      y: 'એક વર્ષ',
      yy: '%d વર્ષ' },

    preparse: function preparse(string) {
      return string.replace(/[૧૨૩૪૫૬૭૮૯૦]/g, function (match) {
        return numberMap[match];
      });
    },
    postformat: function postformat(string) {
      return string.replace(/\d/g, function (match) {
        return symbolMap[match];
      });
    },
    // Gujarati notation for meridiems are quite fuzzy in practice. While there exists
    // a rigid notion of a 'Pahar' it is not used as rigidly in modern Gujarati.
    meridiemParse: /રાત|બપોર|સવાર|સાંજ/,
    meridiemHour: function meridiemHour(hour, meridiem) {
      if (hour === 12) {
        hour = 0;
      }
      if (meridiem === 'રાત') {
        return hour < 4 ? hour : hour + 12;
      } else if (meridiem === 'સવાર') {
        return hour;
      } else if (meridiem === 'બપોર') {
        return hour >= 10 ? hour : hour + 12;
      } else if (meridiem === 'સાંજ') {
        return hour + 12;
      }
    },
    meridiem: function meridiem(hour, minute, isLower) {
      if (hour < 4) {
        return 'રાત';
      } else if (hour < 10) {
        return 'સવાર';
      } else if (hour < 17) {
        return 'બપોર';
      } else if (hour < 20) {
        return 'સાંજ';
      } else {
        return 'રાત';
      }
    },
    week: {
      dow: 0, // Sunday is the first day of the week.
      doy: 6 // The week that contains Jan 6th is the first week of the year.
    } });


  return gu;

});

/***/ }),
/* 198 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/he.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Hebrew [he]
//! author : Tomer Cohen : https://github.com/tomer
//! author : Moshe Simantov : https://github.com/DevelopmentIL
//! author : Tal Ater : https://github.com/TalAter

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var he = moment.defineLocale('he', {
    months: 'ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר'.split(
    '_'),

    monthsShort: 'ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳'.split(
    '_'),

    weekdays: 'ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת'.split('_'),
    weekdaysShort: 'א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳'.split('_'),
    weekdaysMin: 'א_ב_ג_ד_ה_ו_ש'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D [ב]MMMM YYYY',
      LLL: 'D [ב]MMMM YYYY HH:mm',
      LLLL: 'dddd, D [ב]MMMM YYYY HH:mm',
      l: 'D/M/YYYY',
      ll: 'D MMM YYYY',
      lll: 'D MMM YYYY HH:mm',
      llll: 'ddd, D MMM YYYY HH:mm' },

    calendar: {
      sameDay: '[היום ב־]LT',
      nextDay: '[מחר ב־]LT',
      nextWeek: 'dddd [בשעה] LT',
      lastDay: '[אתמול ב־]LT',
      lastWeek: '[ביום] dddd [האחרון בשעה] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'בעוד %s',
      past: 'לפני %s',
      s: 'מספר שניות',
      ss: '%d שניות',
      m: 'דקה',
      mm: '%d דקות',
      h: 'שעה',
      hh: function hh(number) {
        if (number === 2) {
          return 'שעתיים';
        }
        return number + ' שעות';
      },
      d: 'יום',
      dd: function dd(number) {
        if (number === 2) {
          return 'יומיים';
        }
        return number + ' ימים';
      },
      M: 'חודש',
      MM: function MM(number) {
        if (number === 2) {
          return 'חודשיים';
        }
        return number + ' חודשים';
      },
      y: 'שנה',
      yy: function yy(number) {
        if (number === 2) {
          return 'שנתיים';
        } else if (number % 10 === 0 && number !== 10) {
          return number + ' שנה';
        }
        return number + ' שנים';
      } },

    meridiemParse: /אחה"צ|לפנה"צ|אחרי הצהריים|לפני הצהריים|לפנות בוקר|בבוקר|בערב/i,
    isPM: function isPM(input) {
      return /^(אחה"צ|אחרי הצהריים|בערב)$/.test(input);
    },
    meridiem: function meridiem(hour, minute, isLower) {
      if (hour < 5) {
        return 'לפנות בוקר';
      } else if (hour < 10) {
        return 'בבוקר';
      } else if (hour < 12) {
        return isLower ? 'לפנה"צ' : 'לפני הצהריים';
      } else if (hour < 18) {
        return isLower ? 'אחה"צ' : 'אחרי הצהריים';
      } else {
        return 'בערב';
      }
    } });


  return he;

});

/***/ }),
/* 199 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/hi.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Hindi [hi]
//! author : Mayank Singhal : https://github.com/mayanksinghal

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var symbolMap = {
    1: '१',
    2: '२',
    3: '३',
    4: '४',
    5: '५',
    6: '६',
    7: '७',
    8: '८',
    9: '९',
    0: '०' },

  numberMap = {
    '१': '1',
    '२': '2',
    '३': '3',
    '४': '4',
    '५': '5',
    '६': '6',
    '७': '7',
    '८': '8',
    '९': '9',
    '०': '0' },

  monthsParse = [
  /^जन/i,
  /^फ़र|फर/i,
  /^मार्च/i,
  /^अप्रै/i,
  /^मई/i,
  /^जून/i,
  /^जुल/i,
  /^अग/i,
  /^सितं|सित/i,
  /^अक्टू/i,
  /^नव|नवं/i,
  /^दिसं|दिस/i],

  shortMonthsParse = [
  /^जन/i,
  /^फ़र/i,
  /^मार्च/i,
  /^अप्रै/i,
  /^मई/i,
  /^जून/i,
  /^जुल/i,
  /^अग/i,
  /^सित/i,
  /^अक्टू/i,
  /^नव/i,
  /^दिस/i];


  var hi = moment.defineLocale('hi', {
    months: {
      format: 'जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर'.split(
      '_'),

      standalone: 'जनवरी_फरवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितंबर_अक्टूबर_नवंबर_दिसंबर'.split(
      '_') },


    monthsShort: 'जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.'.split(
    '_'),

    weekdays: 'रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),
    weekdaysShort: 'रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि'.split('_'),
    weekdaysMin: 'र_सो_मं_बु_गु_शु_श'.split('_'),
    longDateFormat: {
      LT: 'A h:mm बजे',
      LTS: 'A h:mm:ss बजे',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY, A h:mm बजे',
      LLLL: 'dddd, D MMMM YYYY, A h:mm बजे' },


    monthsParse: monthsParse,
    longMonthsParse: monthsParse,
    shortMonthsParse: shortMonthsParse,

    monthsRegex: /^(जनवरी|जन\.?|फ़रवरी|फरवरी|फ़र\.?|मार्च?|अप्रैल|अप्रै\.?|मई?|जून?|जुलाई|जुल\.?|अगस्त|अग\.?|सितम्बर|सितंबर|सित\.?|अक्टूबर|अक्टू\.?|नवम्बर|नवंबर|नव\.?|दिसम्बर|दिसंबर|दिस\.?)/i,

    monthsShortRegex: /^(जनवरी|जन\.?|फ़रवरी|फरवरी|फ़र\.?|मार्च?|अप्रैल|अप्रै\.?|मई?|जून?|जुलाई|जुल\.?|अगस्त|अग\.?|सितम्बर|सितंबर|सित\.?|अक्टूबर|अक्टू\.?|नवम्बर|नवंबर|नव\.?|दिसम्बर|दिसंबर|दिस\.?)/i,

    monthsStrictRegex: /^(जनवरी?|फ़रवरी|फरवरी?|मार्च?|अप्रैल?|मई?|जून?|जुलाई?|अगस्त?|सितम्बर|सितंबर|सित?\.?|अक्टूबर|अक्टू\.?|नवम्बर|नवंबर?|दिसम्बर|दिसंबर?)/i,

    monthsShortStrictRegex: /^(जन\.?|फ़र\.?|मार्च?|अप्रै\.?|मई?|जून?|जुल\.?|अग\.?|सित\.?|अक्टू\.?|नव\.?|दिस\.?)/i,

    calendar: {
      sameDay: '[आज] LT',
      nextDay: '[कल] LT',
      nextWeek: 'dddd, LT',
      lastDay: '[कल] LT',
      lastWeek: '[पिछले] dddd, LT',
      sameElse: 'L' },

    relativeTime: {
      future: '%s में',
      past: '%s पहले',
      s: 'कुछ ही क्षण',
      ss: '%d सेकंड',
      m: 'एक मिनट',
      mm: '%d मिनट',
      h: 'एक घंटा',
      hh: '%d घंटे',
      d: 'एक दिन',
      dd: '%d दिन',
      M: 'एक महीने',
      MM: '%d महीने',
      y: 'एक वर्ष',
      yy: '%d वर्ष' },

    preparse: function preparse(string) {
      return string.replace(/[१२३४५६७८९०]/g, function (match) {
        return numberMap[match];
      });
    },
    postformat: function postformat(string) {
      return string.replace(/\d/g, function (match) {
        return symbolMap[match];
      });
    },
    // Hindi notation for meridiems are quite fuzzy in practice. While there exists
    // a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.
    meridiemParse: /रात|सुबह|दोपहर|शाम/,
    meridiemHour: function meridiemHour(hour, meridiem) {
      if (hour === 12) {
        hour = 0;
      }
      if (meridiem === 'रात') {
        return hour < 4 ? hour : hour + 12;
      } else if (meridiem === 'सुबह') {
        return hour;
      } else if (meridiem === 'दोपहर') {
        return hour >= 10 ? hour : hour + 12;
      } else if (meridiem === 'शाम') {
        return hour + 12;
      }
    },
    meridiem: function meridiem(hour, minute, isLower) {
      if (hour < 4) {
        return 'रात';
      } else if (hour < 10) {
        return 'सुबह';
      } else if (hour < 17) {
        return 'दोपहर';
      } else if (hour < 20) {
        return 'शाम';
      } else {
        return 'रात';
      }
    },
    week: {
      dow: 0, // Sunday is the first day of the week.
      doy: 6 // The week that contains Jan 6th is the first week of the year.
    } });


  return hi;

});

/***/ }),
/* 200 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/hr.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Croatian [hr]
//! author : Bojan Marković : https://github.com/bmarkovic

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  function translate(number, withoutSuffix, key) {
    var result = number + ' ';
    switch (key) {
      case 'ss':
        if (number === 1) {
          result += 'sekunda';
        } else if (number === 2 || number === 3 || number === 4) {
          result += 'sekunde';
        } else {
          result += 'sekundi';
        }
        return result;
      case 'm':
        return withoutSuffix ? 'jedna minuta' : 'jedne minute';
      case 'mm':
        if (number === 1) {
          result += 'minuta';
        } else if (number === 2 || number === 3 || number === 4) {
          result += 'minute';
        } else {
          result += 'minuta';
        }
        return result;
      case 'h':
        return withoutSuffix ? 'jedan sat' : 'jednog sata';
      case 'hh':
        if (number === 1) {
          result += 'sat';
        } else if (number === 2 || number === 3 || number === 4) {
          result += 'sata';
        } else {
          result += 'sati';
        }
        return result;
      case 'dd':
        if (number === 1) {
          result += 'dan';
        } else {
          result += 'dana';
        }
        return result;
      case 'MM':
        if (number === 1) {
          result += 'mjesec';
        } else if (number === 2 || number === 3 || number === 4) {
          result += 'mjeseca';
        } else {
          result += 'mjeseci';
        }
        return result;
      case 'yy':
        if (number === 1) {
          result += 'godina';
        } else if (number === 2 || number === 3 || number === 4) {
          result += 'godine';
        } else {
          result += 'godina';
        }
        return result;}

  }

  var hr = moment.defineLocale('hr', {
    months: {
      format: 'siječnja_veljače_ožujka_travnja_svibnja_lipnja_srpnja_kolovoza_rujna_listopada_studenoga_prosinca'.split(
      '_'),

      standalone: 'siječanj_veljača_ožujak_travanj_svibanj_lipanj_srpanj_kolovoz_rujan_listopad_studeni_prosinac'.split(
      '_') },


    monthsShort: 'sij._velj._ožu._tra._svi._lip._srp._kol._ruj._lis._stu._pro.'.split(
    '_'),

    monthsParseExact: true,
    weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split(
    '_'),

    weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
    weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'H:mm',
      LTS: 'H:mm:ss',
      L: 'DD.MM.YYYY',
      LL: 'Do MMMM YYYY',
      LLL: 'Do MMMM YYYY H:mm',
      LLLL: 'dddd, Do MMMM YYYY H:mm' },

    calendar: {
      sameDay: '[danas u] LT',
      nextDay: '[sutra u] LT',
      nextWeek: function nextWeek() {
        switch (this.day()) {
          case 0:
            return '[u] [nedjelju] [u] LT';
          case 3:
            return '[u] [srijedu] [u] LT';
          case 6:
            return '[u] [subotu] [u] LT';
          case 1:
          case 2:
          case 4:
          case 5:
            return '[u] dddd [u] LT';}

      },
      lastDay: '[jučer u] LT',
      lastWeek: function lastWeek() {
        switch (this.day()) {
          case 0:
            return '[prošlu] [nedjelju] [u] LT';
          case 3:
            return '[prošlu] [srijedu] [u] LT';
          case 6:
            return '[prošle] [subote] [u] LT';
          case 1:
          case 2:
          case 4:
          case 5:
            return '[prošli] dddd [u] LT';}

      },
      sameElse: 'L' },

    relativeTime: {
      future: 'za %s',
      past: 'prije %s',
      s: 'par sekundi',
      ss: translate,
      m: translate,
      mm: translate,
      h: translate,
      hh: translate,
      d: 'dan',
      dd: translate,
      M: 'mjesec',
      MM: translate,
      y: 'godinu',
      yy: translate },

    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal: '%d.',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 7 // The week that contains Jan 7th is the first week of the year.
    } });


  return hr;

});

/***/ }),
/* 201 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/hu.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Hungarian [hu]
//! author : Adam Brunner : https://github.com/adambrunner
//! author : Peter Viszt  : https://github.com/passatgt

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var weekEndings = 'vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton'.split(
  ' ');

  function translate(number, withoutSuffix, key, isFuture) {
    var num = number;
    switch (key) {
      case 's':
        return isFuture || withoutSuffix ?
        'néhány másodperc' :
        'néhány másodperce';
      case 'ss':
        return num + (isFuture || withoutSuffix) ?
        ' másodperc' :
        ' másodperce';
      case 'm':
        return 'egy' + (isFuture || withoutSuffix ? ' perc' : ' perce');
      case 'mm':
        return num + (isFuture || withoutSuffix ? ' perc' : ' perce');
      case 'h':
        return 'egy' + (isFuture || withoutSuffix ? ' óra' : ' órája');
      case 'hh':
        return num + (isFuture || withoutSuffix ? ' óra' : ' órája');
      case 'd':
        return 'egy' + (isFuture || withoutSuffix ? ' nap' : ' napja');
      case 'dd':
        return num + (isFuture || withoutSuffix ? ' nap' : ' napja');
      case 'M':
        return 'egy' + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');
      case 'MM':
        return num + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');
      case 'y':
        return 'egy' + (isFuture || withoutSuffix ? ' év' : ' éve');
      case 'yy':
        return num + (isFuture || withoutSuffix ? ' év' : ' éve');}

    return '';
  }
  function week(isFuture) {
    return (
      (isFuture ? '' : '[múlt] ') +
      '[' +
      weekEndings[this.day()] +
      '] LT[-kor]');

  }

  var hu = moment.defineLocale('hu', {
    months: 'január_február_március_április_május_június_július_augusztus_szeptember_október_november_december'.split(
    '_'),

    monthsShort: 'jan._feb._márc._ápr._máj._jún._júl._aug._szept._okt._nov._dec.'.split(
    '_'),

    monthsParseExact: true,
    weekdays: 'vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat'.split('_'),
    weekdaysShort: 'vas_hét_kedd_sze_csüt_pén_szo'.split('_'),
    weekdaysMin: 'v_h_k_sze_cs_p_szo'.split('_'),
    longDateFormat: {
      LT: 'H:mm',
      LTS: 'H:mm:ss',
      L: 'YYYY.MM.DD.',
      LL: 'YYYY. MMMM D.',
      LLL: 'YYYY. MMMM D. H:mm',
      LLLL: 'YYYY. MMMM D., dddd H:mm' },

    meridiemParse: /de|du/i,
    isPM: function isPM(input) {
      return input.charAt(1).toLowerCase() === 'u';
    },
    meridiem: function meridiem(hours, minutes, isLower) {
      if (hours < 12) {
        return isLower === true ? 'de' : 'DE';
      } else {
        return isLower === true ? 'du' : 'DU';
      }
    },
    calendar: {
      sameDay: '[ma] LT[-kor]',
      nextDay: '[holnap] LT[-kor]',
      nextWeek: function nextWeek() {
        return week.call(this, true);
      },
      lastDay: '[tegnap] LT[-kor]',
      lastWeek: function lastWeek() {
        return week.call(this, false);
      },
      sameElse: 'L' },

    relativeTime: {
      future: '%s múlva',
      past: '%s',
      s: translate,
      ss: translate,
      m: translate,
      mm: translate,
      h: translate,
      hh: translate,
      d: translate,
      dd: translate,
      M: translate,
      MM: translate,
      y: translate,
      yy: translate },

    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal: '%d.',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return hu;

});

/***/ }),
/* 202 */
/*!************************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/hy-am.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Armenian [hy-am]
//! author : Armendarabyan : https://github.com/armendarabyan

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var hyAm = moment.defineLocale('hy-am', {
    months: {
      format: 'հունվարի_փետրվարի_մարտի_ապրիլի_մայիսի_հունիսի_հուլիսի_օգոստոսի_սեպտեմբերի_հոկտեմբերի_նոյեմբերի_դեկտեմբերի'.split(
      '_'),

      standalone: 'հունվար_փետրվար_մարտ_ապրիլ_մայիս_հունիս_հուլիս_օգոստոս_սեպտեմբեր_հոկտեմբեր_նոյեմբեր_դեկտեմբեր'.split(
      '_') },


    monthsShort: 'հնվ_փտր_մրտ_ապր_մյս_հնս_հլս_օգս_սպտ_հկտ_նմբ_դկտ'.split('_'),
    weekdays: 'կիրակի_երկուշաբթի_երեքշաբթի_չորեքշաբթի_հինգշաբթի_ուրբաթ_շաբաթ'.split(
    '_'),

    weekdaysShort: 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),
    weekdaysMin: 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD.MM.YYYY',
      LL: 'D MMMM YYYY թ.',
      LLL: 'D MMMM YYYY թ., HH:mm',
      LLLL: 'dddd, D MMMM YYYY թ., HH:mm' },

    calendar: {
      sameDay: '[այսօր] LT',
      nextDay: '[վաղը] LT',
      lastDay: '[երեկ] LT',
      nextWeek: function nextWeek() {
        return 'dddd [օրը ժամը] LT';
      },
      lastWeek: function lastWeek() {
        return '[անցած] dddd [օրը ժամը] LT';
      },
      sameElse: 'L' },

    relativeTime: {
      future: '%s հետո',
      past: '%s առաջ',
      s: 'մի քանի վայրկյան',
      ss: '%d վայրկյան',
      m: 'րոպե',
      mm: '%d րոպե',
      h: 'ժամ',
      hh: '%d ժամ',
      d: 'օր',
      dd: '%d օր',
      M: 'ամիս',
      MM: '%d ամիս',
      y: 'տարի',
      yy: '%d տարի' },

    meridiemParse: /գիշերվա|առավոտվա|ցերեկվա|երեկոյան/,
    isPM: function isPM(input) {
      return /^(ցերեկվա|երեկոյան)$/.test(input);
    },
    meridiem: function meridiem(hour) {
      if (hour < 4) {
        return 'գիշերվա';
      } else if (hour < 12) {
        return 'առավոտվա';
      } else if (hour < 17) {
        return 'ցերեկվա';
      } else {
        return 'երեկոյան';
      }
    },
    dayOfMonthOrdinalParse: /\d{1,2}|\d{1,2}-(ին|րդ)/,
    ordinal: function ordinal(number, period) {
      switch (period) {
        case 'DDD':
        case 'w':
        case 'W':
        case 'DDDo':
          if (number === 1) {
            return number + '-ին';
          }
          return number + '-րդ';
        default:
          return number;}

    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 7 // The week that contains Jan 7th is the first week of the year.
    } });


  return hyAm;

});

/***/ }),
/* 203 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/id.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Indonesian [id]
//! author : Mohammad Satrio Utomo : https://github.com/tyok
//! reference: http://id.wikisource.org/wiki/Pedoman_Umum_Ejaan_Bahasa_Indonesia_yang_Disempurnakan

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var id = moment.defineLocale('id', {
    months: 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember'.split(
    '_'),

    monthsShort: 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Agt_Sep_Okt_Nov_Des'.split('_'),
    weekdays: 'Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu'.split('_'),
    weekdaysShort: 'Min_Sen_Sel_Rab_Kam_Jum_Sab'.split('_'),
    weekdaysMin: 'Mg_Sn_Sl_Rb_Km_Jm_Sb'.split('_'),
    longDateFormat: {
      LT: 'HH.mm',
      LTS: 'HH.mm.ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY [pukul] HH.mm',
      LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm' },

    meridiemParse: /pagi|siang|sore|malam/,
    meridiemHour: function meridiemHour(hour, meridiem) {
      if (hour === 12) {
        hour = 0;
      }
      if (meridiem === 'pagi') {
        return hour;
      } else if (meridiem === 'siang') {
        return hour >= 11 ? hour : hour + 12;
      } else if (meridiem === 'sore' || meridiem === 'malam') {
        return hour + 12;
      }
    },
    meridiem: function meridiem(hours, minutes, isLower) {
      if (hours < 11) {
        return 'pagi';
      } else if (hours < 15) {
        return 'siang';
      } else if (hours < 19) {
        return 'sore';
      } else {
        return 'malam';
      }
    },
    calendar: {
      sameDay: '[Hari ini pukul] LT',
      nextDay: '[Besok pukul] LT',
      nextWeek: 'dddd [pukul] LT',
      lastDay: '[Kemarin pukul] LT',
      lastWeek: 'dddd [lalu pukul] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'dalam %s',
      past: '%s yang lalu',
      s: 'beberapa detik',
      ss: '%d detik',
      m: 'semenit',
      mm: '%d menit',
      h: 'sejam',
      hh: '%d jam',
      d: 'sehari',
      dd: '%d hari',
      M: 'sebulan',
      MM: '%d bulan',
      y: 'setahun',
      yy: '%d tahun' },

    week: {
      dow: 0, // Sunday is the first day of the week.
      doy: 6 // The week that contains Jan 6th is the first week of the year.
    } });


  return id;

});

/***/ }),
/* 204 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/is.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Icelandic [is]
//! author : Hinrik Örn Sigurðsson : https://github.com/hinrik

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  function plural(n) {
    if (n % 100 === 11) {
      return true;
    } else if (n % 10 === 1) {
      return false;
    }
    return true;
  }
  function translate(number, withoutSuffix, key, isFuture) {
    var result = number + ' ';
    switch (key) {
      case 's':
        return withoutSuffix || isFuture ?
        'nokkrar sekúndur' :
        'nokkrum sekúndum';
      case 'ss':
        if (plural(number)) {
          return (
            result + (
            withoutSuffix || isFuture ? 'sekúndur' : 'sekúndum'));

        }
        return result + 'sekúnda';
      case 'm':
        return withoutSuffix ? 'mínúta' : 'mínútu';
      case 'mm':
        if (plural(number)) {
          return (
            result + (withoutSuffix || isFuture ? 'mínútur' : 'mínútum'));

        } else if (withoutSuffix) {
          return result + 'mínúta';
        }
        return result + 'mínútu';
      case 'hh':
        if (plural(number)) {
          return (
            result + (
            withoutSuffix || isFuture ?
            'klukkustundir' :
            'klukkustundum'));

        }
        return result + 'klukkustund';
      case 'd':
        if (withoutSuffix) {
          return 'dagur';
        }
        return isFuture ? 'dag' : 'degi';
      case 'dd':
        if (plural(number)) {
          if (withoutSuffix) {
            return result + 'dagar';
          }
          return result + (isFuture ? 'daga' : 'dögum');
        } else if (withoutSuffix) {
          return result + 'dagur';
        }
        return result + (isFuture ? 'dag' : 'degi');
      case 'M':
        if (withoutSuffix) {
          return 'mánuður';
        }
        return isFuture ? 'mánuð' : 'mánuði';
      case 'MM':
        if (plural(number)) {
          if (withoutSuffix) {
            return result + 'mánuðir';
          }
          return result + (isFuture ? 'mánuði' : 'mánuðum');
        } else if (withoutSuffix) {
          return result + 'mánuður';
        }
        return result + (isFuture ? 'mánuð' : 'mánuði');
      case 'y':
        return withoutSuffix || isFuture ? 'ár' : 'ári';
      case 'yy':
        if (plural(number)) {
          return result + (withoutSuffix || isFuture ? 'ár' : 'árum');
        }
        return result + (withoutSuffix || isFuture ? 'ár' : 'ári');}

  }

  var is = moment.defineLocale('is', {
    months: 'janúar_febrúar_mars_apríl_maí_júní_júlí_ágúst_september_október_nóvember_desember'.split(
    '_'),

    monthsShort: 'jan_feb_mar_apr_maí_jún_júl_ágú_sep_okt_nóv_des'.split('_'),
    weekdays: 'sunnudagur_mánudagur_þriðjudagur_miðvikudagur_fimmtudagur_föstudagur_laugardagur'.split(
    '_'),

    weekdaysShort: 'sun_mán_þri_mið_fim_fös_lau'.split('_'),
    weekdaysMin: 'Su_Má_Þr_Mi_Fi_Fö_La'.split('_'),
    longDateFormat: {
      LT: 'H:mm',
      LTS: 'H:mm:ss',
      L: 'DD.MM.YYYY',
      LL: 'D. MMMM YYYY',
      LLL: 'D. MMMM YYYY [kl.] H:mm',
      LLLL: 'dddd, D. MMMM YYYY [kl.] H:mm' },

    calendar: {
      sameDay: '[í dag kl.] LT',
      nextDay: '[á morgun kl.] LT',
      nextWeek: 'dddd [kl.] LT',
      lastDay: '[í gær kl.] LT',
      lastWeek: '[síðasta] dddd [kl.] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'eftir %s',
      past: 'fyrir %s síðan',
      s: translate,
      ss: translate,
      m: translate,
      mm: translate,
      h: 'klukkustund',
      hh: translate,
      d: translate,
      dd: translate,
      M: translate,
      MM: translate,
      y: translate,
      yy: translate },

    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal: '%d.',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return is;

});

/***/ }),
/* 205 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/it.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Italian [it]
//! author : Lorenzo : https://github.com/aliem
//! author: Mattia Larentis: https://github.com/nostalgiaz
//! author: Marco : https://github.com/Manfre98

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var it = moment.defineLocale('it', {
    months: 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split(
    '_'),

    monthsShort: 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),
    weekdays: 'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split(
    '_'),

    weekdaysShort: 'dom_lun_mar_mer_gio_ven_sab'.split('_'),
    weekdaysMin: 'do_lu_ma_me_gi_ve_sa'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd D MMMM YYYY HH:mm' },

    calendar: {
      sameDay: function sameDay() {
        return (
          '[Oggi a' + (
          this.hours() > 1 ? 'lle ' : this.hours() === 0 ? ' ' : "ll'") +
          ']LT');

      },
      nextDay: function nextDay() {
        return (
          '[Domani a' + (
          this.hours() > 1 ? 'lle ' : this.hours() === 0 ? ' ' : "ll'") +
          ']LT');

      },
      nextWeek: function nextWeek() {
        return (
          'dddd [a' + (
          this.hours() > 1 ? 'lle ' : this.hours() === 0 ? ' ' : "ll'") +
          ']LT');

      },
      lastDay: function lastDay() {
        return (
          '[Ieri a' + (
          this.hours() > 1 ? 'lle ' : this.hours() === 0 ? ' ' : "ll'") +
          ']LT');

      },
      lastWeek: function lastWeek() {
        switch (this.day()) {
          case 0:
            return (
              '[La scorsa] dddd [a' + (
              this.hours() > 1 ?
              'lle ' :
              this.hours() === 0 ?
              ' ' :
              "ll'") +
              ']LT');

          default:
            return (
              '[Lo scorso] dddd [a' + (
              this.hours() > 1 ?
              'lle ' :
              this.hours() === 0 ?
              ' ' :
              "ll'") +
              ']LT');}


      },
      sameElse: 'L' },

    relativeTime: {
      future: 'tra %s',
      past: '%s fa',
      s: 'alcuni secondi',
      ss: '%d secondi',
      m: 'un minuto',
      mm: '%d minuti',
      h: "un'ora",
      hh: '%d ore',
      d: 'un giorno',
      dd: '%d giorni',
      w: 'una settimana',
      ww: '%d settimane',
      M: 'un mese',
      MM: '%d mesi',
      y: 'un anno',
      yy: '%d anni' },

    dayOfMonthOrdinalParse: /\d{1,2}º/,
    ordinal: '%dº',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return it;

});

/***/ }),
/* 206 */
/*!************************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/it-ch.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Italian (Switzerland) [it-ch]
//! author : xfh : https://github.com/xfh

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var itCh = moment.defineLocale('it-ch', {
    months: 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split(
    '_'),

    monthsShort: 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),
    weekdays: 'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split(
    '_'),

    weekdaysShort: 'dom_lun_mar_mer_gio_ven_sab'.split('_'),
    weekdaysMin: 'do_lu_ma_me_gi_ve_sa'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD.MM.YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd D MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[Oggi alle] LT',
      nextDay: '[Domani alle] LT',
      nextWeek: 'dddd [alle] LT',
      lastDay: '[Ieri alle] LT',
      lastWeek: function lastWeek() {
        switch (this.day()) {
          case 0:
            return '[la scorsa] dddd [alle] LT';
          default:
            return '[lo scorso] dddd [alle] LT';}

      },
      sameElse: 'L' },

    relativeTime: {
      future: function future(s) {
        return (/^[0-9].+$/.test(s) ? 'tra' : 'in') + ' ' + s;
      },
      past: '%s fa',
      s: 'alcuni secondi',
      ss: '%d secondi',
      m: 'un minuto',
      mm: '%d minuti',
      h: "un'ora",
      hh: '%d ore',
      d: 'un giorno',
      dd: '%d giorni',
      M: 'un mese',
      MM: '%d mesi',
      y: 'un anno',
      yy: '%d anni' },

    dayOfMonthOrdinalParse: /\d{1,2}º/,
    ordinal: '%dº',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return itCh;

});

/***/ }),
/* 207 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/ja.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Japanese [ja]
//! author : LI Long : https://github.com/baryon

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var ja = moment.defineLocale('ja', {
    eras: [
    {
      since: '2019-05-01',
      offset: 1,
      name: '令和',
      narrow: '㋿',
      abbr: 'R' },

    {
      since: '1989-01-08',
      until: '2019-04-30',
      offset: 1,
      name: '平成',
      narrow: '㍻',
      abbr: 'H' },

    {
      since: '1926-12-25',
      until: '1989-01-07',
      offset: 1,
      name: '昭和',
      narrow: '㍼',
      abbr: 'S' },

    {
      since: '1912-07-30',
      until: '1926-12-24',
      offset: 1,
      name: '大正',
      narrow: '㍽',
      abbr: 'T' },

    {
      since: '1873-01-01',
      until: '1912-07-29',
      offset: 6,
      name: '明治',
      narrow: '㍾',
      abbr: 'M' },

    {
      since: '0001-01-01',
      until: '1873-12-31',
      offset: 1,
      name: '西暦',
      narrow: 'AD',
      abbr: 'AD' },

    {
      since: '0000-12-31',
      until: -Infinity,
      offset: 1,
      name: '紀元前',
      narrow: 'BC',
      abbr: 'BC' }],


    eraYearOrdinalRegex: /(元|\d+)年/,
    eraYearOrdinalParse: function eraYearOrdinalParse(input, match) {
      return match[1] === '元' ? 1 : parseInt(match[1] || input, 10);
    },
    months: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
    monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split(
    '_'),

    weekdays: '日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日'.split('_'),
    weekdaysShort: '日_月_火_水_木_金_土'.split('_'),
    weekdaysMin: '日_月_火_水_木_金_土'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'YYYY/MM/DD',
      LL: 'YYYY年M月D日',
      LLL: 'YYYY年M月D日 HH:mm',
      LLLL: 'YYYY年M月D日 dddd HH:mm',
      l: 'YYYY/MM/DD',
      ll: 'YYYY年M月D日',
      lll: 'YYYY年M月D日 HH:mm',
      llll: 'YYYY年M月D日(ddd) HH:mm' },

    meridiemParse: /午前|午後/i,
    isPM: function isPM(input) {
      return input === '午後';
    },
    meridiem: function meridiem(hour, minute, isLower) {
      if (hour < 12) {
        return '午前';
      } else {
        return '午後';
      }
    },
    calendar: {
      sameDay: '[今日] LT',
      nextDay: '[明日] LT',
      nextWeek: function nextWeek(now) {
        if (now.week() !== this.week()) {
          return '[来週]dddd LT';
        } else {
          return 'dddd LT';
        }
      },
      lastDay: '[昨日] LT',
      lastWeek: function lastWeek(now) {
        if (this.week() !== now.week()) {
          return '[先週]dddd LT';
        } else {
          return 'dddd LT';
        }
      },
      sameElse: 'L' },

    dayOfMonthOrdinalParse: /\d{1,2}日/,
    ordinal: function ordinal(number, period) {
      switch (period) {
        case 'y':
          return number === 1 ? '元年' : number + '年';
        case 'd':
        case 'D':
        case 'DDD':
          return number + '日';
        default:
          return number;}

    },
    relativeTime: {
      future: '%s後',
      past: '%s前',
      s: '数秒',
      ss: '%d秒',
      m: '1分',
      mm: '%d分',
      h: '1時間',
      hh: '%d時間',
      d: '1日',
      dd: '%d日',
      M: '1ヶ月',
      MM: '%dヶ月',
      y: '1年',
      yy: '%d年' } });



  return ja;

});

/***/ }),
/* 208 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/jv.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Javanese [jv]
//! author : Rony Lantip : https://github.com/lantip
//! reference: http://jv.wikipedia.org/wiki/Basa_Jawa

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var jv = moment.defineLocale('jv', {
    months: 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_Nopember_Desember'.split(
    '_'),

    monthsShort: 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nop_Des'.split('_'),
    weekdays: 'Minggu_Senen_Seloso_Rebu_Kemis_Jemuwah_Septu'.split('_'),
    weekdaysShort: 'Min_Sen_Sel_Reb_Kem_Jem_Sep'.split('_'),
    weekdaysMin: 'Mg_Sn_Sl_Rb_Km_Jm_Sp'.split('_'),
    longDateFormat: {
      LT: 'HH.mm',
      LTS: 'HH.mm.ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY [pukul] HH.mm',
      LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm' },

    meridiemParse: /enjing|siyang|sonten|ndalu/,
    meridiemHour: function meridiemHour(hour, meridiem) {
      if (hour === 12) {
        hour = 0;
      }
      if (meridiem === 'enjing') {
        return hour;
      } else if (meridiem === 'siyang') {
        return hour >= 11 ? hour : hour + 12;
      } else if (meridiem === 'sonten' || meridiem === 'ndalu') {
        return hour + 12;
      }
    },
    meridiem: function meridiem(hours, minutes, isLower) {
      if (hours < 11) {
        return 'enjing';
      } else if (hours < 15) {
        return 'siyang';
      } else if (hours < 19) {
        return 'sonten';
      } else {
        return 'ndalu';
      }
    },
    calendar: {
      sameDay: '[Dinten puniko pukul] LT',
      nextDay: '[Mbenjang pukul] LT',
      nextWeek: 'dddd [pukul] LT',
      lastDay: '[Kala wingi pukul] LT',
      lastWeek: 'dddd [kepengker pukul] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'wonten ing %s',
      past: '%s ingkang kepengker',
      s: 'sawetawis detik',
      ss: '%d detik',
      m: 'setunggal menit',
      mm: '%d menit',
      h: 'setunggal jam',
      hh: '%d jam',
      d: 'sedinten',
      dd: '%d dinten',
      M: 'sewulan',
      MM: '%d wulan',
      y: 'setaun',
      yy: '%d taun' },

    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 7 // The week that contains Jan 7th is the first week of the year.
    } });


  return jv;

});

/***/ }),
/* 209 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/ka.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Georgian [ka]
//! author : Irakli Janiashvili : https://github.com/IrakliJani

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var ka = moment.defineLocale('ka', {
    months: 'იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი'.split(
    '_'),

    monthsShort: 'იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ'.split('_'),
    weekdays: {
      standalone: 'კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი'.split(
      '_'),

      format: 'კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს'.split(
      '_'),

      isFormat: /(წინა|შემდეგ)/ },

    weekdaysShort: 'კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ'.split('_'),
    weekdaysMin: 'კვ_ორ_სა_ოთ_ხუ_პა_შა'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd, D MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[დღეს] LT[-ზე]',
      nextDay: '[ხვალ] LT[-ზე]',
      lastDay: '[გუშინ] LT[-ზე]',
      nextWeek: '[შემდეგ] dddd LT[-ზე]',
      lastWeek: '[წინა] dddd LT-ზე',
      sameElse: 'L' },

    relativeTime: {
      future: function future(s) {
        return s.replace(/(წამ|წუთ|საათ|წელ|დღ|თვ)(ი|ე)/, function (
        $0,
        $1,
        $2)
        {
          return $2 === 'ი' ? $1 + 'ში' : $1 + $2 + 'ში';
        });
      },
      past: function past(s) {
        if (/(წამი|წუთი|საათი|დღე|თვე)/.test(s)) {
          return s.replace(/(ი|ე)$/, 'ის წინ');
        }
        if (/წელი/.test(s)) {
          return s.replace(/წელი$/, 'წლის წინ');
        }
        return s;
      },
      s: 'რამდენიმე წამი',
      ss: '%d წამი',
      m: 'წუთი',
      mm: '%d წუთი',
      h: 'საათი',
      hh: '%d საათი',
      d: 'დღე',
      dd: '%d დღე',
      M: 'თვე',
      MM: '%d თვე',
      y: 'წელი',
      yy: '%d წელი' },

    dayOfMonthOrdinalParse: /0|1-ლი|მე-\d{1,2}|\d{1,2}-ე/,
    ordinal: function ordinal(number) {
      if (number === 0) {
        return number;
      }
      if (number === 1) {
        return number + '-ლი';
      }
      if (
      number < 20 ||
      number <= 100 && number % 20 === 0 ||
      number % 100 === 0)
      {
        return 'მე-' + number;
      }
      return number + '-ე';
    },
    week: {
      dow: 1,
      doy: 7 } });



  return ka;

});

/***/ }),
/* 210 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/kk.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Kazakh [kk]
//! authors : Nurlan Rakhimzhanov : https://github.com/nurlan

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var suffixes = {
    0: '-ші',
    1: '-ші',
    2: '-ші',
    3: '-ші',
    4: '-ші',
    5: '-ші',
    6: '-шы',
    7: '-ші',
    8: '-ші',
    9: '-шы',
    10: '-шы',
    20: '-шы',
    30: '-шы',
    40: '-шы',
    50: '-ші',
    60: '-шы',
    70: '-ші',
    80: '-ші',
    90: '-шы',
    100: '-ші' };


  var kk = moment.defineLocale('kk', {
    months: 'қаңтар_ақпан_наурыз_сәуір_мамыр_маусым_шілде_тамыз_қыркүйек_қазан_қараша_желтоқсан'.split(
    '_'),

    monthsShort: 'қаң_ақп_нау_сәу_мам_мау_шіл_там_қыр_қаз_қар_жел'.split('_'),
    weekdays: 'жексенбі_дүйсенбі_сейсенбі_сәрсенбі_бейсенбі_жұма_сенбі'.split(
    '_'),

    weekdaysShort: 'жек_дүй_сей_сәр_бей_жұм_сен'.split('_'),
    weekdaysMin: 'жк_дй_сй_ср_бй_жм_сн'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD.MM.YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd, D MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[Бүгін сағат] LT',
      nextDay: '[Ертең сағат] LT',
      nextWeek: 'dddd [сағат] LT',
      lastDay: '[Кеше сағат] LT',
      lastWeek: '[Өткен аптаның] dddd [сағат] LT',
      sameElse: 'L' },

    relativeTime: {
      future: '%s ішінде',
      past: '%s бұрын',
      s: 'бірнеше секунд',
      ss: '%d секунд',
      m: 'бір минут',
      mm: '%d минут',
      h: 'бір сағат',
      hh: '%d сағат',
      d: 'бір күн',
      dd: '%d күн',
      M: 'бір ай',
      MM: '%d ай',
      y: 'бір жыл',
      yy: '%d жыл' },

    dayOfMonthOrdinalParse: /\d{1,2}-(ші|шы)/,
    ordinal: function ordinal(number) {
      var a = number % 10,
      b = number >= 100 ? 100 : null;
      return number + (suffixes[number] || suffixes[a] || suffixes[b]);
    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 7 // The week that contains Jan 7th is the first week of the year.
    } });


  return kk;

});

/***/ }),
/* 211 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/km.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Cambodian [km]
//! author : Kruy Vanna : https://github.com/kruyvanna

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var symbolMap = {
    1: '១',
    2: '២',
    3: '៣',
    4: '៤',
    5: '៥',
    6: '៦',
    7: '៧',
    8: '៨',
    9: '៩',
    0: '០' },

  numberMap = {
    '១': '1',
    '២': '2',
    '៣': '3',
    '៤': '4',
    '៥': '5',
    '៦': '6',
    '៧': '7',
    '៨': '8',
    '៩': '9',
    '០': '0' };


  var km = moment.defineLocale('km', {
    months: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split(
    '_'),

    monthsShort: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split(
    '_'),

    weekdays: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),
    weekdaysShort: 'អា_ច_អ_ព_ព្រ_សុ_ស'.split('_'),
    weekdaysMin: 'អា_ច_អ_ព_ព្រ_សុ_ស'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd, D MMMM YYYY HH:mm' },

    meridiemParse: /ព្រឹក|ល្ងាច/,
    isPM: function isPM(input) {
      return input === 'ល្ងាច';
    },
    meridiem: function meridiem(hour, minute, isLower) {
      if (hour < 12) {
        return 'ព្រឹក';
      } else {
        return 'ល្ងាច';
      }
    },
    calendar: {
      sameDay: '[ថ្ងៃនេះ ម៉ោង] LT',
      nextDay: '[ស្អែក ម៉ោង] LT',
      nextWeek: 'dddd [ម៉ោង] LT',
      lastDay: '[ម្សិលមិញ ម៉ោង] LT',
      lastWeek: 'dddd [សប្តាហ៍មុន] [ម៉ោង] LT',
      sameElse: 'L' },

    relativeTime: {
      future: '%sទៀត',
      past: '%sមុន',
      s: 'ប៉ុន្មានវិនាទី',
      ss: '%d វិនាទី',
      m: 'មួយនាទី',
      mm: '%d នាទី',
      h: 'មួយម៉ោង',
      hh: '%d ម៉ោង',
      d: 'មួយថ្ងៃ',
      dd: '%d ថ្ងៃ',
      M: 'មួយខែ',
      MM: '%d ខែ',
      y: 'មួយឆ្នាំ',
      yy: '%d ឆ្នាំ' },

    dayOfMonthOrdinalParse: /ទី\d{1,2}/,
    ordinal: 'ទី%d',
    preparse: function preparse(string) {
      return string.replace(/[១២៣៤៥៦៧៨៩០]/g, function (match) {
        return numberMap[match];
      });
    },
    postformat: function postformat(string) {
      return string.replace(/\d/g, function (match) {
        return symbolMap[match];
      });
    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return km;

});

/***/ }),
/* 212 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/kn.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Kannada [kn]
//! author : Rajeev Naik : https://github.com/rajeevnaikte

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var symbolMap = {
    1: '೧',
    2: '೨',
    3: '೩',
    4: '೪',
    5: '೫',
    6: '೬',
    7: '೭',
    8: '೮',
    9: '೯',
    0: '೦' },

  numberMap = {
    '೧': '1',
    '೨': '2',
    '೩': '3',
    '೪': '4',
    '೫': '5',
    '೬': '6',
    '೭': '7',
    '೮': '8',
    '೯': '9',
    '೦': '0' };


  var kn = moment.defineLocale('kn', {
    months: 'ಜನವರಿ_ಫೆಬ್ರವರಿ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂಬರ್_ಅಕ್ಟೋಬರ್_ನವೆಂಬರ್_ಡಿಸೆಂಬರ್'.split(
    '_'),

    monthsShort: 'ಜನ_ಫೆಬ್ರ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂ_ಅಕ್ಟೋ_ನವೆಂ_ಡಿಸೆಂ'.split(
    '_'),

    monthsParseExact: true,
    weekdays: 'ಭಾನುವಾರ_ಸೋಮವಾರ_ಮಂಗಳವಾರ_ಬುಧವಾರ_ಗುರುವಾರ_ಶುಕ್ರವಾರ_ಶನಿವಾರ'.split(
    '_'),

    weekdaysShort: 'ಭಾನು_ಸೋಮ_ಮಂಗಳ_ಬುಧ_ಗುರು_ಶುಕ್ರ_ಶನಿ'.split('_'),
    weekdaysMin: 'ಭಾ_ಸೋ_ಮಂ_ಬು_ಗು_ಶು_ಶ'.split('_'),
    longDateFormat: {
      LT: 'A h:mm',
      LTS: 'A h:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY, A h:mm',
      LLLL: 'dddd, D MMMM YYYY, A h:mm' },

    calendar: {
      sameDay: '[ಇಂದು] LT',
      nextDay: '[ನಾಳೆ] LT',
      nextWeek: 'dddd, LT',
      lastDay: '[ನಿನ್ನೆ] LT',
      lastWeek: '[ಕೊನೆಯ] dddd, LT',
      sameElse: 'L' },

    relativeTime: {
      future: '%s ನಂತರ',
      past: '%s ಹಿಂದೆ',
      s: 'ಕೆಲವು ಕ್ಷಣಗಳು',
      ss: '%d ಸೆಕೆಂಡುಗಳು',
      m: 'ಒಂದು ನಿಮಿಷ',
      mm: '%d ನಿಮಿಷ',
      h: 'ಒಂದು ಗಂಟೆ',
      hh: '%d ಗಂಟೆ',
      d: 'ಒಂದು ದಿನ',
      dd: '%d ದಿನ',
      M: 'ಒಂದು ತಿಂಗಳು',
      MM: '%d ತಿಂಗಳು',
      y: 'ಒಂದು ವರ್ಷ',
      yy: '%d ವರ್ಷ' },

    preparse: function preparse(string) {
      return string.replace(/[೧೨೩೪೫೬೭೮೯೦]/g, function (match) {
        return numberMap[match];
      });
    },
    postformat: function postformat(string) {
      return string.replace(/\d/g, function (match) {
        return symbolMap[match];
      });
    },
    meridiemParse: /ರಾತ್ರಿ|ಬೆಳಿಗ್ಗೆ|ಮಧ್ಯಾಹ್ನ|ಸಂಜೆ/,
    meridiemHour: function meridiemHour(hour, meridiem) {
      if (hour === 12) {
        hour = 0;
      }
      if (meridiem === 'ರಾತ್ರಿ') {
        return hour < 4 ? hour : hour + 12;
      } else if (meridiem === 'ಬೆಳಿಗ್ಗೆ') {
        return hour;
      } else if (meridiem === 'ಮಧ್ಯಾಹ್ನ') {
        return hour >= 10 ? hour : hour + 12;
      } else if (meridiem === 'ಸಂಜೆ') {
        return hour + 12;
      }
    },
    meridiem: function meridiem(hour, minute, isLower) {
      if (hour < 4) {
        return 'ರಾತ್ರಿ';
      } else if (hour < 10) {
        return 'ಬೆಳಿಗ್ಗೆ';
      } else if (hour < 17) {
        return 'ಮಧ್ಯಾಹ್ನ';
      } else if (hour < 20) {
        return 'ಸಂಜೆ';
      } else {
        return 'ರಾತ್ರಿ';
      }
    },
    dayOfMonthOrdinalParse: /\d{1,2}(ನೇ)/,
    ordinal: function ordinal(number) {
      return number + 'ನೇ';
    },
    week: {
      dow: 0, // Sunday is the first day of the week.
      doy: 6 // The week that contains Jan 6th is the first week of the year.
    } });


  return kn;

});

/***/ }),
/* 213 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/ko.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Korean [ko]
//! author : Kyungwook, Park : https://github.com/kyungw00k
//! author : Jeeeyul Lee <jeeeyul@gmail.com>

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var ko = moment.defineLocale('ko', {
    months: '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),
    monthsShort: '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split(
    '_'),

    weekdays: '일요일_월요일_화요일_수요일_목요일_금요일_토요일'.split('_'),
    weekdaysShort: '일_월_화_수_목_금_토'.split('_'),
    weekdaysMin: '일_월_화_수_목_금_토'.split('_'),
    longDateFormat: {
      LT: 'A h:mm',
      LTS: 'A h:mm:ss',
      L: 'YYYY.MM.DD.',
      LL: 'YYYY년 MMMM D일',
      LLL: 'YYYY년 MMMM D일 A h:mm',
      LLLL: 'YYYY년 MMMM D일 dddd A h:mm',
      l: 'YYYY.MM.DD.',
      ll: 'YYYY년 MMMM D일',
      lll: 'YYYY년 MMMM D일 A h:mm',
      llll: 'YYYY년 MMMM D일 dddd A h:mm' },

    calendar: {
      sameDay: '오늘 LT',
      nextDay: '내일 LT',
      nextWeek: 'dddd LT',
      lastDay: '어제 LT',
      lastWeek: '지난주 dddd LT',
      sameElse: 'L' },

    relativeTime: {
      future: '%s 후',
      past: '%s 전',
      s: '몇 초',
      ss: '%d초',
      m: '1분',
      mm: '%d분',
      h: '한 시간',
      hh: '%d시간',
      d: '하루',
      dd: '%d일',
      M: '한 달',
      MM: '%d달',
      y: '일 년',
      yy: '%d년' },

    dayOfMonthOrdinalParse: /\d{1,2}(일|월|주)/,
    ordinal: function ordinal(number, period) {
      switch (period) {
        case 'd':
        case 'D':
        case 'DDD':
          return number + '일';
        case 'M':
          return number + '월';
        case 'w':
        case 'W':
          return number + '주';
        default:
          return number;}

    },
    meridiemParse: /오전|오후/,
    isPM: function isPM(token) {
      return token === '오후';
    },
    meridiem: function meridiem(hour, minute, isUpper) {
      return hour < 12 ? '오전' : '오후';
    } });


  return ko;

});

/***/ }),
/* 214 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/ku.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Kurdish [ku]
//! author : Shahram Mebashar : https://github.com/ShahramMebashar

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var symbolMap = {
    1: '١',
    2: '٢',
    3: '٣',
    4: '٤',
    5: '٥',
    6: '٦',
    7: '٧',
    8: '٨',
    9: '٩',
    0: '٠' },

  numberMap = {
    '١': '1',
    '٢': '2',
    '٣': '3',
    '٤': '4',
    '٥': '5',
    '٦': '6',
    '٧': '7',
    '٨': '8',
    '٩': '9',
    '٠': '0' },

  months = [
  'کانونی دووەم',
  'شوبات',
  'ئازار',
  'نیسان',
  'ئایار',
  'حوزەیران',
  'تەمموز',
  'ئاب',
  'ئەیلوول',
  'تشرینی یەكەم',
  'تشرینی دووەم',
  'كانونی یەکەم'];


  var ku = moment.defineLocale('ku', {
    months: months,
    monthsShort: months,
    weekdays: 'یه‌كشه‌ممه‌_دووشه‌ممه‌_سێشه‌ممه‌_چوارشه‌ممه‌_پێنجشه‌ممه‌_هه‌ینی_شه‌ممه‌'.split(
    '_'),

    weekdaysShort: 'یه‌كشه‌م_دووشه‌م_سێشه‌م_چوارشه‌م_پێنجشه‌م_هه‌ینی_شه‌ممه‌'.split(
    '_'),

    weekdaysMin: 'ی_د_س_چ_پ_ه_ش'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd, D MMMM YYYY HH:mm' },

    meridiemParse: /ئێواره‌|به‌یانی/,
    isPM: function isPM(input) {
      return /ئێواره‌/.test(input);
    },
    meridiem: function meridiem(hour, minute, isLower) {
      if (hour < 12) {
        return 'به‌یانی';
      } else {
        return 'ئێواره‌';
      }
    },
    calendar: {
      sameDay: '[ئه‌مرۆ كاتژمێر] LT',
      nextDay: '[به‌یانی كاتژمێر] LT',
      nextWeek: 'dddd [كاتژمێر] LT',
      lastDay: '[دوێنێ كاتژمێر] LT',
      lastWeek: 'dddd [كاتژمێر] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'له‌ %s',
      past: '%s',
      s: 'چه‌ند چركه‌یه‌ك',
      ss: 'چركه‌ %d',
      m: 'یه‌ك خوله‌ك',
      mm: '%d خوله‌ك',
      h: 'یه‌ك كاتژمێر',
      hh: '%d كاتژمێر',
      d: 'یه‌ك ڕۆژ',
      dd: '%d ڕۆژ',
      M: 'یه‌ك مانگ',
      MM: '%d مانگ',
      y: 'یه‌ك ساڵ',
      yy: '%d ساڵ' },

    preparse: function preparse(string) {
      return string.
      replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
        return numberMap[match];
      }).
      replace(/،/g, ',');
    },
    postformat: function postformat(string) {
      return string.
      replace(/\d/g, function (match) {
        return symbolMap[match];
      }).
      replace(/,/g, '،');
    },
    week: {
      dow: 6, // Saturday is the first day of the week.
      doy: 12 // The week that contains Jan 12th is the first week of the year.
    } });


  return ku;

});

/***/ }),
/* 215 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/ky.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Kyrgyz [ky]
//! author : Chyngyz Arystan uulu : https://github.com/chyngyz

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var suffixes = {
    0: '-чү',
    1: '-чи',
    2: '-чи',
    3: '-чү',
    4: '-чү',
    5: '-чи',
    6: '-чы',
    7: '-чи',
    8: '-чи',
    9: '-чу',
    10: '-чу',
    20: '-чы',
    30: '-чу',
    40: '-чы',
    50: '-чү',
    60: '-чы',
    70: '-чи',
    80: '-чи',
    90: '-чу',
    100: '-чү' };


  var ky = moment.defineLocale('ky', {
    months: 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split(
    '_'),

    monthsShort: 'янв_фев_март_апр_май_июнь_июль_авг_сен_окт_ноя_дек'.split(
    '_'),

    weekdays: 'Жекшемби_Дүйшөмбү_Шейшемби_Шаршемби_Бейшемби_Жума_Ишемби'.split(
    '_'),

    weekdaysShort: 'Жек_Дүй_Шей_Шар_Бей_Жум_Ише'.split('_'),
    weekdaysMin: 'Жк_Дй_Шй_Шр_Бй_Жм_Иш'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD.MM.YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd, D MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[Бүгүн саат] LT',
      nextDay: '[Эртең саат] LT',
      nextWeek: 'dddd [саат] LT',
      lastDay: '[Кечээ саат] LT',
      lastWeek: '[Өткөн аптанын] dddd [күнү] [саат] LT',
      sameElse: 'L' },

    relativeTime: {
      future: '%s ичинде',
      past: '%s мурун',
      s: 'бирнече секунд',
      ss: '%d секунд',
      m: 'бир мүнөт',
      mm: '%d мүнөт',
      h: 'бир саат',
      hh: '%d саат',
      d: 'бир күн',
      dd: '%d күн',
      M: 'бир ай',
      MM: '%d ай',
      y: 'бир жыл',
      yy: '%d жыл' },

    dayOfMonthOrdinalParse: /\d{1,2}-(чи|чы|чү|чу)/,
    ordinal: function ordinal(number) {
      var a = number % 10,
      b = number >= 100 ? 100 : null;
      return number + (suffixes[number] || suffixes[a] || suffixes[b]);
    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 7 // The week that contains Jan 7th is the first week of the year.
    } });


  return ky;

});

/***/ }),
/* 216 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/lb.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Luxembourgish [lb]
//! author : mweimerskirch : https://github.com/mweimerskirch
//! author : David Raison : https://github.com/kwisatz

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  function processRelativeTime(number, withoutSuffix, key, isFuture) {
    var format = {
      m: ['eng Minutt', 'enger Minutt'],
      h: ['eng Stonn', 'enger Stonn'],
      d: ['een Dag', 'engem Dag'],
      M: ['ee Mount', 'engem Mount'],
      y: ['ee Joer', 'engem Joer'] };

    return withoutSuffix ? format[key][0] : format[key][1];
  }
  function processFutureTime(string) {
    var number = string.substr(0, string.indexOf(' '));
    if (eifelerRegelAppliesToNumber(number)) {
      return 'a ' + string;
    }
    return 'an ' + string;
  }
  function processPastTime(string) {
    var number = string.substr(0, string.indexOf(' '));
    if (eifelerRegelAppliesToNumber(number)) {
      return 'viru ' + string;
    }
    return 'virun ' + string;
  }
  /**
     * Returns true if the word before the given number loses the '-n' ending.
     * e.g. 'an 10 Deeg' but 'a 5 Deeg'
     *
     * @param number {integer}
     * @returns {boolean}
     */
  function eifelerRegelAppliesToNumber(number) {
    number = parseInt(number, 10);
    if (isNaN(number)) {
      return false;
    }
    if (number < 0) {
      // Negative Number --> always true
      return true;
    } else if (number < 10) {
      // Only 1 digit
      if (4 <= number && number <= 7) {
        return true;
      }
      return false;
    } else if (number < 100) {
      // 2 digits
      var lastDigit = number % 10,
      firstDigit = number / 10;
      if (lastDigit === 0) {
        return eifelerRegelAppliesToNumber(firstDigit);
      }
      return eifelerRegelAppliesToNumber(lastDigit);
    } else if (number < 10000) {
      // 3 or 4 digits --> recursively check first digit
      while (number >= 10) {
        number = number / 10;
      }
      return eifelerRegelAppliesToNumber(number);
    } else {
      // Anything larger than 4 digits: recursively check first n-3 digits
      number = number / 1000;
      return eifelerRegelAppliesToNumber(number);
    }
  }

  var lb = moment.defineLocale('lb', {
    months: 'Januar_Februar_Mäerz_Abrëll_Mee_Juni_Juli_August_September_Oktober_November_Dezember'.split(
    '_'),

    monthsShort: 'Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split(
    '_'),

    monthsParseExact: true,
    weekdays: 'Sonndeg_Méindeg_Dënschdeg_Mëttwoch_Donneschdeg_Freideg_Samschdeg'.split(
    '_'),

    weekdaysShort: 'So._Mé._Dë._Më._Do._Fr._Sa.'.split('_'),
    weekdaysMin: 'So_Mé_Dë_Më_Do_Fr_Sa'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'H:mm [Auer]',
      LTS: 'H:mm:ss [Auer]',
      L: 'DD.MM.YYYY',
      LL: 'D. MMMM YYYY',
      LLL: 'D. MMMM YYYY H:mm [Auer]',
      LLLL: 'dddd, D. MMMM YYYY H:mm [Auer]' },

    calendar: {
      sameDay: '[Haut um] LT',
      sameElse: 'L',
      nextDay: '[Muer um] LT',
      nextWeek: 'dddd [um] LT',
      lastDay: '[Gëschter um] LT',
      lastWeek: function lastWeek() {
        // Different date string for 'Dënschdeg' (Tuesday) and 'Donneschdeg' (Thursday) due to phonological rule
        switch (this.day()) {
          case 2:
          case 4:
            return '[Leschten] dddd [um] LT';
          default:
            return '[Leschte] dddd [um] LT';}

      } },

    relativeTime: {
      future: processFutureTime,
      past: processPastTime,
      s: 'e puer Sekonnen',
      ss: '%d Sekonnen',
      m: processRelativeTime,
      mm: '%d Minutten',
      h: processRelativeTime,
      hh: '%d Stonnen',
      d: processRelativeTime,
      dd: '%d Deeg',
      M: processRelativeTime,
      MM: '%d Méint',
      y: processRelativeTime,
      yy: '%d Joer' },

    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal: '%d.',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return lb;

});

/***/ }),
/* 217 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/lo.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Lao [lo]
//! author : Ryan Hart : https://github.com/ryanhart2

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var lo = moment.defineLocale('lo', {
    months: 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split(
    '_'),

    monthsShort: 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split(
    '_'),

    weekdays: 'ອາທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),
    weekdaysShort: 'ທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),
    weekdaysMin: 'ທ_ຈ_ອຄ_ພ_ພຫ_ສກ_ສ'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'ວັນdddd D MMMM YYYY HH:mm' },

    meridiemParse: /ຕອນເຊົ້າ|ຕອນແລງ/,
    isPM: function isPM(input) {
      return input === 'ຕອນແລງ';
    },
    meridiem: function meridiem(hour, minute, isLower) {
      if (hour < 12) {
        return 'ຕອນເຊົ້າ';
      } else {
        return 'ຕອນແລງ';
      }
    },
    calendar: {
      sameDay: '[ມື້ນີ້ເວລາ] LT',
      nextDay: '[ມື້ອື່ນເວລາ] LT',
      nextWeek: '[ວັນ]dddd[ໜ້າເວລາ] LT',
      lastDay: '[ມື້ວານນີ້ເວລາ] LT',
      lastWeek: '[ວັນ]dddd[ແລ້ວນີ້ເວລາ] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'ອີກ %s',
      past: '%sຜ່ານມາ',
      s: 'ບໍ່ເທົ່າໃດວິນາທີ',
      ss: '%d ວິນາທີ',
      m: '1 ນາທີ',
      mm: '%d ນາທີ',
      h: '1 ຊົ່ວໂມງ',
      hh: '%d ຊົ່ວໂມງ',
      d: '1 ມື້',
      dd: '%d ມື້',
      M: '1 ເດືອນ',
      MM: '%d ເດືອນ',
      y: '1 ປີ',
      yy: '%d ປີ' },

    dayOfMonthOrdinalParse: /(ທີ່)\d{1,2}/,
    ordinal: function ordinal(number) {
      return 'ທີ່' + number;
    } });


  return lo;

});

/***/ }),
/* 218 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/lt.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Lithuanian [lt]
//! author : Mindaugas Mozūras : https://github.com/mmozuras

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var units = {
    ss: 'sekundė_sekundžių_sekundes',
    m: 'minutė_minutės_minutę',
    mm: 'minutės_minučių_minutes',
    h: 'valanda_valandos_valandą',
    hh: 'valandos_valandų_valandas',
    d: 'diena_dienos_dieną',
    dd: 'dienos_dienų_dienas',
    M: 'mėnuo_mėnesio_mėnesį',
    MM: 'mėnesiai_mėnesių_mėnesius',
    y: 'metai_metų_metus',
    yy: 'metai_metų_metus' };

  function translateSeconds(number, withoutSuffix, key, isFuture) {
    if (withoutSuffix) {
      return 'kelios sekundės';
    } else {
      return isFuture ? 'kelių sekundžių' : 'kelias sekundes';
    }
  }
  function translateSingular(number, withoutSuffix, key, isFuture) {
    return withoutSuffix ?
    forms(key)[0] :
    isFuture ?
    forms(key)[1] :
    forms(key)[2];
  }
  function special(number) {
    return number % 10 === 0 || number > 10 && number < 20;
  }
  function forms(key) {
    return units[key].split('_');
  }
  function translate(number, withoutSuffix, key, isFuture) {
    var result = number + ' ';
    if (number === 1) {
      return (
        result + translateSingular(number, withoutSuffix, key[0], isFuture));

    } else if (withoutSuffix) {
      return result + (special(number) ? forms(key)[1] : forms(key)[0]);
    } else {
      if (isFuture) {
        return result + forms(key)[1];
      } else {
        return result + (special(number) ? forms(key)[1] : forms(key)[2]);
      }
    }
  }
  var lt = moment.defineLocale('lt', {
    months: {
      format: 'sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio'.split(
      '_'),

      standalone: 'sausis_vasaris_kovas_balandis_gegužė_birželis_liepa_rugpjūtis_rugsėjis_spalis_lapkritis_gruodis'.split(
      '_'),

      isFormat: /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?|MMMM?(\[[^\[\]]*\]|\s)+D[oD]?/ },

    monthsShort: 'sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd'.split('_'),
    weekdays: {
      format: 'sekmadienį_pirmadienį_antradienį_trečiadienį_ketvirtadienį_penktadienį_šeštadienį'.split(
      '_'),

      standalone: 'sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis'.split(
      '_'),

      isFormat: /dddd HH:mm/ },

    weekdaysShort: 'Sek_Pir_Ant_Tre_Ket_Pen_Šeš'.split('_'),
    weekdaysMin: 'S_P_A_T_K_Pn_Š'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'YYYY-MM-DD',
      LL: 'YYYY [m.] MMMM D [d.]',
      LLL: 'YYYY [m.] MMMM D [d.], HH:mm [val.]',
      LLLL: 'YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]',
      l: 'YYYY-MM-DD',
      ll: 'YYYY [m.] MMMM D [d.]',
      lll: 'YYYY [m.] MMMM D [d.], HH:mm [val.]',
      llll: 'YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]' },

    calendar: {
      sameDay: '[Šiandien] LT',
      nextDay: '[Rytoj] LT',
      nextWeek: 'dddd LT',
      lastDay: '[Vakar] LT',
      lastWeek: '[Praėjusį] dddd LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'po %s',
      past: 'prieš %s',
      s: translateSeconds,
      ss: translate,
      m: translateSingular,
      mm: translate,
      h: translateSingular,
      hh: translate,
      d: translateSingular,
      dd: translate,
      M: translateSingular,
      MM: translate,
      y: translateSingular,
      yy: translate },

    dayOfMonthOrdinalParse: /\d{1,2}-oji/,
    ordinal: function ordinal(number) {
      return number + '-oji';
    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return lt;

});

/***/ }),
/* 219 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/lv.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Latvian [lv]
//! author : Kristaps Karlsons : https://github.com/skakri
//! author : Jānis Elmeris : https://github.com/JanisE

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var units = {
    ss: 'sekundes_sekundēm_sekunde_sekundes'.split('_'),
    m: 'minūtes_minūtēm_minūte_minūtes'.split('_'),
    mm: 'minūtes_minūtēm_minūte_minūtes'.split('_'),
    h: 'stundas_stundām_stunda_stundas'.split('_'),
    hh: 'stundas_stundām_stunda_stundas'.split('_'),
    d: 'dienas_dienām_diena_dienas'.split('_'),
    dd: 'dienas_dienām_diena_dienas'.split('_'),
    M: 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),
    MM: 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),
    y: 'gada_gadiem_gads_gadi'.split('_'),
    yy: 'gada_gadiem_gads_gadi'.split('_') };

  /**
                                               * @param withoutSuffix boolean true = a length of time; false = before/after a period of time.
                                               */
  function format(forms, number, withoutSuffix) {
    if (withoutSuffix) {
      // E.g. "21 minūte", "3 minūtes".
      return number % 10 === 1 && number % 100 !== 11 ? forms[2] : forms[3];
    } else {
      // E.g. "21 minūtes" as in "pēc 21 minūtes".
      // E.g. "3 minūtēm" as in "pēc 3 minūtēm".
      return number % 10 === 1 && number % 100 !== 11 ? forms[0] : forms[1];
    }
  }
  function relativeTimeWithPlural(number, withoutSuffix, key) {
    return number + ' ' + format(units[key], number, withoutSuffix);
  }
  function relativeTimeWithSingular(number, withoutSuffix, key) {
    return format(units[key], number, withoutSuffix);
  }
  function relativeSeconds(number, withoutSuffix) {
    return withoutSuffix ? 'dažas sekundes' : 'dažām sekundēm';
  }

  var lv = moment.defineLocale('lv', {
    months: 'janvāris_februāris_marts_aprīlis_maijs_jūnijs_jūlijs_augusts_septembris_oktobris_novembris_decembris'.split(
    '_'),

    monthsShort: 'jan_feb_mar_apr_mai_jūn_jūl_aug_sep_okt_nov_dec'.split('_'),
    weekdays: 'svētdiena_pirmdiena_otrdiena_trešdiena_ceturtdiena_piektdiena_sestdiena'.split(
    '_'),

    weekdaysShort: 'Sv_P_O_T_C_Pk_S'.split('_'),
    weekdaysMin: 'Sv_P_O_T_C_Pk_S'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD.MM.YYYY.',
      LL: 'YYYY. [gada] D. MMMM',
      LLL: 'YYYY. [gada] D. MMMM, HH:mm',
      LLLL: 'YYYY. [gada] D. MMMM, dddd, HH:mm' },

    calendar: {
      sameDay: '[Šodien pulksten] LT',
      nextDay: '[Rīt pulksten] LT',
      nextWeek: 'dddd [pulksten] LT',
      lastDay: '[Vakar pulksten] LT',
      lastWeek: '[Pagājušā] dddd [pulksten] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'pēc %s',
      past: 'pirms %s',
      s: relativeSeconds,
      ss: relativeTimeWithPlural,
      m: relativeTimeWithSingular,
      mm: relativeTimeWithPlural,
      h: relativeTimeWithSingular,
      hh: relativeTimeWithPlural,
      d: relativeTimeWithSingular,
      dd: relativeTimeWithPlural,
      M: relativeTimeWithSingular,
      MM: relativeTimeWithPlural,
      y: relativeTimeWithSingular,
      yy: relativeTimeWithPlural },

    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal: '%d.',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return lv;

});

/***/ }),
/* 220 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/me.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Montenegrin [me]
//! author : Miodrag Nikač <miodrag@restartit.me> : https://github.com/miodragnikac

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var translator = {
    words: {
      //Different grammatical cases
      ss: ['sekund', 'sekunda', 'sekundi'],
      m: ['jedan minut', 'jednog minuta'],
      mm: ['minut', 'minuta', 'minuta'],
      h: ['jedan sat', 'jednog sata'],
      hh: ['sat', 'sata', 'sati'],
      dd: ['dan', 'dana', 'dana'],
      MM: ['mjesec', 'mjeseca', 'mjeseci'],
      yy: ['godina', 'godine', 'godina'] },

    correctGrammaticalCase: function correctGrammaticalCase(number, wordKey) {
      return number === 1 ?
      wordKey[0] :
      number >= 2 && number <= 4 ?
      wordKey[1] :
      wordKey[2];
    },
    translate: function translate(number, withoutSuffix, key) {
      var wordKey = translator.words[key];
      if (key.length === 1) {
        return withoutSuffix ? wordKey[0] : wordKey[1];
      } else {
        return (
          number +
          ' ' +
          translator.correctGrammaticalCase(number, wordKey));

      }
    } };


  var me = moment.defineLocale('me', {
    months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split(
    '_'),

    monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split(
    '_'),

    monthsParseExact: true,
    weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split(
    '_'),

    weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
    weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'H:mm',
      LTS: 'H:mm:ss',
      L: 'DD.MM.YYYY',
      LL: 'D. MMMM YYYY',
      LLL: 'D. MMMM YYYY H:mm',
      LLLL: 'dddd, D. MMMM YYYY H:mm' },

    calendar: {
      sameDay: '[danas u] LT',
      nextDay: '[sjutra u] LT',

      nextWeek: function nextWeek() {
        switch (this.day()) {
          case 0:
            return '[u] [nedjelju] [u] LT';
          case 3:
            return '[u] [srijedu] [u] LT';
          case 6:
            return '[u] [subotu] [u] LT';
          case 1:
          case 2:
          case 4:
          case 5:
            return '[u] dddd [u] LT';}

      },
      lastDay: '[juče u] LT',
      lastWeek: function lastWeek() {
        var lastWeekDays = [
        '[prošle] [nedjelje] [u] LT',
        '[prošlog] [ponedjeljka] [u] LT',
        '[prošlog] [utorka] [u] LT',
        '[prošle] [srijede] [u] LT',
        '[prošlog] [četvrtka] [u] LT',
        '[prošlog] [petka] [u] LT',
        '[prošle] [subote] [u] LT'];

        return lastWeekDays[this.day()];
      },
      sameElse: 'L' },

    relativeTime: {
      future: 'za %s',
      past: 'prije %s',
      s: 'nekoliko sekundi',
      ss: translator.translate,
      m: translator.translate,
      mm: translator.translate,
      h: translator.translate,
      hh: translator.translate,
      d: 'dan',
      dd: translator.translate,
      M: 'mjesec',
      MM: translator.translate,
      y: 'godinu',
      yy: translator.translate },

    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal: '%d.',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 7 // The week that contains Jan 7th is the first week of the year.
    } });


  return me;

});

/***/ }),
/* 221 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/mi.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Maori [mi]
//! author : John Corrigan <robbiecloset@gmail.com> : https://github.com/johnideal

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var mi = moment.defineLocale('mi', {
    months: 'Kohi-tāte_Hui-tanguru_Poutū-te-rangi_Paenga-whāwhā_Haratua_Pipiri_Hōngoingoi_Here-turi-kōkā_Mahuru_Whiringa-ā-nuku_Whiringa-ā-rangi_Hakihea'.split(
    '_'),

    monthsShort: 'Kohi_Hui_Pou_Pae_Hara_Pipi_Hōngoi_Here_Mahu_Whi-nu_Whi-ra_Haki'.split(
    '_'),

    monthsRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
    monthsStrictRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
    monthsShortRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
    monthsShortStrictRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,2}/i,
    weekdays: 'Rātapu_Mane_Tūrei_Wenerei_Tāite_Paraire_Hātarei'.split('_'),
    weekdaysShort: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),
    weekdaysMin: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY [i] HH:mm',
      LLLL: 'dddd, D MMMM YYYY [i] HH:mm' },

    calendar: {
      sameDay: '[i teie mahana, i] LT',
      nextDay: '[apopo i] LT',
      nextWeek: 'dddd [i] LT',
      lastDay: '[inanahi i] LT',
      lastWeek: 'dddd [whakamutunga i] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'i roto i %s',
      past: '%s i mua',
      s: 'te hēkona ruarua',
      ss: '%d hēkona',
      m: 'he meneti',
      mm: '%d meneti',
      h: 'te haora',
      hh: '%d haora',
      d: 'he ra',
      dd: '%d ra',
      M: 'he marama',
      MM: '%d marama',
      y: 'he tau',
      yy: '%d tau' },

    dayOfMonthOrdinalParse: /\d{1,2}º/,
    ordinal: '%dº',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return mi;

});

/***/ }),
/* 222 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/mk.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Macedonian [mk]
//! author : Borislav Mickov : https://github.com/B0k0
//! author : Sashko Todorov : https://github.com/bkyceh

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var mk = moment.defineLocale('mk', {
    months: 'јануари_февруари_март_април_мај_јуни_јули_август_септември_октомври_ноември_декември'.split(
    '_'),

    monthsShort: 'јан_фев_мар_апр_мај_јун_јул_авг_сеп_окт_ное_дек'.split('_'),
    weekdays: 'недела_понеделник_вторник_среда_четврток_петок_сабота'.split(
    '_'),

    weekdaysShort: 'нед_пон_вто_сре_чет_пет_саб'.split('_'),
    weekdaysMin: 'нe_пo_вт_ср_че_пе_сa'.split('_'),
    longDateFormat: {
      LT: 'H:mm',
      LTS: 'H:mm:ss',
      L: 'D.MM.YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY H:mm',
      LLLL: 'dddd, D MMMM YYYY H:mm' },

    calendar: {
      sameDay: '[Денес во] LT',
      nextDay: '[Утре во] LT',
      nextWeek: '[Во] dddd [во] LT',
      lastDay: '[Вчера во] LT',
      lastWeek: function lastWeek() {
        switch (this.day()) {
          case 0:
          case 3:
          case 6:
            return '[Изминатата] dddd [во] LT';
          case 1:
          case 2:
          case 4:
          case 5:
            return '[Изминатиот] dddd [во] LT';}

      },
      sameElse: 'L' },

    relativeTime: {
      future: 'за %s',
      past: 'пред %s',
      s: 'неколку секунди',
      ss: '%d секунди',
      m: 'една минута',
      mm: '%d минути',
      h: 'еден час',
      hh: '%d часа',
      d: 'еден ден',
      dd: '%d дена',
      M: 'еден месец',
      MM: '%d месеци',
      y: 'една година',
      yy: '%d години' },

    dayOfMonthOrdinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
    ordinal: function ordinal(number) {
      var lastDigit = number % 10,
      last2Digits = number % 100;
      if (number === 0) {
        return number + '-ев';
      } else if (last2Digits === 0) {
        return number + '-ен';
      } else if (last2Digits > 10 && last2Digits < 20) {
        return number + '-ти';
      } else if (lastDigit === 1) {
        return number + '-ви';
      } else if (lastDigit === 2) {
        return number + '-ри';
      } else if (lastDigit === 7 || lastDigit === 8) {
        return number + '-ми';
      } else {
        return number + '-ти';
      }
    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 7 // The week that contains Jan 7th is the first week of the year.
    } });


  return mk;

});

/***/ }),
/* 223 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/ml.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Malayalam [ml]
//! author : Floyd Pink : https://github.com/floydpink

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var ml = moment.defineLocale('ml', {
    months: 'ജനുവരി_ഫെബ്രുവരി_മാർച്ച്_ഏപ്രിൽ_മേയ്_ജൂൺ_ജൂലൈ_ഓഗസ്റ്റ്_സെപ്റ്റംബർ_ഒക്ടോബർ_നവംബർ_ഡിസംബർ'.split(
    '_'),

    monthsShort: 'ജനു._ഫെബ്രു._മാർ._ഏപ്രി._മേയ്_ജൂൺ_ജൂലൈ._ഓഗ._സെപ്റ്റ._ഒക്ടോ._നവം._ഡിസം.'.split(
    '_'),

    monthsParseExact: true,
    weekdays: 'ഞായറാഴ്ച_തിങ്കളാഴ്ച_ചൊവ്വാഴ്ച_ബുധനാഴ്ച_വ്യാഴാഴ്ച_വെള്ളിയാഴ്ച_ശനിയാഴ്ച'.split(
    '_'),

    weekdaysShort: 'ഞായർ_തിങ്കൾ_ചൊവ്വ_ബുധൻ_വ്യാഴം_വെള്ളി_ശനി'.split('_'),
    weekdaysMin: 'ഞാ_തി_ചൊ_ബു_വ്യാ_വെ_ശ'.split('_'),
    longDateFormat: {
      LT: 'A h:mm -നു',
      LTS: 'A h:mm:ss -നു',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY, A h:mm -നു',
      LLLL: 'dddd, D MMMM YYYY, A h:mm -നു' },

    calendar: {
      sameDay: '[ഇന്ന്] LT',
      nextDay: '[നാളെ] LT',
      nextWeek: 'dddd, LT',
      lastDay: '[ഇന്നലെ] LT',
      lastWeek: '[കഴിഞ്ഞ] dddd, LT',
      sameElse: 'L' },

    relativeTime: {
      future: '%s കഴിഞ്ഞ്',
      past: '%s മുൻപ്',
      s: 'അൽപ നിമിഷങ്ങൾ',
      ss: '%d സെക്കൻഡ്',
      m: 'ഒരു മിനിറ്റ്',
      mm: '%d മിനിറ്റ്',
      h: 'ഒരു മണിക്കൂർ',
      hh: '%d മണിക്കൂർ',
      d: 'ഒരു ദിവസം',
      dd: '%d ദിവസം',
      M: 'ഒരു മാസം',
      MM: '%d മാസം',
      y: 'ഒരു വർഷം',
      yy: '%d വർഷം' },

    meridiemParse: /രാത്രി|രാവിലെ|ഉച്ച കഴിഞ്ഞ്|വൈകുന്നേരം|രാത്രി/i,
    meridiemHour: function meridiemHour(hour, meridiem) {
      if (hour === 12) {
        hour = 0;
      }
      if (
      meridiem === 'രാത്രി' && hour >= 4 ||
      meridiem === 'ഉച്ച കഴിഞ്ഞ്' ||
      meridiem === 'വൈകുന്നേരം')
      {
        return hour + 12;
      } else {
        return hour;
      }
    },
    meridiem: function meridiem(hour, minute, isLower) {
      if (hour < 4) {
        return 'രാത്രി';
      } else if (hour < 12) {
        return 'രാവിലെ';
      } else if (hour < 17) {
        return 'ഉച്ച കഴിഞ്ഞ്';
      } else if (hour < 20) {
        return 'വൈകുന്നേരം';
      } else {
        return 'രാത്രി';
      }
    } });


  return ml;

});

/***/ }),
/* 224 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/mn.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Mongolian [mn]
//! author : Javkhlantugs Nyamdorj : https://github.com/javkhaanj7

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  function translate(number, withoutSuffix, key, isFuture) {
    switch (key) {
      case 's':
        return withoutSuffix ? 'хэдхэн секунд' : 'хэдхэн секундын';
      case 'ss':
        return number + (withoutSuffix ? ' секунд' : ' секундын');
      case 'm':
      case 'mm':
        return number + (withoutSuffix ? ' минут' : ' минутын');
      case 'h':
      case 'hh':
        return number + (withoutSuffix ? ' цаг' : ' цагийн');
      case 'd':
      case 'dd':
        return number + (withoutSuffix ? ' өдөр' : ' өдрийн');
      case 'M':
      case 'MM':
        return number + (withoutSuffix ? ' сар' : ' сарын');
      case 'y':
      case 'yy':
        return number + (withoutSuffix ? ' жил' : ' жилийн');
      default:
        return number;}

  }

  var mn = moment.defineLocale('mn', {
    months: 'Нэгдүгээр сар_Хоёрдугаар сар_Гуравдугаар сар_Дөрөвдүгээр сар_Тавдугаар сар_Зургадугаар сар_Долдугаар сар_Наймдугаар сар_Есдүгээр сар_Аравдугаар сар_Арван нэгдүгээр сар_Арван хоёрдугаар сар'.split(
    '_'),

    monthsShort: '1 сар_2 сар_3 сар_4 сар_5 сар_6 сар_7 сар_8 сар_9 сар_10 сар_11 сар_12 сар'.split(
    '_'),

    monthsParseExact: true,
    weekdays: 'Ням_Даваа_Мягмар_Лхагва_Пүрэв_Баасан_Бямба'.split('_'),
    weekdaysShort: 'Ням_Дав_Мяг_Лха_Пүр_Баа_Бям'.split('_'),
    weekdaysMin: 'Ня_Да_Мя_Лх_Пү_Ба_Бя'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'YYYY-MM-DD',
      LL: 'YYYY оны MMMMын D',
      LLL: 'YYYY оны MMMMын D HH:mm',
      LLLL: 'dddd, YYYY оны MMMMын D HH:mm' },

    meridiemParse: /ҮӨ|ҮХ/i,
    isPM: function isPM(input) {
      return input === 'ҮХ';
    },
    meridiem: function meridiem(hour, minute, isLower) {
      if (hour < 12) {
        return 'ҮӨ';
      } else {
        return 'ҮХ';
      }
    },
    calendar: {
      sameDay: '[Өнөөдөр] LT',
      nextDay: '[Маргааш] LT',
      nextWeek: '[Ирэх] dddd LT',
      lastDay: '[Өчигдөр] LT',
      lastWeek: '[Өнгөрсөн] dddd LT',
      sameElse: 'L' },

    relativeTime: {
      future: '%s дараа',
      past: '%s өмнө',
      s: translate,
      ss: translate,
      m: translate,
      mm: translate,
      h: translate,
      hh: translate,
      d: translate,
      dd: translate,
      M: translate,
      MM: translate,
      y: translate,
      yy: translate },

    dayOfMonthOrdinalParse: /\d{1,2} өдөр/,
    ordinal: function ordinal(number, period) {
      switch (period) {
        case 'd':
        case 'D':
        case 'DDD':
          return number + ' өдөр';
        default:
          return number;}

    } });


  return mn;

});

/***/ }),
/* 225 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/mr.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Marathi [mr]
//! author : Harshad Kale : https://github.com/kalehv
//! author : Vivek Athalye : https://github.com/vnathalye

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var symbolMap = {
    1: '१',
    2: '२',
    3: '३',
    4: '४',
    5: '५',
    6: '६',
    7: '७',
    8: '८',
    9: '९',
    0: '०' },

  numberMap = {
    '१': '1',
    '२': '2',
    '३': '3',
    '४': '4',
    '५': '5',
    '६': '6',
    '७': '7',
    '८': '8',
    '९': '9',
    '०': '0' };


  function relativeTimeMr(number, withoutSuffix, string, isFuture) {
    var output = '';
    if (withoutSuffix) {
      switch (string) {
        case 's':
          output = 'काही सेकंद';
          break;
        case 'ss':
          output = '%d सेकंद';
          break;
        case 'm':
          output = 'एक मिनिट';
          break;
        case 'mm':
          output = '%d मिनिटे';
          break;
        case 'h':
          output = 'एक तास';
          break;
        case 'hh':
          output = '%d तास';
          break;
        case 'd':
          output = 'एक दिवस';
          break;
        case 'dd':
          output = '%d दिवस';
          break;
        case 'M':
          output = 'एक महिना';
          break;
        case 'MM':
          output = '%d महिने';
          break;
        case 'y':
          output = 'एक वर्ष';
          break;
        case 'yy':
          output = '%d वर्षे';
          break;}

    } else {
      switch (string) {
        case 's':
          output = 'काही सेकंदां';
          break;
        case 'ss':
          output = '%d सेकंदां';
          break;
        case 'm':
          output = 'एका मिनिटा';
          break;
        case 'mm':
          output = '%d मिनिटां';
          break;
        case 'h':
          output = 'एका तासा';
          break;
        case 'hh':
          output = '%d तासां';
          break;
        case 'd':
          output = 'एका दिवसा';
          break;
        case 'dd':
          output = '%d दिवसां';
          break;
        case 'M':
          output = 'एका महिन्या';
          break;
        case 'MM':
          output = '%d महिन्यां';
          break;
        case 'y':
          output = 'एका वर्षा';
          break;
        case 'yy':
          output = '%d वर्षां';
          break;}

    }
    return output.replace(/%d/i, number);
  }

  var mr = moment.defineLocale('mr', {
    months: 'जानेवारी_फेब्रुवारी_मार्च_एप्रिल_मे_जून_जुलै_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर'.split(
    '_'),

    monthsShort: 'जाने._फेब्रु._मार्च._एप्रि._मे._जून._जुलै._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.'.split(
    '_'),

    monthsParseExact: true,
    weekdays: 'रविवार_सोमवार_मंगळवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),
    weekdaysShort: 'रवि_सोम_मंगळ_बुध_गुरू_शुक्र_शनि'.split('_'),
    weekdaysMin: 'र_सो_मं_बु_गु_शु_श'.split('_'),
    longDateFormat: {
      LT: 'A h:mm वाजता',
      LTS: 'A h:mm:ss वाजता',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY, A h:mm वाजता',
      LLLL: 'dddd, D MMMM YYYY, A h:mm वाजता' },

    calendar: {
      sameDay: '[आज] LT',
      nextDay: '[उद्या] LT',
      nextWeek: 'dddd, LT',
      lastDay: '[काल] LT',
      lastWeek: '[मागील] dddd, LT',
      sameElse: 'L' },

    relativeTime: {
      future: '%sमध्ये',
      past: '%sपूर्वी',
      s: relativeTimeMr,
      ss: relativeTimeMr,
      m: relativeTimeMr,
      mm: relativeTimeMr,
      h: relativeTimeMr,
      hh: relativeTimeMr,
      d: relativeTimeMr,
      dd: relativeTimeMr,
      M: relativeTimeMr,
      MM: relativeTimeMr,
      y: relativeTimeMr,
      yy: relativeTimeMr },

    preparse: function preparse(string) {
      return string.replace(/[१२३४५६७८९०]/g, function (match) {
        return numberMap[match];
      });
    },
    postformat: function postformat(string) {
      return string.replace(/\d/g, function (match) {
        return symbolMap[match];
      });
    },
    meridiemParse: /पहाटे|सकाळी|दुपारी|सायंकाळी|रात्री/,
    meridiemHour: function meridiemHour(hour, meridiem) {
      if (hour === 12) {
        hour = 0;
      }
      if (meridiem === 'पहाटे' || meridiem === 'सकाळी') {
        return hour;
      } else if (
      meridiem === 'दुपारी' ||
      meridiem === 'सायंकाळी' ||
      meridiem === 'रात्री')
      {
        return hour >= 12 ? hour : hour + 12;
      }
    },
    meridiem: function meridiem(hour, minute, isLower) {
      if (hour >= 0 && hour < 6) {
        return 'पहाटे';
      } else if (hour < 12) {
        return 'सकाळी';
      } else if (hour < 17) {
        return 'दुपारी';
      } else if (hour < 20) {
        return 'सायंकाळी';
      } else {
        return 'रात्री';
      }
    },
    week: {
      dow: 0, // Sunday is the first day of the week.
      doy: 6 // The week that contains Jan 6th is the first week of the year.
    } });


  return mr;

});

/***/ }),
/* 226 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/ms.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Malay [ms]
//! author : Weldan Jamili : https://github.com/weldan

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var ms = moment.defineLocale('ms', {
    months: 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split(
    '_'),

    monthsShort: 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),
    weekdays: 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),
    weekdaysShort: 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),
    weekdaysMin: 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),
    longDateFormat: {
      LT: 'HH.mm',
      LTS: 'HH.mm.ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY [pukul] HH.mm',
      LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm' },

    meridiemParse: /pagi|tengahari|petang|malam/,
    meridiemHour: function meridiemHour(hour, meridiem) {
      if (hour === 12) {
        hour = 0;
      }
      if (meridiem === 'pagi') {
        return hour;
      } else if (meridiem === 'tengahari') {
        return hour >= 11 ? hour : hour + 12;
      } else if (meridiem === 'petang' || meridiem === 'malam') {
        return hour + 12;
      }
    },
    meridiem: function meridiem(hours, minutes, isLower) {
      if (hours < 11) {
        return 'pagi';
      } else if (hours < 15) {
        return 'tengahari';
      } else if (hours < 19) {
        return 'petang';
      } else {
        return 'malam';
      }
    },
    calendar: {
      sameDay: '[Hari ini pukul] LT',
      nextDay: '[Esok pukul] LT',
      nextWeek: 'dddd [pukul] LT',
      lastDay: '[Kelmarin pukul] LT',
      lastWeek: 'dddd [lepas pukul] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'dalam %s',
      past: '%s yang lepas',
      s: 'beberapa saat',
      ss: '%d saat',
      m: 'seminit',
      mm: '%d minit',
      h: 'sejam',
      hh: '%d jam',
      d: 'sehari',
      dd: '%d hari',
      M: 'sebulan',
      MM: '%d bulan',
      y: 'setahun',
      yy: '%d tahun' },

    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 7 // The week that contains Jan 7th is the first week of the year.
    } });


  return ms;

});

/***/ }),
/* 227 */
/*!************************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/ms-my.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Malay [ms-my]
//! note : DEPRECATED, the correct one is [ms]
//! author : Weldan Jamili : https://github.com/weldan

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var msMy = moment.defineLocale('ms-my', {
    months: 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split(
    '_'),

    monthsShort: 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),
    weekdays: 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),
    weekdaysShort: 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),
    weekdaysMin: 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),
    longDateFormat: {
      LT: 'HH.mm',
      LTS: 'HH.mm.ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY [pukul] HH.mm',
      LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm' },

    meridiemParse: /pagi|tengahari|petang|malam/,
    meridiemHour: function meridiemHour(hour, meridiem) {
      if (hour === 12) {
        hour = 0;
      }
      if (meridiem === 'pagi') {
        return hour;
      } else if (meridiem === 'tengahari') {
        return hour >= 11 ? hour : hour + 12;
      } else if (meridiem === 'petang' || meridiem === 'malam') {
        return hour + 12;
      }
    },
    meridiem: function meridiem(hours, minutes, isLower) {
      if (hours < 11) {
        return 'pagi';
      } else if (hours < 15) {
        return 'tengahari';
      } else if (hours < 19) {
        return 'petang';
      } else {
        return 'malam';
      }
    },
    calendar: {
      sameDay: '[Hari ini pukul] LT',
      nextDay: '[Esok pukul] LT',
      nextWeek: 'dddd [pukul] LT',
      lastDay: '[Kelmarin pukul] LT',
      lastWeek: 'dddd [lepas pukul] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'dalam %s',
      past: '%s yang lepas',
      s: 'beberapa saat',
      ss: '%d saat',
      m: 'seminit',
      mm: '%d minit',
      h: 'sejam',
      hh: '%d jam',
      d: 'sehari',
      dd: '%d hari',
      M: 'sebulan',
      MM: '%d bulan',
      y: 'setahun',
      yy: '%d tahun' },

    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 7 // The week that contains Jan 7th is the first week of the year.
    } });


  return msMy;

});

/***/ }),
/* 228 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/mt.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Maltese (Malta) [mt]
//! author : Alessandro Maruccia : https://github.com/alesma

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var mt = moment.defineLocale('mt', {
    months: 'Jannar_Frar_Marzu_April_Mejju_Ġunju_Lulju_Awwissu_Settembru_Ottubru_Novembru_Diċembru'.split(
    '_'),

    monthsShort: 'Jan_Fra_Mar_Apr_Mej_Ġun_Lul_Aww_Set_Ott_Nov_Diċ'.split('_'),
    weekdays: 'Il-Ħadd_It-Tnejn_It-Tlieta_L-Erbgħa_Il-Ħamis_Il-Ġimgħa_Is-Sibt'.split(
    '_'),

    weekdaysShort: 'Ħad_Tne_Tli_Erb_Ħam_Ġim_Sib'.split('_'),
    weekdaysMin: 'Ħa_Tn_Tl_Er_Ħa_Ġi_Si'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd, D MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[Illum fil-]LT',
      nextDay: '[Għada fil-]LT',
      nextWeek: 'dddd [fil-]LT',
      lastDay: '[Il-bieraħ fil-]LT',
      lastWeek: 'dddd [li għadda] [fil-]LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'f’ %s',
      past: '%s ilu',
      s: 'ftit sekondi',
      ss: '%d sekondi',
      m: 'minuta',
      mm: '%d minuti',
      h: 'siegħa',
      hh: '%d siegħat',
      d: 'ġurnata',
      dd: '%d ġranet',
      M: 'xahar',
      MM: '%d xhur',
      y: 'sena',
      yy: '%d sni' },

    dayOfMonthOrdinalParse: /\d{1,2}º/,
    ordinal: '%dº',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return mt;

});

/***/ }),
/* 229 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/my.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Burmese [my]
//! author : Squar team, mysquar.com
//! author : David Rossellat : https://github.com/gholadr
//! author : Tin Aung Lin : https://github.com/thanyawzinmin

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var symbolMap = {
    1: '၁',
    2: '၂',
    3: '၃',
    4: '၄',
    5: '၅',
    6: '၆',
    7: '၇',
    8: '၈',
    9: '၉',
    0: '၀' },

  numberMap = {
    '၁': '1',
    '၂': '2',
    '၃': '3',
    '၄': '4',
    '၅': '5',
    '၆': '6',
    '၇': '7',
    '၈': '8',
    '၉': '9',
    '၀': '0' };


  var my = moment.defineLocale('my', {
    months: 'ဇန်နဝါရီ_ဖေဖော်ဝါရီ_မတ်_ဧပြီ_မေ_ဇွန်_ဇူလိုင်_သြဂုတ်_စက်တင်ဘာ_အောက်တိုဘာ_နိုဝင်ဘာ_ဒီဇင်ဘာ'.split(
    '_'),

    monthsShort: 'ဇန်_ဖေ_မတ်_ပြီ_မေ_ဇွန်_လိုင်_သြ_စက်_အောက်_နို_ဒီ'.split('_'),
    weekdays: 'တနင်္ဂနွေ_တနင်္လာ_အင်္ဂါ_ဗုဒ္ဓဟူး_ကြာသပတေး_သောကြာ_စနေ'.split(
    '_'),

    weekdaysShort: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),
    weekdaysMin: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),

    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd D MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[ယနေ.] LT [မှာ]',
      nextDay: '[မနက်ဖြန်] LT [မှာ]',
      nextWeek: 'dddd LT [မှာ]',
      lastDay: '[မနေ.က] LT [မှာ]',
      lastWeek: '[ပြီးခဲ့သော] dddd LT [မှာ]',
      sameElse: 'L' },

    relativeTime: {
      future: 'လာမည့် %s မှာ',
      past: 'လွန်ခဲ့သော %s က',
      s: 'စက္ကန်.အနည်းငယ်',
      ss: '%d စက္ကန့်',
      m: 'တစ်မိနစ်',
      mm: '%d မိနစ်',
      h: 'တစ်နာရီ',
      hh: '%d နာရီ',
      d: 'တစ်ရက်',
      dd: '%d ရက်',
      M: 'တစ်လ',
      MM: '%d လ',
      y: 'တစ်နှစ်',
      yy: '%d နှစ်' },

    preparse: function preparse(string) {
      return string.replace(/[၁၂၃၄၅၆၇၈၉၀]/g, function (match) {
        return numberMap[match];
      });
    },
    postformat: function postformat(string) {
      return string.replace(/\d/g, function (match) {
        return symbolMap[match];
      });
    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return my;

});

/***/ }),
/* 230 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/nb.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Norwegian Bokmål [nb]
//! authors : Espen Hovlandsdal : https://github.com/rexxars
//!           Sigurd Gartmann : https://github.com/sigurdga
//!           Stephen Ramthun : https://github.com/stephenramthun

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var nb = moment.defineLocale('nb', {
    months: 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split(
    '_'),

    monthsShort: 'jan._feb._mars_apr._mai_juni_juli_aug._sep._okt._nov._des.'.split(
    '_'),

    monthsParseExact: true,
    weekdays: 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),
    weekdaysShort: 'sø._ma._ti._on._to._fr._lø.'.split('_'),
    weekdaysMin: 'sø_ma_ti_on_to_fr_lø'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD.MM.YYYY',
      LL: 'D. MMMM YYYY',
      LLL: 'D. MMMM YYYY [kl.] HH:mm',
      LLLL: 'dddd D. MMMM YYYY [kl.] HH:mm' },

    calendar: {
      sameDay: '[i dag kl.] LT',
      nextDay: '[i morgen kl.] LT',
      nextWeek: 'dddd [kl.] LT',
      lastDay: '[i går kl.] LT',
      lastWeek: '[forrige] dddd [kl.] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'om %s',
      past: '%s siden',
      s: 'noen sekunder',
      ss: '%d sekunder',
      m: 'ett minutt',
      mm: '%d minutter',
      h: 'en time',
      hh: '%d timer',
      d: 'en dag',
      dd: '%d dager',
      w: 'en uke',
      ww: '%d uker',
      M: 'en måned',
      MM: '%d måneder',
      y: 'ett år',
      yy: '%d år' },

    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal: '%d.',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return nb;

});

/***/ }),
/* 231 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/ne.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Nepalese [ne]
//! author : suvash : https://github.com/suvash

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var symbolMap = {
    1: '१',
    2: '२',
    3: '३',
    4: '४',
    5: '५',
    6: '६',
    7: '७',
    8: '८',
    9: '९',
    0: '०' },

  numberMap = {
    '१': '1',
    '२': '2',
    '३': '3',
    '४': '4',
    '५': '5',
    '६': '6',
    '७': '7',
    '८': '8',
    '९': '9',
    '०': '0' };


  var ne = moment.defineLocale('ne', {
    months: 'जनवरी_फेब्रुवरी_मार्च_अप्रिल_मई_जुन_जुलाई_अगष्ट_सेप्टेम्बर_अक्टोबर_नोभेम्बर_डिसेम्बर'.split(
    '_'),

    monthsShort: 'जन._फेब्रु._मार्च_अप्रि._मई_जुन_जुलाई._अग._सेप्ट._अक्टो._नोभे._डिसे.'.split(
    '_'),

    monthsParseExact: true,
    weekdays: 'आइतबार_सोमबार_मङ्गलबार_बुधबार_बिहिबार_शुक्रबार_शनिबार'.split(
    '_'),

    weekdaysShort: 'आइत._सोम._मङ्गल._बुध._बिहि._शुक्र._शनि.'.split('_'),
    weekdaysMin: 'आ._सो._मं._बु._बि._शु._श.'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'Aको h:mm बजे',
      LTS: 'Aको h:mm:ss बजे',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY, Aको h:mm बजे',
      LLLL: 'dddd, D MMMM YYYY, Aको h:mm बजे' },

    preparse: function preparse(string) {
      return string.replace(/[१२३४५६७८९०]/g, function (match) {
        return numberMap[match];
      });
    },
    postformat: function postformat(string) {
      return string.replace(/\d/g, function (match) {
        return symbolMap[match];
      });
    },
    meridiemParse: /राति|बिहान|दिउँसो|साँझ/,
    meridiemHour: function meridiemHour(hour, meridiem) {
      if (hour === 12) {
        hour = 0;
      }
      if (meridiem === 'राति') {
        return hour < 4 ? hour : hour + 12;
      } else if (meridiem === 'बिहान') {
        return hour;
      } else if (meridiem === 'दिउँसो') {
        return hour >= 10 ? hour : hour + 12;
      } else if (meridiem === 'साँझ') {
        return hour + 12;
      }
    },
    meridiem: function meridiem(hour, minute, isLower) {
      if (hour < 3) {
        return 'राति';
      } else if (hour < 12) {
        return 'बिहान';
      } else if (hour < 16) {
        return 'दिउँसो';
      } else if (hour < 20) {
        return 'साँझ';
      } else {
        return 'राति';
      }
    },
    calendar: {
      sameDay: '[आज] LT',
      nextDay: '[भोलि] LT',
      nextWeek: '[आउँदो] dddd[,] LT',
      lastDay: '[हिजो] LT',
      lastWeek: '[गएको] dddd[,] LT',
      sameElse: 'L' },

    relativeTime: {
      future: '%sमा',
      past: '%s अगाडि',
      s: 'केही क्षण',
      ss: '%d सेकेण्ड',
      m: 'एक मिनेट',
      mm: '%d मिनेट',
      h: 'एक घण्टा',
      hh: '%d घण्टा',
      d: 'एक दिन',
      dd: '%d दिन',
      M: 'एक महिना',
      MM: '%d महिना',
      y: 'एक बर्ष',
      yy: '%d बर्ष' },

    week: {
      dow: 0, // Sunday is the first day of the week.
      doy: 6 // The week that contains Jan 6th is the first week of the year.
    } });


  return ne;

});

/***/ }),
/* 232 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/nl.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Dutch [nl]
//! author : Joris Röling : https://github.com/jorisroling
//! author : Jacob Middag : https://github.com/middagj

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split(
  '_'),

  monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split(
  '_'),

  monthsParse = [
  /^jan/i,
  /^feb/i,
  /^maart|mrt.?$/i,
  /^apr/i,
  /^mei$/i,
  /^jun[i.]?$/i,
  /^jul[i.]?$/i,
  /^aug/i,
  /^sep/i,
  /^okt/i,
  /^nov/i,
  /^dec/i],

  monthsRegex = /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december|jan\.?|feb\.?|mrt\.?|apr\.?|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i;

  var nl = moment.defineLocale('nl', {
    months: 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split(
    '_'),

    monthsShort: function monthsShort(m, format) {
      if (!m) {
        return monthsShortWithDots;
      } else if (/-MMM-/.test(format)) {
        return monthsShortWithoutDots[m.month()];
      } else {
        return monthsShortWithDots[m.month()];
      }
    },

    monthsRegex: monthsRegex,
    monthsShortRegex: monthsRegex,
    monthsStrictRegex: /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december)/i,
    monthsShortStrictRegex: /^(jan\.?|feb\.?|mrt\.?|apr\.?|mei|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i,

    monthsParse: monthsParse,
    longMonthsParse: monthsParse,
    shortMonthsParse: monthsParse,

    weekdays: 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split(
    '_'),

    weekdaysShort: 'zo._ma._di._wo._do._vr._za.'.split('_'),
    weekdaysMin: 'zo_ma_di_wo_do_vr_za'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD-MM-YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd D MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[vandaag om] LT',
      nextDay: '[morgen om] LT',
      nextWeek: 'dddd [om] LT',
      lastDay: '[gisteren om] LT',
      lastWeek: '[afgelopen] dddd [om] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'over %s',
      past: '%s geleden',
      s: 'een paar seconden',
      ss: '%d seconden',
      m: 'één minuut',
      mm: '%d minuten',
      h: 'één uur',
      hh: '%d uur',
      d: 'één dag',
      dd: '%d dagen',
      w: 'één week',
      ww: '%d weken',
      M: 'één maand',
      MM: '%d maanden',
      y: 'één jaar',
      yy: '%d jaar' },

    dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
    ordinal: function ordinal(number) {
      return (
        number + (
        number === 1 || number === 8 || number >= 20 ? 'ste' : 'de'));

    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return nl;

});

/***/ }),
/* 233 */
/*!************************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/nl-be.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Dutch (Belgium) [nl-be]
//! author : Joris Röling : https://github.com/jorisroling
//! author : Jacob Middag : https://github.com/middagj

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split(
  '_'),

  monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split(
  '_'),

  monthsParse = [
  /^jan/i,
  /^feb/i,
  /^maart|mrt.?$/i,
  /^apr/i,
  /^mei$/i,
  /^jun[i.]?$/i,
  /^jul[i.]?$/i,
  /^aug/i,
  /^sep/i,
  /^okt/i,
  /^nov/i,
  /^dec/i],

  monthsRegex = /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december|jan\.?|feb\.?|mrt\.?|apr\.?|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i;

  var nlBe = moment.defineLocale('nl-be', {
    months: 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split(
    '_'),

    monthsShort: function monthsShort(m, format) {
      if (!m) {
        return monthsShortWithDots;
      } else if (/-MMM-/.test(format)) {
        return monthsShortWithoutDots[m.month()];
      } else {
        return monthsShortWithDots[m.month()];
      }
    },

    monthsRegex: monthsRegex,
    monthsShortRegex: monthsRegex,
    monthsStrictRegex: /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december)/i,
    monthsShortStrictRegex: /^(jan\.?|feb\.?|mrt\.?|apr\.?|mei|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i,

    monthsParse: monthsParse,
    longMonthsParse: monthsParse,
    shortMonthsParse: monthsParse,

    weekdays: 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split(
    '_'),

    weekdaysShort: 'zo._ma._di._wo._do._vr._za.'.split('_'),
    weekdaysMin: 'zo_ma_di_wo_do_vr_za'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd D MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[vandaag om] LT',
      nextDay: '[morgen om] LT',
      nextWeek: 'dddd [om] LT',
      lastDay: '[gisteren om] LT',
      lastWeek: '[afgelopen] dddd [om] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'over %s',
      past: '%s geleden',
      s: 'een paar seconden',
      ss: '%d seconden',
      m: 'één minuut',
      mm: '%d minuten',
      h: 'één uur',
      hh: '%d uur',
      d: 'één dag',
      dd: '%d dagen',
      M: 'één maand',
      MM: '%d maanden',
      y: 'één jaar',
      yy: '%d jaar' },

    dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
    ordinal: function ordinal(number) {
      return (
        number + (
        number === 1 || number === 8 || number >= 20 ? 'ste' : 'de'));

    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return nlBe;

});

/***/ }),
/* 234 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/nn.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Nynorsk [nn]
//! authors : https://github.com/mechuwind
//!           Stephen Ramthun : https://github.com/stephenramthun

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var nn = moment.defineLocale('nn', {
    months: 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split(
    '_'),

    monthsShort: 'jan._feb._mars_apr._mai_juni_juli_aug._sep._okt._nov._des.'.split(
    '_'),

    monthsParseExact: true,
    weekdays: 'sundag_måndag_tysdag_onsdag_torsdag_fredag_laurdag'.split('_'),
    weekdaysShort: 'su._må._ty._on._to._fr._lau.'.split('_'),
    weekdaysMin: 'su_må_ty_on_to_fr_la'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD.MM.YYYY',
      LL: 'D. MMMM YYYY',
      LLL: 'D. MMMM YYYY [kl.] H:mm',
      LLLL: 'dddd D. MMMM YYYY [kl.] HH:mm' },

    calendar: {
      sameDay: '[I dag klokka] LT',
      nextDay: '[I morgon klokka] LT',
      nextWeek: 'dddd [klokka] LT',
      lastDay: '[I går klokka] LT',
      lastWeek: '[Føregåande] dddd [klokka] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'om %s',
      past: '%s sidan',
      s: 'nokre sekund',
      ss: '%d sekund',
      m: 'eit minutt',
      mm: '%d minutt',
      h: 'ein time',
      hh: '%d timar',
      d: 'ein dag',
      dd: '%d dagar',
      w: 'ei veke',
      ww: '%d veker',
      M: 'ein månad',
      MM: '%d månader',
      y: 'eit år',
      yy: '%d år' },

    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal: '%d.',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return nn;

});

/***/ }),
/* 235 */
/*!*************************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/oc-lnc.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Occitan, lengadocian dialecte [oc-lnc]
//! author : Quentin PAGÈS : https://github.com/Quenty31

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var ocLnc = moment.defineLocale('oc-lnc', {
    months: {
      standalone: 'genièr_febrièr_març_abril_mai_junh_julhet_agost_setembre_octòbre_novembre_decembre'.split(
      '_'),

      format: "de genièr_de febrièr_de març_d'abril_de mai_de junh_de julhet_d'agost_de setembre_d'octòbre_de novembre_de decembre".split(
      '_'),

      isFormat: /D[oD]?(\s)+MMMM/ },

    monthsShort: 'gen._febr._març_abr._mai_junh_julh._ago._set._oct._nov._dec.'.split(
    '_'),

    monthsParseExact: true,
    weekdays: 'dimenge_diluns_dimars_dimècres_dijòus_divendres_dissabte'.split(
    '_'),

    weekdaysShort: 'dg._dl._dm._dc._dj._dv._ds.'.split('_'),
    weekdaysMin: 'dg_dl_dm_dc_dj_dv_ds'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'H:mm',
      LTS: 'H:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM [de] YYYY',
      ll: 'D MMM YYYY',
      LLL: 'D MMMM [de] YYYY [a] H:mm',
      lll: 'D MMM YYYY, H:mm',
      LLLL: 'dddd D MMMM [de] YYYY [a] H:mm',
      llll: 'ddd D MMM YYYY, H:mm' },

    calendar: {
      sameDay: '[uèi a] LT',
      nextDay: '[deman a] LT',
      nextWeek: 'dddd [a] LT',
      lastDay: '[ièr a] LT',
      lastWeek: 'dddd [passat a] LT',
      sameElse: 'L' },

    relativeTime: {
      future: "d'aquí %s",
      past: 'fa %s',
      s: 'unas segondas',
      ss: '%d segondas',
      m: 'una minuta',
      mm: '%d minutas',
      h: 'una ora',
      hh: '%d oras',
      d: 'un jorn',
      dd: '%d jorns',
      M: 'un mes',
      MM: '%d meses',
      y: 'un an',
      yy: '%d ans' },

    dayOfMonthOrdinalParse: /\d{1,2}(r|n|t|è|a)/,
    ordinal: function ordinal(number, period) {
      var output =
      number === 1 ?
      'r' :
      number === 2 ?
      'n' :
      number === 3 ?
      'r' :
      number === 4 ?
      't' :
      'è';
      if (period === 'w' || period === 'W') {
        output = 'a';
      }
      return number + output;
    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 } });



  return ocLnc;

});

/***/ }),
/* 236 */
/*!************************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/pa-in.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Punjabi (India) [pa-in]
//! author : Harpreet Singh : https://github.com/harpreetkhalsagtbit

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var symbolMap = {
    1: '੧',
    2: '੨',
    3: '੩',
    4: '੪',
    5: '੫',
    6: '੬',
    7: '੭',
    8: '੮',
    9: '੯',
    0: '੦' },

  numberMap = {
    '੧': '1',
    '੨': '2',
    '੩': '3',
    '੪': '4',
    '੫': '5',
    '੬': '6',
    '੭': '7',
    '੮': '8',
    '੯': '9',
    '੦': '0' };


  var paIn = moment.defineLocale('pa-in', {
    // There are months name as per Nanakshahi Calendar but they are not used as rigidly in modern Punjabi.
    months: 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split(
    '_'),

    monthsShort: 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split(
    '_'),

    weekdays: 'ਐਤਵਾਰ_ਸੋਮਵਾਰ_ਮੰਗਲਵਾਰ_ਬੁਧਵਾਰ_ਵੀਰਵਾਰ_ਸ਼ੁੱਕਰਵਾਰ_ਸ਼ਨੀਚਰਵਾਰ'.split(
    '_'),

    weekdaysShort: 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),
    weekdaysMin: 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),
    longDateFormat: {
      LT: 'A h:mm ਵਜੇ',
      LTS: 'A h:mm:ss ਵਜੇ',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY, A h:mm ਵਜੇ',
      LLLL: 'dddd, D MMMM YYYY, A h:mm ਵਜੇ' },

    calendar: {
      sameDay: '[ਅਜ] LT',
      nextDay: '[ਕਲ] LT',
      nextWeek: '[ਅਗਲਾ] dddd, LT',
      lastDay: '[ਕਲ] LT',
      lastWeek: '[ਪਿਛਲੇ] dddd, LT',
      sameElse: 'L' },

    relativeTime: {
      future: '%s ਵਿੱਚ',
      past: '%s ਪਿਛਲੇ',
      s: 'ਕੁਝ ਸਕਿੰਟ',
      ss: '%d ਸਕਿੰਟ',
      m: 'ਇਕ ਮਿੰਟ',
      mm: '%d ਮਿੰਟ',
      h: 'ਇੱਕ ਘੰਟਾ',
      hh: '%d ਘੰਟੇ',
      d: 'ਇੱਕ ਦਿਨ',
      dd: '%d ਦਿਨ',
      M: 'ਇੱਕ ਮਹੀਨਾ',
      MM: '%d ਮਹੀਨੇ',
      y: 'ਇੱਕ ਸਾਲ',
      yy: '%d ਸਾਲ' },

    preparse: function preparse(string) {
      return string.replace(/[੧੨੩੪੫੬੭੮੯੦]/g, function (match) {
        return numberMap[match];
      });
    },
    postformat: function postformat(string) {
      return string.replace(/\d/g, function (match) {
        return symbolMap[match];
      });
    },
    // Punjabi notation for meridiems are quite fuzzy in practice. While there exists
    // a rigid notion of a 'Pahar' it is not used as rigidly in modern Punjabi.
    meridiemParse: /ਰਾਤ|ਸਵੇਰ|ਦੁਪਹਿਰ|ਸ਼ਾਮ/,
    meridiemHour: function meridiemHour(hour, meridiem) {
      if (hour === 12) {
        hour = 0;
      }
      if (meridiem === 'ਰਾਤ') {
        return hour < 4 ? hour : hour + 12;
      } else if (meridiem === 'ਸਵੇਰ') {
        return hour;
      } else if (meridiem === 'ਦੁਪਹਿਰ') {
        return hour >= 10 ? hour : hour + 12;
      } else if (meridiem === 'ਸ਼ਾਮ') {
        return hour + 12;
      }
    },
    meridiem: function meridiem(hour, minute, isLower) {
      if (hour < 4) {
        return 'ਰਾਤ';
      } else if (hour < 10) {
        return 'ਸਵੇਰ';
      } else if (hour < 17) {
        return 'ਦੁਪਹਿਰ';
      } else if (hour < 20) {
        return 'ਸ਼ਾਮ';
      } else {
        return 'ਰਾਤ';
      }
    },
    week: {
      dow: 0, // Sunday is the first day of the week.
      doy: 6 // The week that contains Jan 6th is the first week of the year.
    } });


  return paIn;

});

/***/ }),
/* 237 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/pl.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Polish [pl]
//! author : Rafal Hirsz : https://github.com/evoL

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var monthsNominative = 'styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień'.split(
  '_'),

  monthsSubjective = 'stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia'.split(
  '_'),

  monthsParse = [
  /^sty/i,
  /^lut/i,
  /^mar/i,
  /^kwi/i,
  /^maj/i,
  /^cze/i,
  /^lip/i,
  /^sie/i,
  /^wrz/i,
  /^paź/i,
  /^lis/i,
  /^gru/i];

  function plural(n) {
    return n % 10 < 5 && n % 10 > 1 && ~~(n / 10) % 10 !== 1;
  }
  function translate(number, withoutSuffix, key) {
    var result = number + ' ';
    switch (key) {
      case 'ss':
        return result + (plural(number) ? 'sekundy' : 'sekund');
      case 'm':
        return withoutSuffix ? 'minuta' : 'minutę';
      case 'mm':
        return result + (plural(number) ? 'minuty' : 'minut');
      case 'h':
        return withoutSuffix ? 'godzina' : 'godzinę';
      case 'hh':
        return result + (plural(number) ? 'godziny' : 'godzin');
      case 'ww':
        return result + (plural(number) ? 'tygodnie' : 'tygodni');
      case 'MM':
        return result + (plural(number) ? 'miesiące' : 'miesięcy');
      case 'yy':
        return result + (plural(number) ? 'lata' : 'lat');}

  }

  var pl = moment.defineLocale('pl', {
    months: function months(momentToFormat, format) {
      if (!momentToFormat) {
        return monthsNominative;
      } else if (/D MMMM/.test(format)) {
        return monthsSubjective[momentToFormat.month()];
      } else {
        return monthsNominative[momentToFormat.month()];
      }
    },
    monthsShort: 'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru'.split('_'),
    monthsParse: monthsParse,
    longMonthsParse: monthsParse,
    shortMonthsParse: monthsParse,
    weekdays: 'niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota'.split(
    '_'),

    weekdaysShort: 'ndz_pon_wt_śr_czw_pt_sob'.split('_'),
    weekdaysMin: 'Nd_Pn_Wt_Śr_Cz_Pt_So'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD.MM.YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd, D MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[Dziś o] LT',
      nextDay: '[Jutro o] LT',
      nextWeek: function nextWeek() {
        switch (this.day()) {
          case 0:
            return '[W niedzielę o] LT';

          case 2:
            return '[We wtorek o] LT';

          case 3:
            return '[W środę o] LT';

          case 6:
            return '[W sobotę o] LT';

          default:
            return '[W] dddd [o] LT';}

      },
      lastDay: '[Wczoraj o] LT',
      lastWeek: function lastWeek() {
        switch (this.day()) {
          case 0:
            return '[W zeszłą niedzielę o] LT';
          case 3:
            return '[W zeszłą środę o] LT';
          case 6:
            return '[W zeszłą sobotę o] LT';
          default:
            return '[W zeszły] dddd [o] LT';}

      },
      sameElse: 'L' },

    relativeTime: {
      future: 'za %s',
      past: '%s temu',
      s: 'kilka sekund',
      ss: translate,
      m: translate,
      mm: translate,
      h: translate,
      hh: translate,
      d: '1 dzień',
      dd: '%d dni',
      w: 'tydzień',
      ww: translate,
      M: 'miesiąc',
      MM: translate,
      y: 'rok',
      yy: translate },

    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal: '%d.',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return pl;

});

/***/ }),
/* 238 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/pt.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Portuguese [pt]
//! author : Jefferson : https://github.com/jalex79

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var pt = moment.defineLocale('pt', {
    months: 'janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro'.split(
    '_'),

    monthsShort: 'jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez'.split('_'),
    weekdays: 'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split(
    '_'),

    weekdaysShort: 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),
    weekdaysMin: 'Do_2ª_3ª_4ª_5ª_6ª_Sá'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D [de] MMMM [de] YYYY',
      LLL: 'D [de] MMMM [de] YYYY HH:mm',
      LLLL: 'dddd, D [de] MMMM [de] YYYY HH:mm' },

    calendar: {
      sameDay: '[Hoje às] LT',
      nextDay: '[Amanhã às] LT',
      nextWeek: 'dddd [às] LT',
      lastDay: '[Ontem às] LT',
      lastWeek: function lastWeek() {
        return this.day() === 0 || this.day() === 6 ?
        '[Último] dddd [às] LT' // Saturday + Sunday
        : '[Última] dddd [às] LT'; // Monday - Friday
      },
      sameElse: 'L' },

    relativeTime: {
      future: 'em %s',
      past: 'há %s',
      s: 'segundos',
      ss: '%d segundos',
      m: 'um minuto',
      mm: '%d minutos',
      h: 'uma hora',
      hh: '%d horas',
      d: 'um dia',
      dd: '%d dias',
      w: 'uma semana',
      ww: '%d semanas',
      M: 'um mês',
      MM: '%d meses',
      y: 'um ano',
      yy: '%d anos' },

    dayOfMonthOrdinalParse: /\d{1,2}º/,
    ordinal: '%dº',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return pt;

});

/***/ }),
/* 239 */
/*!************************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/pt-br.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Portuguese (Brazil) [pt-br]
//! author : Caio Ribeiro Pereira : https://github.com/caio-ribeiro-pereira

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var ptBr = moment.defineLocale('pt-br', {
    months: 'janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro'.split(
    '_'),

    monthsShort: 'jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez'.split('_'),
    weekdays: 'domingo_segunda-feira_terça-feira_quarta-feira_quinta-feira_sexta-feira_sábado'.split(
    '_'),

    weekdaysShort: 'dom_seg_ter_qua_qui_sex_sáb'.split('_'),
    weekdaysMin: 'do_2ª_3ª_4ª_5ª_6ª_sá'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D [de] MMMM [de] YYYY',
      LLL: 'D [de] MMMM [de] YYYY [às] HH:mm',
      LLLL: 'dddd, D [de] MMMM [de] YYYY [às] HH:mm' },

    calendar: {
      sameDay: '[Hoje às] LT',
      nextDay: '[Amanhã às] LT',
      nextWeek: 'dddd [às] LT',
      lastDay: '[Ontem às] LT',
      lastWeek: function lastWeek() {
        return this.day() === 0 || this.day() === 6 ?
        '[Último] dddd [às] LT' // Saturday + Sunday
        : '[Última] dddd [às] LT'; // Monday - Friday
      },
      sameElse: 'L' },

    relativeTime: {
      future: 'em %s',
      past: 'há %s',
      s: 'poucos segundos',
      ss: '%d segundos',
      m: 'um minuto',
      mm: '%d minutos',
      h: 'uma hora',
      hh: '%d horas',
      d: 'um dia',
      dd: '%d dias',
      M: 'um mês',
      MM: '%d meses',
      y: 'um ano',
      yy: '%d anos' },

    dayOfMonthOrdinalParse: /\d{1,2}º/,
    ordinal: '%dº',
    invalidDate: 'Data inválida' });


  return ptBr;

});

/***/ }),
/* 240 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/ro.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Romanian [ro]
//! author : Vlad Gurdiga : https://github.com/gurdiga
//! author : Valentin Agachi : https://github.com/avaly
//! author : Emanuel Cepoi : https://github.com/cepem

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  function relativeTimeWithPlural(number, withoutSuffix, key) {
    var format = {
      ss: 'secunde',
      mm: 'minute',
      hh: 'ore',
      dd: 'zile',
      ww: 'săptămâni',
      MM: 'luni',
      yy: 'ani' },

    separator = ' ';
    if (number % 100 >= 20 || number >= 100 && number % 100 === 0) {
      separator = ' de ';
    }
    return number + separator + format[key];
  }

  var ro = moment.defineLocale('ro', {
    months: 'ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie'.split(
    '_'),

    monthsShort: 'ian._feb._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.'.split(
    '_'),

    monthsParseExact: true,
    weekdays: 'duminică_luni_marți_miercuri_joi_vineri_sâmbătă'.split('_'),
    weekdaysShort: 'Dum_Lun_Mar_Mie_Joi_Vin_Sâm'.split('_'),
    weekdaysMin: 'Du_Lu_Ma_Mi_Jo_Vi_Sâ'.split('_'),
    longDateFormat: {
      LT: 'H:mm',
      LTS: 'H:mm:ss',
      L: 'DD.MM.YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY H:mm',
      LLLL: 'dddd, D MMMM YYYY H:mm' },

    calendar: {
      sameDay: '[azi la] LT',
      nextDay: '[mâine la] LT',
      nextWeek: 'dddd [la] LT',
      lastDay: '[ieri la] LT',
      lastWeek: '[fosta] dddd [la] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'peste %s',
      past: '%s în urmă',
      s: 'câteva secunde',
      ss: relativeTimeWithPlural,
      m: 'un minut',
      mm: relativeTimeWithPlural,
      h: 'o oră',
      hh: relativeTimeWithPlural,
      d: 'o zi',
      dd: relativeTimeWithPlural,
      w: 'o săptămână',
      ww: relativeTimeWithPlural,
      M: 'o lună',
      MM: relativeTimeWithPlural,
      y: 'un an',
      yy: relativeTimeWithPlural },

    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 7 // The week that contains Jan 7th is the first week of the year.
    } });


  return ro;

});

/***/ }),
/* 241 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/ru.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Russian [ru]
//! author : Viktorminator : https://github.com/Viktorminator
//! author : Menelion Elensúle : https://github.com/Oire
//! author : Коренберг Марк : https://github.com/socketpair

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  function plural(word, num) {
    var forms = word.split('_');
    return num % 10 === 1 && num % 100 !== 11 ?
    forms[0] :
    num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ?
    forms[1] :
    forms[2];
  }
  function relativeTimeWithPlural(number, withoutSuffix, key) {
    var format = {
      ss: withoutSuffix ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд',
      mm: withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',
      hh: 'час_часа_часов',
      dd: 'день_дня_дней',
      ww: 'неделя_недели_недель',
      MM: 'месяц_месяца_месяцев',
      yy: 'год_года_лет' };

    if (key === 'm') {
      return withoutSuffix ? 'минута' : 'минуту';
    } else {
      return number + ' ' + plural(format[key], +number);
    }
  }
  var monthsParse = [
  /^янв/i,
  /^фев/i,
  /^мар/i,
  /^апр/i,
  /^ма[йя]/i,
  /^июн/i,
  /^июл/i,
  /^авг/i,
  /^сен/i,
  /^окт/i,
  /^ноя/i,
  /^дек/i];


  // http://new.gramota.ru/spravka/rules/139-prop : § 103
  // Сокращения месяцев: http://new.gramota.ru/spravka/buro/search-answer?s=242637
  // CLDR data:          http://www.unicode.org/cldr/charts/28/summary/ru.html#1753
  var ru = moment.defineLocale('ru', {
    months: {
      format: 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split(
      '_'),

      standalone: 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split(
      '_') },


    monthsShort: {
      // по CLDR именно "июл." и "июн.", но какой смысл менять букву на точку?
      format: 'янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.'.split(
      '_'),

      standalone: 'янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.'.split(
      '_') },


    weekdays: {
      standalone: 'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split(
      '_'),

      format: 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split(
      '_'),

      isFormat: /\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?] ?dddd/ },

    weekdaysShort: 'вс_пн_вт_ср_чт_пт_сб'.split('_'),
    weekdaysMin: 'вс_пн_вт_ср_чт_пт_сб'.split('_'),
    monthsParse: monthsParse,
    longMonthsParse: monthsParse,
    shortMonthsParse: monthsParse,

    // полные названия с падежами, по три буквы, для некоторых, по 4 буквы, сокращения с точкой и без точки
    monthsRegex: /^(январ[ья]|янв\.?|феврал[ья]|февр?\.?|марта?|мар\.?|апрел[ья]|апр\.?|ма[йя]|июн[ья]|июн\.?|июл[ья]|июл\.?|августа?|авг\.?|сентябр[ья]|сент?\.?|октябр[ья]|окт\.?|ноябр[ья]|нояб?\.?|декабр[ья]|дек\.?)/i,

    // копия предыдущего
    monthsShortRegex: /^(январ[ья]|янв\.?|феврал[ья]|февр?\.?|марта?|мар\.?|апрел[ья]|апр\.?|ма[йя]|июн[ья]|июн\.?|июл[ья]|июл\.?|августа?|авг\.?|сентябр[ья]|сент?\.?|октябр[ья]|окт\.?|ноябр[ья]|нояб?\.?|декабр[ья]|дек\.?)/i,

    // полные названия с падежами
    monthsStrictRegex: /^(январ[яь]|феврал[яь]|марта?|апрел[яь]|ма[яй]|июн[яь]|июл[яь]|августа?|сентябр[яь]|октябр[яь]|ноябр[яь]|декабр[яь])/i,

    // Выражение, которое соответствует только сокращённым формам
    monthsShortStrictRegex: /^(янв\.|февр?\.|мар[т.]|апр\.|ма[яй]|июн[ья.]|июл[ья.]|авг\.|сент?\.|окт\.|нояб?\.|дек\.)/i,
    longDateFormat: {
      LT: 'H:mm',
      LTS: 'H:mm:ss',
      L: 'DD.MM.YYYY',
      LL: 'D MMMM YYYY г.',
      LLL: 'D MMMM YYYY г., H:mm',
      LLLL: 'dddd, D MMMM YYYY г., H:mm' },

    calendar: {
      sameDay: '[Сегодня, в] LT',
      nextDay: '[Завтра, в] LT',
      lastDay: '[Вчера, в] LT',
      nextWeek: function nextWeek(now) {
        if (now.week() !== this.week()) {
          switch (this.day()) {
            case 0:
              return '[В следующее] dddd, [в] LT';
            case 1:
            case 2:
            case 4:
              return '[В следующий] dddd, [в] LT';
            case 3:
            case 5:
            case 6:
              return '[В следующую] dddd, [в] LT';}

        } else {
          if (this.day() === 2) {
            return '[Во] dddd, [в] LT';
          } else {
            return '[В] dddd, [в] LT';
          }
        }
      },
      lastWeek: function lastWeek(now) {
        if (now.week() !== this.week()) {
          switch (this.day()) {
            case 0:
              return '[В прошлое] dddd, [в] LT';
            case 1:
            case 2:
            case 4:
              return '[В прошлый] dddd, [в] LT';
            case 3:
            case 5:
            case 6:
              return '[В прошлую] dddd, [в] LT';}

        } else {
          if (this.day() === 2) {
            return '[Во] dddd, [в] LT';
          } else {
            return '[В] dddd, [в] LT';
          }
        }
      },
      sameElse: 'L' },

    relativeTime: {
      future: 'через %s',
      past: '%s назад',
      s: 'несколько секунд',
      ss: relativeTimeWithPlural,
      m: relativeTimeWithPlural,
      mm: relativeTimeWithPlural,
      h: 'час',
      hh: relativeTimeWithPlural,
      d: 'день',
      dd: relativeTimeWithPlural,
      w: 'неделя',
      ww: relativeTimeWithPlural,
      M: 'месяц',
      MM: relativeTimeWithPlural,
      y: 'год',
      yy: relativeTimeWithPlural },

    meridiemParse: /ночи|утра|дня|вечера/i,
    isPM: function isPM(input) {
      return /^(дня|вечера)$/.test(input);
    },
    meridiem: function meridiem(hour, minute, isLower) {
      if (hour < 4) {
        return 'ночи';
      } else if (hour < 12) {
        return 'утра';
      } else if (hour < 17) {
        return 'дня';
      } else {
        return 'вечера';
      }
    },
    dayOfMonthOrdinalParse: /\d{1,2}-(й|го|я)/,
    ordinal: function ordinal(number, period) {
      switch (period) {
        case 'M':
        case 'd':
        case 'DDD':
          return number + '-й';
        case 'D':
          return number + '-го';
        case 'w':
        case 'W':
          return number + '-я';
        default:
          return number;}

    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return ru;

});

/***/ }),
/* 242 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/sd.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Sindhi [sd]
//! author : Narain Sagar : https://github.com/narainsagar

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var months = [
  'جنوري',
  'فيبروري',
  'مارچ',
  'اپريل',
  'مئي',
  'جون',
  'جولاءِ',
  'آگسٽ',
  'سيپٽمبر',
  'آڪٽوبر',
  'نومبر',
  'ڊسمبر'],

  days = ['آچر', 'سومر', 'اڱارو', 'اربع', 'خميس', 'جمع', 'ڇنڇر'];

  var sd = moment.defineLocale('sd', {
    months: months,
    monthsShort: months,
    weekdays: days,
    weekdaysShort: days,
    weekdaysMin: days,
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd، D MMMM YYYY HH:mm' },

    meridiemParse: /صبح|شام/,
    isPM: function isPM(input) {
      return 'شام' === input;
    },
    meridiem: function meridiem(hour, minute, isLower) {
      if (hour < 12) {
        return 'صبح';
      }
      return 'شام';
    },
    calendar: {
      sameDay: '[اڄ] LT',
      nextDay: '[سڀاڻي] LT',
      nextWeek: 'dddd [اڳين هفتي تي] LT',
      lastDay: '[ڪالهه] LT',
      lastWeek: '[گزريل هفتي] dddd [تي] LT',
      sameElse: 'L' },

    relativeTime: {
      future: '%s پوء',
      past: '%s اڳ',
      s: 'چند سيڪنڊ',
      ss: '%d سيڪنڊ',
      m: 'هڪ منٽ',
      mm: '%d منٽ',
      h: 'هڪ ڪلاڪ',
      hh: '%d ڪلاڪ',
      d: 'هڪ ڏينهن',
      dd: '%d ڏينهن',
      M: 'هڪ مهينو',
      MM: '%d مهينا',
      y: 'هڪ سال',
      yy: '%d سال' },

    preparse: function preparse(string) {
      return string.replace(/،/g, ',');
    },
    postformat: function postformat(string) {
      return string.replace(/,/g, '،');
    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return sd;

});

/***/ }),
/* 243 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/se.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Northern Sami [se]
//! authors : Bård Rolstad Henriksen : https://github.com/karamell

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var se = moment.defineLocale('se', {
    months: 'ođđajagemánnu_guovvamánnu_njukčamánnu_cuoŋománnu_miessemánnu_geassemánnu_suoidnemánnu_borgemánnu_čakčamánnu_golggotmánnu_skábmamánnu_juovlamánnu'.split(
    '_'),

    monthsShort: 'ođđj_guov_njuk_cuo_mies_geas_suoi_borg_čakč_golg_skáb_juov'.split(
    '_'),

    weekdays: 'sotnabeaivi_vuossárga_maŋŋebárga_gaskavahkku_duorastat_bearjadat_lávvardat'.split(
    '_'),

    weekdaysShort: 'sotn_vuos_maŋ_gask_duor_bear_láv'.split('_'),
    weekdaysMin: 's_v_m_g_d_b_L'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD.MM.YYYY',
      LL: 'MMMM D. [b.] YYYY',
      LLL: 'MMMM D. [b.] YYYY [ti.] HH:mm',
      LLLL: 'dddd, MMMM D. [b.] YYYY [ti.] HH:mm' },

    calendar: {
      sameDay: '[otne ti] LT',
      nextDay: '[ihttin ti] LT',
      nextWeek: 'dddd [ti] LT',
      lastDay: '[ikte ti] LT',
      lastWeek: '[ovddit] dddd [ti] LT',
      sameElse: 'L' },

    relativeTime: {
      future: '%s geažes',
      past: 'maŋit %s',
      s: 'moadde sekunddat',
      ss: '%d sekunddat',
      m: 'okta minuhta',
      mm: '%d minuhtat',
      h: 'okta diimmu',
      hh: '%d diimmut',
      d: 'okta beaivi',
      dd: '%d beaivvit',
      M: 'okta mánnu',
      MM: '%d mánut',
      y: 'okta jahki',
      yy: '%d jagit' },

    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal: '%d.',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return se;

});

/***/ }),
/* 244 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/si.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Sinhalese [si]
//! author : Sampath Sitinamaluwa : https://github.com/sampathsris

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  /*jshint -W100*/
  var si = moment.defineLocale('si', {
    months: 'ජනවාරි_පෙබරවාරි_මාර්තු_අප්‍රේල්_මැයි_ජූනි_ජූලි_අගෝස්තු_සැප්තැම්බර්_ඔක්තෝබර්_නොවැම්බර්_දෙසැම්බර්'.split(
    '_'),

    monthsShort: 'ජන_පෙබ_මාර්_අප්_මැයි_ජූනි_ජූලි_අගෝ_සැප්_ඔක්_නොවැ_දෙසැ'.split(
    '_'),

    weekdays: 'ඉරිදා_සඳුදා_අඟහරුවාදා_බදාදා_බ්‍රහස්පතින්දා_සිකුරාදා_සෙනසුරාදා'.split(
    '_'),

    weekdaysShort: 'ඉරි_සඳු_අඟ_බදා_බ්‍රහ_සිකු_සෙන'.split('_'),
    weekdaysMin: 'ඉ_ස_අ_බ_බ්‍ර_සි_සෙ'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'a h:mm',
      LTS: 'a h:mm:ss',
      L: 'YYYY/MM/DD',
      LL: 'YYYY MMMM D',
      LLL: 'YYYY MMMM D, a h:mm',
      LLLL: 'YYYY MMMM D [වැනි] dddd, a h:mm:ss' },

    calendar: {
      sameDay: '[අද] LT[ට]',
      nextDay: '[හෙට] LT[ට]',
      nextWeek: 'dddd LT[ට]',
      lastDay: '[ඊයේ] LT[ට]',
      lastWeek: '[පසුගිය] dddd LT[ට]',
      sameElse: 'L' },

    relativeTime: {
      future: '%sකින්',
      past: '%sකට පෙර',
      s: 'තත්පර කිහිපය',
      ss: 'තත්පර %d',
      m: 'මිනිත්තුව',
      mm: 'මිනිත්තු %d',
      h: 'පැය',
      hh: 'පැය %d',
      d: 'දිනය',
      dd: 'දින %d',
      M: 'මාසය',
      MM: 'මාස %d',
      y: 'වසර',
      yy: 'වසර %d' },

    dayOfMonthOrdinalParse: /\d{1,2} වැනි/,
    ordinal: function ordinal(number) {
      return number + ' වැනි';
    },
    meridiemParse: /පෙර වරු|පස් වරු|පෙ.ව|ප.ව./,
    isPM: function isPM(input) {
      return input === 'ප.ව.' || input === 'පස් වරු';
    },
    meridiem: function meridiem(hours, minutes, isLower) {
      if (hours > 11) {
        return isLower ? 'ප.ව.' : 'පස් වරු';
      } else {
        return isLower ? 'පෙ.ව.' : 'පෙර වරු';
      }
    } });


  return si;

});

/***/ }),
/* 245 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/sk.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Slovak [sk]
//! author : Martin Minka : https://github.com/k2s
//! based on work of petrbela : https://github.com/petrbela

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var months = 'január_február_marec_apríl_máj_jún_júl_august_september_október_november_december'.split(
  '_'),

  monthsShort = 'jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec'.split('_');
  function plural(n) {
    return n > 1 && n < 5;
  }
  function translate(number, withoutSuffix, key, isFuture) {
    var result = number + ' ';
    switch (key) {
      case 's': // a few seconds / in a few seconds / a few seconds ago
        return withoutSuffix || isFuture ? 'pár sekúnd' : 'pár sekundami';
      case 'ss': // 9 seconds / in 9 seconds / 9 seconds ago
        if (withoutSuffix || isFuture) {
          return result + (plural(number) ? 'sekundy' : 'sekúnd');
        } else {
          return result + 'sekundami';
        }
      case 'm': // a minute / in a minute / a minute ago
        return withoutSuffix ? 'minúta' : isFuture ? 'minútu' : 'minútou';
      case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago
        if (withoutSuffix || isFuture) {
          return result + (plural(number) ? 'minúty' : 'minút');
        } else {
          return result + 'minútami';
        }
      case 'h': // an hour / in an hour / an hour ago
        return withoutSuffix ? 'hodina' : isFuture ? 'hodinu' : 'hodinou';
      case 'hh': // 9 hours / in 9 hours / 9 hours ago
        if (withoutSuffix || isFuture) {
          return result + (plural(number) ? 'hodiny' : 'hodín');
        } else {
          return result + 'hodinami';
        }
      case 'd': // a day / in a day / a day ago
        return withoutSuffix || isFuture ? 'deň' : 'dňom';
      case 'dd': // 9 days / in 9 days / 9 days ago
        if (withoutSuffix || isFuture) {
          return result + (plural(number) ? 'dni' : 'dní');
        } else {
          return result + 'dňami';
        }
      case 'M': // a month / in a month / a month ago
        return withoutSuffix || isFuture ? 'mesiac' : 'mesiacom';
      case 'MM': // 9 months / in 9 months / 9 months ago
        if (withoutSuffix || isFuture) {
          return result + (plural(number) ? 'mesiace' : 'mesiacov');
        } else {
          return result + 'mesiacmi';
        }
      case 'y': // a year / in a year / a year ago
        return withoutSuffix || isFuture ? 'rok' : 'rokom';
      case 'yy': // 9 years / in 9 years / 9 years ago
        if (withoutSuffix || isFuture) {
          return result + (plural(number) ? 'roky' : 'rokov');
        } else {
          return result + 'rokmi';
        }}

  }

  var sk = moment.defineLocale('sk', {
    months: months,
    monthsShort: monthsShort,
    weekdays: 'nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota'.split('_'),
    weekdaysShort: 'ne_po_ut_st_št_pi_so'.split('_'),
    weekdaysMin: 'ne_po_ut_st_št_pi_so'.split('_'),
    longDateFormat: {
      LT: 'H:mm',
      LTS: 'H:mm:ss',
      L: 'DD.MM.YYYY',
      LL: 'D. MMMM YYYY',
      LLL: 'D. MMMM YYYY H:mm',
      LLLL: 'dddd D. MMMM YYYY H:mm' },

    calendar: {
      sameDay: '[dnes o] LT',
      nextDay: '[zajtra o] LT',
      nextWeek: function nextWeek() {
        switch (this.day()) {
          case 0:
            return '[v nedeľu o] LT';
          case 1:
          case 2:
            return '[v] dddd [o] LT';
          case 3:
            return '[v stredu o] LT';
          case 4:
            return '[vo štvrtok o] LT';
          case 5:
            return '[v piatok o] LT';
          case 6:
            return '[v sobotu o] LT';}

      },
      lastDay: '[včera o] LT',
      lastWeek: function lastWeek() {
        switch (this.day()) {
          case 0:
            return '[minulú nedeľu o] LT';
          case 1:
          case 2:
            return '[minulý] dddd [o] LT';
          case 3:
            return '[minulú stredu o] LT';
          case 4:
          case 5:
            return '[minulý] dddd [o] LT';
          case 6:
            return '[minulú sobotu o] LT';}

      },
      sameElse: 'L' },

    relativeTime: {
      future: 'za %s',
      past: 'pred %s',
      s: translate,
      ss: translate,
      m: translate,
      mm: translate,
      h: translate,
      hh: translate,
      d: translate,
      dd: translate,
      M: translate,
      MM: translate,
      y: translate,
      yy: translate },

    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal: '%d.',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return sk;

});

/***/ }),
/* 246 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/sl.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Slovenian [sl]
//! author : Robert Sedovšek : https://github.com/sedovsek

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  function processRelativeTime(number, withoutSuffix, key, isFuture) {
    var result = number + ' ';
    switch (key) {
      case 's':
        return withoutSuffix || isFuture ?
        'nekaj sekund' :
        'nekaj sekundami';
      case 'ss':
        if (number === 1) {
          result += withoutSuffix ? 'sekundo' : 'sekundi';
        } else if (number === 2) {
          result += withoutSuffix || isFuture ? 'sekundi' : 'sekundah';
        } else if (number < 5) {
          result += withoutSuffix || isFuture ? 'sekunde' : 'sekundah';
        } else {
          result += 'sekund';
        }
        return result;
      case 'm':
        return withoutSuffix ? 'ena minuta' : 'eno minuto';
      case 'mm':
        if (number === 1) {
          result += withoutSuffix ? 'minuta' : 'minuto';
        } else if (number === 2) {
          result += withoutSuffix || isFuture ? 'minuti' : 'minutama';
        } else if (number < 5) {
          result += withoutSuffix || isFuture ? 'minute' : 'minutami';
        } else {
          result += withoutSuffix || isFuture ? 'minut' : 'minutami';
        }
        return result;
      case 'h':
        return withoutSuffix ? 'ena ura' : 'eno uro';
      case 'hh':
        if (number === 1) {
          result += withoutSuffix ? 'ura' : 'uro';
        } else if (number === 2) {
          result += withoutSuffix || isFuture ? 'uri' : 'urama';
        } else if (number < 5) {
          result += withoutSuffix || isFuture ? 'ure' : 'urami';
        } else {
          result += withoutSuffix || isFuture ? 'ur' : 'urami';
        }
        return result;
      case 'd':
        return withoutSuffix || isFuture ? 'en dan' : 'enim dnem';
      case 'dd':
        if (number === 1) {
          result += withoutSuffix || isFuture ? 'dan' : 'dnem';
        } else if (number === 2) {
          result += withoutSuffix || isFuture ? 'dni' : 'dnevoma';
        } else {
          result += withoutSuffix || isFuture ? 'dni' : 'dnevi';
        }
        return result;
      case 'M':
        return withoutSuffix || isFuture ? 'en mesec' : 'enim mesecem';
      case 'MM':
        if (number === 1) {
          result += withoutSuffix || isFuture ? 'mesec' : 'mesecem';
        } else if (number === 2) {
          result += withoutSuffix || isFuture ? 'meseca' : 'mesecema';
        } else if (number < 5) {
          result += withoutSuffix || isFuture ? 'mesece' : 'meseci';
        } else {
          result += withoutSuffix || isFuture ? 'mesecev' : 'meseci';
        }
        return result;
      case 'y':
        return withoutSuffix || isFuture ? 'eno leto' : 'enim letom';
      case 'yy':
        if (number === 1) {
          result += withoutSuffix || isFuture ? 'leto' : 'letom';
        } else if (number === 2) {
          result += withoutSuffix || isFuture ? 'leti' : 'letoma';
        } else if (number < 5) {
          result += withoutSuffix || isFuture ? 'leta' : 'leti';
        } else {
          result += withoutSuffix || isFuture ? 'let' : 'leti';
        }
        return result;}

  }

  var sl = moment.defineLocale('sl', {
    months: 'januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december'.split(
    '_'),

    monthsShort: 'jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.'.split(
    '_'),

    monthsParseExact: true,
    weekdays: 'nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota'.split('_'),
    weekdaysShort: 'ned._pon._tor._sre._čet._pet._sob.'.split('_'),
    weekdaysMin: 'ne_po_to_sr_če_pe_so'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'H:mm',
      LTS: 'H:mm:ss',
      L: 'DD. MM. YYYY',
      LL: 'D. MMMM YYYY',
      LLL: 'D. MMMM YYYY H:mm',
      LLLL: 'dddd, D. MMMM YYYY H:mm' },

    calendar: {
      sameDay: '[danes ob] LT',
      nextDay: '[jutri ob] LT',

      nextWeek: function nextWeek() {
        switch (this.day()) {
          case 0:
            return '[v] [nedeljo] [ob] LT';
          case 3:
            return '[v] [sredo] [ob] LT';
          case 6:
            return '[v] [soboto] [ob] LT';
          case 1:
          case 2:
          case 4:
          case 5:
            return '[v] dddd [ob] LT';}

      },
      lastDay: '[včeraj ob] LT',
      lastWeek: function lastWeek() {
        switch (this.day()) {
          case 0:
            return '[prejšnjo] [nedeljo] [ob] LT';
          case 3:
            return '[prejšnjo] [sredo] [ob] LT';
          case 6:
            return '[prejšnjo] [soboto] [ob] LT';
          case 1:
          case 2:
          case 4:
          case 5:
            return '[prejšnji] dddd [ob] LT';}

      },
      sameElse: 'L' },

    relativeTime: {
      future: 'čez %s',
      past: 'pred %s',
      s: processRelativeTime,
      ss: processRelativeTime,
      m: processRelativeTime,
      mm: processRelativeTime,
      h: processRelativeTime,
      hh: processRelativeTime,
      d: processRelativeTime,
      dd: processRelativeTime,
      M: processRelativeTime,
      MM: processRelativeTime,
      y: processRelativeTime,
      yy: processRelativeTime },

    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal: '%d.',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 7 // The week that contains Jan 7th is the first week of the year.
    } });


  return sl;

});

/***/ }),
/* 247 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/sq.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Albanian [sq]
//! author : Flakërim Ismani : https://github.com/flakerimi
//! author : Menelion Elensúle : https://github.com/Oire
//! author : Oerd Cukalla : https://github.com/oerd

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var sq = moment.defineLocale('sq', {
    months: 'Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor'.split(
    '_'),

    monthsShort: 'Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj'.split('_'),
    weekdays: 'E Diel_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë'.split(
    '_'),

    weekdaysShort: 'Die_Hën_Mar_Mër_Enj_Pre_Sht'.split('_'),
    weekdaysMin: 'D_H_Ma_Më_E_P_Sh'.split('_'),
    weekdaysParseExact: true,
    meridiemParse: /PD|MD/,
    isPM: function isPM(input) {
      return input.charAt(0) === 'M';
    },
    meridiem: function meridiem(hours, minutes, isLower) {
      return hours < 12 ? 'PD' : 'MD';
    },
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd, D MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[Sot në] LT',
      nextDay: '[Nesër në] LT',
      nextWeek: 'dddd [në] LT',
      lastDay: '[Dje në] LT',
      lastWeek: 'dddd [e kaluar në] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'në %s',
      past: '%s më parë',
      s: 'disa sekonda',
      ss: '%d sekonda',
      m: 'një minutë',
      mm: '%d minuta',
      h: 'një orë',
      hh: '%d orë',
      d: 'një ditë',
      dd: '%d ditë',
      M: 'një muaj',
      MM: '%d muaj',
      y: 'një vit',
      yy: '%d vite' },

    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal: '%d.',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return sq;

});

/***/ }),
/* 248 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/sr.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Serbian [sr]
//! author : Milan Janačković<milanjanackovic@gmail.com> : https://github.com/milan-j
//! author : Stefan Crnjaković <stefan@hotmail.rs> : https://github.com/crnjakovic

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var translator = {
    words: {
      //Different grammatical cases
      ss: ['sekunda', 'sekunde', 'sekundi'],
      m: ['jedan minut', 'jedne minute'],
      mm: ['minut', 'minute', 'minuta'],
      h: ['jedan sat', 'jednog sata'],
      hh: ['sat', 'sata', 'sati'],
      dd: ['dan', 'dana', 'dana'],
      MM: ['mesec', 'meseca', 'meseci'],
      yy: ['godina', 'godine', 'godina'] },

    correctGrammaticalCase: function correctGrammaticalCase(number, wordKey) {
      return number === 1 ?
      wordKey[0] :
      number >= 2 && number <= 4 ?
      wordKey[1] :
      wordKey[2];
    },
    translate: function translate(number, withoutSuffix, key) {
      var wordKey = translator.words[key];
      if (key.length === 1) {
        return withoutSuffix ? wordKey[0] : wordKey[1];
      } else {
        return (
          number +
          ' ' +
          translator.correctGrammaticalCase(number, wordKey));

      }
    } };


  var sr = moment.defineLocale('sr', {
    months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split(
    '_'),

    monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split(
    '_'),

    monthsParseExact: true,
    weekdays: 'nedelja_ponedeljak_utorak_sreda_četvrtak_petak_subota'.split(
    '_'),

    weekdaysShort: 'ned._pon._uto._sre._čet._pet._sub.'.split('_'),
    weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'H:mm',
      LTS: 'H:mm:ss',
      L: 'D. M. YYYY.',
      LL: 'D. MMMM YYYY.',
      LLL: 'D. MMMM YYYY. H:mm',
      LLLL: 'dddd, D. MMMM YYYY. H:mm' },

    calendar: {
      sameDay: '[danas u] LT',
      nextDay: '[sutra u] LT',
      nextWeek: function nextWeek() {
        switch (this.day()) {
          case 0:
            return '[u] [nedelju] [u] LT';
          case 3:
            return '[u] [sredu] [u] LT';
          case 6:
            return '[u] [subotu] [u] LT';
          case 1:
          case 2:
          case 4:
          case 5:
            return '[u] dddd [u] LT';}

      },
      lastDay: '[juče u] LT',
      lastWeek: function lastWeek() {
        var lastWeekDays = [
        '[prošle] [nedelje] [u] LT',
        '[prošlog] [ponedeljka] [u] LT',
        '[prošlog] [utorka] [u] LT',
        '[prošle] [srede] [u] LT',
        '[prošlog] [četvrtka] [u] LT',
        '[prošlog] [petka] [u] LT',
        '[prošle] [subote] [u] LT'];

        return lastWeekDays[this.day()];
      },
      sameElse: 'L' },

    relativeTime: {
      future: 'za %s',
      past: 'pre %s',
      s: 'nekoliko sekundi',
      ss: translator.translate,
      m: translator.translate,
      mm: translator.translate,
      h: translator.translate,
      hh: translator.translate,
      d: 'dan',
      dd: translator.translate,
      M: 'mesec',
      MM: translator.translate,
      y: 'godinu',
      yy: translator.translate },

    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal: '%d.',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 7 // The week that contains Jan 7th is the first week of the year.
    } });


  return sr;

});

/***/ }),
/* 249 */
/*!**************************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/sr-cyrl.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Serbian Cyrillic [sr-cyrl]
//! author : Milan Janačković<milanjanackovic@gmail.com> : https://github.com/milan-j
//! author : Stefan Crnjaković <stefan@hotmail.rs> : https://github.com/crnjakovic

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var translator = {
    words: {
      //Different grammatical cases
      ss: ['секунда', 'секунде', 'секунди'],
      m: ['један минут', 'једне минуте'],
      mm: ['минут', 'минуте', 'минута'],
      h: ['један сат', 'једног сата'],
      hh: ['сат', 'сата', 'сати'],
      dd: ['дан', 'дана', 'дана'],
      MM: ['месец', 'месеца', 'месеци'],
      yy: ['година', 'године', 'година'] },

    correctGrammaticalCase: function correctGrammaticalCase(number, wordKey) {
      return number === 1 ?
      wordKey[0] :
      number >= 2 && number <= 4 ?
      wordKey[1] :
      wordKey[2];
    },
    translate: function translate(number, withoutSuffix, key) {
      var wordKey = translator.words[key];
      if (key.length === 1) {
        return withoutSuffix ? wordKey[0] : wordKey[1];
      } else {
        return (
          number +
          ' ' +
          translator.correctGrammaticalCase(number, wordKey));

      }
    } };


  var srCyrl = moment.defineLocale('sr-cyrl', {
    months: 'јануар_фебруар_март_април_мај_јун_јул_август_септембар_октобар_новембар_децембар'.split(
    '_'),

    monthsShort: 'јан._феб._мар._апр._мај_јун_јул_авг._сеп._окт._нов._дец.'.split(
    '_'),

    monthsParseExact: true,
    weekdays: 'недеља_понедељак_уторак_среда_четвртак_петак_субота'.split('_'),
    weekdaysShort: 'нед._пон._уто._сре._чет._пет._суб.'.split('_'),
    weekdaysMin: 'не_по_ут_ср_че_пе_су'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'H:mm',
      LTS: 'H:mm:ss',
      L: 'D. M. YYYY.',
      LL: 'D. MMMM YYYY.',
      LLL: 'D. MMMM YYYY. H:mm',
      LLLL: 'dddd, D. MMMM YYYY. H:mm' },

    calendar: {
      sameDay: '[данас у] LT',
      nextDay: '[сутра у] LT',
      nextWeek: function nextWeek() {
        switch (this.day()) {
          case 0:
            return '[у] [недељу] [у] LT';
          case 3:
            return '[у] [среду] [у] LT';
          case 6:
            return '[у] [суботу] [у] LT';
          case 1:
          case 2:
          case 4:
          case 5:
            return '[у] dddd [у] LT';}

      },
      lastDay: '[јуче у] LT',
      lastWeek: function lastWeek() {
        var lastWeekDays = [
        '[прошле] [недеље] [у] LT',
        '[прошлог] [понедељка] [у] LT',
        '[прошлог] [уторка] [у] LT',
        '[прошле] [среде] [у] LT',
        '[прошлог] [четвртка] [у] LT',
        '[прошлог] [петка] [у] LT',
        '[прошле] [суботе] [у] LT'];

        return lastWeekDays[this.day()];
      },
      sameElse: 'L' },

    relativeTime: {
      future: 'за %s',
      past: 'пре %s',
      s: 'неколико секунди',
      ss: translator.translate,
      m: translator.translate,
      mm: translator.translate,
      h: translator.translate,
      hh: translator.translate,
      d: 'дан',
      dd: translator.translate,
      M: 'месец',
      MM: translator.translate,
      y: 'годину',
      yy: translator.translate },

    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal: '%d.',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 7 // The week that contains Jan 1st is the first week of the year.
    } });


  return srCyrl;

});

/***/ }),
/* 250 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/ss.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : siSwati [ss]
//! author : Nicolai Davies<mail@nicolai.io> : https://github.com/nicolaidavies

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var ss = moment.defineLocale('ss', {
    months: "Bhimbidvwane_Indlovana_Indlov'lenkhulu_Mabasa_Inkhwekhweti_Inhlaba_Kholwane_Ingci_Inyoni_Imphala_Lweti_Ingongoni".split(
    '_'),

    monthsShort: 'Bhi_Ina_Inu_Mab_Ink_Inh_Kho_Igc_Iny_Imp_Lwe_Igo'.split('_'),
    weekdays: 'Lisontfo_Umsombuluko_Lesibili_Lesitsatfu_Lesine_Lesihlanu_Umgcibelo'.split(
    '_'),

    weekdaysShort: 'Lis_Umb_Lsb_Les_Lsi_Lsh_Umg'.split('_'),
    weekdaysMin: 'Li_Us_Lb_Lt_Ls_Lh_Ug'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'h:mm A',
      LTS: 'h:mm:ss A',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY h:mm A',
      LLLL: 'dddd, D MMMM YYYY h:mm A' },

    calendar: {
      sameDay: '[Namuhla nga] LT',
      nextDay: '[Kusasa nga] LT',
      nextWeek: 'dddd [nga] LT',
      lastDay: '[Itolo nga] LT',
      lastWeek: 'dddd [leliphelile] [nga] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'nga %s',
      past: 'wenteka nga %s',
      s: 'emizuzwana lomcane',
      ss: '%d mzuzwana',
      m: 'umzuzu',
      mm: '%d emizuzu',
      h: 'lihora',
      hh: '%d emahora',
      d: 'lilanga',
      dd: '%d emalanga',
      M: 'inyanga',
      MM: '%d tinyanga',
      y: 'umnyaka',
      yy: '%d iminyaka' },

    meridiemParse: /ekuseni|emini|entsambama|ebusuku/,
    meridiem: function meridiem(hours, minutes, isLower) {
      if (hours < 11) {
        return 'ekuseni';
      } else if (hours < 15) {
        return 'emini';
      } else if (hours < 19) {
        return 'entsambama';
      } else {
        return 'ebusuku';
      }
    },
    meridiemHour: function meridiemHour(hour, meridiem) {
      if (hour === 12) {
        hour = 0;
      }
      if (meridiem === 'ekuseni') {
        return hour;
      } else if (meridiem === 'emini') {
        return hour >= 11 ? hour : hour + 12;
      } else if (meridiem === 'entsambama' || meridiem === 'ebusuku') {
        if (hour === 0) {
          return 0;
        }
        return hour + 12;
      }
    },
    dayOfMonthOrdinalParse: /\d{1,2}/,
    ordinal: '%d',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return ss;

});

/***/ }),
/* 251 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/sv.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Swedish [sv]
//! author : Jens Alm : https://github.com/ulmus

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var sv = moment.defineLocale('sv', {
    months: 'januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december'.split(
    '_'),

    monthsShort: 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),
    weekdays: 'söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag'.split('_'),
    weekdaysShort: 'sön_mån_tis_ons_tor_fre_lör'.split('_'),
    weekdaysMin: 'sö_må_ti_on_to_fr_lö'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'YYYY-MM-DD',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY [kl.] HH:mm',
      LLLL: 'dddd D MMMM YYYY [kl.] HH:mm',
      lll: 'D MMM YYYY HH:mm',
      llll: 'ddd D MMM YYYY HH:mm' },

    calendar: {
      sameDay: '[Idag] LT',
      nextDay: '[Imorgon] LT',
      lastDay: '[Igår] LT',
      nextWeek: '[På] dddd LT',
      lastWeek: '[I] dddd[s] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'om %s',
      past: 'för %s sedan',
      s: 'några sekunder',
      ss: '%d sekunder',
      m: 'en minut',
      mm: '%d minuter',
      h: 'en timme',
      hh: '%d timmar',
      d: 'en dag',
      dd: '%d dagar',
      M: 'en månad',
      MM: '%d månader',
      y: 'ett år',
      yy: '%d år' },

    dayOfMonthOrdinalParse: /\d{1,2}(\:e|\:a)/,
    ordinal: function ordinal(number) {
      var b = number % 10,
      output =
      ~~(number % 100 / 10) === 1 ?
      ':e' :
      b === 1 ?
      ':a' :
      b === 2 ?
      ':a' :
      b === 3 ?
      ':e' :
      ':e';
      return number + output;
    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return sv;

});

/***/ }),
/* 252 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/sw.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Swahili [sw]
//! author : Fahad Kassim : https://github.com/fadsel

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var sw = moment.defineLocale('sw', {
    months: 'Januari_Februari_Machi_Aprili_Mei_Juni_Julai_Agosti_Septemba_Oktoba_Novemba_Desemba'.split(
    '_'),

    monthsShort: 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ago_Sep_Okt_Nov_Des'.split('_'),
    weekdays: 'Jumapili_Jumatatu_Jumanne_Jumatano_Alhamisi_Ijumaa_Jumamosi'.split(
    '_'),

    weekdaysShort: 'Jpl_Jtat_Jnne_Jtan_Alh_Ijm_Jmos'.split('_'),
    weekdaysMin: 'J2_J3_J4_J5_Al_Ij_J1'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'hh:mm A',
      LTS: 'HH:mm:ss',
      L: 'DD.MM.YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd, D MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[leo saa] LT',
      nextDay: '[kesho saa] LT',
      nextWeek: '[wiki ijayo] dddd [saat] LT',
      lastDay: '[jana] LT',
      lastWeek: '[wiki iliyopita] dddd [saat] LT',
      sameElse: 'L' },

    relativeTime: {
      future: '%s baadaye',
      past: 'tokea %s',
      s: 'hivi punde',
      ss: 'sekunde %d',
      m: 'dakika moja',
      mm: 'dakika %d',
      h: 'saa limoja',
      hh: 'masaa %d',
      d: 'siku moja',
      dd: 'siku %d',
      M: 'mwezi mmoja',
      MM: 'miezi %d',
      y: 'mwaka mmoja',
      yy: 'miaka %d' },

    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 7 // The week that contains Jan 7th is the first week of the year.
    } });


  return sw;

});

/***/ }),
/* 253 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/ta.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Tamil [ta]
//! author : Arjunkumar Krishnamoorthy : https://github.com/tk120404

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var symbolMap = {
    1: '௧',
    2: '௨',
    3: '௩',
    4: '௪',
    5: '௫',
    6: '௬',
    7: '௭',
    8: '௮',
    9: '௯',
    0: '௦' },

  numberMap = {
    '௧': '1',
    '௨': '2',
    '௩': '3',
    '௪': '4',
    '௫': '5',
    '௬': '6',
    '௭': '7',
    '௮': '8',
    '௯': '9',
    '௦': '0' };


  var ta = moment.defineLocale('ta', {
    months: 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split(
    '_'),

    monthsShort: 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split(
    '_'),

    weekdays: 'ஞாயிற்றுக்கிழமை_திங்கட்கிழமை_செவ்வாய்கிழமை_புதன்கிழமை_வியாழக்கிழமை_வெள்ளிக்கிழமை_சனிக்கிழமை'.split(
    '_'),

    weekdaysShort: 'ஞாயிறு_திங்கள்_செவ்வாய்_புதன்_வியாழன்_வெள்ளி_சனி'.split(
    '_'),

    weekdaysMin: 'ஞா_தி_செ_பு_வி_வெ_ச'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY, HH:mm',
      LLLL: 'dddd, D MMMM YYYY, HH:mm' },

    calendar: {
      sameDay: '[இன்று] LT',
      nextDay: '[நாளை] LT',
      nextWeek: 'dddd, LT',
      lastDay: '[நேற்று] LT',
      lastWeek: '[கடந்த வாரம்] dddd, LT',
      sameElse: 'L' },

    relativeTime: {
      future: '%s இல்',
      past: '%s முன்',
      s: 'ஒரு சில விநாடிகள்',
      ss: '%d விநாடிகள்',
      m: 'ஒரு நிமிடம்',
      mm: '%d நிமிடங்கள்',
      h: 'ஒரு மணி நேரம்',
      hh: '%d மணி நேரம்',
      d: 'ஒரு நாள்',
      dd: '%d நாட்கள்',
      M: 'ஒரு மாதம்',
      MM: '%d மாதங்கள்',
      y: 'ஒரு வருடம்',
      yy: '%d ஆண்டுகள்' },

    dayOfMonthOrdinalParse: /\d{1,2}வது/,
    ordinal: function ordinal(number) {
      return number + 'வது';
    },
    preparse: function preparse(string) {
      return string.replace(/[௧௨௩௪௫௬௭௮௯௦]/g, function (match) {
        return numberMap[match];
      });
    },
    postformat: function postformat(string) {
      return string.replace(/\d/g, function (match) {
        return symbolMap[match];
      });
    },
    // refer http://ta.wikipedia.org/s/1er1
    meridiemParse: /யாமம்|வைகறை|காலை|நண்பகல்|எற்பாடு|மாலை/,
    meridiem: function meridiem(hour, minute, isLower) {
      if (hour < 2) {
        return ' யாமம்';
      } else if (hour < 6) {
        return ' வைகறை'; // வைகறை
      } else if (hour < 10) {
        return ' காலை'; // காலை
      } else if (hour < 14) {
        return ' நண்பகல்'; // நண்பகல்
      } else if (hour < 18) {
        return ' எற்பாடு'; // எற்பாடு
      } else if (hour < 22) {
        return ' மாலை'; // மாலை
      } else {
        return ' யாமம்';
      }
    },
    meridiemHour: function meridiemHour(hour, meridiem) {
      if (hour === 12) {
        hour = 0;
      }
      if (meridiem === 'யாமம்') {
        return hour < 2 ? hour : hour + 12;
      } else if (meridiem === 'வைகறை' || meridiem === 'காலை') {
        return hour;
      } else if (meridiem === 'நண்பகல்') {
        return hour >= 10 ? hour : hour + 12;
      } else {
        return hour + 12;
      }
    },
    week: {
      dow: 0, // Sunday is the first day of the week.
      doy: 6 // The week that contains Jan 6th is the first week of the year.
    } });


  return ta;

});

/***/ }),
/* 254 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/te.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Telugu [te]
//! author : Krishna Chaitanya Thota : https://github.com/kcthota

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var te = moment.defineLocale('te', {
    months: 'జనవరి_ఫిబ్రవరి_మార్చి_ఏప్రిల్_మే_జూన్_జులై_ఆగస్టు_సెప్టెంబర్_అక్టోబర్_నవంబర్_డిసెంబర్'.split(
    '_'),

    monthsShort: 'జన._ఫిబ్ర._మార్చి_ఏప్రి._మే_జూన్_జులై_ఆగ._సెప్._అక్టో._నవ._డిసె.'.split(
    '_'),

    monthsParseExact: true,
    weekdays: 'ఆదివారం_సోమవారం_మంగళవారం_బుధవారం_గురువారం_శుక్రవారం_శనివారం'.split(
    '_'),

    weekdaysShort: 'ఆది_సోమ_మంగళ_బుధ_గురు_శుక్ర_శని'.split('_'),
    weekdaysMin: 'ఆ_సో_మం_బు_గు_శు_శ'.split('_'),
    longDateFormat: {
      LT: 'A h:mm',
      LTS: 'A h:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY, A h:mm',
      LLLL: 'dddd, D MMMM YYYY, A h:mm' },

    calendar: {
      sameDay: '[నేడు] LT',
      nextDay: '[రేపు] LT',
      nextWeek: 'dddd, LT',
      lastDay: '[నిన్న] LT',
      lastWeek: '[గత] dddd, LT',
      sameElse: 'L' },

    relativeTime: {
      future: '%s లో',
      past: '%s క్రితం',
      s: 'కొన్ని క్షణాలు',
      ss: '%d సెకన్లు',
      m: 'ఒక నిమిషం',
      mm: '%d నిమిషాలు',
      h: 'ఒక గంట',
      hh: '%d గంటలు',
      d: 'ఒక రోజు',
      dd: '%d రోజులు',
      M: 'ఒక నెల',
      MM: '%d నెలలు',
      y: 'ఒక సంవత్సరం',
      yy: '%d సంవత్సరాలు' },

    dayOfMonthOrdinalParse: /\d{1,2}వ/,
    ordinal: '%dవ',
    meridiemParse: /రాత్రి|ఉదయం|మధ్యాహ్నం|సాయంత్రం/,
    meridiemHour: function meridiemHour(hour, meridiem) {
      if (hour === 12) {
        hour = 0;
      }
      if (meridiem === 'రాత్రి') {
        return hour < 4 ? hour : hour + 12;
      } else if (meridiem === 'ఉదయం') {
        return hour;
      } else if (meridiem === 'మధ్యాహ్నం') {
        return hour >= 10 ? hour : hour + 12;
      } else if (meridiem === 'సాయంత్రం') {
        return hour + 12;
      }
    },
    meridiem: function meridiem(hour, minute, isLower) {
      if (hour < 4) {
        return 'రాత్రి';
      } else if (hour < 10) {
        return 'ఉదయం';
      } else if (hour < 17) {
        return 'మధ్యాహ్నం';
      } else if (hour < 20) {
        return 'సాయంత్రం';
      } else {
        return 'రాత్రి';
      }
    },
    week: {
      dow: 0, // Sunday is the first day of the week.
      doy: 6 // The week that contains Jan 6th is the first week of the year.
    } });


  return te;

});

/***/ }),
/* 255 */
/*!**********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/tet.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Tetun Dili (East Timor) [tet]
//! author : Joshua Brooks : https://github.com/joshbrooks
//! author : Onorio De J. Afonso : https://github.com/marobo
//! author : Sonia Simoes : https://github.com/soniasimoes

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var tet = moment.defineLocale('tet', {
    months: 'Janeiru_Fevereiru_Marsu_Abril_Maiu_Juñu_Jullu_Agustu_Setembru_Outubru_Novembru_Dezembru'.split(
    '_'),

    monthsShort: 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),
    weekdays: 'Domingu_Segunda_Tersa_Kuarta_Kinta_Sesta_Sabadu'.split('_'),
    weekdaysShort: 'Dom_Seg_Ters_Kua_Kint_Sest_Sab'.split('_'),
    weekdaysMin: 'Do_Seg_Te_Ku_Ki_Ses_Sa'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd, D MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[Ohin iha] LT',
      nextDay: '[Aban iha] LT',
      nextWeek: 'dddd [iha] LT',
      lastDay: '[Horiseik iha] LT',
      lastWeek: 'dddd [semana kotuk] [iha] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'iha %s',
      past: '%s liuba',
      s: 'segundu balun',
      ss: 'segundu %d',
      m: 'minutu ida',
      mm: 'minutu %d',
      h: 'oras ida',
      hh: 'oras %d',
      d: 'loron ida',
      dd: 'loron %d',
      M: 'fulan ida',
      MM: 'fulan %d',
      y: 'tinan ida',
      yy: 'tinan %d' },

    dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
    ordinal: function ordinal(number) {
      var b = number % 10,
      output =
      ~~(number % 100 / 10) === 1 ?
      'th' :
      b === 1 ?
      'st' :
      b === 2 ?
      'nd' :
      b === 3 ?
      'rd' :
      'th';
      return number + output;
    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return tet;

});

/***/ }),
/* 256 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/tg.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Tajik [tg]
//! author : Orif N. Jr. : https://github.com/orif-jr

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var suffixes = {
    0: '-ум',
    1: '-ум',
    2: '-юм',
    3: '-юм',
    4: '-ум',
    5: '-ум',
    6: '-ум',
    7: '-ум',
    8: '-ум',
    9: '-ум',
    10: '-ум',
    12: '-ум',
    13: '-ум',
    20: '-ум',
    30: '-юм',
    40: '-ум',
    50: '-ум',
    60: '-ум',
    70: '-ум',
    80: '-ум',
    90: '-ум',
    100: '-ум' };


  var tg = moment.defineLocale('tg', {
    months: {
      format: 'январи_феврали_марти_апрели_майи_июни_июли_августи_сентябри_октябри_ноябри_декабри'.split(
      '_'),

      standalone: 'январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр'.split(
      '_') },


    monthsShort: 'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'),
    weekdays: 'якшанбе_душанбе_сешанбе_чоршанбе_панҷшанбе_ҷумъа_шанбе'.split(
    '_'),

    weekdaysShort: 'яшб_дшб_сшб_чшб_пшб_ҷум_шнб'.split('_'),
    weekdaysMin: 'яш_дш_сш_чш_пш_ҷм_шб'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD.MM.YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd, D MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[Имрӯз соати] LT',
      nextDay: '[Фардо соати] LT',
      lastDay: '[Дирӯз соати] LT',
      nextWeek: 'dddd[и] [ҳафтаи оянда соати] LT',
      lastWeek: 'dddd[и] [ҳафтаи гузашта соати] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'баъди %s',
      past: '%s пеш',
      s: 'якчанд сония',
      m: 'як дақиқа',
      mm: '%d дақиқа',
      h: 'як соат',
      hh: '%d соат',
      d: 'як рӯз',
      dd: '%d рӯз',
      M: 'як моҳ',
      MM: '%d моҳ',
      y: 'як сол',
      yy: '%d сол' },

    meridiemParse: /шаб|субҳ|рӯз|бегоҳ/,
    meridiemHour: function meridiemHour(hour, meridiem) {
      if (hour === 12) {
        hour = 0;
      }
      if (meridiem === 'шаб') {
        return hour < 4 ? hour : hour + 12;
      } else if (meridiem === 'субҳ') {
        return hour;
      } else if (meridiem === 'рӯз') {
        return hour >= 11 ? hour : hour + 12;
      } else if (meridiem === 'бегоҳ') {
        return hour + 12;
      }
    },
    meridiem: function meridiem(hour, minute, isLower) {
      if (hour < 4) {
        return 'шаб';
      } else if (hour < 11) {
        return 'субҳ';
      } else if (hour < 16) {
        return 'рӯз';
      } else if (hour < 19) {
        return 'бегоҳ';
      } else {
        return 'шаб';
      }
    },
    dayOfMonthOrdinalParse: /\d{1,2}-(ум|юм)/,
    ordinal: function ordinal(number) {
      var a = number % 10,
      b = number >= 100 ? 100 : null;
      return number + (suffixes[number] || suffixes[a] || suffixes[b]);
    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 7 // The week that contains Jan 1th is the first week of the year.
    } });


  return tg;

});

/***/ }),
/* 257 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/th.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Thai [th]
//! author : Kridsada Thanabulpong : https://github.com/sirn

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var th = moment.defineLocale('th', {
    months: 'มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม'.split(
    '_'),

    monthsShort: 'ม.ค._ก.พ._มี.ค._เม.ย._พ.ค._มิ.ย._ก.ค._ส.ค._ก.ย._ต.ค._พ.ย._ธ.ค.'.split(
    '_'),

    monthsParseExact: true,
    weekdays: 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์'.split('_'),
    weekdaysShort: 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัส_ศุกร์_เสาร์'.split('_'), // yes, three characters difference
    weekdaysMin: 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'H:mm',
      LTS: 'H:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY เวลา H:mm',
      LLLL: 'วันddddที่ D MMMM YYYY เวลา H:mm' },

    meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,
    isPM: function isPM(input) {
      return input === 'หลังเที่ยง';
    },
    meridiem: function meridiem(hour, minute, isLower) {
      if (hour < 12) {
        return 'ก่อนเที่ยง';
      } else {
        return 'หลังเที่ยง';
      }
    },
    calendar: {
      sameDay: '[วันนี้ เวลา] LT',
      nextDay: '[พรุ่งนี้ เวลา] LT',
      nextWeek: 'dddd[หน้า เวลา] LT',
      lastDay: '[เมื่อวานนี้ เวลา] LT',
      lastWeek: '[วัน]dddd[ที่แล้ว เวลา] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'อีก %s',
      past: '%sที่แล้ว',
      s: 'ไม่กี่วินาที',
      ss: '%d วินาที',
      m: '1 นาที',
      mm: '%d นาที',
      h: '1 ชั่วโมง',
      hh: '%d ชั่วโมง',
      d: '1 วัน',
      dd: '%d วัน',
      w: '1 สัปดาห์',
      ww: '%d สัปดาห์',
      M: '1 เดือน',
      MM: '%d เดือน',
      y: '1 ปี',
      yy: '%d ปี' } });



  return th;

});

/***/ }),
/* 258 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/tk.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Turkmen [tk]
//! author : Atamyrat Abdyrahmanov : https://github.com/atamyratabdy

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var suffixes = {
    1: "'inji",
    5: "'inji",
    8: "'inji",
    70: "'inji",
    80: "'inji",
    2: "'nji",
    7: "'nji",
    20: "'nji",
    50: "'nji",
    3: "'ünji",
    4: "'ünji",
    100: "'ünji",
    6: "'njy",
    9: "'unjy",
    10: "'unjy",
    30: "'unjy",
    60: "'ynjy",
    90: "'ynjy" };


  var tk = moment.defineLocale('tk', {
    months: 'Ýanwar_Fewral_Mart_Aprel_Maý_Iýun_Iýul_Awgust_Sentýabr_Oktýabr_Noýabr_Dekabr'.split(
    '_'),

    monthsShort: 'Ýan_Few_Mar_Apr_Maý_Iýn_Iýl_Awg_Sen_Okt_Noý_Dek'.split('_'),
    weekdays: 'Ýekşenbe_Duşenbe_Sişenbe_Çarşenbe_Penşenbe_Anna_Şenbe'.split(
    '_'),

    weekdaysShort: 'Ýek_Duş_Siş_Çar_Pen_Ann_Şen'.split('_'),
    weekdaysMin: 'Ýk_Dş_Sş_Çr_Pn_An_Şn'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD.MM.YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd, D MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[bugün sagat] LT',
      nextDay: '[ertir sagat] LT',
      nextWeek: '[indiki] dddd [sagat] LT',
      lastDay: '[düýn] LT',
      lastWeek: '[geçen] dddd [sagat] LT',
      sameElse: 'L' },

    relativeTime: {
      future: '%s soň',
      past: '%s öň',
      s: 'birnäçe sekunt',
      m: 'bir minut',
      mm: '%d minut',
      h: 'bir sagat',
      hh: '%d sagat',
      d: 'bir gün',
      dd: '%d gün',
      M: 'bir aý',
      MM: '%d aý',
      y: 'bir ýyl',
      yy: '%d ýyl' },

    ordinal: function ordinal(number, period) {
      switch (period) {
        case 'd':
        case 'D':
        case 'Do':
        case 'DD':
          return number;
        default:
          if (number === 0) {
            // special case for zero
            return number + "'unjy";
          }
          var a = number % 10,
          b = number % 100 - a,
          c = number >= 100 ? 100 : null;
          return number + (suffixes[a] || suffixes[b] || suffixes[c]);}

    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 7 // The week that contains Jan 7th is the first week of the year.
    } });


  return tk;

});

/***/ }),
/* 259 */
/*!************************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/tl-ph.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Tagalog (Philippines) [tl-ph]
//! author : Dan Hagman : https://github.com/hagmandan

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var tlPh = moment.defineLocale('tl-ph', {
    months: 'Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre'.split(
    '_'),

    monthsShort: 'Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis'.split('_'),
    weekdays: 'Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado'.split(
    '_'),

    weekdaysShort: 'Lin_Lun_Mar_Miy_Huw_Biy_Sab'.split('_'),
    weekdaysMin: 'Li_Lu_Ma_Mi_Hu_Bi_Sab'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'MM/D/YYYY',
      LL: 'MMMM D, YYYY',
      LLL: 'MMMM D, YYYY HH:mm',
      LLLL: 'dddd, MMMM DD, YYYY HH:mm' },

    calendar: {
      sameDay: 'LT [ngayong araw]',
      nextDay: '[Bukas ng] LT',
      nextWeek: 'LT [sa susunod na] dddd',
      lastDay: 'LT [kahapon]',
      lastWeek: 'LT [noong nakaraang] dddd',
      sameElse: 'L' },

    relativeTime: {
      future: 'sa loob ng %s',
      past: '%s ang nakalipas',
      s: 'ilang segundo',
      ss: '%d segundo',
      m: 'isang minuto',
      mm: '%d minuto',
      h: 'isang oras',
      hh: '%d oras',
      d: 'isang araw',
      dd: '%d araw',
      M: 'isang buwan',
      MM: '%d buwan',
      y: 'isang taon',
      yy: '%d taon' },

    dayOfMonthOrdinalParse: /\d{1,2}/,
    ordinal: function ordinal(number) {
      return number;
    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return tlPh;

});

/***/ }),
/* 260 */
/*!**********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/tlh.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Klingon [tlh]
//! author : Dominika Kruk : https://github.com/amaranthrose

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var numbersNouns = 'pagh_wa’_cha’_wej_loS_vagh_jav_Soch_chorgh_Hut'.split('_');

  function translateFuture(output) {
    var time = output;
    time =
    output.indexOf('jaj') !== -1 ?
    time.slice(0, -3) + 'leS' :
    output.indexOf('jar') !== -1 ?
    time.slice(0, -3) + 'waQ' :
    output.indexOf('DIS') !== -1 ?
    time.slice(0, -3) + 'nem' :
    time + ' pIq';
    return time;
  }

  function translatePast(output) {
    var time = output;
    time =
    output.indexOf('jaj') !== -1 ?
    time.slice(0, -3) + 'Hu’' :
    output.indexOf('jar') !== -1 ?
    time.slice(0, -3) + 'wen' :
    output.indexOf('DIS') !== -1 ?
    time.slice(0, -3) + 'ben' :
    time + ' ret';
    return time;
  }

  function translate(number, withoutSuffix, string, isFuture) {
    var numberNoun = numberAsNoun(number);
    switch (string) {
      case 'ss':
        return numberNoun + ' lup';
      case 'mm':
        return numberNoun + ' tup';
      case 'hh':
        return numberNoun + ' rep';
      case 'dd':
        return numberNoun + ' jaj';
      case 'MM':
        return numberNoun + ' jar';
      case 'yy':
        return numberNoun + ' DIS';}

  }

  function numberAsNoun(number) {
    var hundred = Math.floor(number % 1000 / 100),
    ten = Math.floor(number % 100 / 10),
    one = number % 10,
    word = '';
    if (hundred > 0) {
      word += numbersNouns[hundred] + 'vatlh';
    }
    if (ten > 0) {
      word += (word !== '' ? ' ' : '') + numbersNouns[ten] + 'maH';
    }
    if (one > 0) {
      word += (word !== '' ? ' ' : '') + numbersNouns[one];
    }
    return word === '' ? 'pagh' : word;
  }

  var tlh = moment.defineLocale('tlh', {
    months: 'tera’ jar wa’_tera’ jar cha’_tera’ jar wej_tera’ jar loS_tera’ jar vagh_tera’ jar jav_tera’ jar Soch_tera’ jar chorgh_tera’ jar Hut_tera’ jar wa’maH_tera’ jar wa’maH wa’_tera’ jar wa’maH cha’'.split(
    '_'),

    monthsShort: 'jar wa’_jar cha’_jar wej_jar loS_jar vagh_jar jav_jar Soch_jar chorgh_jar Hut_jar wa’maH_jar wa’maH wa’_jar wa’maH cha’'.split(
    '_'),

    monthsParseExact: true,
    weekdays: 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split(
    '_'),

    weekdaysShort: 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split(
    '_'),

    weekdaysMin: 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split(
    '_'),

    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD.MM.YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd, D MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[DaHjaj] LT',
      nextDay: '[wa’leS] LT',
      nextWeek: 'LLL',
      lastDay: '[wa’Hu’] LT',
      lastWeek: 'LLL',
      sameElse: 'L' },

    relativeTime: {
      future: translateFuture,
      past: translatePast,
      s: 'puS lup',
      ss: translate,
      m: 'wa’ tup',
      mm: translate,
      h: 'wa’ rep',
      hh: translate,
      d: 'wa’ jaj',
      dd: translate,
      M: 'wa’ jar',
      MM: translate,
      y: 'wa’ DIS',
      yy: translate },

    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal: '%d.',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return tlh;

});

/***/ }),
/* 261 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/tr.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Turkish [tr]
//! authors : Erhan Gundogan : https://github.com/erhangundogan,
//!           Burak Yiğit Kaya: https://github.com/BYK

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var suffixes = {
    1: "'inci",
    5: "'inci",
    8: "'inci",
    70: "'inci",
    80: "'inci",
    2: "'nci",
    7: "'nci",
    20: "'nci",
    50: "'nci",
    3: "'üncü",
    4: "'üncü",
    100: "'üncü",
    6: "'ncı",
    9: "'uncu",
    10: "'uncu",
    30: "'uncu",
    60: "'ıncı",
    90: "'ıncı" };


  var tr = moment.defineLocale('tr', {
    months: 'Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık'.split(
    '_'),

    monthsShort: 'Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara'.split('_'),
    weekdays: 'Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi'.split(
    '_'),

    weekdaysShort: 'Paz_Pts_Sal_Çar_Per_Cum_Cts'.split('_'),
    weekdaysMin: 'Pz_Pt_Sa_Ça_Pe_Cu_Ct'.split('_'),
    meridiem: function meridiem(hours, minutes, isLower) {
      if (hours < 12) {
        return isLower ? 'öö' : 'ÖÖ';
      } else {
        return isLower ? 'ös' : 'ÖS';
      }
    },
    meridiemParse: /öö|ÖÖ|ös|ÖS/,
    isPM: function isPM(input) {
      return input === 'ös' || input === 'ÖS';
    },
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD.MM.YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd, D MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[bugün saat] LT',
      nextDay: '[yarın saat] LT',
      nextWeek: '[gelecek] dddd [saat] LT',
      lastDay: '[dün] LT',
      lastWeek: '[geçen] dddd [saat] LT',
      sameElse: 'L' },

    relativeTime: {
      future: '%s sonra',
      past: '%s önce',
      s: 'birkaç saniye',
      ss: '%d saniye',
      m: 'bir dakika',
      mm: '%d dakika',
      h: 'bir saat',
      hh: '%d saat',
      d: 'bir gün',
      dd: '%d gün',
      w: 'bir hafta',
      ww: '%d hafta',
      M: 'bir ay',
      MM: '%d ay',
      y: 'bir yıl',
      yy: '%d yıl' },

    ordinal: function ordinal(number, period) {
      switch (period) {
        case 'd':
        case 'D':
        case 'Do':
        case 'DD':
          return number;
        default:
          if (number === 0) {
            // special case for zero
            return number + "'ıncı";
          }
          var a = number % 10,
          b = number % 100 - a,
          c = number >= 100 ? 100 : null;
          return number + (suffixes[a] || suffixes[b] || suffixes[c]);}

    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 7 // The week that contains Jan 7th is the first week of the year.
    } });


  return tr;

});

/***/ }),
/* 262 */
/*!**********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/tzl.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Talossan [tzl]
//! author : Robin van der Vliet : https://github.com/robin0van0der0v
//! author : Iustì Canun

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  // After the year there should be a slash and the amount of years since December 26, 1979 in Roman numerals.
  // This is currently too difficult (maybe even impossible) to add.
  var tzl = moment.defineLocale('tzl', {
    months: 'Januar_Fevraglh_Març_Avrïu_Mai_Gün_Julia_Guscht_Setemvar_Listopäts_Noemvar_Zecemvar'.split(
    '_'),

    monthsShort: 'Jan_Fev_Mar_Avr_Mai_Gün_Jul_Gus_Set_Lis_Noe_Zec'.split('_'),
    weekdays: 'Súladi_Lúneçi_Maitzi_Márcuri_Xhúadi_Viénerçi_Sáturi'.split('_'),
    weekdaysShort: 'Súl_Lún_Mai_Már_Xhú_Vié_Sát'.split('_'),
    weekdaysMin: 'Sú_Lú_Ma_Má_Xh_Vi_Sá'.split('_'),
    longDateFormat: {
      LT: 'HH.mm',
      LTS: 'HH.mm.ss',
      L: 'DD.MM.YYYY',
      LL: 'D. MMMM [dallas] YYYY',
      LLL: 'D. MMMM [dallas] YYYY HH.mm',
      LLLL: 'dddd, [li] D. MMMM [dallas] YYYY HH.mm' },

    meridiemParse: /d\'o|d\'a/i,
    isPM: function isPM(input) {
      return "d'o" === input.toLowerCase();
    },
    meridiem: function meridiem(hours, minutes, isLower) {
      if (hours > 11) {
        return isLower ? "d'o" : "D'O";
      } else {
        return isLower ? "d'a" : "D'A";
      }
    },
    calendar: {
      sameDay: '[oxhi à] LT',
      nextDay: '[demà à] LT',
      nextWeek: 'dddd [à] LT',
      lastDay: '[ieiri à] LT',
      lastWeek: '[sür el] dddd [lasteu à] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'osprei %s',
      past: 'ja%s',
      s: processRelativeTime,
      ss: processRelativeTime,
      m: processRelativeTime,
      mm: processRelativeTime,
      h: processRelativeTime,
      hh: processRelativeTime,
      d: processRelativeTime,
      dd: processRelativeTime,
      M: processRelativeTime,
      MM: processRelativeTime,
      y: processRelativeTime,
      yy: processRelativeTime },

    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal: '%d.',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  function processRelativeTime(number, withoutSuffix, key, isFuture) {
    var format = {
      s: ['viensas secunds', "'iensas secunds"],
      ss: [number + ' secunds', '' + number + ' secunds'],
      m: ["'n míut", "'iens míut"],
      mm: [number + ' míuts', '' + number + ' míuts'],
      h: ["'n þora", "'iensa þora"],
      hh: [number + ' þoras', '' + number + ' þoras'],
      d: ["'n ziua", "'iensa ziua"],
      dd: [number + ' ziuas', '' + number + ' ziuas'],
      M: ["'n mes", "'iens mes"],
      MM: [number + ' mesen', '' + number + ' mesen'],
      y: ["'n ar", "'iens ar"],
      yy: [number + ' ars', '' + number + ' ars'] };

    return isFuture ?
    format[key][0] :
    withoutSuffix ?
    format[key][0] :
    format[key][1];
  }

  return tzl;

});

/***/ }),
/* 263 */
/*!**********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/tzm.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Central Atlas Tamazight [tzm]
//! author : Abdel Said : https://github.com/abdelsaid

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var tzm = moment.defineLocale('tzm', {
    months: 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split(
    '_'),

    monthsShort: 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split(
    '_'),

    weekdays: 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
    weekdaysShort: 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
    weekdaysMin: 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd D MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[ⴰⵙⴷⵅ ⴴ] LT',
      nextDay: '[ⴰⵙⴽⴰ ⴴ] LT',
      nextWeek: 'dddd [ⴴ] LT',
      lastDay: '[ⴰⵚⴰⵏⵜ ⴴ] LT',
      lastWeek: 'dddd [ⴴ] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'ⴷⴰⴷⵅ ⵙ ⵢⴰⵏ %s',
      past: 'ⵢⴰⵏ %s',
      s: 'ⵉⵎⵉⴽ',
      ss: '%d ⵉⵎⵉⴽ',
      m: 'ⵎⵉⵏⵓⴺ',
      mm: '%d ⵎⵉⵏⵓⴺ',
      h: 'ⵙⴰⵄⴰ',
      hh: '%d ⵜⴰⵙⵙⴰⵄⵉⵏ',
      d: 'ⴰⵙⵙ',
      dd: '%d oⵙⵙⴰⵏ',
      M: 'ⴰⵢoⵓⵔ',
      MM: '%d ⵉⵢⵢⵉⵔⵏ',
      y: 'ⴰⵙⴳⴰⵙ',
      yy: '%d ⵉⵙⴳⴰⵙⵏ' },

    week: {
      dow: 6, // Saturday is the first day of the week.
      doy: 12 // The week that contains Jan 12th is the first week of the year.
    } });


  return tzm;

});

/***/ }),
/* 264 */
/*!***************************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/tzm-latn.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Central Atlas Tamazight Latin [tzm-latn]
//! author : Abdel Said : https://github.com/abdelsaid

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var tzmLatn = moment.defineLocale('tzm-latn', {
    months: 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split(
    '_'),

    monthsShort: 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split(
    '_'),

    weekdays: 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
    weekdaysShort: 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
    weekdaysMin: 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd D MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[asdkh g] LT',
      nextDay: '[aska g] LT',
      nextWeek: 'dddd [g] LT',
      lastDay: '[assant g] LT',
      lastWeek: 'dddd [g] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'dadkh s yan %s',
      past: 'yan %s',
      s: 'imik',
      ss: '%d imik',
      m: 'minuḍ',
      mm: '%d minuḍ',
      h: 'saɛa',
      hh: '%d tassaɛin',
      d: 'ass',
      dd: '%d ossan',
      M: 'ayowr',
      MM: '%d iyyirn',
      y: 'asgas',
      yy: '%d isgasn' },

    week: {
      dow: 6, // Saturday is the first day of the week.
      doy: 12 // The week that contains Jan 12th is the first week of the year.
    } });


  return tzmLatn;

});

/***/ }),
/* 265 */
/*!************************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/ug-cn.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Uyghur (China) [ug-cn]
//! author: boyaq : https://github.com/boyaq

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var ugCn = moment.defineLocale('ug-cn', {
    months: 'يانۋار_فېۋرال_مارت_ئاپرېل_ماي_ئىيۇن_ئىيۇل_ئاۋغۇست_سېنتەبىر_ئۆكتەبىر_نويابىر_دېكابىر'.split(
    '_'),

    monthsShort: 'يانۋار_فېۋرال_مارت_ئاپرېل_ماي_ئىيۇن_ئىيۇل_ئاۋغۇست_سېنتەبىر_ئۆكتەبىر_نويابىر_دېكابىر'.split(
    '_'),

    weekdays: 'يەكشەنبە_دۈشەنبە_سەيشەنبە_چارشەنبە_پەيشەنبە_جۈمە_شەنبە'.split(
    '_'),

    weekdaysShort: 'يە_دۈ_سە_چا_پە_جۈ_شە'.split('_'),
    weekdaysMin: 'يە_دۈ_سە_چا_پە_جۈ_شە'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'YYYY-MM-DD',
      LL: 'YYYY-يىلىM-ئاينىڭD-كۈنى',
      LLL: 'YYYY-يىلىM-ئاينىڭD-كۈنى، HH:mm',
      LLLL: 'dddd، YYYY-يىلىM-ئاينىڭD-كۈنى، HH:mm' },

    meridiemParse: /يېرىم كېچە|سەھەر|چۈشتىن بۇرۇن|چۈش|چۈشتىن كېيىن|كەچ/,
    meridiemHour: function meridiemHour(hour, meridiem) {
      if (hour === 12) {
        hour = 0;
      }
      if (
      meridiem === 'يېرىم كېچە' ||
      meridiem === 'سەھەر' ||
      meridiem === 'چۈشتىن بۇرۇن')
      {
        return hour;
      } else if (meridiem === 'چۈشتىن كېيىن' || meridiem === 'كەچ') {
        return hour + 12;
      } else {
        return hour >= 11 ? hour : hour + 12;
      }
    },
    meridiem: function meridiem(hour, minute, isLower) {
      var hm = hour * 100 + minute;
      if (hm < 600) {
        return 'يېرىم كېچە';
      } else if (hm < 900) {
        return 'سەھەر';
      } else if (hm < 1130) {
        return 'چۈشتىن بۇرۇن';
      } else if (hm < 1230) {
        return 'چۈش';
      } else if (hm < 1800) {
        return 'چۈشتىن كېيىن';
      } else {
        return 'كەچ';
      }
    },
    calendar: {
      sameDay: '[بۈگۈن سائەت] LT',
      nextDay: '[ئەتە سائەت] LT',
      nextWeek: '[كېلەركى] dddd [سائەت] LT',
      lastDay: '[تۆنۈگۈن] LT',
      lastWeek: '[ئالدىنقى] dddd [سائەت] LT',
      sameElse: 'L' },

    relativeTime: {
      future: '%s كېيىن',
      past: '%s بۇرۇن',
      s: 'نەچچە سېكونت',
      ss: '%d سېكونت',
      m: 'بىر مىنۇت',
      mm: '%d مىنۇت',
      h: 'بىر سائەت',
      hh: '%d سائەت',
      d: 'بىر كۈن',
      dd: '%d كۈن',
      M: 'بىر ئاي',
      MM: '%d ئاي',
      y: 'بىر يىل',
      yy: '%d يىل' },


    dayOfMonthOrdinalParse: /\d{1,2}(-كۈنى|-ئاي|-ھەپتە)/,
    ordinal: function ordinal(number, period) {
      switch (period) {
        case 'd':
        case 'D':
        case 'DDD':
          return number + '-كۈنى';
        case 'w':
        case 'W':
          return number + '-ھەپتە';
        default:
          return number;}

    },
    preparse: function preparse(string) {
      return string.replace(/،/g, ',');
    },
    postformat: function postformat(string) {
      return string.replace(/,/g, '،');
    },
    week: {
      // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效
      dow: 1, // Monday is the first day of the week.
      doy: 7 // The week that contains Jan 1st is the first week of the year.
    } });


  return ugCn;

});

/***/ }),
/* 266 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/uk.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Ukrainian [uk]
//! author : zemlanin : https://github.com/zemlanin
//! Author : Menelion Elensúle : https://github.com/Oire

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  function plural(word, num) {
    var forms = word.split('_');
    return num % 10 === 1 && num % 100 !== 11 ?
    forms[0] :
    num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ?
    forms[1] :
    forms[2];
  }
  function relativeTimeWithPlural(number, withoutSuffix, key) {
    var format = {
      ss: withoutSuffix ? 'секунда_секунди_секунд' : 'секунду_секунди_секунд',
      mm: withoutSuffix ? 'хвилина_хвилини_хвилин' : 'хвилину_хвилини_хвилин',
      hh: withoutSuffix ? 'година_години_годин' : 'годину_години_годин',
      dd: 'день_дні_днів',
      MM: 'місяць_місяці_місяців',
      yy: 'рік_роки_років' };

    if (key === 'm') {
      return withoutSuffix ? 'хвилина' : 'хвилину';
    } else if (key === 'h') {
      return withoutSuffix ? 'година' : 'годину';
    } else {
      return number + ' ' + plural(format[key], +number);
    }
  }
  function weekdaysCaseReplace(m, format) {
    var weekdays = {
      nominative: 'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split(
      '_'),

      accusative: 'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split(
      '_'),

      genitive: 'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split(
      '_') },


    nounCase;

    if (m === true) {
      return weekdays['nominative'].
      slice(1, 7).
      concat(weekdays['nominative'].slice(0, 1));
    }
    if (!m) {
      return weekdays['nominative'];
    }

    nounCase = /(\[[ВвУу]\]) ?dddd/.test(format) ?
    'accusative' :
    /\[?(?:минулої|наступної)? ?\] ?dddd/.test(format) ?
    'genitive' :
    'nominative';
    return weekdays[nounCase][m.day()];
  }
  function processHoursFunction(str) {
    return function () {
      return str + 'о' + (this.hours() === 11 ? 'б' : '') + '] LT';
    };
  }

  var uk = moment.defineLocale('uk', {
    months: {
      format: 'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split(
      '_'),

      standalone: 'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split(
      '_') },


    monthsShort: 'січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд'.split(
    '_'),

    weekdays: weekdaysCaseReplace,
    weekdaysShort: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
    weekdaysMin: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD.MM.YYYY',
      LL: 'D MMMM YYYY р.',
      LLL: 'D MMMM YYYY р., HH:mm',
      LLLL: 'dddd, D MMMM YYYY р., HH:mm' },

    calendar: {
      sameDay: processHoursFunction('[Сьогодні '),
      nextDay: processHoursFunction('[Завтра '),
      lastDay: processHoursFunction('[Вчора '),
      nextWeek: processHoursFunction('[У] dddd ['),
      lastWeek: function lastWeek() {
        switch (this.day()) {
          case 0:
          case 3:
          case 5:
          case 6:
            return processHoursFunction('[Минулої] dddd [').call(this);
          case 1:
          case 2:
          case 4:
            return processHoursFunction('[Минулого] dddd [').call(this);}

      },
      sameElse: 'L' },

    relativeTime: {
      future: 'за %s',
      past: '%s тому',
      s: 'декілька секунд',
      ss: relativeTimeWithPlural,
      m: relativeTimeWithPlural,
      mm: relativeTimeWithPlural,
      h: 'годину',
      hh: relativeTimeWithPlural,
      d: 'день',
      dd: relativeTimeWithPlural,
      M: 'місяць',
      MM: relativeTimeWithPlural,
      y: 'рік',
      yy: relativeTimeWithPlural },

    // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason
    meridiemParse: /ночі|ранку|дня|вечора/,
    isPM: function isPM(input) {
      return /^(дня|вечора)$/.test(input);
    },
    meridiem: function meridiem(hour, minute, isLower) {
      if (hour < 4) {
        return 'ночі';
      } else if (hour < 12) {
        return 'ранку';
      } else if (hour < 17) {
        return 'дня';
      } else {
        return 'вечора';
      }
    },
    dayOfMonthOrdinalParse: /\d{1,2}-(й|го)/,
    ordinal: function ordinal(number, period) {
      switch (period) {
        case 'M':
        case 'd':
        case 'DDD':
        case 'w':
        case 'W':
          return number + '-й';
        case 'D':
          return number + '-го';
        default:
          return number;}

    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 7 // The week that contains Jan 7th is the first week of the year.
    } });


  return uk;

});

/***/ }),
/* 267 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/ur.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Urdu [ur]
//! author : Sawood Alam : https://github.com/ibnesayeed
//! author : Zack : https://github.com/ZackVision

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var months = [
  'جنوری',
  'فروری',
  'مارچ',
  'اپریل',
  'مئی',
  'جون',
  'جولائی',
  'اگست',
  'ستمبر',
  'اکتوبر',
  'نومبر',
  'دسمبر'],

  days = ['اتوار', 'پیر', 'منگل', 'بدھ', 'جمعرات', 'جمعہ', 'ہفتہ'];

  var ur = moment.defineLocale('ur', {
    months: months,
    monthsShort: months,
    weekdays: days,
    weekdaysShort: days,
    weekdaysMin: days,
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd، D MMMM YYYY HH:mm' },

    meridiemParse: /صبح|شام/,
    isPM: function isPM(input) {
      return 'شام' === input;
    },
    meridiem: function meridiem(hour, minute, isLower) {
      if (hour < 12) {
        return 'صبح';
      }
      return 'شام';
    },
    calendar: {
      sameDay: '[آج بوقت] LT',
      nextDay: '[کل بوقت] LT',
      nextWeek: 'dddd [بوقت] LT',
      lastDay: '[گذشتہ روز بوقت] LT',
      lastWeek: '[گذشتہ] dddd [بوقت] LT',
      sameElse: 'L' },

    relativeTime: {
      future: '%s بعد',
      past: '%s قبل',
      s: 'چند سیکنڈ',
      ss: '%d سیکنڈ',
      m: 'ایک منٹ',
      mm: '%d منٹ',
      h: 'ایک گھنٹہ',
      hh: '%d گھنٹے',
      d: 'ایک دن',
      dd: '%d دن',
      M: 'ایک ماہ',
      MM: '%d ماہ',
      y: 'ایک سال',
      yy: '%d سال' },

    preparse: function preparse(string) {
      return string.replace(/،/g, ',');
    },
    postformat: function postformat(string) {
      return string.replace(/,/g, '،');
    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return ur;

});

/***/ }),
/* 268 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/uz.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Uzbek [uz]
//! author : Sardor Muminov : https://github.com/muminoff

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var uz = moment.defineLocale('uz', {
    months: 'январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр'.split(
    '_'),

    monthsShort: 'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'),
    weekdays: 'Якшанба_Душанба_Сешанба_Чоршанба_Пайшанба_Жума_Шанба'.split('_'),
    weekdaysShort: 'Якш_Душ_Сеш_Чор_Пай_Жум_Шан'.split('_'),
    weekdaysMin: 'Як_Ду_Се_Чо_Па_Жу_Ша'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'D MMMM YYYY, dddd HH:mm' },

    calendar: {
      sameDay: '[Бугун соат] LT [да]',
      nextDay: '[Эртага] LT [да]',
      nextWeek: 'dddd [куни соат] LT [да]',
      lastDay: '[Кеча соат] LT [да]',
      lastWeek: '[Утган] dddd [куни соат] LT [да]',
      sameElse: 'L' },

    relativeTime: {
      future: 'Якин %s ичида',
      past: 'Бир неча %s олдин',
      s: 'фурсат',
      ss: '%d фурсат',
      m: 'бир дакика',
      mm: '%d дакика',
      h: 'бир соат',
      hh: '%d соат',
      d: 'бир кун',
      dd: '%d кун',
      M: 'бир ой',
      MM: '%d ой',
      y: 'бир йил',
      yy: '%d йил' },

    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 7 // The week that contains Jan 4th is the first week of the year.
    } });


  return uz;

});

/***/ }),
/* 269 */
/*!**************************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/uz-latn.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Uzbek Latin [uz-latn]
//! author : Rasulbek Mirzayev : github.com/Rasulbeeek

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var uzLatn = moment.defineLocale('uz-latn', {
    months: 'Yanvar_Fevral_Mart_Aprel_May_Iyun_Iyul_Avgust_Sentabr_Oktabr_Noyabr_Dekabr'.split(
    '_'),

    monthsShort: 'Yan_Fev_Mar_Apr_May_Iyun_Iyul_Avg_Sen_Okt_Noy_Dek'.split('_'),
    weekdays: 'Yakshanba_Dushanba_Seshanba_Chorshanba_Payshanba_Juma_Shanba'.split(
    '_'),

    weekdaysShort: 'Yak_Dush_Sesh_Chor_Pay_Jum_Shan'.split('_'),
    weekdaysMin: 'Ya_Du_Se_Cho_Pa_Ju_Sha'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'D MMMM YYYY, dddd HH:mm' },

    calendar: {
      sameDay: '[Bugun soat] LT [da]',
      nextDay: '[Ertaga] LT [da]',
      nextWeek: 'dddd [kuni soat] LT [da]',
      lastDay: '[Kecha soat] LT [da]',
      lastWeek: "[O'tgan] dddd [kuni soat] LT [da]",
      sameElse: 'L' },

    relativeTime: {
      future: 'Yaqin %s ichida',
      past: 'Bir necha %s oldin',
      s: 'soniya',
      ss: '%d soniya',
      m: 'bir daqiqa',
      mm: '%d daqiqa',
      h: 'bir soat',
      hh: '%d soat',
      d: 'bir kun',
      dd: '%d kun',
      M: 'bir oy',
      MM: '%d oy',
      y: 'bir yil',
      yy: '%d yil' },

    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 7 // The week that contains Jan 7th is the first week of the year.
    } });


  return uzLatn;

});

/***/ }),
/* 270 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/vi.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Vietnamese [vi]
//! author : Bang Nguyen : https://github.com/bangnk
//! author : Chien Kira : https://github.com/chienkira

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var vi = moment.defineLocale('vi', {
    months: 'tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12'.split(
    '_'),

    monthsShort: 'Thg 01_Thg 02_Thg 03_Thg 04_Thg 05_Thg 06_Thg 07_Thg 08_Thg 09_Thg 10_Thg 11_Thg 12'.split(
    '_'),

    monthsParseExact: true,
    weekdays: 'chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy'.split(
    '_'),

    weekdaysShort: 'CN_T2_T3_T4_T5_T6_T7'.split('_'),
    weekdaysMin: 'CN_T2_T3_T4_T5_T6_T7'.split('_'),
    weekdaysParseExact: true,
    meridiemParse: /sa|ch/i,
    isPM: function isPM(input) {
      return /^ch$/i.test(input);
    },
    meridiem: function meridiem(hours, minutes, isLower) {
      if (hours < 12) {
        return isLower ? 'sa' : 'SA';
      } else {
        return isLower ? 'ch' : 'CH';
      }
    },
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM [năm] YYYY',
      LLL: 'D MMMM [năm] YYYY HH:mm',
      LLLL: 'dddd, D MMMM [năm] YYYY HH:mm',
      l: 'DD/M/YYYY',
      ll: 'D MMM YYYY',
      lll: 'D MMM YYYY HH:mm',
      llll: 'ddd, D MMM YYYY HH:mm' },

    calendar: {
      sameDay: '[Hôm nay lúc] LT',
      nextDay: '[Ngày mai lúc] LT',
      nextWeek: 'dddd [tuần tới lúc] LT',
      lastDay: '[Hôm qua lúc] LT',
      lastWeek: 'dddd [tuần trước lúc] LT',
      sameElse: 'L' },

    relativeTime: {
      future: '%s tới',
      past: '%s trước',
      s: 'vài giây',
      ss: '%d giây',
      m: 'một phút',
      mm: '%d phút',
      h: 'một giờ',
      hh: '%d giờ',
      d: 'một ngày',
      dd: '%d ngày',
      w: 'một tuần',
      ww: '%d tuần',
      M: 'một tháng',
      MM: '%d tháng',
      y: 'một năm',
      yy: '%d năm' },

    dayOfMonthOrdinalParse: /\d{1,2}/,
    ordinal: function ordinal(number) {
      return number;
    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return vi;

});

/***/ }),
/* 271 */
/*!***************************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/x-pseudo.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Pseudo [x-pseudo]
//! author : Andrew Hood : https://github.com/andrewhood125

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var xPseudo = moment.defineLocale('x-pseudo', {
    months: 'J~áñúá~rý_F~ébrú~árý_~Márc~h_Áp~ríl_~Máý_~Júñé~_Júl~ý_Áú~gúst~_Sép~témb~ér_Ó~ctób~ér_Ñ~óvém~bér_~Décé~mbér'.split(
    '_'),

    monthsShort: 'J~áñ_~Féb_~Már_~Ápr_~Máý_~Júñ_~Júl_~Áúg_~Sép_~Óct_~Ñóv_~Déc'.split(
    '_'),

    monthsParseExact: true,
    weekdays: 'S~úñdá~ý_Mó~ñdáý~_Túé~sdáý~_Wéd~ñésd~áý_T~húrs~dáý_~Fríd~áý_S~átúr~dáý'.split(
    '_'),

    weekdaysShort: 'S~úñ_~Móñ_~Túé_~Wéd_~Thú_~Frí_~Sát'.split('_'),
    weekdaysMin: 'S~ú_Mó~_Tú_~Wé_T~h_Fr~_Sá'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'HH:mm',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd, D MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[T~ódá~ý át] LT',
      nextDay: '[T~ómó~rró~w át] LT',
      nextWeek: 'dddd [át] LT',
      lastDay: '[Ý~ést~érdá~ý át] LT',
      lastWeek: '[L~ást] dddd [át] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'í~ñ %s',
      past: '%s á~gó',
      s: 'á ~féw ~sécó~ñds',
      ss: '%d s~écóñ~ds',
      m: 'á ~míñ~úté',
      mm: '%d m~íñú~tés',
      h: 'á~ñ hó~úr',
      hh: '%d h~óúrs',
      d: 'á ~dáý',
      dd: '%d d~áýs',
      M: 'á ~móñ~th',
      MM: '%d m~óñt~hs',
      y: 'á ~ýéár',
      yy: '%d ý~éárs' },

    dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
    ordinal: function ordinal(number) {
      var b = number % 10,
      output =
      ~~(number % 100 / 10) === 1 ?
      'th' :
      b === 1 ?
      'st' :
      b === 2 ?
      'nd' :
      b === 3 ?
      'rd' :
      'th';
      return number + output;
    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return xPseudo;

});

/***/ }),
/* 272 */
/*!*********************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/yo.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Yoruba Nigeria [yo]
//! author : Atolagbe Abisoye : https://github.com/andela-batolagbe

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var yo = moment.defineLocale('yo', {
    months: 'Sẹ́rẹ́_Èrèlè_Ẹrẹ̀nà_Ìgbé_Èbibi_Òkùdu_Agẹmo_Ògún_Owewe_Ọ̀wàrà_Bélú_Ọ̀pẹ̀̀'.split(
    '_'),

    monthsShort: 'Sẹ́r_Èrl_Ẹrn_Ìgb_Èbi_Òkù_Agẹ_Ògú_Owe_Ọ̀wà_Bél_Ọ̀pẹ̀̀'.split('_'),
    weekdays: 'Àìkú_Ajé_Ìsẹ́gun_Ọjọ́rú_Ọjọ́bọ_Ẹtì_Àbámẹ́ta'.split('_'),
    weekdaysShort: 'Àìk_Ajé_Ìsẹ́_Ọjr_Ọjb_Ẹtì_Àbá'.split('_'),
    weekdaysMin: 'Àì_Aj_Ìs_Ọr_Ọb_Ẹt_Àb'.split('_'),
    longDateFormat: {
      LT: 'h:mm A',
      LTS: 'h:mm:ss A',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY h:mm A',
      LLLL: 'dddd, D MMMM YYYY h:mm A' },

    calendar: {
      sameDay: '[Ònì ni] LT',
      nextDay: '[Ọ̀la ni] LT',
      nextWeek: "dddd [Ọsẹ̀ tón'bọ] [ni] LT",
      lastDay: '[Àna ni] LT',
      lastWeek: 'dddd [Ọsẹ̀ tólọ́] [ni] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'ní %s',
      past: '%s kọjá',
      s: 'ìsẹjú aayá die',
      ss: 'aayá %d',
      m: 'ìsẹjú kan',
      mm: 'ìsẹjú %d',
      h: 'wákati kan',
      hh: 'wákati %d',
      d: 'ọjọ́ kan',
      dd: 'ọjọ́ %d',
      M: 'osù kan',
      MM: 'osù %d',
      y: 'ọdún kan',
      yy: 'ọdún %d' },

    dayOfMonthOrdinalParse: /ọjọ́\s\d{1,2}/,
    ordinal: 'ọjọ́ %d',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return yo;

});

/***/ }),
/* 273 */
/*!************************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/zh-cn.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Chinese (China) [zh-cn]
//! author : suupic : https://github.com/suupic
//! author : Zeno Zeng : https://github.com/zenozeng
//! author : uu109 : https://github.com/uu109

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var zhCn = moment.defineLocale('zh-cn', {
    months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split(
    '_'),

    monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split(
    '_'),

    weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
    weekdaysShort: '周日_周一_周二_周三_周四_周五_周六'.split('_'),
    weekdaysMin: '日_一_二_三_四_五_六'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'YYYY/MM/DD',
      LL: 'YYYY年M月D日',
      LLL: 'YYYY年M月D日Ah点mm分',
      LLLL: 'YYYY年M月D日ddddAh点mm分',
      l: 'YYYY/M/D',
      ll: 'YYYY年M月D日',
      lll: 'YYYY年M月D日 HH:mm',
      llll: 'YYYY年M月D日dddd HH:mm' },

    meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
    meridiemHour: function meridiemHour(hour, meridiem) {
      if (hour === 12) {
        hour = 0;
      }
      if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {
        return hour;
      } else if (meridiem === '下午' || meridiem === '晚上') {
        return hour + 12;
      } else {
        // '中午'
        return hour >= 11 ? hour : hour + 12;
      }
    },
    meridiem: function meridiem(hour, minute, isLower) {
      var hm = hour * 100 + minute;
      if (hm < 600) {
        return '凌晨';
      } else if (hm < 900) {
        return '早上';
      } else if (hm < 1130) {
        return '上午';
      } else if (hm < 1230) {
        return '中午';
      } else if (hm < 1800) {
        return '下午';
      } else {
        return '晚上';
      }
    },
    calendar: {
      sameDay: '[今天]LT',
      nextDay: '[明天]LT',
      nextWeek: function nextWeek(now) {
        if (now.week() !== this.week()) {
          return '[下]dddLT';
        } else {
          return '[本]dddLT';
        }
      },
      lastDay: '[昨天]LT',
      lastWeek: function lastWeek(now) {
        if (this.week() !== now.week()) {
          return '[上]dddLT';
        } else {
          return '[本]dddLT';
        }
      },
      sameElse: 'L' },

    dayOfMonthOrdinalParse: /\d{1,2}(日|月|周)/,
    ordinal: function ordinal(number, period) {
      switch (period) {
        case 'd':
        case 'D':
        case 'DDD':
          return number + '日';
        case 'M':
          return number + '月';
        case 'w':
        case 'W':
          return number + '周';
        default:
          return number;}

    },
    relativeTime: {
      future: '%s后',
      past: '%s前',
      s: '几秒',
      ss: '%d 秒',
      m: '1 分钟',
      mm: '%d 分钟',
      h: '1 小时',
      hh: '%d 小时',
      d: '1 天',
      dd: '%d 天',
      w: '1 周',
      ww: '%d 周',
      M: '1 个月',
      MM: '%d 个月',
      y: '1 年',
      yy: '%d 年' },

    week: {
      // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return zhCn;

});

/***/ }),
/* 274 */
/*!************************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/zh-hk.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Chinese (Hong Kong) [zh-hk]
//! author : Ben : https://github.com/ben-lin
//! author : Chris Lam : https://github.com/hehachris
//! author : Konstantin : https://github.com/skfd
//! author : Anthony : https://github.com/anthonylau

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var zhHk = moment.defineLocale('zh-hk', {
    months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split(
    '_'),

    monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split(
    '_'),

    weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
    weekdaysShort: '週日_週一_週二_週三_週四_週五_週六'.split('_'),
    weekdaysMin: '日_一_二_三_四_五_六'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'YYYY/MM/DD',
      LL: 'YYYY年M月D日',
      LLL: 'YYYY年M月D日 HH:mm',
      LLLL: 'YYYY年M月D日dddd HH:mm',
      l: 'YYYY/M/D',
      ll: 'YYYY年M月D日',
      lll: 'YYYY年M月D日 HH:mm',
      llll: 'YYYY年M月D日dddd HH:mm' },

    meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
    meridiemHour: function meridiemHour(hour, meridiem) {
      if (hour === 12) {
        hour = 0;
      }
      if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {
        return hour;
      } else if (meridiem === '中午') {
        return hour >= 11 ? hour : hour + 12;
      } else if (meridiem === '下午' || meridiem === '晚上') {
        return hour + 12;
      }
    },
    meridiem: function meridiem(hour, minute, isLower) {
      var hm = hour * 100 + minute;
      if (hm < 600) {
        return '凌晨';
      } else if (hm < 900) {
        return '早上';
      } else if (hm < 1200) {
        return '上午';
      } else if (hm === 1200) {
        return '中午';
      } else if (hm < 1800) {
        return '下午';
      } else {
        return '晚上';
      }
    },
    calendar: {
      sameDay: '[今天]LT',
      nextDay: '[明天]LT',
      nextWeek: '[下]ddddLT',
      lastDay: '[昨天]LT',
      lastWeek: '[上]ddddLT',
      sameElse: 'L' },

    dayOfMonthOrdinalParse: /\d{1,2}(日|月|週)/,
    ordinal: function ordinal(number, period) {
      switch (period) {
        case 'd':
        case 'D':
        case 'DDD':
          return number + '日';
        case 'M':
          return number + '月';
        case 'w':
        case 'W':
          return number + '週';
        default:
          return number;}

    },
    relativeTime: {
      future: '%s後',
      past: '%s前',
      s: '幾秒',
      ss: '%d 秒',
      m: '1 分鐘',
      mm: '%d 分鐘',
      h: '1 小時',
      hh: '%d 小時',
      d: '1 天',
      dd: '%d 天',
      M: '1 個月',
      MM: '%d 個月',
      y: '1 年',
      yy: '%d 年' } });



  return zhHk;

});

/***/ }),
/* 275 */
/*!************************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/zh-mo.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Chinese (Macau) [zh-mo]
//! author : Ben : https://github.com/ben-lin
//! author : Chris Lam : https://github.com/hehachris
//! author : Tan Yuanhong : https://github.com/le0tan

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var zhMo = moment.defineLocale('zh-mo', {
    months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split(
    '_'),

    monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split(
    '_'),

    weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
    weekdaysShort: '週日_週一_週二_週三_週四_週五_週六'.split('_'),
    weekdaysMin: '日_一_二_三_四_五_六'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'YYYY年M月D日',
      LLL: 'YYYY年M月D日 HH:mm',
      LLLL: 'YYYY年M月D日dddd HH:mm',
      l: 'D/M/YYYY',
      ll: 'YYYY年M月D日',
      lll: 'YYYY年M月D日 HH:mm',
      llll: 'YYYY年M月D日dddd HH:mm' },

    meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
    meridiemHour: function meridiemHour(hour, meridiem) {
      if (hour === 12) {
        hour = 0;
      }
      if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {
        return hour;
      } else if (meridiem === '中午') {
        return hour >= 11 ? hour : hour + 12;
      } else if (meridiem === '下午' || meridiem === '晚上') {
        return hour + 12;
      }
    },
    meridiem: function meridiem(hour, minute, isLower) {
      var hm = hour * 100 + minute;
      if (hm < 600) {
        return '凌晨';
      } else if (hm < 900) {
        return '早上';
      } else if (hm < 1130) {
        return '上午';
      } else if (hm < 1230) {
        return '中午';
      } else if (hm < 1800) {
        return '下午';
      } else {
        return '晚上';
      }
    },
    calendar: {
      sameDay: '[今天] LT',
      nextDay: '[明天] LT',
      nextWeek: '[下]dddd LT',
      lastDay: '[昨天] LT',
      lastWeek: '[上]dddd LT',
      sameElse: 'L' },

    dayOfMonthOrdinalParse: /\d{1,2}(日|月|週)/,
    ordinal: function ordinal(number, period) {
      switch (period) {
        case 'd':
        case 'D':
        case 'DDD':
          return number + '日';
        case 'M':
          return number + '月';
        case 'w':
        case 'W':
          return number + '週';
        default:
          return number;}

    },
    relativeTime: {
      future: '%s內',
      past: '%s前',
      s: '幾秒',
      ss: '%d 秒',
      m: '1 分鐘',
      mm: '%d 分鐘',
      h: '1 小時',
      hh: '%d 小時',
      d: '1 天',
      dd: '%d 天',
      M: '1 個月',
      MM: '%d 個月',
      y: '1 年',
      yy: '%d 年' } });



  return zhMo;

});

/***/ }),
/* 276 */
/*!************************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/moment/locale/zh-tw.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Chinese (Taiwan) [zh-tw]
//! author : Ben : https://github.com/ben-lin
//! author : Chris Lam : https://github.com/hehachris

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 139)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var zhTw = moment.defineLocale('zh-tw', {
    months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split(
    '_'),

    monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split(
    '_'),

    weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
    weekdaysShort: '週日_週一_週二_週三_週四_週五_週六'.split('_'),
    weekdaysMin: '日_一_二_三_四_五_六'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'YYYY/MM/DD',
      LL: 'YYYY年M月D日',
      LLL: 'YYYY年M月D日 HH:mm',
      LLLL: 'YYYY年M月D日dddd HH:mm',
      l: 'YYYY/M/D',
      ll: 'YYYY年M月D日',
      lll: 'YYYY年M月D日 HH:mm',
      llll: 'YYYY年M月D日dddd HH:mm' },

    meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
    meridiemHour: function meridiemHour(hour, meridiem) {
      if (hour === 12) {
        hour = 0;
      }
      if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {
        return hour;
      } else if (meridiem === '中午') {
        return hour >= 11 ? hour : hour + 12;
      } else if (meridiem === '下午' || meridiem === '晚上') {
        return hour + 12;
      }
    },
    meridiem: function meridiem(hour, minute, isLower) {
      var hm = hour * 100 + minute;
      if (hm < 600) {
        return '凌晨';
      } else if (hm < 900) {
        return '早上';
      } else if (hm < 1130) {
        return '上午';
      } else if (hm < 1230) {
        return '中午';
      } else if (hm < 1800) {
        return '下午';
      } else {
        return '晚上';
      }
    },
    calendar: {
      sameDay: '[今天] LT',
      nextDay: '[明天] LT',
      nextWeek: '[下]dddd LT',
      lastDay: '[昨天] LT',
      lastWeek: '[上]dddd LT',
      sameElse: 'L' },

    dayOfMonthOrdinalParse: /\d{1,2}(日|月|週)/,
    ordinal: function ordinal(number, period) {
      switch (period) {
        case 'd':
        case 'D':
        case 'DDD':
          return number + '日';
        case 'M':
          return number + '月';
        case 'w':
        case 'W':
          return number + '週';
        default:
          return number;}

    },
    relativeTime: {
      future: '%s後',
      past: '%s前',
      s: '幾秒',
      ss: '%d 秒',
      m: '1 分鐘',
      mm: '%d 分鐘',
      h: '1 小時',
      hh: '%d 小時',
      d: '1 天',
      dd: '%d 天',
      M: '1 個月',
      MM: '%d 個月',
      y: '1 年',
      yy: '%d 年' } });



  return zhTw;

});

/***/ }),
/* 277 */,
/* 278 */,
/* 279 */,
/* 280 */,
/* 281 */,
/* 282 */,
/* 283 */,
/* 284 */,
/* 285 */,
/* 286 */,
/* 287 */,
/* 288 */,
/* 289 */,
/* 290 */,
/* 291 */,
/* 292 */,
/* 293 */,
/* 294 */,
/* 295 */,
/* 296 */,
/* 297 */,
/* 298 */,
/* 299 */,
/* 300 */,
/* 301 */,
/* 302 */,
/* 303 */,
/* 304 */,
/* 305 */,
/* 306 */,
/* 307 */,
/* 308 */,
/* 309 */,
/* 310 */,
/* 311 */,
/* 312 */,
/* 313 */,
/* 314 */,
/* 315 */,
/* 316 */,
/* 317 */,
/* 318 */,
/* 319 */,
/* 320 */,
/* 321 */,
/* 322 */,
/* 323 */,
/* 324 */,
/* 325 */,
/* 326 */,
/* 327 */,
/* 328 */,
/* 329 */,
/* 330 */,
/* 331 */,
/* 332 */,
/* 333 */,
/* 334 */,
/* 335 */,
/* 336 */,
/* 337 */,
/* 338 */,
/* 339 */,
/* 340 */,
/* 341 */,
/* 342 */,
/* 343 */,
/* 344 */,
/* 345 */,
/* 346 */,
/* 347 */,
/* 348 */,
/* 349 */,
/* 350 */,
/* 351 */,
/* 352 */,
/* 353 */,
/* 354 */,
/* 355 */,
/* 356 */,
/* 357 */,
/* 358 */,
/* 359 */,
/* 360 */,
/* 361 */
/*!********************************************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/tki-qrcode/components/tki-qrcode/qrcode.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(uni) {Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;var QRCode = {};
(function () {
  /**
               * 获取单个字符的utf8编码
               * unicode BMP平面约65535个字符
               * @param {num} code
               * return {array}
               */
  function unicodeFormat8(code) {
    // 1 byte
    var c0, c1, c2;
    if (code < 128) {
      return [code];
      // 2 bytes
    } else if (code < 2048) {
      c0 = 192 + (code >> 6);
      c1 = 128 + (code & 63);
      return [c0, c1];
      // 3 bytes
    } else {
      c0 = 224 + (code >> 12);
      c1 = 128 + (code >> 6 & 63);
      c2 = 128 + (code & 63);
      return [c0, c1, c2];
    }
  }
  /**
     * 获取字符串的utf8编码字节串
     * @param {string} string
     * @return {array}
     */
  function getUTF8Bytes(string) {
    var utf8codes = [];
    for (var i = 0; i < string.length; i++) {
      var code = string.charCodeAt(i);
      var utf8 = unicodeFormat8(code);
      for (var j = 0; j < utf8.length; j++) {
        utf8codes.push(utf8[j]);
      }
    }
    return utf8codes;
  }
  /**
     * 二维码算法实现
     * @param {string} data              要编码的信息字符串
     * @param {num} errorCorrectLevel 纠错等级
     */
  function QRCodeAlg(data, errorCorrectLevel) {
    this.typeNumber = -1; //版本
    this.errorCorrectLevel = errorCorrectLevel;
    this.modules = null; //二维矩阵，存放最终结果
    this.moduleCount = 0; //矩阵大小
    this.dataCache = null; //数据缓存
    this.rsBlocks = null; //版本数据信息
    this.totalDataCount = -1; //可使用的数据量
    this.data = data;
    this.utf8bytes = getUTF8Bytes(data);
    this.make();
  }
  QRCodeAlg.prototype = {
    constructor: QRCodeAlg,
    /**
                             * 获取二维码矩阵大小
                             * @return {num} 矩阵大小
                             */
    getModuleCount: function getModuleCount() {
      return this.moduleCount;
    },
    /**
        * 编码
        */
    make: function make() {
      this.getRightType();
      this.dataCache = this.createData();
      this.createQrcode();
    },
    /**
        * 设置二位矩阵功能图形
        * @param  {bool} test 表示是否在寻找最好掩膜阶段
        * @param  {num} maskPattern 掩膜的版本
        */
    makeImpl: function makeImpl(maskPattern) {
      this.moduleCount = this.typeNumber * 4 + 17;
      this.modules = new Array(this.moduleCount);
      for (var row = 0; row < this.moduleCount; row++) {
        this.modules[row] = new Array(this.moduleCount);
      }
      this.setupPositionProbePattern(0, 0);
      this.setupPositionProbePattern(this.moduleCount - 7, 0);
      this.setupPositionProbePattern(0, this.moduleCount - 7);
      this.setupPositionAdjustPattern();
      this.setupTimingPattern();
      this.setupTypeInfo(true, maskPattern);
      if (this.typeNumber >= 7) {
        this.setupTypeNumber(true);
      }
      this.mapData(this.dataCache, maskPattern);
    },
    /**
        * 设置二维码的位置探测图形
        * @param  {num} row 探测图形的中心横坐标
        * @param  {num} col 探测图形的中心纵坐标
        */
    setupPositionProbePattern: function setupPositionProbePattern(row, col) {
      for (var r = -1; r <= 7; r++) {
        if (row + r <= -1 || this.moduleCount <= row + r) continue;
        for (var c = -1; c <= 7; c++) {
          if (col + c <= -1 || this.moduleCount <= col + c) continue;
          if (0 <= r && r <= 6 && (c == 0 || c == 6) || 0 <= c && c <= 6 && (r == 0 || r == 6) || 2 <= r && r <= 4 && 2 <= c && c <= 4) {
            this.modules[row + r][col + c] = true;
          } else {
            this.modules[row + r][col + c] = false;
          }
        }
      }
    },
    /**
        * 创建二维码
        * @return {[type]} [description]
        */
    createQrcode: function createQrcode() {
      var minLostPoint = 0;
      var pattern = 0;
      var bestModules = null;
      for (var i = 0; i < 8; i++) {
        this.makeImpl(i);
        var lostPoint = QRUtil.getLostPoint(this);
        if (i == 0 || minLostPoint > lostPoint) {
          minLostPoint = lostPoint;
          pattern = i;
          bestModules = this.modules;
        }
      }
      this.modules = bestModules;
      this.setupTypeInfo(false, pattern);
      if (this.typeNumber >= 7) {
        this.setupTypeNumber(false);
      }
    },
    /**
        * 设置定位图形
        * @return {[type]} [description]
        */
    setupTimingPattern: function setupTimingPattern() {
      for (var r = 8; r < this.moduleCount - 8; r++) {
        if (this.modules[r][6] != null) {
          continue;
        }
        this.modules[r][6] = r % 2 == 0;
        if (this.modules[6][r] != null) {
          continue;
        }
        this.modules[6][r] = r % 2 == 0;
      }
    },
    /**
        * 设置矫正图形
        * @return {[type]} [description]
        */
    setupPositionAdjustPattern: function setupPositionAdjustPattern() {
      var pos = QRUtil.getPatternPosition(this.typeNumber);
      for (var i = 0; i < pos.length; i++) {
        for (var j = 0; j < pos.length; j++) {
          var row = pos[i];
          var col = pos[j];
          if (this.modules[row][col] != null) {
            continue;
          }
          for (var r = -2; r <= 2; r++) {
            for (var c = -2; c <= 2; c++) {
              if (r == -2 || r == 2 || c == -2 || c == 2 || r == 0 && c == 0) {
                this.modules[row + r][col + c] = true;
              } else {
                this.modules[row + r][col + c] = false;
              }
            }
          }
        }
      }
    },
    /**
        * 设置版本信息（7以上版本才有）
        * @param  {bool} test 是否处于判断最佳掩膜阶段
        * @return {[type]}      [description]
        */
    setupTypeNumber: function setupTypeNumber(test) {
      var bits = QRUtil.getBCHTypeNumber(this.typeNumber);
      for (var i = 0; i < 18; i++) {
        var mod = !test && (bits >> i & 1) == 1;
        this.modules[Math.floor(i / 3)][i % 3 + this.moduleCount - 8 - 3] = mod;
        this.modules[i % 3 + this.moduleCount - 8 - 3][Math.floor(i / 3)] = mod;
      }
    },
    /**
        * 设置格式信息（纠错等级和掩膜版本）
        * @param  {bool} test
        * @param  {num} maskPattern 掩膜版本
        * @return {}
        */
    setupTypeInfo: function setupTypeInfo(test, maskPattern) {
      var data = QRErrorCorrectLevel[this.errorCorrectLevel] << 3 | maskPattern;
      var bits = QRUtil.getBCHTypeInfo(data);
      // vertical
      for (var i = 0; i < 15; i++) {
        var mod = !test && (bits >> i & 1) == 1;
        if (i < 6) {
          this.modules[i][8] = mod;
        } else if (i < 8) {
          this.modules[i + 1][8] = mod;
        } else {
          this.modules[this.moduleCount - 15 + i][8] = mod;
        }
        // horizontal
        var mod = !test && (bits >> i & 1) == 1;
        if (i < 8) {
          this.modules[8][this.moduleCount - i - 1] = mod;
        } else if (i < 9) {
          this.modules[8][15 - i - 1 + 1] = mod;
        } else {
          this.modules[8][15 - i - 1] = mod;
        }
      }
      // fixed module
      this.modules[this.moduleCount - 8][8] = !test;
    },
    /**
        * 数据编码
        * @return {[type]} [description]
        */
    createData: function createData() {
      var buffer = new QRBitBuffer();
      var lengthBits = this.typeNumber > 9 ? 16 : 8;
      buffer.put(4, 4); //添加模式
      buffer.put(this.utf8bytes.length, lengthBits);
      for (var i = 0, l = this.utf8bytes.length; i < l; i++) {
        buffer.put(this.utf8bytes[i], 8);
      }
      if (buffer.length + 4 <= this.totalDataCount * 8) {
        buffer.put(0, 4);
      }
      // padding
      while (buffer.length % 8 != 0) {
        buffer.putBit(false);
      }
      // padding
      while (true) {
        if (buffer.length >= this.totalDataCount * 8) {
          break;
        }
        buffer.put(QRCodeAlg.PAD0, 8);
        if (buffer.length >= this.totalDataCount * 8) {
          break;
        }
        buffer.put(QRCodeAlg.PAD1, 8);
      }
      return this.createBytes(buffer);
    },
    /**
        * 纠错码编码
        * @param  {buffer} buffer 数据编码
        * @return {[type]}
        */
    createBytes: function createBytes(buffer) {
      var offset = 0;
      var maxDcCount = 0;
      var maxEcCount = 0;
      var length = this.rsBlock.length / 3;
      var rsBlocks = new Array();
      for (var i = 0; i < length; i++) {
        var count = this.rsBlock[i * 3 + 0];
        var totalCount = this.rsBlock[i * 3 + 1];
        var dataCount = this.rsBlock[i * 3 + 2];
        for (var j = 0; j < count; j++) {
          rsBlocks.push([dataCount, totalCount]);
        }
      }
      var dcdata = new Array(rsBlocks.length);
      var ecdata = new Array(rsBlocks.length);
      for (var r = 0; r < rsBlocks.length; r++) {
        var dcCount = rsBlocks[r][0];
        var ecCount = rsBlocks[r][1] - dcCount;
        maxDcCount = Math.max(maxDcCount, dcCount);
        maxEcCount = Math.max(maxEcCount, ecCount);
        dcdata[r] = new Array(dcCount);
        for (var i = 0; i < dcdata[r].length; i++) {
          dcdata[r][i] = 0xff & buffer.buffer[i + offset];
        }
        offset += dcCount;
        var rsPoly = QRUtil.getErrorCorrectPolynomial(ecCount);
        var rawPoly = new QRPolynomial(dcdata[r], rsPoly.getLength() - 1);
        var modPoly = rawPoly.mod(rsPoly);
        ecdata[r] = new Array(rsPoly.getLength() - 1);
        for (var i = 0; i < ecdata[r].length; i++) {
          var modIndex = i + modPoly.getLength() - ecdata[r].length;
          ecdata[r][i] = modIndex >= 0 ? modPoly.get(modIndex) : 0;
        }
      }
      var data = new Array(this.totalDataCount);
      var index = 0;
      for (var i = 0; i < maxDcCount; i++) {
        for (var r = 0; r < rsBlocks.length; r++) {
          if (i < dcdata[r].length) {
            data[index++] = dcdata[r][i];
          }
        }
      }
      for (var i = 0; i < maxEcCount; i++) {
        for (var r = 0; r < rsBlocks.length; r++) {
          if (i < ecdata[r].length) {
            data[index++] = ecdata[r][i];
          }
        }
      }
      return data;

    },
    /**
        * 布置模块，构建最终信息
        * @param  {} data
        * @param  {} maskPattern
        * @return {}
        */
    mapData: function mapData(data, maskPattern) {
      var inc = -1;
      var row = this.moduleCount - 1;
      var bitIndex = 7;
      var byteIndex = 0;
      for (var col = this.moduleCount - 1; col > 0; col -= 2) {
        if (col == 6) col--;
        while (true) {
          for (var c = 0; c < 2; c++) {
            if (this.modules[row][col - c] == null) {
              var dark = false;
              if (byteIndex < data.length) {
                dark = (data[byteIndex] >>> bitIndex & 1) == 1;
              }
              var mask = QRUtil.getMask(maskPattern, row, col - c);
              if (mask) {
                dark = !dark;
              }
              this.modules[row][col - c] = dark;
              bitIndex--;
              if (bitIndex == -1) {
                byteIndex++;
                bitIndex = 7;
              }
            }
          }
          row += inc;
          if (row < 0 || this.moduleCount <= row) {
            row -= inc;
            inc = -inc;
            break;
          }
        }
      }
    } };

  /**
          * 填充字段
          */
  QRCodeAlg.PAD0 = 0xEC;
  QRCodeAlg.PAD1 = 0x11;
  //---------------------------------------------------------------------
  // 纠错等级对应的编码
  //---------------------------------------------------------------------
  var QRErrorCorrectLevel = [1, 0, 3, 2];
  //---------------------------------------------------------------------
  // 掩膜版本
  //---------------------------------------------------------------------
  var QRMaskPattern = {
    PATTERN000: 0,
    PATTERN001: 1,
    PATTERN010: 2,
    PATTERN011: 3,
    PATTERN100: 4,
    PATTERN101: 5,
    PATTERN110: 6,
    PATTERN111: 7 };

  //---------------------------------------------------------------------
  // 工具类
  //---------------------------------------------------------------------
  var QRUtil = {
    /*
                 每个版本矫正图形的位置
                  */
    PATTERN_POSITION_TABLE: [
    [],
    [6, 18],
    [6, 22],
    [6, 26],
    [6, 30],
    [6, 34],
    [6, 22, 38],
    [6, 24, 42],
    [6, 26, 46],
    [6, 28, 50],
    [6, 30, 54],
    [6, 32, 58],
    [6, 34, 62],
    [6, 26, 46, 66],
    [6, 26, 48, 70],
    [6, 26, 50, 74],
    [6, 30, 54, 78],
    [6, 30, 56, 82],
    [6, 30, 58, 86],
    [6, 34, 62, 90],
    [6, 28, 50, 72, 94],
    [6, 26, 50, 74, 98],
    [6, 30, 54, 78, 102],
    [6, 28, 54, 80, 106],
    [6, 32, 58, 84, 110],
    [6, 30, 58, 86, 114],
    [6, 34, 62, 90, 118],
    [6, 26, 50, 74, 98, 122],
    [6, 30, 54, 78, 102, 126],
    [6, 26, 52, 78, 104, 130],
    [6, 30, 56, 82, 108, 134],
    [6, 34, 60, 86, 112, 138],
    [6, 30, 58, 86, 114, 142],
    [6, 34, 62, 90, 118, 146],
    [6, 30, 54, 78, 102, 126, 150],
    [6, 24, 50, 76, 102, 128, 154],
    [6, 28, 54, 80, 106, 132, 158],
    [6, 32, 58, 84, 110, 136, 162],
    [6, 26, 54, 82, 110, 138, 166],
    [6, 30, 58, 86, 114, 142, 170]],

    G15: 1 << 10 | 1 << 8 | 1 << 5 | 1 << 4 | 1 << 2 | 1 << 1 | 1 << 0,
    G18: 1 << 12 | 1 << 11 | 1 << 10 | 1 << 9 | 1 << 8 | 1 << 5 | 1 << 2 | 1 << 0,
    G15_MASK: 1 << 14 | 1 << 12 | 1 << 10 | 1 << 4 | 1 << 1,
    /*
                                                             BCH编码格式信息
                                                              */
    getBCHTypeInfo: function getBCHTypeInfo(data) {
      var d = data << 10;
      while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) >= 0) {
        d ^= QRUtil.G15 << QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15);
      }
      return (data << 10 | d) ^ QRUtil.G15_MASK;
    },
    /*
       BCH编码版本信息
        */
    getBCHTypeNumber: function getBCHTypeNumber(data) {
      var d = data << 12;
      while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) >= 0) {
        d ^= QRUtil.G18 << QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18);
      }
      return data << 12 | d;
    },
    /*
       获取BCH位信息
        */
    getBCHDigit: function getBCHDigit(data) {
      var digit = 0;
      while (data != 0) {
        digit++;
        data >>>= 1;
      }
      return digit;
    },
    /*
       获取版本对应的矫正图形位置
        */
    getPatternPosition: function getPatternPosition(typeNumber) {
      return QRUtil.PATTERN_POSITION_TABLE[typeNumber - 1];
    },
    /*
       掩膜算法
        */
    getMask: function getMask(maskPattern, i, j) {
      switch (maskPattern) {
        case QRMaskPattern.PATTERN000:
          return (i + j) % 2 == 0;
        case QRMaskPattern.PATTERN001:
          return i % 2 == 0;
        case QRMaskPattern.PATTERN010:
          return j % 3 == 0;
        case QRMaskPattern.PATTERN011:
          return (i + j) % 3 == 0;
        case QRMaskPattern.PATTERN100:
          return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 == 0;
        case QRMaskPattern.PATTERN101:
          return i * j % 2 + i * j % 3 == 0;
        case QRMaskPattern.PATTERN110:
          return (i * j % 2 + i * j % 3) % 2 == 0;
        case QRMaskPattern.PATTERN111:
          return (i * j % 3 + (i + j) % 2) % 2 == 0;
        default:
          throw new Error("bad maskPattern:" + maskPattern);}

    },
    /*
       获取RS的纠错多项式
        */
    getErrorCorrectPolynomial: function getErrorCorrectPolynomial(errorCorrectLength) {
      var a = new QRPolynomial([1], 0);
      for (var i = 0; i < errorCorrectLength; i++) {
        a = a.multiply(new QRPolynomial([1, QRMath.gexp(i)], 0));
      }
      return a;
    },
    /*
       获取评价
        */
    getLostPoint: function getLostPoint(qrCode) {
      var moduleCount = qrCode.getModuleCount(),
      lostPoint = 0,
      darkCount = 0;
      for (var row = 0; row < moduleCount; row++) {
        var sameCount = 0;
        var head = qrCode.modules[row][0];
        for (var col = 0; col < moduleCount; col++) {
          var current = qrCode.modules[row][col];
          //level 3 评价
          if (col < moduleCount - 6) {
            if (current && !qrCode.modules[row][col + 1] && qrCode.modules[row][col + 2] && qrCode.modules[row][col + 3] && qrCode.modules[row][col + 4] && !qrCode.modules[row][col + 5] && qrCode.modules[row][col + 6]) {
              if (col < moduleCount - 10) {
                if (qrCode.modules[row][col + 7] && qrCode.modules[row][col + 8] && qrCode.modules[row][col + 9] && qrCode.modules[row][col + 10]) {
                  lostPoint += 40;
                }
              } else if (col > 3) {
                if (qrCode.modules[row][col - 1] && qrCode.modules[row][col - 2] && qrCode.modules[row][col - 3] && qrCode.modules[row][col - 4]) {
                  lostPoint += 40;
                }
              }
            }
          }
          //level 2 评价
          if (row < moduleCount - 1 && col < moduleCount - 1) {
            var count = 0;
            if (current) count++;
            if (qrCode.modules[row + 1][col]) count++;
            if (qrCode.modules[row][col + 1]) count++;
            if (qrCode.modules[row + 1][col + 1]) count++;
            if (count == 0 || count == 4) {
              lostPoint += 3;
            }
          }
          //level 1 评价
          if (head ^ current) {
            sameCount++;
          } else {
            head = current;
            if (sameCount >= 5) {
              lostPoint += 3 + sameCount - 5;
            }
            sameCount = 1;
          }
          //level 4 评价
          if (current) {
            darkCount++;
          }
        }
      }
      for (var col = 0; col < moduleCount; col++) {
        var sameCount = 0;
        var head = qrCode.modules[0][col];
        for (var row = 0; row < moduleCount; row++) {
          var current = qrCode.modules[row][col];
          //level 3 评价
          if (row < moduleCount - 6) {
            if (current && !qrCode.modules[row + 1][col] && qrCode.modules[row + 2][col] && qrCode.modules[row + 3][col] && qrCode.modules[row + 4][col] && !qrCode.modules[row + 5][col] && qrCode.modules[row + 6][col]) {
              if (row < moduleCount - 10) {
                if (qrCode.modules[row + 7][col] && qrCode.modules[row + 8][col] && qrCode.modules[row + 9][col] && qrCode.modules[row + 10][col]) {
                  lostPoint += 40;
                }
              } else if (row > 3) {
                if (qrCode.modules[row - 1][col] && qrCode.modules[row - 2][col] && qrCode.modules[row - 3][col] && qrCode.modules[row - 4][col]) {
                  lostPoint += 40;
                }
              }
            }
          }
          //level 1 评价
          if (head ^ current) {
            sameCount++;
          } else {
            head = current;
            if (sameCount >= 5) {
              lostPoint += 3 + sameCount - 5;
            }
            sameCount = 1;
          }
        }
      }
      // LEVEL4
      var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;
      lostPoint += ratio * 10;
      return lostPoint;
    } };


  //---------------------------------------------------------------------
  // QRMath使用的数学工具
  //---------------------------------------------------------------------
  var QRMath = {
    /*
                 将n转化为a^m
                  */
    glog: function glog(n) {
      if (n < 1) {
        throw new Error("glog(" + n + ")");
      }
      return QRMath.LOG_TABLE[n];
    },
    /*
       将a^m转化为n
        */
    gexp: function gexp(n) {
      while (n < 0) {
        n += 255;
      }
      while (n >= 256) {
        n -= 255;
      }
      return QRMath.EXP_TABLE[n];
    },
    EXP_TABLE: new Array(256),
    LOG_TABLE: new Array(256) };


  for (var i = 0; i < 8; i++) {
    QRMath.EXP_TABLE[i] = 1 << i;
  }
  for (var i = 8; i < 256; i++) {
    QRMath.EXP_TABLE[i] = QRMath.EXP_TABLE[i - 4] ^ QRMath.EXP_TABLE[i - 5] ^ QRMath.EXP_TABLE[i - 6] ^ QRMath.EXP_TABLE[i - 8];
  }
  for (var i = 0; i < 255; i++) {
    QRMath.LOG_TABLE[QRMath.EXP_TABLE[i]] = i;
  }
  //---------------------------------------------------------------------
  // QRPolynomial 多项式
  //---------------------------------------------------------------------
  /**
   * 多项式类
   * @param {Array} num   系数
   * @param {num} shift a^shift
   */
  function QRPolynomial(num, shift) {
    if (num.length == undefined) {
      throw new Error(num.length + "/" + shift);
    }
    var offset = 0;
    while (offset < num.length && num[offset] == 0) {
      offset++;
    }
    this.num = new Array(num.length - offset + shift);
    for (var i = 0; i < num.length - offset; i++) {
      this.num[i] = num[i + offset];
    }
  }
  QRPolynomial.prototype = {
    get: function get(index) {
      return this.num[index];
    },
    getLength: function getLength() {
      return this.num.length;
    },
    /**
        * 多项式乘法
        * @param  {QRPolynomial} e 被乘多项式
        * @return {[type]}   [description]
        */
    multiply: function multiply(e) {
      var num = new Array(this.getLength() + e.getLength() - 1);
      for (var i = 0; i < this.getLength(); i++) {
        for (var j = 0; j < e.getLength(); j++) {
          num[i + j] ^= QRMath.gexp(QRMath.glog(this.get(i)) + QRMath.glog(e.get(j)));
        }
      }
      return new QRPolynomial(num, 0);
    },
    /**
        * 多项式模运算
        * @param  {QRPolynomial} e 模多项式
        * @return {}
        */
    mod: function mod(e) {
      var tl = this.getLength(),
      el = e.getLength();
      if (tl - el < 0) {
        return this;
      }
      var num = new Array(tl);
      for (var i = 0; i < tl; i++) {
        num[i] = this.get(i);
      }
      while (num.length >= el) {
        var ratio = QRMath.glog(num[0]) - QRMath.glog(e.get(0));

        for (var i = 0; i < e.getLength(); i++) {
          num[i] ^= QRMath.gexp(QRMath.glog(e.get(i)) + ratio);
        }
        while (num[0] == 0) {
          num.shift();
        }
      }
      return new QRPolynomial(num, 0);
    } };


  //---------------------------------------------------------------------
  // RS_BLOCK_TABLE
  //---------------------------------------------------------------------
  /*
  二维码各个版本信息[块数, 每块中的数据块数, 每块中的信息块数]
   */
  var RS_BLOCK_TABLE = [
  // L
  // M
  // Q
  // H
  // 1
  [1, 26, 19],
  [1, 26, 16],
  [1, 26, 13],
  [1, 26, 9],

  // 2
  [1, 44, 34],
  [1, 44, 28],
  [1, 44, 22],
  [1, 44, 16],

  // 3
  [1, 70, 55],
  [1, 70, 44],
  [2, 35, 17],
  [2, 35, 13],

  // 4
  [1, 100, 80],
  [2, 50, 32],
  [2, 50, 24],
  [4, 25, 9],

  // 5
  [1, 134, 108],
  [2, 67, 43],
  [2, 33, 15, 2, 34, 16],
  [2, 33, 11, 2, 34, 12],

  // 6
  [2, 86, 68],
  [4, 43, 27],
  [4, 43, 19],
  [4, 43, 15],

  // 7
  [2, 98, 78],
  [4, 49, 31],
  [2, 32, 14, 4, 33, 15],
  [4, 39, 13, 1, 40, 14],

  // 8
  [2, 121, 97],
  [2, 60, 38, 2, 61, 39],
  [4, 40, 18, 2, 41, 19],
  [4, 40, 14, 2, 41, 15],

  // 9
  [2, 146, 116],
  [3, 58, 36, 2, 59, 37],
  [4, 36, 16, 4, 37, 17],
  [4, 36, 12, 4, 37, 13],

  // 10
  [2, 86, 68, 2, 87, 69],
  [4, 69, 43, 1, 70, 44],
  [6, 43, 19, 2, 44, 20],
  [6, 43, 15, 2, 44, 16],

  // 11
  [4, 101, 81],
  [1, 80, 50, 4, 81, 51],
  [4, 50, 22, 4, 51, 23],
  [3, 36, 12, 8, 37, 13],

  // 12
  [2, 116, 92, 2, 117, 93],
  [6, 58, 36, 2, 59, 37],
  [4, 46, 20, 6, 47, 21],
  [7, 42, 14, 4, 43, 15],

  // 13
  [4, 133, 107],
  [8, 59, 37, 1, 60, 38],
  [8, 44, 20, 4, 45, 21],
  [12, 33, 11, 4, 34, 12],

  // 14
  [3, 145, 115, 1, 146, 116],
  [4, 64, 40, 5, 65, 41],
  [11, 36, 16, 5, 37, 17],
  [11, 36, 12, 5, 37, 13],

  // 15
  [5, 109, 87, 1, 110, 88],
  [5, 65, 41, 5, 66, 42],
  [5, 54, 24, 7, 55, 25],
  [11, 36, 12],

  // 16
  [5, 122, 98, 1, 123, 99],
  [7, 73, 45, 3, 74, 46],
  [15, 43, 19, 2, 44, 20],
  [3, 45, 15, 13, 46, 16],

  // 17
  [1, 135, 107, 5, 136, 108],
  [10, 74, 46, 1, 75, 47],
  [1, 50, 22, 15, 51, 23],
  [2, 42, 14, 17, 43, 15],

  // 18
  [5, 150, 120, 1, 151, 121],
  [9, 69, 43, 4, 70, 44],
  [17, 50, 22, 1, 51, 23],
  [2, 42, 14, 19, 43, 15],

  // 19
  [3, 141, 113, 4, 142, 114],
  [3, 70, 44, 11, 71, 45],
  [17, 47, 21, 4, 48, 22],
  [9, 39, 13, 16, 40, 14],

  // 20
  [3, 135, 107, 5, 136, 108],
  [3, 67, 41, 13, 68, 42],
  [15, 54, 24, 5, 55, 25],
  [15, 43, 15, 10, 44, 16],

  // 21
  [4, 144, 116, 4, 145, 117],
  [17, 68, 42],
  [17, 50, 22, 6, 51, 23],
  [19, 46, 16, 6, 47, 17],

  // 22
  [2, 139, 111, 7, 140, 112],
  [17, 74, 46],
  [7, 54, 24, 16, 55, 25],
  [34, 37, 13],

  // 23
  [4, 151, 121, 5, 152, 122],
  [4, 75, 47, 14, 76, 48],
  [11, 54, 24, 14, 55, 25],
  [16, 45, 15, 14, 46, 16],

  // 24
  [6, 147, 117, 4, 148, 118],
  [6, 73, 45, 14, 74, 46],
  [11, 54, 24, 16, 55, 25],
  [30, 46, 16, 2, 47, 17],

  // 25
  [8, 132, 106, 4, 133, 107],
  [8, 75, 47, 13, 76, 48],
  [7, 54, 24, 22, 55, 25],
  [22, 45, 15, 13, 46, 16],

  // 26
  [10, 142, 114, 2, 143, 115],
  [19, 74, 46, 4, 75, 47],
  [28, 50, 22, 6, 51, 23],
  [33, 46, 16, 4, 47, 17],

  // 27
  [8, 152, 122, 4, 153, 123],
  [22, 73, 45, 3, 74, 46],
  [8, 53, 23, 26, 54, 24],
  [12, 45, 15, 28, 46, 16],

  // 28
  [3, 147, 117, 10, 148, 118],
  [3, 73, 45, 23, 74, 46],
  [4, 54, 24, 31, 55, 25],
  [11, 45, 15, 31, 46, 16],

  // 29
  [7, 146, 116, 7, 147, 117],
  [21, 73, 45, 7, 74, 46],
  [1, 53, 23, 37, 54, 24],
  [19, 45, 15, 26, 46, 16],

  // 30
  [5, 145, 115, 10, 146, 116],
  [19, 75, 47, 10, 76, 48],
  [15, 54, 24, 25, 55, 25],
  [23, 45, 15, 25, 46, 16],

  // 31
  [13, 145, 115, 3, 146, 116],
  [2, 74, 46, 29, 75, 47],
  [42, 54, 24, 1, 55, 25],
  [23, 45, 15, 28, 46, 16],

  // 32
  [17, 145, 115],
  [10, 74, 46, 23, 75, 47],
  [10, 54, 24, 35, 55, 25],
  [19, 45, 15, 35, 46, 16],

  // 33
  [17, 145, 115, 1, 146, 116],
  [14, 74, 46, 21, 75, 47],
  [29, 54, 24, 19, 55, 25],
  [11, 45, 15, 46, 46, 16],

  // 34
  [13, 145, 115, 6, 146, 116],
  [14, 74, 46, 23, 75, 47],
  [44, 54, 24, 7, 55, 25],
  [59, 46, 16, 1, 47, 17],

  // 35
  [12, 151, 121, 7, 152, 122],
  [12, 75, 47, 26, 76, 48],
  [39, 54, 24, 14, 55, 25],
  [22, 45, 15, 41, 46, 16],

  // 36
  [6, 151, 121, 14, 152, 122],
  [6, 75, 47, 34, 76, 48],
  [46, 54, 24, 10, 55, 25],
  [2, 45, 15, 64, 46, 16],

  // 37
  [17, 152, 122, 4, 153, 123],
  [29, 74, 46, 14, 75, 47],
  [49, 54, 24, 10, 55, 25],
  [24, 45, 15, 46, 46, 16],

  // 38
  [4, 152, 122, 18, 153, 123],
  [13, 74, 46, 32, 75, 47],
  [48, 54, 24, 14, 55, 25],
  [42, 45, 15, 32, 46, 16],

  // 39
  [20, 147, 117, 4, 148, 118],
  [40, 75, 47, 7, 76, 48],
  [43, 54, 24, 22, 55, 25],
  [10, 45, 15, 67, 46, 16],

  // 40
  [19, 148, 118, 6, 149, 119],
  [18, 75, 47, 31, 76, 48],
  [34, 54, 24, 34, 55, 25],
  [20, 45, 15, 61, 46, 16]];


  /**
                              * 根据数据获取对应版本
                              * @return {[type]} [description]
                              */
  QRCodeAlg.prototype.getRightType = function () {
    for (var typeNumber = 1; typeNumber < 41; typeNumber++) {
      var rsBlock = RS_BLOCK_TABLE[(typeNumber - 1) * 4 + this.errorCorrectLevel];
      if (rsBlock == undefined) {
        throw new Error("bad rs block @ typeNumber:" + typeNumber + "/errorCorrectLevel:" + this.errorCorrectLevel);
      }
      var length = rsBlock.length / 3;
      var totalDataCount = 0;
      for (var i = 0; i < length; i++) {
        var count = rsBlock[i * 3 + 0];
        var dataCount = rsBlock[i * 3 + 2];
        totalDataCount += dataCount * count;
      }
      var lengthBytes = typeNumber > 9 ? 2 : 1;
      if (this.utf8bytes.length + lengthBytes < totalDataCount || typeNumber == 40) {
        this.typeNumber = typeNumber;
        this.rsBlock = rsBlock;
        this.totalDataCount = totalDataCount;
        break;
      }
    }
  };

  //---------------------------------------------------------------------
  // QRBitBuffer
  //---------------------------------------------------------------------
  function QRBitBuffer() {
    this.buffer = new Array();
    this.length = 0;
  }
  QRBitBuffer.prototype = {
    get: function get(index) {
      var bufIndex = Math.floor(index / 8);
      return this.buffer[bufIndex] >>> 7 - index % 8 & 1;
    },
    put: function put(num, length) {
      for (var i = 0; i < length; i++) {
        this.putBit(num >>> length - i - 1 & 1);
      }
    },
    putBit: function putBit(bit) {
      var bufIndex = Math.floor(this.length / 8);
      if (this.buffer.length <= bufIndex) {
        this.buffer.push(0);
      }
      if (bit) {
        this.buffer[bufIndex] |= 0x80 >>> this.length % 8;
      }
      this.length++;
    } };




  // xzedit
  var qrcodeAlgObjCache = [];
  /**
                               * 二维码构造函数，主要用于绘制
                               * @param  {参数列表} opt 传递参数
                               * @return {}
                               */
  QRCode = function QRCode(opt) {
    //设置默认参数
    this.options = {
      text: '',
      size: 256,
      correctLevel: 3,
      background: '#ffffff',
      foreground: '#000000',
      pdground: '#000000',
      image: '',
      imageSize: 30,
      canvasId: opt.canvasId,
      context: opt.context,
      usingComponents: opt.usingComponents,
      showLoading: opt.showLoading,
      loadingText: opt.loadingText };

    if (typeof opt === 'string') {// 只编码ASCII字符串
      opt = {
        text: opt };

    }
    if (opt) {
      for (var i in opt) {
        this.options[i] = opt[i];
      }
    }
    //使用QRCodeAlg创建二维码结构
    var qrCodeAlg = null;
    for (var i = 0, l = qrcodeAlgObjCache.length; i < l; i++) {
      if (qrcodeAlgObjCache[i].text == this.options.text && qrcodeAlgObjCache[i].text.correctLevel == this.options.correctLevel) {
        qrCodeAlg = qrcodeAlgObjCache[i].obj;
        break;
      }
    }
    if (i == l) {
      qrCodeAlg = new QRCodeAlg(this.options.text, this.options.correctLevel);
      qrcodeAlgObjCache.push({
        text: this.options.text,
        correctLevel: this.options.correctLevel,
        obj: qrCodeAlg });

    }
    /**
       * 计算矩阵点的前景色
       * @param {Obj} config
       * @param {Number} config.row 点x坐标
       * @param {Number} config.col 点y坐标
       * @param {Number} config.count 矩阵大小
       * @param {Number} config.options 组件的options
       * @return {String}
       */
    var getForeGround = function getForeGround(config) {
      var options = config.options;
      if (options.pdground && (
      config.row > 1 && config.row < 5 && config.col > 1 && config.col < 5 ||
      config.row > config.count - 6 && config.row < config.count - 2 && config.col > 1 && config.col < 5 ||
      config.row > 1 && config.row < 5 && config.col > config.count - 6 && config.col < config.count - 2))
      {
        return options.pdground;
      }
      return options.foreground;
    };
    // 创建canvas
    var createCanvas = function createCanvas(options) {
      if (options.showLoading) {
        uni.showLoading({
          title: options.loadingText,
          mask: true });

      }
      var ctx = uni.createCanvasContext(options.canvasId, options.context);
      var count = qrCodeAlg.getModuleCount();
      var ratioSize = options.size;
      var ratioImgSize = options.imageSize;
      //计算每个点的长宽
      var tileW = (ratioSize / count).toPrecision(4);
      var tileH = (ratioSize / count).toPrecision(4);
      //绘制
      for (var row = 0; row < count; row++) {
        for (var col = 0; col < count; col++) {
          var w = Math.ceil((col + 1) * tileW) - Math.floor(col * tileW);
          var h = Math.ceil((row + 1) * tileW) - Math.floor(row * tileW);
          var foreground = getForeGround({
            row: row,
            col: col,
            count: count,
            options: options });

          ctx.setFillStyle(qrCodeAlg.modules[row][col] ? foreground : options.background);
          ctx.fillRect(Math.round(col * tileW), Math.round(row * tileH), w, h);
        }
      }
      if (options.image) {




        // 画圆角矩形
        var drawRoundedRect = function drawRoundedRect(ctxi, x, y, width, height, r, lineWidth, fill, stroke) {
          ctxi.setLineWidth(lineWidth);
          ctxi.setFillStyle(options.background);
          ctxi.setStrokeStyle(options.background);
          ctxi.beginPath(); // draw top and top right corner 
          ctxi.moveTo(x + r, y);
          ctxi.arcTo(x + width, y, x + width, y + r, r); // draw right side and bottom right corner 
          ctxi.arcTo(x + width, y + height, x + width - r, y + height, r); // draw bottom and bottom left corner 
          ctxi.arcTo(x, y + height, x, y + height - r, r); // draw left and top left corner 
          ctxi.arcTo(x, y, x + r, y, r);
          ctxi.closePath();
          if (fill) {
            ctxi.fill();
          }
          if (stroke) {
            ctxi.stroke();
          }
        };var x = Number(((ratioSize - ratioImgSize) / 2).toFixed(2));var y = Number(((ratioSize - ratioImgSize) / 2).toFixed(2));drawRoundedRect(ctx, x, y, ratioImgSize, ratioImgSize, 2, 6, true, true);ctx.drawImage(options.image, x, y, ratioImgSize, ratioImgSize);
      }
      setTimeout(function () {
        ctx.draw(true, function () {
          // 保存到临时区域
          setTimeout(function () {
            uni.canvasToTempFilePath({
              width: options.width,
              height: options.height,
              destWidth: options.width,
              destHeight: options.height,
              canvasId: options.canvasId,
              quality: Number(1),
              success: function success(res) {
                if (options.cbResult) {
                  // 由于官方还没有统一此接口的输出字段，所以先判定下  支付宝为 res.apFilePath
                  if (!empty(res.tempFilePath)) {
                    options.cbResult(res.tempFilePath);
                  } else if (!empty(res.apFilePath)) {
                    options.cbResult(res.apFilePath);
                  } else {
                    options.cbResult(res.tempFilePath);
                  }
                }
              },
              fail: function fail(res) {
                if (options.cbResult) {
                  options.cbResult(res);
                }
              },
              complete: function complete() {
                uni.hideLoading();
              } },
            options.context);
          }, options.text.length + 100);
        });
      }, options.usingComponents ? 0 : 150);
    };
    createCanvas(this.options);
    // 空判定
    var empty = function empty(v) {
      var tp = typeof v,
      rt = false;
      if (tp == "number" && String(v) == "") {
        rt = true;
      } else if (tp == "undefined") {
        rt = true;
      } else if (tp == "object") {
        if (JSON.stringify(v) == "{}" || JSON.stringify(v) == "[]" || v == null) rt = true;
      } else if (tp == "string") {
        if (v == "" || v == "undefined" || v == "null" || v == "{}" || v == "[]") rt = true;
      } else if (tp == "function") {
        rt = false;
      }
      return rt;
    };
  };
  QRCode.prototype.clear = function (fn) {
    var ctx = uni.createCanvasContext(this.options.canvasId, this.options.context);
    ctx.clearRect(0, 0, this.options.size, this.options.size);
    ctx.draw(false, function () {
      if (fn) {
        fn();
      }
    });
  };
})();var _default =

QRCode;exports.default = _default;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 1)["default"]))

/***/ }),
/* 362 */,
/* 363 */,
/* 364 */,
/* 365 */,
/* 366 */,
/* 367 */,
/* 368 */,
/* 369 */
/*!**********************************************************!*\
  !*** ./node_modules/@babel/runtime/regenerator/index.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! regenerator-runtime */ 370);

/***/ }),
/* 370 */
/*!************************************************************!*\
  !*** ./node_modules/regenerator-runtime/runtime-module.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

// This method of obtaining a reference to the global object needs to be
// kept identical to the way it is obtained in runtime.js
var g = (function() {
  return this || (typeof self === "object" && self);
})() || Function("return this")();

// Use `getOwnPropertyNames` because not all browsers support calling
// `hasOwnProperty` on the global `self` object in a worker. See #183.
var hadRuntime = g.regeneratorRuntime &&
  Object.getOwnPropertyNames(g).indexOf("regeneratorRuntime") >= 0;

// Save the old regeneratorRuntime in case it needs to be restored later.
var oldRuntime = hadRuntime && g.regeneratorRuntime;

// Force reevalutation of runtime.js.
g.regeneratorRuntime = undefined;

module.exports = __webpack_require__(/*! ./runtime */ 371);

if (hadRuntime) {
  // Restore the original runtime.
  g.regeneratorRuntime = oldRuntime;
} else {
  // Remove the global property added by runtime.js.
  try {
    delete g.regeneratorRuntime;
  } catch(e) {
    g.regeneratorRuntime = undefined;
  }
}


/***/ }),
/* 371 */
/*!*****************************************************!*\
  !*** ./node_modules/regenerator-runtime/runtime.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

!(function(global) {
  "use strict";

  var Op = Object.prototype;
  var hasOwn = Op.hasOwnProperty;
  var undefined; // More compressible than void 0.
  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

  var inModule = typeof module === "object";
  var runtime = global.regeneratorRuntime;
  if (runtime) {
    if (inModule) {
      // If regeneratorRuntime is defined globally and we're in a module,
      // make the exports object identical to regeneratorRuntime.
      module.exports = runtime;
    }
    // Don't bother evaluating the rest of this file if the runtime was
    // already defined globally.
    return;
  }

  // Define the runtime globally (as expected by generated code) as either
  // module.exports (if we're in a module) or a new, empty object.
  runtime = global.regeneratorRuntime = inModule ? module.exports : {};

  function wrap(innerFn, outerFn, self, tryLocsList) {
    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []);

    // The ._invoke method unifies the implementations of the .next,
    // .throw, and .return methods.
    generator._invoke = makeInvokeMethod(innerFn, self, context);

    return generator;
  }
  runtime.wrap = wrap;

  // Try/catch helper to minimize deoptimizations. Returns a completion
  // record like context.tryEntries[i].completion. This interface could
  // have been (and was previously) designed to take a closure to be
  // invoked without arguments, but in all the cases we care about we
  // already have an existing method we want to call, so there's no need
  // to create a new function object. We can even get away with assuming
  // the method takes exactly one argument, since that happens to be true
  // in every case, so we don't have to touch the arguments object. The
  // only additional allocation required is the completion record, which
  // has a stable shape and so hopefully should be cheap to allocate.
  function tryCatch(fn, obj, arg) {
    try {
      return { type: "normal", arg: fn.call(obj, arg) };
    } catch (err) {
      return { type: "throw", arg: err };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed";

  // Returning this object from the innerFn has the same effect as
  // breaking out of the dispatch switch statement.
  var ContinueSentinel = {};

  // Dummy constructor functions that we use as the .constructor and
  // .constructor.prototype properties for functions that return Generator
  // objects. For full spec compliance, you may wish to configure your
  // minifier not to mangle the names of these two functions.
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}

  // This is a polyfill for %IteratorPrototype% for environments that
  // don't natively support it.
  var IteratorPrototype = {};
  IteratorPrototype[iteratorSymbol] = function () {
    return this;
  };

  var getProto = Object.getPrototypeOf;
  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
  if (NativeIteratorPrototype &&
      NativeIteratorPrototype !== Op &&
      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
    // This environment has a native %IteratorPrototype%; use it instead
    // of the polyfill.
    IteratorPrototype = NativeIteratorPrototype;
  }

  var Gp = GeneratorFunctionPrototype.prototype =
    Generator.prototype = Object.create(IteratorPrototype);
  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
  GeneratorFunctionPrototype.constructor = GeneratorFunction;
  GeneratorFunctionPrototype[toStringTagSymbol] =
    GeneratorFunction.displayName = "GeneratorFunction";

  // Helper for defining the .next, .throw, and .return methods of the
  // Iterator interface in terms of a single ._invoke method.
  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function(method) {
      prototype[method] = function(arg) {
        return this._invoke(method, arg);
      };
    });
  }

  runtime.isGeneratorFunction = function(genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor
      ? ctor === GeneratorFunction ||
        // For the native GeneratorFunction constructor, the best we can
        // do is to check its .name property.
        (ctor.displayName || ctor.name) === "GeneratorFunction"
      : false;
  };

  runtime.mark = function(genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;
      if (!(toStringTagSymbol in genFun)) {
        genFun[toStringTagSymbol] = "GeneratorFunction";
      }
    }
    genFun.prototype = Object.create(Gp);
    return genFun;
  };

  // Within the body of any async function, `await x` is transformed to
  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
  // `hasOwn.call(value, "__await")` to determine if the yielded value is
  // meant to be awaited.
  runtime.awrap = function(arg) {
    return { __await: arg };
  };

  function AsyncIterator(generator) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;
        if (value &&
            typeof value === "object" &&
            hasOwn.call(value, "__await")) {
          return Promise.resolve(value.__await).then(function(value) {
            invoke("next", value, resolve, reject);
          }, function(err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return Promise.resolve(value).then(function(unwrapped) {
          // When a yielded Promise is resolved, its final value becomes
          // the .value of the Promise<{value,done}> result for the
          // current iteration.
          result.value = unwrapped;
          resolve(result);
        }, function(error) {
          // If a rejected Promise was yielded, throw the rejection back
          // into the async generator function so it can be handled there.
          return invoke("throw", error, resolve, reject);
        });
      }
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new Promise(function(resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise =
        // If enqueue has been called before, then we want to wait until
        // all previous Promises have been resolved before calling invoke,
        // so that results are always delivered in the correct order. If
        // enqueue has not been called before, then it is important to
        // call invoke immediately, without waiting on a callback to fire,
        // so that the async generator function has the opportunity to do
        // any necessary setup in a predictable way. This predictability
        // is why the Promise constructor synchronously invokes its
        // executor callback, and why async functions synchronously
        // execute code before the first await. Since we implement simple
        // async functions in terms of async generators, it is especially
        // important to get this right, even though it requires care.
        previousPromise ? previousPromise.then(
          callInvokeWithMethodAndArg,
          // Avoid propagating failures to Promises returned by later
          // invocations of the iterator.
          callInvokeWithMethodAndArg
        ) : callInvokeWithMethodAndArg();
    }

    // Define the unified helper method that is used to implement .next,
    // .throw, and .return (see defineIteratorMethods).
    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);
  AsyncIterator.prototype[asyncIteratorSymbol] = function () {
    return this;
  };
  runtime.AsyncIterator = AsyncIterator;

  // Note that simple async functions are implemented on top of
  // AsyncIterator objects; they just return a Promise for the value of
  // the final result produced by the iterator.
  runtime.async = function(innerFn, outerFn, self, tryLocsList) {
    var iter = new AsyncIterator(
      wrap(innerFn, outerFn, self, tryLocsList)
    );

    return runtime.isGeneratorFunction(outerFn)
      ? iter // If outerFn is a generator, return the full iterator.
      : iter.next().then(function(result) {
          return result.done ? result.value : iter.next();
        });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;

    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        }

        // Be forgiving, per 25.3.3.3.3 of the spec:
        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
        return doneResult();
      }

      context.method = method;
      context.arg = arg;

      while (true) {
        var delegate = context.delegate;
        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);
          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }

        if (context.method === "next") {
          // Setting context._sent for legacy support of Babel's
          // function.sent implementation.
          context.sent = context._sent = context.arg;

        } else if (context.method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw context.arg;
          }

          context.dispatchException(context.arg);

        } else if (context.method === "return") {
          context.abrupt("return", context.arg);
        }

        state = GenStateExecuting;

        var record = tryCatch(innerFn, self, context);
        if (record.type === "normal") {
          // If an exception is thrown from innerFn, we leave state ===
          // GenStateExecuting and loop back for another invocation.
          state = context.done
            ? GenStateCompleted
            : GenStateSuspendedYield;

          if (record.arg === ContinueSentinel) {
            continue;
          }

          return {
            value: record.arg,
            done: context.done
          };

        } else if (record.type === "throw") {
          state = GenStateCompleted;
          // Dispatch the exception by looping back around to the
          // context.dispatchException(context.arg) call above.
          context.method = "throw";
          context.arg = record.arg;
        }
      }
    };
  }

  // Call delegate.iterator[context.method](context.arg) and handle the
  // result, either by returning a { value, done } result from the
  // delegate iterator, or by modifying context.method and context.arg,
  // setting context.delegate to null, and returning the ContinueSentinel.
  function maybeInvokeDelegate(delegate, context) {
    var method = delegate.iterator[context.method];
    if (method === undefined) {
      // A .throw or .return when the delegate iterator has no .throw
      // method always terminates the yield* loop.
      context.delegate = null;

      if (context.method === "throw") {
        if (delegate.iterator.return) {
          // If the delegate iterator has a return method, give it a
          // chance to clean up.
          context.method = "return";
          context.arg = undefined;
          maybeInvokeDelegate(delegate, context);

          if (context.method === "throw") {
            // If maybeInvokeDelegate(context) changed context.method from
            // "return" to "throw", let that override the TypeError below.
            return ContinueSentinel;
          }
        }

        context.method = "throw";
        context.arg = new TypeError(
          "The iterator does not provide a 'throw' method");
      }

      return ContinueSentinel;
    }

    var record = tryCatch(method, delegate.iterator, context.arg);

    if (record.type === "throw") {
      context.method = "throw";
      context.arg = record.arg;
      context.delegate = null;
      return ContinueSentinel;
    }

    var info = record.arg;

    if (! info) {
      context.method = "throw";
      context.arg = new TypeError("iterator result is not an object");
      context.delegate = null;
      return ContinueSentinel;
    }

    if (info.done) {
      // Assign the result of the finished delegate to the temporary
      // variable specified by delegate.resultName (see delegateYield).
      context[delegate.resultName] = info.value;

      // Resume execution at the desired location (see delegateYield).
      context.next = delegate.nextLoc;

      // If context.method was "throw" but the delegate handled the
      // exception, let the outer generator proceed normally. If
      // context.method was "next", forget context.arg since it has been
      // "consumed" by the delegate iterator. If context.method was
      // "return", allow the original .return call to continue in the
      // outer generator.
      if (context.method !== "return") {
        context.method = "next";
        context.arg = undefined;
      }

    } else {
      // Re-yield the result returned by the delegate method.
      return info;
    }

    // The delegate iterator is finished, so forget it and continue with
    // the outer generator.
    context.delegate = null;
    return ContinueSentinel;
  }

  // Define Generator.prototype.{next,throw,return} in terms of the
  // unified ._invoke helper method.
  defineIteratorMethods(Gp);

  Gp[toStringTagSymbol] = "Generator";

  // A Generator should always return itself as the iterator object when the
  // @@iterator function is called on it. Some browsers' implementations of the
  // iterator prototype chain incorrectly implement this, causing the Generator
  // object to not be returned from this call. This ensures that doesn't happen.
  // See https://github.com/facebook/regenerator/issues/274 for more details.
  Gp[iteratorSymbol] = function() {
    return this;
  };

  Gp.toString = function() {
    return "[object Generator]";
  };

  function pushTryEntry(locs) {
    var entry = { tryLoc: locs[0] };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    // The root entry object (effectively a try statement without a catch
    // or a finally block) gives us a place to store values thrown from
    // locations where there is no enclosing try statement.
    this.tryEntries = [{ tryLoc: "root" }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  runtime.keys = function(object) {
    var keys = [];
    for (var key in object) {
      keys.push(key);
    }
    keys.reverse();

    // Rather than returning an object with a next method, we keep
    // things simple and return the next function itself.
    return function next() {
      while (keys.length) {
        var key = keys.pop();
        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      }

      // To avoid creating an additional object, we just hang the .value
      // and .done properties off the next function object itself. This
      // also ensures that the minifier will not anonymize the function.
      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1, next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined;
          next.done = true;

          return next;
        };

        return next.next = next;
      }
    }

    // Return an iterator with no values.
    return { next: doneResult };
  }
  runtime.values = values;

  function doneResult() {
    return { value: undefined, done: true };
  }

  Context.prototype = {
    constructor: Context,

    reset: function(skipTempReset) {
      this.prev = 0;
      this.next = 0;
      // Resetting context._sent for legacy support of Babel's
      // function.sent implementation.
      this.sent = this._sent = undefined;
      this.done = false;
      this.delegate = null;

      this.method = "next";
      this.arg = undefined;

      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          // Not sure about the optimal order of these conditions:
          if (name.charAt(0) === "t" &&
              hasOwn.call(this, name) &&
              !isNaN(+name.slice(1))) {
            this[name] = undefined;
          }
        }
      }
    },

    stop: function() {
      this.done = true;

      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;
      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },

    dispatchException: function(exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;
      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;

        if (caught) {
          // If the dispatched exception was caught by a catch block,
          // then let that catch block handle the exception normally.
          context.method = "next";
          context.arg = undefined;
        }

        return !! caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          // Exception thrown outside of any try block that could handle
          // it, so set the completion value of the entire function to
          // throw the exception.
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }

          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },

    abrupt: function(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev &&
            hasOwn.call(entry, "finallyLoc") &&
            this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry &&
          (type === "break" ||
           type === "continue") &&
          finallyEntry.tryLoc <= arg &&
          arg <= finallyEntry.finallyLoc) {
        // Ignore the finally entry if control is not jumping to a
        // location outside the try/catch block.
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.method = "next";
        this.next = finallyEntry.finallyLoc;
        return ContinueSentinel;
      }

      return this.complete(record);
    },

    complete: function(record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" ||
          record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = this.arg = record.arg;
        this.method = "return";
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }

      return ContinueSentinel;
    },

    finish: function(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },

    "catch": function(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }

      // The context.catch method must only be called with a location
      // argument that corresponds to a known catch block.
      throw new Error("illegal catch attempt");
    },

    delegateYield: function(iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      if (this.method === "next") {
        // Deliberately forget the last sent value so that we don't
        // accidentally pass it on to the delegate.
        this.arg = undefined;
      }

      return ContinueSentinel;
    }
  };
})(
  // In sloppy mode, unbound `this` refers to the global object, fallback to
  // Function constructor if we're in global strict mode. That is sadly a form
  // of indirect eval which violates Content Security Policy.
  (function() {
    return this || (typeof self === "object" && self);
  })() || Function("return this")()
);


/***/ }),
/* 372 */,
/* 373 */,
/* 374 */,
/* 375 */,
/* 376 */,
/* 377 */,
/* 378 */,
/* 379 */,
/* 380 */,
/* 381 */,
/* 382 */,
/* 383 */,
/* 384 */,
/* 385 */,
/* 386 */,
/* 387 */,
/* 388 */,
/* 389 */,
/* 390 */,
/* 391 */,
/* 392 */,
/* 393 */
/*!**********************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/common/Picker/area.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;var _default = [{
  "name": "北京市",
  "city": [{
    "name": "北京城区",
    "area": [
    "东城区",
    "西城区",
    "朝阳区",
    "丰台区",
    "石景山区",
    "海淀区",
    "门头沟区",
    "房山区",
    "通州区",
    "顺义区",
    "昌平区",
    "大兴区",
    "怀柔区",
    "平谷区",
    "密云区",
    "延庆区"] }] },



{
  "name": "天津市",
  "city": [{
    "name": "天津市",
    "area": [
    "和平区",
    "河东区",
    "河西区",
    "南开区",
    "河北区",
    "红桥区",
    "东丽区",
    "西青区",
    "津南区",
    "北辰区",
    "武清区",
    "宝坻区",
    "滨海新区",
    "宁河区",
    "静海区",
    "蓟州区"] }] },



{
  "name": "河北省",
  "city": [{
    "name": "石家庄市",
    "area": [
    "长安区",
    "桥西区",
    "新华区",
    "井陉矿区",
    "裕华区",
    "藁城区",
    "鹿泉区",
    "栾城区",
    "井陉县",
    "正定县",
    "行唐县",
    "灵寿县",
    "高邑县",
    "深泽县",
    "赞皇县",
    "无极县",
    "平山县",
    "元氏县",
    "赵县",
    "辛集市",
    "晋州市",
    "新乐市"] },


  {
    "name": "唐山市",
    "area": [
    "路南区",
    "路北区",
    "古冶区",
    "开平区",
    "新  区",
    "丰润县",
    "滦  县",
    "滦南县",
    "乐亭县",
    "迁西县",
    "玉田县",
    "唐海县",
    "遵化市",
    "丰南市",
    "迁安市"] },


  {
    "name": "秦皇岛市",
    "area": [
    "海港区",
    "山海关区",
    "北戴河区",
    "青龙满族自治县",
    "昌黎县",
    "抚宁县",
    "卢龙县"] },


  {
    "name": "邯郸市",
    "area": [
    "邯山区",
    "丛台区",
    "复兴区",
    "峰峰矿区",
    "邯郸县",
    "临漳县",
    "成安县",
    "大名县",
    "涉  县",
    "磁  县",
    "肥乡县",
    "永年县",
    "邱  县",
    "鸡泽县",
    "广平县",
    "馆陶县",
    "魏  县",
    "曲周县",
    "武安市"] },


  {
    "name": "邢台市",
    "area": [
    "桥东区",
    "桥西区",
    "邢台县",
    "临城县",
    "内丘县",
    "柏乡县",
    "隆尧县",
    "任  县",
    "南和县",
    "宁晋县",
    "巨鹿县",
    "新河县",
    "广宗县",
    "平乡县",
    "威  县",
    "清河县",
    "临西县",
    "南宫市",
    "沙河市"] },


  {
    "name": "保定市",
    "area": [
    "新市区",
    "北市区",
    "南市区",
    "满城县",
    "清苑县",
    "涞水县",
    "阜平县",
    "徐水县",
    "定兴县",
    "唐  县",
    "高阳县",
    "容城县",
    "涞源县",
    "望都县",
    "安新县",
    "易  县",
    "曲阳县",
    "蠡  县",
    "顺平县",
    "博野",
    "雄县",
    "涿州市",
    "定州市",
    "安国市",
    "高碑店市"] },


  {
    "name": "张家口",
    "area": [
    "桥东区",
    "桥西区",
    "宣化区",
    "下花园区",
    "宣化县",
    "张北县",
    "康保县",
    "沽源县",
    "尚义县",
    "蔚  县",
    "阳原县",
    "怀安县",
    "万全县",
    "怀来县",
    "涿鹿县",
    "赤城县",
    "崇礼县"] },


  {
    "name": "承德市",
    "area": [
    "双桥区",
    "双滦区",
    "鹰手营子矿区",
    "承德县",
    "兴隆县",
    "平泉县",
    "滦平县",
    "隆化县",
    "丰宁满族自治县",
    "宽城满族自治县",
    "围场满族蒙古族自治县"] },


  {
    "name": "沧州市",
    "area": [
    "新华区",
    "运河区",
    "沧  县",
    "青  县",
    "东光县",
    "海兴县",
    "盐山县",
    "肃宁县",
    "南皮县",
    "吴桥县",
    "献  县",
    "孟村回族自治县",
    "泊头市",
    "任丘市",
    "黄骅市",
    "河间市"] },


  {
    "name": "廊坊市",
    "area": [
    "安次区",
    "固安县",
    "永清县",
    "香河县",
    "大城县",
    "文安县",
    "大厂回族自治县",
    "霸州市",
    "三河市"] },


  {
    "name": "衡水市",
    "area": [
    "桃城区",
    "枣强县",
    "武邑县",
    "武强县",
    "饶阳县",
    "安平县",
    "故城县",
    "景  县",
    "阜城县",
    "冀州市",
    "深州市"] }] },




{
  "name": "山西省",
  "city": [{
    "name": "太原市",
    "area": [
    "小店区",
    "迎泽区",
    "杏花岭区",
    "尖草坪区",
    "万柏林区",
    "晋源区",
    "清徐县",
    "阳曲县",
    "娄烦县",
    "古交市"] },


  {
    "name": "大同市",
    "area": [
    "城  区",
    "矿  区",
    "南郊区",
    "新荣区",
    "阳高县",
    "天镇县",
    "广灵县",
    "灵丘县",
    "浑源县",
    "左云县",
    "大同县"] },


  {
    "name": "阳泉市",
    "area": [
    "城  区",
    "矿  区",
    "郊  区",
    "平定县",
    "盂  县"] },


  {
    "name": "长治市",
    "area": [
    "城  区",
    "郊  区",
    "长治县",
    "襄垣县",
    "屯留县",
    "平顺县",
    "黎城县",
    "壶关县",
    "长子县",
    "武乡县",
    "沁  县",
    "沁源县",
    "潞城市"] },


  {
    "name": "晋城市",
    "area": [
    "城  区",
    "沁水县",
    "阳城县",
    "陵川县",
    "泽州县",
    "高平市"] },


  {
    "name": "朔州市",
    "area": [
    "朔城区",
    "平鲁区",
    "山阴县",
    "应  县",
    "右玉县",
    "怀仁县"] },


  {
    "name": "忻州市",
    "area": [
    "忻府区",
    "原平市",
    "定襄县",
    "五台县",
    "代  县",
    "繁峙县",
    "宁武县",
    "静乐县",
    "神池县",
    "五寨县",
    "岢岚县",
    "河曲县",
    "保德县",
    "偏关县"] },


  {
    "name": "吕梁市",
    "area": [
    "离石区",
    "孝义市",
    "汾阳市",
    "文水县",
    "交城县",
    "兴  县",
    "临  县",
    "柳林县",
    "石楼县",
    "岚  县",
    "方山县",
    "中阳县",
    "交口县"] },


  {
    "name": "晋中市",
    "area": [
    "榆次市",
    "介休市",
    "榆社县",
    "左权县",
    "和顺县",
    "昔阳县",
    "寿阳县",
    "太谷县",
    "祁  县",
    "平遥县",
    "灵石县"] },


  {
    "name": "临汾市",
    "area": [
    "临汾市",
    "侯马市",
    "霍州市",
    "曲沃县",
    "翼城县",
    "襄汾县",
    "洪洞县",
    "古  县",
    "安泽县",
    "浮山县",
    "吉  县",
    "乡宁县",
    "蒲  县",
    "大宁县",
    "永和县",
    "隰  县",
    "汾西县"] },


  {
    "name": "运城市",
    "area": [
    "运城市",
    "永济市",
    "河津市",
    "芮城县",
    "临猗县",
    "万荣县",
    "新绛县",
    "稷山县",
    "闻喜县",
    "夏  县",
    "绛  县",
    "平陆县",
    "垣曲县"] }] },




{
  "name": "内蒙古",
  "city": [{
    "name": "呼和浩特市",
    "area": [
    "新城区",
    "回民区",
    "玉泉区",
    "郊  区",
    "土默特左旗",
    "托克托县",
    "和林格尔县",
    "清水河县",
    "武川县"] },


  {
    "name": "包头市",
    "area": [
    "东河区",
    "昆都伦区",
    "青山区",
    "石拐矿区",
    "白云矿区",
    "郊  区",
    "土默特右旗",
    "固阳县",
    "达尔罕茂明安联合旗"] },


  {
    "name": "乌海市",
    "area": [
    "海勃湾区",
    "海南区",
    "乌达区"] },


  {
    "name": "赤峰市",
    "area": [
    "红山区",
    "元宝山区",
    "松山区",
    "阿鲁科尔沁旗",
    "巴林左旗",
    "巴林右旗",
    "林西县",
    "克什克腾旗",
    "翁牛特旗",
    "喀喇沁旗",
    "宁城县",
    "敖汉旗"] },


  {
    "name": "呼伦贝尔市",
    "area": [
    "海拉尔市",
    "满洲里市",
    "扎兰屯市",
    "牙克石市",
    "根河市",
    "额尔古纳市",
    "阿荣旗",
    "莫力达瓦达斡尔族自治旗",
    "鄂伦春自治旗",
    "鄂温克族自治旗",
    "新巴尔虎右旗",
    "新巴尔虎左旗",
    "陈巴尔虎旗"] },


  {
    "name": "兴安盟",
    "area": [
    "乌兰浩特市",
    "阿尔山市",
    "科尔沁右翼前旗",
    "科尔沁右翼中旗",
    "扎赉特旗",
    "突泉县"] },


  {
    "name": "通辽市",
    "area": [
    "科尔沁区",
    "霍林郭勒市",
    "科尔沁左翼中旗",
    "科尔沁左翼后旗",
    "开鲁县",
    "库伦旗",
    "奈曼旗",
    "扎鲁特旗"] },


  {
    "name": "锡林郭勒盟",
    "area": [
    "二连浩特市",
    "锡林浩特市",
    "阿巴嘎旗",
    "苏尼特左旗",
    "苏尼特右旗",
    "东乌珠穆沁旗",
    "西乌珠穆沁旗",
    "太仆寺旗",
    "镶黄旗",
    "正镶白旗",
    "正蓝旗",
    "多伦县"] },


  {
    "name": "乌兰察布盟",
    "area": [
    "集宁市",
    "丰镇市",
    "卓资县",
    "化德县",
    "商都县",
    "兴和县",
    "凉城县",
    "察哈尔右翼前旗",
    "察哈尔右翼中旗",
    "察哈尔右翼后旗",
    "四子王旗"] },


  {
    "name": "伊克昭盟",
    "area": [
    "东胜市",
    "达拉特旗",
    "准格尔旗",
    "鄂托克前旗",
    "鄂托克旗",
    "杭锦旗",
    "乌审旗",
    "伊金霍洛旗"] },


  {
    "name": "巴彦淖尔盟",
    "area": [
    "临河市",
    "五原县",
    "磴口县",
    "乌拉特前旗",
    "乌拉特中旗",
    "乌拉特后旗",
    "杭锦后旗"] },


  {
    "name": "阿拉善盟",
    "area": [
    "阿拉善左旗",
    "阿拉善右旗",
    "额济纳旗"] }] },




{
  "name": "辽宁省",
  "city": [{
    "name": "沈阳市",
    "area": [
    "沈河区",
    "皇姑区",
    "和平区",
    "大东区",
    "铁西区",
    "苏家屯区",
    "东陵区",
    "于洪区",
    "新民市",
    "法库县",
    "辽中县",
    "康平县",
    "新城子区"] },


  {
    "name": "大连市",
    "area": [
    "西岗区",
    "中山区",
    "沙河口区",
    "甘井子区",
    "旅顺口区",
    "金州区",
    "瓦房店市",
    "普兰店市",
    "庄河市",
    "长海县"] },


  {
    "name": "鞍山市",
    "area": [
    "铁东区",
    "铁西区",
    "立山区",
    "千山区",
    "海城市",
    "台安县",
    "岫岩满族自治县"] },


  {
    "name": "抚顺市",
    "area": [
    "顺城区",
    "新抚区",
    "东洲区",
    "望花区",
    "抚顺县",
    "清原满族自治县",
    "新宾满族自治县"] },


  {
    "name": "本溪市",
    "area": [
    "平山区",
    "明山区",
    "溪湖区",
    "南芬区",
    "本溪满族自治县",
    "桓仁满族自治县"] },


  {
    "name": "丹东市",
    "area": [
    "振兴区",
    "元宝区",
    "振安区",
    "东港市",
    "凤城市",
    "宽甸满族自治县"] },


  {
    "name": "锦州市",
    "area": [
    "太和区",
    "古塔区",
    "凌河区",
    "凌海市",
    "黑山县",
    "义县",
    "北宁市"] },


  {
    "name": "营口市",
    "area": [
    "站前区",
    "西市区",
    "鲅鱼圈区",
    "老边区",
    "大石桥市",
    "盖州市"] },


  {
    "name": "阜新市",
    "area": [
    "海州区",
    "新邱区",
    "太平区",
    "清河门区",
    "细河区",
    "彰武县",
    "阜新蒙古族自治县"] },


  {
    "name": "辽阳市",
    "area": [
    "白塔区",
    "文圣区",
    "宏伟区",
    "太子河区",
    "弓长岭区",
    "灯塔市",
    "辽阳县"] },


  {
    "name": "盘锦",
    "area": [
    "双台子区",
    "兴隆台区",
    "盘山县",
    "大洼县"] },


  {
    "name": "铁岭市",
    "area": [
    "银州区",
    "清河区",
    "调兵山市",
    "开原市",
    "铁岭县",
    "昌图县",
    "西丰县"] },


  {
    "name": "朝阳市",
    "area": [
    "双塔区",
    "龙城区",
    "凌源市",
    "北票市",
    "朝阳县",
    "建平县",
    "喀喇沁左翼蒙古族自治县"] },


  {
    "name": "葫芦岛市",
    "area": [
    "龙港区",
    "南票区",
    "连山区",
    "兴城市",
    "绥中县",
    "建昌县"] }] },




{
  "name": "吉林省",
  "city": [{
    "name": "长春市",
    "area": [
    "朝阳区",
    "宽城区",
    "二道区",
    "南关区",
    "绿园区",
    "双阳区",
    "九台市",
    "榆树市",
    "德惠市",
    "农安县"] },


  {
    "name": "吉林市",
    "area": [
    "船营区",
    "昌邑区",
    "龙潭区",
    "丰满区",
    "舒兰市",
    "桦甸市",
    "蛟河市",
    "磐石市",
    "永吉县"] },


  {
    "name": "四平",
    "area": [
    "铁西区",
    "铁东区",
    "公主岭市",
    "双辽市",
    "梨树县",
    "伊通满族自治县"] },


  {
    "name": "辽源市",
    "area": [
    "龙山区",
    "西安区",
    "东辽县",
    "东丰县"] },


  {
    "name": "通化市",
    "area": [
    "东昌区",
    "二道江区",
    "梅河口市",
    "集安市",
    "通化县",
    "辉南县",
    "柳河县"] },


  {
    "name": "白山市",
    "area": [
    "八道江区",
    "江源区",
    "临江市",
    "靖宇县",
    "抚松县",
    "长白朝鲜族自治县"] },


  {
    "name": "松原市",
    "area": [
    "宁江区",
    "乾安县",
    "长岭县",
    "扶余县",
    "前郭尔罗斯蒙古族自治县"] },


  {
    "name": "白城市",
    "area": [
    "洮北区",
    "大安市",
    "洮南市",
    "镇赉县",
    "通榆县"] },


  {
    "name": "延边朝鲜族自治州",
    "area": [
    "延吉市",
    "图们市",
    "敦化市",
    "龙井市",
    "珲春市",
    "和龙市",
    "安图县",
    "汪清县"] }] },




{
  "name": "黑龙江省",
  "city": [{
    "name": "哈尔滨市",
    "area": [
    "松北区",
    "道里区",
    "南岗区",
    "平房区",
    "香坊区",
    "道外区",
    "呼兰区",
    "阿城区",
    "双城市",
    "尚志市",
    "五常市",
    "宾县",
    "方正县",
    "通河县",
    "巴彦县",
    "延寿县",
    "木兰县",
    "依兰县"] },


  {
    "name": "齐齐哈尔市",
    "area": [
    "龙沙区",
    "昂昂溪区",
    "铁锋区",
    "建华区",
    "富拉尔基区",
    "碾子山区",
    "梅里斯达斡尔族区",
    "讷河市",
    "富裕县",
    "拜泉县",
    "甘南县",
    "依安县",
    "克山县",
    "泰来县",
    "克东县",
    "龙江县"] },


  {
    "name": "鹤岗市",
    "area": [
    "兴山区",
    "工农区",
    "南山区",
    "兴安区",
    "向阳区",
    "东山区",
    "萝北县",
    "绥滨县"] },


  {
    "name": "双鸭山",
    "area": [
    "尖山区",
    "岭东区",
    "四方台区",
    "宝山区",
    "集贤县",
    "宝清县",
    "友谊县",
    "饶河县"] },


  {
    "name": "鸡西市",
    "area": [
    "鸡冠区",
    "恒山区",
    "城子河区",
    "滴道区",
    "梨树区",
    "麻山区",
    "密山市",
    "虎林市",
    "鸡东县"] },


  {
    "name": "大庆市",
    "area": [
    "萨尔图区",
    "红岗区",
    "龙凤区",
    "让胡路区",
    "大同区",
    "林甸县",
    "肇州县",
    "肇源县",
    "杜尔伯特蒙古族自治县"] },


  {
    "name": "伊春市",
    "area": [
    "伊春区",
    "带岭区",
    "南岔区",
    "金山屯区",
    "西林区",
    "美溪区",
    "乌马河区",
    "翠峦区",
    "友好区",
    "上甘岭区",
    "五营区",
    "红星区",
    "新青区",
    "汤旺河区",
    "乌伊岭区",
    "铁力市",
    "嘉荫县"] },


  {
    "name": "牡丹江市",
    "area": [
    "爱民区",
    "东安区",
    "阳明区",
    "西安区",
    "绥芬河市",
    "宁安市",
    "海林市",
    "穆棱市",
    "林口县",
    "东宁县"] },


  {
    "name": "佳木斯市",
    "area": [
    "向阳区",
    "前进区",
    "东风区",
    "郊区",
    "同江市",
    "富锦市",
    "桦川县",
    "抚远县",
    "桦南县",
    "汤原县"] },


  {
    "name": "七台河市",
    "area": [
    "桃山区",
    "新兴区",
    "茄子河区",
    "勃利县"] },


  {
    "name": "黑河市",
    "area": [
    "爱辉区",
    "北安市",
    "五大连池市",
    "逊克县",
    "嫩江县",
    "孙吴县"] },


  {
    "name": "绥化市",
    "area": [
    "北林区",
    "安达市",
    "肇东市",
    "海伦市",
    "绥棱县",
    "兰西县",
    "明水县",
    "青冈县",
    "庆安县",
    "望奎县"] },


  {
    "name": "大兴安岭地区",
    "area": [
    "呼玛县",
    "塔河县",
    "漠河县",
    "大兴安岭辖区"] }] },




{
  "name": "上海市",
  "city": [{
    "name": "上海市",
    "area": [
    "黄浦区",
    "卢湾区",
    "徐汇区",
    "长宁区",
    "静安区",
    "普陀区",
    "闸北区",
    "虹口区",
    "杨浦区",
    "宝山区",
    "闵行区",
    "嘉定区",
    "松江区",
    "金山区",
    "青浦区",
    "南汇区",
    "奉贤区",
    "浦东新区",
    "崇明县"] }] },



{
  "name": "江苏省",
  "city": [{
    "name": "南京市",
    "area": [
    "玄武区",
    "白下区",
    "秦淮区",
    "建邺区",
    "鼓楼区",
    "下关区",
    "栖霞区",
    "雨花台区",
    "浦口区",
    "江宁区",
    "六合区",
    "溧水县",
    "高淳县"] },


  {
    "name": "苏州市",
    "area": [
    "金阊区",
    "平江区",
    "沧浪区",
    "虎丘区",
    "吴中区",
    "相城区",
    "常熟市",
    "张家港市",
    "昆山市",
    "吴江市",
    "太仓市"] },


  {
    "name": "无锡市",
    "area": [
    "崇安区",
    "南长区",
    "北塘区",
    "滨湖区",
    "锡山区",
    "惠山区",
    "江阴市",
    "宜兴市"] },


  {
    "name": "常州市",
    "area": [
    "钟楼区",
    "天宁区",
    "戚墅堰区",
    "新北区",
    "武进区",
    "金坛市",
    "溧阳市"] },


  {
    "name": "镇江市",
    "area": [
    "京口区",
    "润州区",
    "丹徒区",
    "丹阳市",
    "扬中市",
    "句容市"] },


  {
    "name": "南通市",
    "area": [
    "崇川区",
    "港闸区",
    "通州市",
    "如皋市",
    "海门市",
    "启东市",
    "海安县",
    "如东县"] },


  {
    "name": "泰州市",
    "area": [
    "海陵区",
    "高港区",
    "姜堰市",
    "泰兴市",
    "靖江市",
    "兴化市"] },


  {
    "name": "扬州市",
    "area": [
    "广陵区",
    "维扬区",
    "邗江区",
    "江都市",
    "仪征市",
    "高邮市",
    "宝应县"] },


  {
    "name": "盐城市",
    "area": [
    "亭湖区",
    "盐都区",
    "大丰市",
    "东台市",
    "建湖县",
    "射阳县",
    "阜宁县",
    "滨海县",
    "响水县"] },


  {
    "name": "连云港市",
    "area": [
    "新浦区",
    "海州区",
    "连云区",
    "东海县",
    "灌云县",
    "赣榆县",
    "灌南县"] },


  {
    "name": "徐州市",
    "area": [
    "云龙区",
    "鼓楼区",
    "九里区",
    "泉山区",
    "贾汪区",
    "邳州市",
    "新沂市",
    "铜山县",
    "睢宁县",
    "沛县",
    "丰县"] },


  {
    "name": "淮安市",
    "area": [
    "清河区",
    "清浦区",
    "楚州区",
    "淮阴区",
    "涟水县",
    "洪泽县",
    "金湖县",
    "盱眙县"] },


  {
    "name": "宿迁市",
    "area": [
    "宿城区",
    "宿豫区",
    "沭阳县",
    "泗阳县",
    "泗洪县"] }] },




{
  "name": "浙江省",
  "city": [{
    "name": "杭州市",
    "area": [
    "拱墅区",
    "西湖区",
    "上城区",
    "下城区",
    "江干区",
    "滨江区",
    "余杭区",
    "萧山区",
    "建德市",
    "富阳市",
    "临安市",
    "桐庐县",
    "淳安县"] },


  {
    "name": "宁波市",
    "area": [
    "海曙区",
    "江东区",
    "江北区",
    "镇海区",
    "北仑区",
    "鄞州区",
    "余姚市",
    "慈溪市",
    "奉化市",
    "宁海县",
    "象山县"] },


  {
    "name": "温州市",
    "area": [
    "鹿城区",
    "龙湾区",
    "瓯海区",
    "瑞安市",
    "乐清市",
    "永嘉县",
    "洞头县",
    "平阳县",
    "苍南县",
    "文成县",
    "泰顺县"] },


  {
    "name": "嘉兴市",
    "area": [
    "秀城区",
    "秀洲区",
    "海宁市",
    "平湖市",
    "桐乡市",
    "嘉善县",
    "海盐县"] },


  {
    "name": "湖州市",
    "area": [
    "吴兴区",
    "南浔区",
    "长兴县",
    "德清县",
    "安吉县"] },


  {
    "name": "绍兴市",
    "area": [
    "越城区",
    "诸暨市",
    "上虞市",
    "嵊州市",
    "绍兴县",
    "新昌县"] },


  {
    "name": "金华市",
    "area": [
    "婺城区",
    "金东区",
    "兰溪市",
    "义乌市",
    "东阳市",
    "永康市",
    "武义县",
    "浦江县",
    "磐安县"] },


  {
    "name": "衢州市",
    "area": [
    "柯城区",
    "衢江区",
    "江山市",
    "龙游县",
    "常山县",
    "开化县"] },


  {
    "name": "舟山市",
    "area": [
    "定海区",
    "普陀区",
    "岱山县",
    "嵊泗县"] },


  {
    "name": "台州市",
    "area": [
    "椒江区",
    "黄岩区",
    "路桥区",
    "临海市",
    "温岭市",
    "玉环县",
    "天台县",
    "仙居县",
    "三门县"] },


  {
    "name": "丽水市",
    "area": [
    "莲都区",
    "龙泉市",
    "缙云县",
    "青田县",
    "云和县",
    "遂昌县",
    "松阳县",
    "庆元县",
    "景宁畲族自治县"] }] },




{
  "name": "安徽省",
  "city": [{
    "name": "合肥市",
    "area": [
    "庐阳区",
    "瑶海区",
    "蜀山区",
    "包河区",
    "长丰县",
    "肥东县",
    "肥西县"] },


  {
    "name": "芜湖市",
    "area": [
    "镜湖区",
    "弋江区",
    "鸠江区",
    "三山区",
    "芜湖县",
    "南陵县",
    "繁昌县"] },


  {
    "name": "蚌埠市",
    "area": [
    "蚌山区",
    "龙子湖区",
    "禹会区",
    "淮上区",
    "怀远县",
    "固镇县",
    "五河县"] },


  {
    "name": "淮南市",
    "area": [
    "田家庵区",
    "大通区",
    "谢家集区",
    "八公山区",
    "潘集区",
    "凤台县"] },


  {
    "name": "马鞍山市",
    "area": [
    "雨山区",
    "花山区",
    "金家庄区",
    "当涂县"] },


  {
    "name": "淮北市",
    "area": [
    "相山区",
    "杜集区",
    "烈山区",
    "濉溪县"] },


  {
    "name": "铜陵市",
    "area": [
    "铜官山区",
    "狮子山区",
    "郊区",
    "铜陵县"] },


  {
    "name": "安庆市",
    "area": [
    "迎江区",
    "大观区",
    "宜秀区",
    "桐城市",
    "宿松县",
    "枞阳县",
    "太湖县",
    "怀宁县",
    "岳西县",
    "望江县",
    "潜山县"] },


  {
    "name": "黄山市",
    "area": [
    "屯溪区",
    "黄山区",
    "徽州区",
    "休宁县",
    "歙县",
    "祁门县",
    "黟县"] },


  {
    "name": "滁州市",
    "area": [
    "琅琊区",
    "南谯区",
    "天长市",
    "明光市",
    "全椒县",
    "来安县",
    "定远县",
    "凤阳县"] },


  {
    "name": "阜阳市",
    "area": [
    "颍州区",
    "颍东区",
    "颍泉区",
    "界首市",
    "临泉县",
    "颍上县",
    "阜南县",
    "太和县"] },


  {
    "name": "宿州市",
    "area": [
    "埇桥区",
    "萧县",
    "泗县",
    "砀山县",
    "灵璧县"] },


  {
    "name": "巢湖市",
    "area": [
    "居巢区",
    "含山县",
    "无为县",
    "庐江县",
    "和县"] },


  {
    "name": "六安市",
    "area": [
    "金安区",
    "裕安区",
    "寿县",
    "霍山县",
    "霍邱县",
    "舒城县",
    "金寨县"] },


  {
    "name": "亳州市",
    "area": [
    "谯城区",
    "利辛县",
    "涡阳县",
    "蒙城县"] },


  {
    "name": "池州市",
    "area": [
    "贵池区",
    "东至县",
    "石台县",
    "青阳县"] },


  {
    "name": "宣城市",
    "area": [
    "宣州区",
    "宁国市",
    "广德县",
    "郎溪县",
    "泾县",
    "旌德县",
    "绩溪县"] }] },




{
  "name": "福建省",
  "city": [{
    "name": "福州市",
    "area": [
    "鼓楼区",
    "台江区",
    "仓山区",
    "马尾区",
    "晋安区",
    "福清市",
    "长乐市",
    "闽侯县",
    "闽清县",
    "永泰县",
    "连江县",
    "罗源县",
    "平潭县"] },


  {
    "name": "厦门市",
    "area": [
    "思明区",
    "海沧区",
    "湖里区",
    "集美区",
    "同安区",
    "翔安区"] },


  {
    "name": "莆田市",
    "area": [
    "城厢区",
    "涵江区",
    "荔城区",
    "秀屿区",
    "仙游县"] },


  {
    "name": "三明市",
    "area": [
    "梅列区",
    "三元区",
    "永安市",
    "明溪县",
    "将乐县",
    "大田县",
    "宁化县",
    "建宁县",
    "沙县",
    "尤溪县",
    "清流县",
    "泰宁县"] },


  {
    "name": "泉州市",
    "area": [
    "鲤城区",
    "丰泽区",
    "洛江区",
    "泉港区",
    "石狮市",
    "晋江市",
    "南安市",
    "惠安县",
    "永春县",
    "安溪县",
    "德化县",
    "金门县"] },


  {
    "name": "漳州市",
    "area": [
    "芗城区",
    "龙文区",
    "龙海市",
    "平和县",
    "南靖县",
    "诏安县",
    "漳浦县",
    "华安县",
    "东山县",
    "长泰县",
    "云霄县"] },


  {
    "name": "南平市",
    "area": [
    "延平区",
    "建瓯市",
    "邵武市",
    "武夷山市",
    "建阳市",
    "松溪县",
    "光泽县",
    "顺昌县",
    "浦城县",
    "政和县"] },


  {
    "name": "龙岩市",
    "area": [
    "新罗区",
    "漳平市",
    "长汀县",
    "武平县",
    "上杭县",
    "永定县",
    "连城县"] },


  {
    "name": "宁德市",
    "area": [
    "蕉城区",
    "福安市",
    "福鼎市",
    "寿宁县",
    "霞浦县",
    "柘荣县",
    "屏南县",
    "古田县",
    "周宁县"] }] },




{
  "name": "江西省",
  "city": [{
    "name": "南昌市",
    "area": [
    "东湖区",
    "西湖区",
    "青云谱区",
    "湾里区",
    "青山湖区",
    "新建县",
    "南昌县",
    "进贤县",
    "安义县"] },


  {
    "name": "景德镇市",
    "area": [
    "珠山区",
    "昌江区",
    "乐平市",
    "浮梁县"] },


  {
    "name": "萍乡市",
    "area": [
    "安源区",
    "湘东区",
    "莲花县",
    "上栗县",
    "芦溪县"] },


  {
    "name": "九江市",
    "area": [
    "浔阳区",
    "庐山区",
    "瑞昌市",
    "九江县",
    "星子县",
    "武宁县",
    "彭泽县",
    "永修县",
    "修水县",
    "湖口县",
    "德安县",
    "都昌县"] },


  {
    "name": "新余市",
    "area": [
    "渝水区",
    "分宜县"] },


  {
    "name": "鹰潭市",
    "area": [
    "月湖区",
    "贵溪市",
    "余江县"] },


  {
    "name": "赣州市",
    "area": [
    "章贡区",
    "瑞金市",
    "南康市",
    "石城县",
    "安远县",
    "赣县",
    "宁都县",
    "寻乌县",
    "兴国县",
    "定南县",
    "上犹县",
    "于都县",
    "龙南县",
    "崇义县",
    "信丰县",
    "全南县",
    "大余县",
    "会昌县"] },


  {
    "name": "吉安市",
    "area": [
    "吉州区",
    "青原区",
    "井冈山市",
    "吉安县",
    "永丰县",
    "永新县",
    "新干县",
    "泰和县",
    "峡江县",
    "遂川县",
    "安福县",
    "吉水县",
    "万安县"] },


  {
    "name": "宜春市",
    "area": [
    "袁州区",
    "丰城市",
    "樟树市",
    "高安市",
    "铜鼓县",
    "靖安县",
    "宜丰县",
    "奉新县",
    "万载县",
    "上高县"] },


  {
    "name": "抚州市",
    "area": [
    "临川区",
    "南丰县",
    "乐安县",
    "金溪县",
    "南城县",
    "东乡县",
    "资溪县",
    "宜黄县",
    "广昌县",
    "黎川县",
    "崇仁县"] },


  {
    "name": "上饶市",
    "area": [
    "信州区",
    "德兴市",
    "上饶县",
    "广丰县",
    "鄱阳县",
    "婺源县",
    "铅山县",
    "余干县",
    "横峰县",
    "弋阳县",
    "玉山县",
    "万年县"] }] },




{
  "name": "山东省",
  "city": [{
    "name": "济南市",
    "area": [
    "市中区",
    "历下区",
    "天桥区",
    "槐荫区",
    "历城区",
    "长清区",
    "章丘市",
    "平阴县",
    "济阳县",
    "商河县"] },


  {
    "name": "青岛市",
    "area": [
    "市南区",
    "市北区",
    "城阳区",
    "四方区",
    "李沧区",
    "黄岛区",
    "崂山区",
    "胶南市",
    "胶州市",
    "平度市",
    "莱西市",
    "即墨市"] },


  {
    "name": "淄博市",
    "area": [
    "张店区",
    "临淄区",
    "淄川区",
    "博山区",
    "周村区",
    "桓台县",
    "高青县",
    "沂源县"] },


  {
    "name": "枣庄市",
    "area": [
    "市中区",
    "山亭区",
    "峄城区",
    "台儿庄区",
    "薛城区",
    "滕州市"] },


  {
    "name": "东营市",
    "area": [
    "东营区",
    "河口区",
    "垦利县",
    "广饶县",
    "利津县"] },


  {
    "name": "烟台市",
    "area": [
    "芝罘区",
    "福山区",
    "牟平区",
    "莱山区",
    "龙口市",
    "莱阳市",
    "莱州市",
    "招远市",
    "蓬莱市",
    "栖霞市",
    "海阳市",
    "长岛县"] },


  {
    "name": "潍坊市",
    "area": [
    "潍城区",
    "寒亭区",
    "坊子区",
    "奎文区",
    "青州市",
    "诸城市",
    "寿光市",
    "安丘市",
    "高密市",
    "昌邑市",
    "昌乐县",
    "临朐县"] },


  {
    "name": "济宁市",
    "area": [
    "市中区",
    "任城区",
    "曲阜市",
    "兖州市",
    "邹城市",
    "鱼台县",
    "金乡县",
    "嘉祥县",
    "微山县",
    "汶上县",
    "泗水县",
    "梁山县"] },


  {
    "name": "泰安市",
    "area": [
    "泰山区",
    "岱岳区",
    "新泰市",
    "肥城市",
    "宁阳县",
    "东平县"] },


  {
    "name": "威海市",
    "area": [
    "环翠区",
    "乳山市",
    "文登市",
    "荣成市"] },


  {
    "name": "日照市",
    "area": [
    "东港区",
    "岚山区",
    "五莲县",
    "莒县"] },


  {
    "name": "莱芜市",
    "area": [
    "莱城区",
    "钢城区"] },


  {
    "name": "临沂市",
    "area": [
    "兰山区",
    "罗庄区",
    "河东区",
    "沂南县",
    "郯城县",
    "沂水县",
    "苍山县",
    "费县",
    "平邑县",
    "莒南县",
    "蒙阴县",
    "临沭县"] },


  {
    "name": "德州市",
    "area": [
    "德城区",
    "乐陵市",
    "禹城市",
    "陵县",
    "宁津县",
    "齐河县",
    "武城县",
    "庆云县",
    "平原县",
    "夏津县",
    "临邑县"] },


  {
    "name": "聊城市",
    "area": [
    "东昌府区",
    "临清市",
    "高唐县",
    "阳谷县",
    "茌平县",
    "莘县",
    "东阿县",
    "冠县"] },


  {
    "name": "滨州市",
    "area": [
    "滨城区",
    "邹平县",
    "沾化县",
    "惠民县",
    "博兴县",
    "阳信县",
    "无棣县"] },


  {
    "name": "菏泽市",
    "area": [
    "牡丹区",
    "鄄城县",
    "单县",
    "郓城县",
    "曹县",
    "定陶县",
    "巨野县",
    "东明县",
    "成武县"] }] },




{
  "name": "河南省",
  "city": [{
    "name": "郑州市",
    "area": [
    "中原区",
    "金水区",
    "二七区",
    "管城回族区",
    "上街区",
    "惠济区",
    "巩义市",
    "新郑市",
    "新密市",
    "登封市",
    "荥阳市",
    "中牟县"] },


  {
    "name": "开封市",
    "area": [
    "鼓楼区",
    "龙亭区",
    "顺河回族区",
    "禹王台区",
    "金明区",
    "开封县",
    "尉氏县",
    "兰考县",
    "杞县",
    "通许县"] },


  {
    "name": "洛阳市",
    "area": [
    "西工区",
    "老城区",
    "涧西区",
    "瀍河回族区",
    "洛龙区",
    "吉利区",
    "偃师市",
    "孟津县",
    "汝阳县",
    "伊川县",
    "洛宁县",
    "嵩县",
    "宜阳县",
    "新安县",
    "栾川县"] },


  {
    "name": "平顶山市",
    "area": [
    "新华区",
    "卫东区",
    "湛河区",
    "石龙区",
    "汝州市",
    "舞钢市",
    "宝丰县",
    "叶县",
    "郏县",
    "鲁山县"] },


  {
    "name": "安阳市",
    "area": [
    "北关区",
    "文峰区",
    "殷都区",
    "龙安区",
    "林州市",
    "安阳县",
    "滑县",
    "内黄县",
    "汤阴县"] },


  {
    "name": "鹤壁市",
    "area": [
    "淇滨区",
    "山城区",
    "鹤山区",
    "浚县",
    "淇县"] },


  {
    "name": "新乡市",
    "area": [
    "卫滨区",
    "红旗区",
    "凤泉区",
    "牧野区",
    "卫辉市",
    "辉县市",
    "新乡县",
    "获嘉县",
    "原阳县",
    "长垣县",
    "封丘县",
    "延津县"] },


  {
    "name": "焦作市",
    "area": [
    "解放区",
    "中站区",
    "马村区",
    "山阳区",
    "沁阳市",
    "孟州市",
    "修武县",
    "温县",
    "武陟县",
    "博爱县"] },


  {
    "name": "濮阳市",
    "area": [
    "华龙区",
    "濮阳县",
    "南乐县",
    "台前县",
    "清丰县",
    "范县"] },


  {
    "name": "许昌市",
    "area": [
    "魏都区",
    "禹州市",
    "长葛市",
    "许昌县",
    "鄢陵县",
    "襄城县"] },


  {
    "name": "漯河市",
    "area": [
    "源汇区",
    "郾城区",
    "召陵区",
    "临颍县",
    "舞阳县"] },


  {
    "name": "三门峡市",
    "area": [
    "湖滨区",
    "义马市",
    "灵宝市",
    "渑池县",
    "卢氏县",
    "陕县"] },


  {
    "name": "南阳市",
    "area": [
    "卧龙区",
    "宛城区",
    "邓州市",
    "桐柏县",
    "方城县",
    "淅川县",
    "镇平县",
    "唐河县",
    "南召县",
    "内乡县",
    "新野县",
    "社旗县",
    "西峡县"] },


  {
    "name": "商丘市",
    "area": [
    "梁园区",
    "睢阳区",
    "永城市",
    "宁陵县",
    "虞城县",
    "民权县",
    "夏邑县",
    "柘城县",
    "睢县"] },


  {
    "name": "信阳市",
    "area": [
    "浉河区",
    "平桥区",
    "潢川县",
    "淮滨县",
    "息县",
    "新县",
    "商城县",
    "固始县",
    "罗山县",
    "光山县"] },


  {
    "name": "周口市",
    "area": [
    "川汇区",
    "项城市",
    "商水县",
    "淮阳县",
    "太康县",
    "鹿邑县",
    "西华县",
    "扶沟县",
    "沈丘县",
    "郸城县"] },


  {
    "name": "驻马店市",
    "area": [
    "驿城区",
    "确山县",
    "新蔡县",
    "上蔡县",
    "西平县",
    "泌阳县",
    "平舆县",
    "汝南县",
    "遂平县",
    "正阳县"] },


  {
    "name": "焦作市",
    "area": [
    "济源市"] }] },




{
  "name": "湖北省",
  "city": [{
    "name": "武汉市",
    "area": [
    "江岸区",
    "武昌区",
    "江汉区",
    "硚口区",
    "汉阳区",
    "青山区",
    "洪山区",
    "东西湖区",
    "汉南区",
    "蔡甸区",
    "江夏区",
    "黄陂区",
    "新洲区"] },


  {
    "name": "黄石市",
    "area": [
    "黄石港区",
    "西塞山区",
    "下陆区",
    "铁山区",
    "大冶市",
    "阳新县"] },


  {
    "name": "十堰市",
    "area": [
    "张湾区",
    "茅箭区",
    "丹江口市",
    "郧县",
    "竹山县",
    "房县",
    "郧西县",
    "竹溪县"] },


  {
    "name": "荆州市",
    "area": [
    "沙市区",
    "荆州区",
    "洪湖市",
    "石首市",
    "松滋市",
    "监利县",
    "公安县",
    "江陵县"] },


  {
    "name": "宜昌市",
    "area": [
    "西陵区",
    "伍家岗区",
    "点军区",
    "猇亭区",
    "夷陵区",
    "宜都市",
    "当阳市",
    "枝江市",
    "秭归县",
    "远安县",
    "兴山县",
    "五峰土家族自治县",
    "长阳土家族自治县"] },


  {
    "name": "襄樊市",
    "area": [
    "襄城区",
    "樊城区",
    "襄阳区",
    "老河口市",
    "枣阳市",
    "宜城市",
    "南漳县",
    "谷城县",
    "保康县"] },


  {
    "name": "鄂州市",
    "area": [
    "鄂城区",
    "华容区",
    "梁子湖区"] },


  {
    "name": "荆门市",
    "area": [
    "东宝区",
    "掇刀区",
    "钟祥市",
    "京山县",
    "沙洋县"] },


  {
    "name": "孝感市",
    "area": [
    "孝南区",
    "应城市",
    "安陆市",
    "汉川市",
    "云梦县",
    "大悟县",
    "孝昌县"] },


  {
    "name": "黄冈市",
    "area": [
    "黄州区",
    "麻城市",
    "武穴市",
    "红安县",
    "罗田县",
    "浠水县",
    "蕲春县",
    "黄梅县",
    "英山县",
    "团风县"] },


  {
    "name": "咸宁市",
    "area": [
    "咸安区",
    "赤壁市",
    "嘉鱼县",
    "通山县",
    "崇阳县",
    "通城县"] },


  {
    "name": "随州市",
    "area": [
    "曾都区",
    "广水市"] },


  {
    "name": "恩施土家族苗族自治州",
    "area": [
    "恩施市",
    "利川市",
    "建始县",
    "来凤县",
    "巴东县",
    "鹤峰县",
    "宣恩县",
    "咸丰县"] },


  {
    "name": "仙桃市",
    "area": [
    "仙桃"] },


  {
    "name": "天门市",
    "area": [
    "天门"] },


  {
    "name": "潜江市",
    "area": [
    "潜江"] },


  {
    "name": "神农架林区",
    "area": [
    "神农架林区"] }] },




{
  "name": "湖南省",
  "city": [{
    "name": "长沙市",
    "area": [
    "岳麓区",
    "芙蓉区",
    "天心区",
    "开福区",
    "雨花区",
    "浏阳市",
    "长沙县",
    "望城县",
    "宁乡县"] },


  {
    "name": "株洲市",
    "area": [
    "天元区",
    "荷塘区",
    "芦淞区",
    "石峰区",
    "醴陵市",
    "株洲县",
    "炎陵县",
    "茶陵县",
    "攸县"] },


  {
    "name": "湘潭市",
    "area": [
    "岳塘区",
    "雨湖区",
    "湘乡市",
    "韶山市",
    "湘潭县"] },


  {
    "name": "衡阳市",
    "area": [
    "雁峰区",
    "珠晖区",
    "石鼓区",
    "蒸湘区",
    "南岳区",
    "耒阳市",
    "常宁市",
    "衡阳县",
    "衡东县",
    "衡山县",
    "衡南县",
    "祁东县"] },


  {
    "name": "邵阳市",
    "area": [
    "双清区",
    "大祥区",
    "北塔区",
    "武冈市",
    "邵东县",
    "洞口县",
    "新邵县",
    "绥宁县",
    "新宁县",
    "邵阳县",
    "隆回县",
    "城步苗族自治县"] },


  {
    "name": "岳阳市",
    "area": [
    "岳阳楼区",
    "云溪区",
    "君山区",
    "临湘市",
    "汨罗市",
    "岳阳县",
    "湘阴县",
    "平江县",
    "华容县"] },


  {
    "name": "常德市",
    "area": [
    "武陵区",
    "鼎城区",
    "津市市",
    "澧县",
    "临澧县",
    "桃源县",
    "汉寿县",
    "安乡县",
    "石门县"] },


  {
    "name": "张家界市",
    "area": [
    "永定区",
    "武陵源区",
    "慈利县",
    "桑植县"] },


  {
    "name": "益阳市",
    "area": [
    "赫山区",
    "资阳区",
    "沅江市",
    "桃江县",
    "南县",
    "安化县"] },


  {
    "name": "郴州市",
    "area": [
    "北湖区",
    "苏仙区",
    "资兴市",
    "宜章县",
    "汝城县",
    "安仁县",
    "嘉禾县",
    "临武县",
    "桂东县",
    "永兴县",
    "桂阳县"] },


  {
    "name": "永州市",
    "area": [
    "冷水滩区",
    "零陵区",
    "祁阳县",
    "蓝山县",
    "宁远县",
    "新田县",
    "东安县",
    "江永县",
    "道县",
    "双牌县",
    "江华瑶族自治县"] },


  {
    "name": "怀化市",
    "area": [
    "鹤城区",
    "洪江市",
    "会同县",
    "沅陵县",
    "辰溪县",
    "溆浦县",
    "中方县",
    "新晃侗族自治县",
    "芷江侗族自治县",
    "通道侗族自治县",
    "靖州苗族侗族自治县",
    "麻阳苗族自治县"] },


  {
    "name": "娄底市",
    "area": [
    "娄星区",
    "冷水江市",
    "涟源市",
    "新化县",
    "双峰县"] },


  {
    "name": "湘西土家族苗族自治州",
    "area": [
    "吉首市",
    "古丈县",
    "龙山县",
    "永顺县",
    "凤凰县",
    "泸溪县",
    "保靖县",
    "花垣县"] }] },




{
  "name": "广东省",
  "city": [{
    "name": "广州市",
    "area": [
    "越秀区",
    "荔湾区",
    "海珠区",
    "天河区",
    "白云区",
    "黄埔区",
    "番禺区",
    "花都区",
    "南沙区",
    "萝岗区",
    "增城市",
    "从化市"] },


  {
    "name": "深圳市",
    "area": [
    "福田区",
    "罗湖区",
    "南山区",
    "宝安区",
    "龙岗区",
    "盐田区"] },


  {
    "name": "东莞市",
    "area": [
    "莞城",
    "常平",
    "塘厦",
    "塘厦",
    "塘厦"] },


  {
    "name": "中山市",
    "area": [
    "中山"] },


  {
    "name": "潮州市",
    "area": [
    "湘桥区",
    "潮安县",
    "饶平县"] },


  {
    "name": "揭阳市",
    "area": [
    "榕城区",
    "揭东县",
    "揭西县",
    "惠来县",
    "普宁市"] },


  {
    "name": "云浮市",
    "area": [
    "云城区",
    "新兴县",
    "郁南县",
    "云安县",
    "罗定市"] },


  {
    "name": "珠海市",
    "area": [
    "香洲区",
    "斗门区",
    "金湾区"] },


  {
    "name": "汕头市",
    "area": [
    "金平区",
    "濠江区",
    "龙湖区",
    "潮阳区",
    "潮南区",
    "澄海区",
    "南澳县"] },


  {
    "name": "韶关市",
    "area": [
    "浈江区",
    "武江区",
    "曲江区",
    "乐昌市",
    "南雄市",
    "始兴县",
    "仁化县",
    "翁源县",
    "新丰县",
    "乳源瑶族自治县"] },


  {
    "name": "佛山市",
    "area": [
    "禅城区",
    "南海区",
    "顺德区",
    "三水区",
    "高明区"] },


  {
    "name": "江门市",
    "area": [
    "蓬江区",
    "江海区",
    "新会区",
    "恩平市",
    "台山市",
    "开平市",
    "鹤山市"] },


  {
    "name": "湛江市",
    "area": [
    "赤坎区",
    "霞山区",
    "坡头区",
    "麻章区",
    "吴川市",
    "廉江市",
    "雷州市",
    "遂溪县",
    "徐闻县"] },


  {
    "name": "茂名市",
    "area": [
    "茂南区",
    "茂港区",
    "化州市",
    "信宜市",
    "高州市",
    "电白县"] },


  {
    "name": "肇庆市",
    "area": [
    "端州区",
    "鼎湖区",
    "高要市",
    "四会市",
    "广宁县",
    "怀集县",
    "封开县",
    "德庆县"] },


  {
    "name": "惠州市",
    "area": [
    "惠城区",
    "惠阳区",
    "博罗县",
    "惠东县",
    "龙门县"] },


  {
    "name": "梅州市",
    "area": [
    "梅江区",
    "兴宁市",
    "梅县",
    "大埔县",
    "丰顺县",
    "五华县",
    "平远县",
    "蕉岭县"] },


  {
    "name": "汕尾市",
    "area": [
    "城区",
    "陆丰市",
    "海丰县",
    "陆河县"] },


  {
    "name": "河源市",
    "area": [
    "源城区",
    "紫金县",
    "龙川县",
    "连平县",
    "和平县",
    "东源县"] },


  {
    "name": "阳江市",
    "area": [
    "江城区",
    "阳春市",
    "阳西县",
    "阳东县"] },


  {
    "name": "清远市",
    "area": [
    "清城区",
    "英德市",
    "连州市",
    "佛冈县",
    "阳山县",
    "清新县",
    "连山壮族瑶族自治县",
    "连南瑶族自治县"] }] },




{
  "name": "广西",
  "city": [{
    "name": "南宁市",
    "area": [
    "青秀区",
    "兴宁区",
    "西乡塘区",
    "良庆区",
    "江南区",
    "邕宁区",
    "武鸣县",
    "隆安县",
    "马山县",
    "上林县",
    "宾阳县",
    "横县"] },


  {
    "name": "柳州市",
    "area": [
    "城中区",
    "鱼峰区",
    "柳北区",
    "柳南区",
    "柳江县",
    "柳城县",
    "鹿寨县",
    "融安县",
    "融水苗族自治县",
    "三江侗族自治县"] },


  {
    "name": "桂林市",
    "area": [
    "象山区",
    "秀峰区",
    "叠彩区",
    "七星区",
    "雁山区",
    "阳朔县",
    "临桂县",
    "灵川县",
    "全州县",
    "平乐县",
    "兴安县",
    "灌阳县",
    "荔浦县",
    "资源县",
    "永福县",
    "龙胜各族自治县",
    "恭城瑶族自治县"] },


  {
    "name": "梧州市",
    "area": [
    "万秀区",
    "蝶山区",
    "长洲区",
    "岑溪市",
    "苍梧县",
    "藤县",
    "蒙山县"] },


  {
    "name": "北海市",
    "area": [
    "海城区",
    "银海区",
    "铁山港区",
    "合浦县"] },


  {
    "name": "防城港市",
    "area": [
    "港口区",
    "防城区",
    "东兴市",
    "上思县"] },


  {
    "name": "钦州市",
    "area": [
    "钦南区",
    "钦北区",
    "灵山县",
    "浦北县"] },


  {
    "name": "贵港市",
    "area": [
    "港北区",
    "港南区",
    "覃塘区",
    "桂平市",
    "平南县"] },


  {
    "name": "玉林市",
    "area": [
    "玉州区",
    "北流市",
    "容县",
    "陆川县",
    "博白县",
    "兴业县"] },


  {
    "name": "百色市",
    "area": [
    "右江区",
    "凌云县",
    "平果县",
    "西林县",
    "乐业县",
    "德保县",
    "田林县",
    "田阳县",
    "靖西县",
    "田东县",
    "那坡县",
    "隆林各族自治县"] },


  {
    "name": "贺州市",
    "area": [
    "八步区",
    "钟山县",
    "昭平县",
    "富川瑶族自治县"] },


  {
    "name": "河池市",
    "area": [
    "金城江区",
    "宜州市",
    "天峨县",
    "凤山县",
    "南丹县",
    "东兰县",
    "都安瑶族自治县",
    "罗城仫佬族自治县",
    "巴马瑶族自治县",
    "环江毛南族自治县",
    "大化瑶族自治县"] },


  {
    "name": "来宾市",
    "area": [
    "兴宾区",
    "合山市",
    "象州县",
    "武宣县",
    "忻城县",
    "金秀瑶族自治县"] },


  {
    "name": "崇左市",
    "area": [
    "江州区",
    "凭祥市",
    "宁明县",
    "扶绥县",
    "龙州县",
    "大新县",
    "天等县"] }] },




{
  "name": "海南省",
  "city": [{
    "name": "海口市",
    "area": [
    "龙华区",
    "秀英区",
    "琼山区",
    "美兰区"] },


  {
    "name": "三亚市",
    "area": [
    "三亚市"] },


  {
    "name": "五指山市",
    "area": [
    "五指山"] },


  {
    "name": "琼海市",
    "area": [
    "琼海"] },


  {
    "name": "儋州市",
    "area": [
    "儋州"] },


  {
    "name": "文昌市",
    "area": [
    "文昌"] },


  {
    "name": "万宁市",
    "area": [
    "万宁"] },


  {
    "name": "东方市",
    "area": [
    "东方"] },


  {
    "name": "澄迈县",
    "area": [
    "澄迈县"] },


  {
    "name": "定安县",
    "area": [
    "定安县"] },


  {
    "name": "屯昌县",
    "area": [
    "屯昌县"] },


  {
    "name": "临高县",
    "area": [
    "临高县"] },


  {
    "name": "白沙黎族自治县",
    "area": [
    "白沙黎族自治县"] },


  {
    "name": "昌江黎族自治县",
    "area": [
    "昌江黎族自治县"] },


  {
    "name": "乐东黎族自治县",
    "area": [
    "乐东黎族自治县"] },


  {
    "name": "陵水黎族自治县",
    "area": [
    "陵水黎族自治县"] },


  {
    "name": "保亭黎族苗族自治县",
    "area": [
    "保亭黎族苗族自治县"] },


  {
    "name": "琼中黎族苗族自治县",
    "area": [
    "琼中黎族苗族自治县"] }] },




{
  "name": "重庆市",
  "city": [{
    "name": "重庆市",
    "area": [
    "渝中区",
    "大渡口区",
    "江北区",
    "南岸区",
    "北碚区",
    "渝北区",
    "巴南区",
    "长寿区",
    "双桥区",
    "沙坪坝区",
    "万盛区",
    "万州区",
    "涪陵区",
    "黔江区",
    "永川区",
    "合川区",
    "江津区",
    "九龙坡区",
    "南川区",
    "綦江县",
    "潼南县",
    "荣昌县",
    "璧山县",
    "大足县",
    "铜梁县",
    "梁平县",
    "开县",
    "忠县",
    "城口县",
    "垫江县",
    "武隆县",
    "丰都县",
    "奉节县",
    "云阳县",
    "巫溪县",
    "巫山县",
    "石柱土家族自治县",
    "秀山土家族苗族自治县",
    "酉阳土家族苗族自治县",
    "彭水苗族土家族自治县"] }] },



{
  "name": "四川省",
  "city": [{
    "name": "成都市",
    "area": [
    "青羊区",
    "锦江区",
    "金牛区",
    "武侯区",
    "成华区",
    "龙泉驿区",
    "青白江区",
    "新都区",
    "温江区",
    "都江堰市",
    "彭州市",
    "邛崃市",
    "崇州市",
    "金堂县",
    "郫县",
    "新津县",
    "双流县",
    "蒲江县",
    "大邑县"] },


  {
    "name": "自贡市",
    "area": [
    "大安区",
    "自流井区",
    "贡井区",
    "沿滩区",
    "荣县",
    "富顺县"] },


  {
    "name": "攀枝花市",
    "area": [
    "仁和区",
    "米易县",
    "盐边县",
    "东区",
    "西区"] },


  {
    "name": "泸州市",
    "area": [
    "江阳区",
    "纳溪区",
    "龙马潭区",
    "泸县",
    "合江县",
    "叙永县",
    "古蔺县"] },


  {
    "name": "德阳市",
    "area": [
    "旌阳区",
    "广汉市",
    "什邡市",
    "绵竹市",
    "罗江县",
    "中江县"] },


  {
    "name": "绵阳市",
    "area": [
    "涪城区",
    "游仙区",
    "江油市",
    "盐亭县",
    "三台县",
    "平武县",
    "安县",
    "梓潼县",
    "北川羌族自治县"] },


  {
    "name": "广元市",
    "area": [
    "元坝区",
    "朝天区",
    "青川县",
    "旺苍县",
    "剑阁县",
    "苍溪县",
    "市中区"] },


  {
    "name": "遂宁市",
    "area": [
    "船山区",
    "安居区",
    "射洪县",
    "蓬溪县",
    "大英县"] },


  {
    "name": "内江市",
    "area": [
    "市中区",
    "东兴区",
    "资中县",
    "隆昌县",
    "威远县"] },


  {
    "name": "乐山市",
    "area": [
    "市中区",
    "五通桥区",
    "沙湾区",
    "金口河区",
    "峨眉山市",
    "夹江县",
    "井研县",
    "犍为县",
    "沐川县",
    "马边彝族自治县",
    "峨边彝族自治县"] },


  {
    "name": "南充",
    "area": [
    "顺庆区",
    "高坪区",
    "嘉陵区",
    "阆中市",
    "营山县",
    "蓬安县",
    "仪陇县",
    "南部县",
    "西充县"] },


  {
    "name": "眉山市",
    "area": [
    "东坡区",
    "仁寿县",
    "彭山县",
    "洪雅县",
    "丹棱县",
    "青神县"] },


  {
    "name": "宜宾市",
    "area": [
    "翠屏区",
    "宜宾县",
    "兴文县",
    "南溪县",
    "珙县",
    "长宁县",
    "高县",
    "江安县",
    "筠连县",
    "屏山县"] },


  {
    "name": "广安市",
    "area": [
    "广安区",
    "华蓥市",
    "岳池县",
    "邻水县",
    "武胜县"] },


  {
    "name": "达州市",
    "area": [
    "通川区",
    "万源市",
    "达县",
    "渠县",
    "宣汉县",
    "开江县",
    "大竹县"] },


  {
    "name": "雅安市",
    "area": [
    "雨城区",
    "芦山县",
    "石棉县",
    "名山县",
    "天全县",
    "荥经县",
    "宝兴县",
    "汉源县"] },


  {
    "name": "巴中市",
    "area": [
    "巴州区",
    "南江县",
    "平昌县",
    "通江县"] },


  {
    "name": "资阳市",
    "area": [
    "雁江区",
    "简阳市",
    "安岳县",
    "乐至县"] },


  {
    "name": "阿坝藏族羌族自治州",
    "area": [
    "马尔康县",
    "九寨沟县",
    "红原县",
    "汶川县",
    "阿坝县",
    "理县",
    "若尔盖县",
    "小金县",
    "黑水县",
    "金川县",
    "松潘县",
    "壤塘县",
    "茂县"] },


  {
    "name": "甘孜藏族自治州",
    "area": [
    "康定县",
    "丹巴县",
    "炉霍县",
    "九龙县",
    "甘孜县",
    "雅江县",
    "新龙县",
    "道孚县",
    "白玉县",
    "理塘县",
    "德格县",
    "乡城县",
    "石渠县",
    "稻城县",
    "色达县",
    "巴塘县",
    "泸定县",
    "得荣县"] },


  {
    "name": "凉山彝族自治州",
    "area": [
    "西昌市",
    "美姑县",
    "昭觉县",
    "金阳县",
    "甘洛县",
    "布拖县",
    "雷波县",
    "普格县",
    "宁南县",
    "喜德县",
    "会东县",
    "越西县",
    "会理县",
    "盐源县",
    "德昌县",
    "冕宁县",
    "木里藏族自治县"] }] },




{
  "name": "贵州省",
  "city": [{
    "name": "贵阳市",
    "area": [
    "南明区",
    "云岩区",
    "花溪区",
    "乌当区",
    "白云区",
    "小河区",
    "清镇市",
    "开阳县",
    "修文县",
    "息烽县"] },


  {
    "name": "六盘水市",
    "area": [
    "钟山区",
    "水城县",
    "盘县",
    "六枝特区"] },


  {
    "name": "遵义市",
    "area": [
    "红花岗区",
    "汇川区",
    "赤水市",
    "仁怀市",
    "遵义县",
    "绥阳县",
    "桐梓县",
    "习水县",
    "凤冈县",
    "正安县",
    "余庆县",
    "湄潭县",
    "道真仡佬族苗族自治县",
    "务川仡佬族苗族自治县"] },


  {
    "name": "安顺市",
    "area": [
    "西秀区",
    "普定县",
    "平坝县",
    "镇宁布依族苗族自治县",
    "紫云苗族布依族自治县",
    "关岭布依族苗族自治县"] },


  {
    "name": "铜仁地区",
    "area": [
    "铜仁市",
    "德江县",
    "江口县",
    "思南县",
    "石阡县",
    "玉屏侗族自治县",
    "松桃苗族自治县",
    "印江土家族苗族自治县",
    "沿河土家族自治县",
    "万山特区"] },


  {
    "name": "毕节地区",
    "area": [
    "毕节市",
    "黔西县",
    "大方县",
    "织金县",
    "金沙县",
    "赫章县",
    "纳雍县",
    "威宁彝族回族苗族自治县"] },


  {
    "name": "黔西南布依族苗族自治州",
    "area": [
    "兴义市",
    "望谟县",
    "兴仁县",
    "普安县",
    "册亨县",
    "晴隆县",
    "贞丰县",
    "安龙县"] },


  {
    "name": "黔东南苗族侗族自治州",
    "area": [
    "凯里市",
    "施秉县",
    "从江县",
    "锦屏县",
    "镇远县",
    "麻江县",
    "台江县",
    "天柱县",
    "黄平县",
    "榕江县",
    "剑河县",
    "三穗县",
    "雷山县",
    "黎平县",
    "岑巩县",
    "丹寨县"] },


  {
    "name": "黔南布依族苗族自治州",
    "area": [
    "都匀市",
    "福泉市",
    "贵定县",
    "惠水县",
    "罗甸县",
    "瓮安县",
    "荔波县",
    "龙里县",
    "平塘县",
    "长顺县",
    "独山县",
    "三都水族自治县"] }] },




{
  "name": "云南省",
  "city": [{
    "name": "昆明市",
    "area": [
    "盘龙区",
    "五华区",
    "官渡区",
    "西山区",
    "东川区",
    "安宁市",
    "呈贡县",
    "晋宁县",
    "富民县",
    "宜良县",
    "嵩明县",
    "石林彝族自治县",
    "禄劝彝族苗族自治县",
    "寻甸回族彝族自治县"] },


  {
    "name": "曲靖市",
    "area": [
    "麒麟区",
    "宣威市",
    "马龙县",
    "沾益县",
    "富源县",
    "罗平县",
    "师宗县",
    "陆良县",
    "会泽县"] },


  {
    "name": "玉溪市",
    "area": [
    "红塔区",
    "江川县",
    "澄江县",
    "通海县",
    "华宁县",
    "易门县",
    "峨山彝族自治县",
    "新平彝族傣族自治县",
    "元江哈尼族彝族傣族自治县"] },


  {
    "name": "保山市",
    "area": [
    "隆阳区",
    "施甸县",
    "腾冲县",
    "龙陵县",
    "昌宁县"] },


  {
    "name": "昭通市",
    "area": [
    "昭阳区",
    "鲁甸县",
    "巧家县",
    "盐津县",
    "大关县",
    "永善县",
    "绥江县",
    "镇雄县",
    "彝良县",
    "威信县",
    "水富县"] },


  {
    "name": "丽江市",
    "area": [
    "古城区",
    "永胜县",
    "华坪县",
    "玉龙纳西族自治县",
    "宁蒗彝族自治县"] },


  {
    "name": "普洱市",
    "area": [
    "思茅区",
    "普洱哈尼族彝族自治县",
    "墨江哈尼族自治县",
    "景东彝族自治县",
    "景谷傣族彝族自治县",
    "镇沅彝族哈尼族拉祜族自治县",
    "江城哈尼族彝族自治县",
    "孟连傣族拉祜族佤族自治县",
    "澜沧拉祜族自治县",
    "西盟佤族自治县"] },


  {
    "name": "临沧市",
    "area": [
    "临翔区",
    "凤庆县",
    "云县",
    "永德县",
    "镇康县",
    "双江拉祜族佤族布朗族傣族自治县",
    "耿马傣族佤族自治县",
    "沧源佤族自治县"] },


  {
    "name": "德宏傣族景颇族自治州",
    "area": [
    "潞西市",
    "瑞丽市",
    "梁河县",
    "盈江县",
    "陇川县"] },


  {
    "name": "怒江傈僳族自治州",
    "area": [
    "泸水县",
    "福贡县",
    "贡山独龙族怒族自治县",
    "兰坪白族普米族自治县"] },


  {
    "name": "迪庆藏族自治州",
    "area": [
    "香格里拉县",
    "德钦县",
    "维西傈僳族自治县"] },


  {
    "name": "大理白族自治州",
    "area": [
    "大理市",
    "祥云县",
    "宾川县",
    "弥渡县",
    "永平县",
    "云龙县",
    "洱源县",
    "剑川县",
    "鹤庆县",
    "漾濞彝族自治县",
    "南涧彝族自治县",
    "巍山彝族回族自治县"] },


  {
    "name": "楚雄彝族自治州",
    "area": [
    "楚雄市",
    "双柏县",
    "牟定县",
    "南华县",
    "姚安县",
    "大姚县",
    "永仁县",
    "元谋县",
    "武定县",
    "禄丰县"] },


  {
    "name": "红河哈尼族彝族自治州",
    "area": [
    "蒙自县",
    "个旧市",
    "开远市",
    "绿春县",
    "建水县",
    "石屏县",
    "弥勒县",
    "泸西县",
    "元阳县",
    "红河县",
    "金平苗族瑶族傣族自治县",
    "河口瑶族自治县",
    "屏边苗族自治县"] },


  {
    "name": "文山壮族苗族自治州",
    "area": [
    "文山县",
    "砚山县",
    "西畴县",
    "麻栗坡县",
    "马关县",
    "丘北县",
    "广南县",
    "富宁县"] },


  {
    "name": "西双版纳傣族自治州",
    "area": [
    "景洪市",
    "勐海县",
    "勐腊县"] }] },




{
  "name": "西藏",
  "city": [{
    "name": "拉萨市",
    "area": [
    "城关区",
    "林周县",
    "当雄县",
    "尼木县",
    "曲水县",
    "堆龙德庆县",
    "达孜县",
    "墨竹工卡县"] },


  {
    "name": "那曲地区",
    "area": [
    "那曲县",
    "嘉黎县",
    "比如县",
    "聂荣县",
    "安多县",
    "申扎县",
    "索县",
    "班戈县",
    "巴青县",
    "尼玛县"] },


  {
    "name": "昌都地区",
    "area": [
    "昌都县",
    "江达县",
    "贡觉县",
    "类乌齐县",
    "丁青县",
    "察雅县",
    "八宿县",
    "左贡县",
    "芒康县",
    "洛隆县",
    "边坝县"] },


  {
    "name": "林芝地区",
    "area": [
    "林芝县",
    "工布江达县",
    "米林县",
    "墨脱县",
    "波密县",
    "察隅县",
    "朗县"] },


  {
    "name": "山南地区",
    "area": [
    "乃东县",
    "扎囊县",
    "贡嘎县",
    "桑日县",
    "琼结县",
    "曲松县",
    "措美县",
    "洛扎县",
    "加查县",
    "隆子县",
    "错那县",
    "浪卡子县"] },


  {
    "name": "日喀则地区",
    "area": [
    "日喀则市",
    "南木林县",
    "江孜县",
    "定日县",
    "萨迦县",
    "拉孜县",
    "昂仁县",
    "谢通门县",
    "白朗县",
    "仁布县",
    "康马县",
    "定结县",
    "仲巴县",
    "亚东县",
    "吉隆县",
    "聂拉木县",
    "萨嘎县",
    "岗巴县"] },


  {
    "name": "阿里地区",
    "area": [
    "噶尔县",
    "普兰县",
    "札达县",
    "日土县",
    "革吉县",
    "改则县",
    "措勤县"] }] },




{
  "name": "陕西省",
  "city": [{
    "name": "西安市",
    "area": [
    "莲湖区",
    "新城区",
    "碑林区",
    "雁塔区",
    "灞桥区",
    "未央区",
    "阎良区",
    "临潼区",
    "长安区",
    "高陵县",
    "蓝田县",
    "户县",
    "周至县"] },


  {
    "name": "铜川市",
    "area": [
    "耀州区",
    "王益区",
    "印台区",
    "宜君县"] },


  {
    "name": "宝鸡市",
    "area": [
    "渭滨区",
    "金台区",
    "陈仓区",
    "岐山县",
    "凤翔县",
    "陇县",
    "太白县",
    "麟游县",
    "扶风县",
    "千阳县",
    "眉县",
    "凤县"] },


  {
    "name": "咸阳市",
    "area": [
    "秦都区",
    "渭城区",
    "杨陵区",
    "兴平市",
    "礼泉县",
    "泾阳县",
    "永寿县",
    "三原县",
    "彬县",
    "旬邑县",
    "长武县",
    "乾县",
    "武功县",
    "淳化县"] },


  {
    "name": "渭南市",
    "area": [
    "临渭区",
    "韩城市",
    "华阴市",
    "蒲城县",
    "潼关县",
    "白水县",
    "澄城县",
    "华县",
    "合阳县",
    "富平县",
    "大荔县"] },


  {
    "name": "延安市",
    "area": [
    "宝塔区",
    "安塞县",
    "洛川县",
    "子长县",
    "黄陵县",
    "延川县",
    "富县",
    "延长县",
    "甘泉县",
    "宜川县",
    "志丹县",
    "黄龙县",
    "吴起县"] },


  {
    "name": "汉中市",
    "area": [
    "汉台区",
    "留坝县",
    "镇巴县",
    "城固县",
    "南郑县",
    "洋县",
    "宁强县",
    "佛坪县",
    "勉县",
    "西乡县",
    "略阳县"] },


  {
    "name": "榆林市",
    "area": [
    "榆阳区",
    "清涧县",
    "绥德县",
    "神木县",
    "佳县",
    "府谷县",
    "子洲县",
    "靖边县",
    "横山县",
    "米脂县",
    "吴堡县",
    "定边县"] },


  {
    "name": "安康市",
    "area": [
    "汉滨区",
    "紫阳县",
    "岚皋县",
    "旬阳县",
    "镇坪县",
    "平利县",
    "石泉县",
    "宁陕县",
    "白河县",
    "汉阴县"] },


  {
    "name": "商洛市",
    "area": [
    "商州区",
    "镇安县",
    "山阳县",
    "洛南县",
    "商南县",
    "丹凤县",
    "柞水县"] }] },




{
  "name": "甘肃省",
  "city": [{
    "name": "兰州市",
    "area": [
    "城关区",
    "七里河区",
    "西固区",
    "安宁区",
    "红古区",
    "永登县",
    "皋兰县",
    "榆中县"] },


  {
    "name": "嘉峪关市",
    "area": [
    "嘉峪关市"] },


  {
    "name": "金昌市",
    "area": [
    "金川区",
    "永昌县"] },


  {
    "name": "白银市",
    "area": [
    "白银区",
    "平川区",
    "靖远县",
    "会宁县",
    "景泰县"] },


  {
    "name": "天水市",
    "area": [
    "清水县",
    "秦安县",
    "甘谷县",
    "武山县",
    "张家川回族自治县",
    "北道区",
    "秦城区"] },


  {
    "name": "武威市",
    "area": [
    "凉州区",
    "民勤县",
    "古浪县",
    "天祝藏族自治县"] },


  {
    "name": "酒泉市",
    "area": [
    "肃州区",
    "玉门市",
    "敦煌市",
    "金塔县",
    "肃北蒙古族自治县",
    "阿克塞哈萨克族自治县",
    "安西县"] },


  {
    "name": "张掖市",
    "area": [
    "甘州区",
    "民乐县",
    "临泽县",
    "高台县",
    "山丹县",
    "肃南裕固族自治县"] },


  {
    "name": "庆阳市",
    "area": [
    "西峰区",
    "庆城县",
    "环县",
    "华池县",
    "合水县",
    "正宁县",
    "宁县",
    "镇原县"] },


  {
    "name": "平凉市",
    "area": [
    "崆峒区",
    "泾川县",
    "灵台县",
    "崇信县",
    "华亭县",
    "庄浪县",
    "静宁县"] },


  {
    "name": "定西市",
    "area": [
    "安定区",
    "通渭县",
    "临洮县",
    "漳县",
    "岷县",
    "渭源县",
    "陇西县"] },


  {
    "name": "陇南市",
    "area": [
    "武都区",
    "成县",
    "宕昌县",
    "康县",
    "文县",
    "西和县",
    "礼县",
    "两当县",
    "徽县"] },


  {
    "name": "临夏回族自治州",
    "area": [
    "临夏市",
    "临夏县",
    "康乐县",
    "永靖县",
    "广河县",
    "和政县",
    "东乡族自治县",
    "积石山保安族东乡族撒拉族自治县"] },


  {
    "name": "甘南藏族自治州",
    "area": [
    "合作市",
    "临潭县",
    "卓尼县",
    "舟曲县",
    "迭部县",
    "玛曲县",
    "碌曲县",
    "夏河县"] }] },




{
  "name": "青海省",
  "city": [{
    "name": "西宁市",
    "area": [
    "城中区",
    "城东区",
    "城西区",
    "城北区",
    "湟源县",
    "湟中县",
    "大通回族土族自治县"] },


  {
    "name": "海东地区",
    "area": [
    "平安县",
    "乐都县",
    "民和回族土族自治县",
    "互助土族自治县",
    "化隆回族自治县",
    "循化撒拉族自治县"] },


  {
    "name": "海北藏族自治州",
    "area": [
    "海晏县",
    "祁连县",
    "刚察县",
    "门源回族自治县"] },


  {
    "name": "海南藏族自治州",
    "area": [
    "共和县",
    "同德县",
    "贵德县",
    "兴海县",
    "贵南县"] },


  {
    "name": "黄南藏族自治州",
    "area": [
    "同仁县",
    "尖扎县",
    "泽库县",
    "河南蒙古族自治县"] },


  {
    "name": "果洛藏族自治州",
    "area": [
    "玛沁县",
    "班玛县",
    "甘德县",
    "达日县",
    "久治县",
    "玛多县"] },


  {
    "name": "玉树藏族自治州",
    "area": [
    "玉树县",
    "杂多县",
    "称多县",
    "治多县",
    "囊谦县",
    "曲麻莱县"] },


  {
    "name": "海西蒙古族藏族自治州",
    "area": [
    "德令哈市",
    "格尔木市",
    "乌兰县",
    "都兰县",
    "天峻县"] }] },




{
  "name": "宁夏",
  "city": [{
    "name": "银川市",
    "area": [
    "兴庆区",
    "西夏区",
    "金凤区",
    "灵武市",
    "永宁县",
    "贺兰县"] },


  {
    "name": "石嘴山市",
    "area": [
    "大武口区",
    "惠农区",
    "平罗县"] },


  {
    "name": "吴忠市",
    "area": [
    "利通区",
    "青铜峡市",
    "盐池县",
    "同心县"] },


  {
    "name": "固原市",
    "area": [
    "原州区",
    "西吉县",
    "隆德县",
    "泾源县",
    "彭阳县"] },


  {
    "name": "中卫市",
    "area": [
    "沙坡头区",
    "中宁县",
    "海原县"] }] },




{
  "name": "新疆",
  "city": [{
    "name": "乌鲁木齐市",
    "area": [
    "天山区",
    "沙依巴克区",
    "新市区",
    "水磨沟区",
    "头屯河区",
    "达坂城区",
    "东山区",
    "乌鲁木齐县"] },


  {
    "name": "克拉玛依市",
    "area": [
    "克拉玛依区",
    "独山子区",
    "白碱滩区",
    "乌尔禾区"] },


  {
    "name": "吐鲁番地区",
    "area": [
    "吐鲁番市",
    "托克逊县",
    "鄯善县"] },


  {
    "name": "哈密地区",
    "area": [
    "哈密市",
    "伊吾县",
    "巴里坤哈萨克自治县"] },


  {
    "name": "和田地区",
    "area": [
    "和田市",
    "和田县",
    "洛浦县",
    "民丰县",
    "皮山县",
    "策勒县",
    "于田县",
    "墨玉县"] },


  {
    "name": "阿克苏地区",
    "area": [
    "阿克苏市",
    "温宿县",
    "沙雅县",
    "拜城县",
    "阿瓦提县",
    "库车县",
    "柯坪县",
    "新和县",
    "乌什县"] },


  {
    "name": "喀什地区",
    "area": [
    "喀什市",
    "巴楚县",
    "泽普县",
    "伽师县",
    "叶城县",
    "岳普湖县",
    "疏勒县",
    "麦盖提县",
    "英吉沙县",
    "莎车县",
    "疏附县",
    "塔什库尔干塔吉克自治县"] },


  {
    "name": "克孜勒苏柯尔克孜自治州",
    "area": [
    "阿图什市",
    "阿合奇县",
    "乌恰县",
    "阿克陶县"] },


  {
    "name": "巴音郭楞蒙古自治州",
    "area": [
    "库尔勒市",
    "和静县",
    "尉犁县",
    "和硕县",
    "且末县",
    "博湖县",
    "轮台县",
    "若羌县",
    "焉耆回族自治县"] },


  {
    "name": "昌吉回族自治州",
    "area": [
    "昌吉市",
    "阜康市",
    "奇台县",
    "玛纳斯县",
    "吉木萨尔县",
    "呼图壁县",
    "木垒哈萨克自治县",
    "米泉市"] },


  {
    "name": "博尔塔拉蒙古自治州",
    "area": [
    "博乐市",
    "精河县",
    "温泉县"] },


  {
    "name": "石河子",
    "area": [
    "石河子"] },


  {
    "name": "阿拉尔",
    "area": [
    "阿拉尔"] },


  {
    "name": "图木舒克",
    "area": [
    "图木舒克"] },


  {
    "name": "五家渠",
    "area": [
    "五家渠"] },


  {
    "name": "伊犁哈萨克自治州",
    "area": [
    "伊宁市",
    "奎屯市",
    "伊宁县",
    "特克斯县",
    "尼勒克县",
    "昭苏县",
    "新源县",
    "霍城县",
    "巩留县",
    "察布查尔锡伯自治县",
    "塔城地区",
    "阿勒泰地区"] }] },




{
  "name": "台湾省",
  "city": [{
    "name": "台北市",
    "area": [
    "内湖区",
    "南港区",
    "中正区",
    "万华区",
    "大同区",
    "中山区",
    "松山区",
    "大安区",
    "信义区",
    "文山区",
    "士林区",
    "北投区"] },


  {
    "name": "新北市",
    "area": [
    "板桥区",
    "汐止区",
    "新店区"] },


  {
    "name": "桃园市",
    "area": [
    "其他"] },


  {
    "name": "台中市",
    "area": [
    "其他"] },


  {
    "name": "台南市",
    "area": [
    "其他"] },


  {
    "name": "高雄市",
    "area": [
    "其他"] }] },




{
  "name": "澳门",
  "city": [{
    "name": "澳门",
    "area": [
    "花地玛堂区",
    "圣安多尼堂区",
    "大堂区",
    "望德堂区",
    "风顺堂区",
    "嘉模堂区",
    "圣方济各堂区",
    "路凼"] }] },



{
  "name": "香港",
  "city": [{
    "name": "香港",
    "area": [
    "深水埗区",
    "油尖旺区",
    "九龙城区",
    "黄大仙区",
    "观塘区",
    "北区",
    "大埔区",
    "沙田区",
    "西贡区",
    "元朗区",
    "屯门区",
    "荃湾区",
    "葵青区",
    "离岛区",
    "中西区",
    "湾仔区",
    "东区",
    "南区"] }] }];exports.default = _default;

/***/ }),
/* 394 */,
/* 395 */,
/* 396 */,
/* 397 */,
/* 398 */,
/* 399 */,
/* 400 */,
/* 401 */,
/* 402 */,
/* 403 */,
/* 404 */,
/* 405 */,
/* 406 */,
/* 407 */,
/* 408 */,
/* 409 */,
/* 410 */,
/* 411 */,
/* 412 */,
/* 413 */,
/* 414 */,
/* 415 */,
/* 416 */,
/* 417 */,
/* 418 */,
/* 419 */,
/* 420 */,
/* 421 */,
/* 422 */,
/* 423 */,
/* 424 */,
/* 425 */,
/* 426 */,
/* 427 */,
/* 428 */,
/* 429 */,
/* 430 */,
/* 431 */,
/* 432 */,
/* 433 */,
/* 434 */,
/* 435 */,
/* 436 */,
/* 437 */,
/* 438 */,
/* 439 */,
/* 440 */,
/* 441 */,
/* 442 */,
/* 443 */,
/* 444 */,
/* 445 */,
/* 446 */,
/* 447 */,
/* 448 */,
/* 449 */,
/* 450 */,
/* 451 */,
/* 452 */,
/* 453 */
/*!******************************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/common/Echarts/components/u-charts.min.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(uni) {var config = { yAxisWidth: 15, yAxisSplit: 5, xAxisHeight: 15, xAxisLineHeight: 15, legendHeight: 15, yAxisTitleWidth: 15, padding: [10, 10, 10, 10], pixelRatio: 1, rotate: !1, columePadding: 3, fontSize: 13, dataPointShape: ["circle", "circle", "circle", "circle"], colors: ["#1890ff", "#2fc25b", "#facc14", "#f04864", "#8543e0", "#90ed7d"], pieChartLinePadding: 15, pieChartTextPadding: 5, xAxisTextPadding: 3, titleColor: "#333333", titleFontSize: 20, subtitleColor: "#999999", subtitleFontSize: 15, toolTipPadding: 3, toolTipBackground: "#000000", toolTipOpacity: .7, toolTipLineHeight: 20, radarLabelTextMargin: 15, gaugeLabelTextMargin: 15 };var assign = function assign(e) {for (var _len = arguments.length, t = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {t[_key - 1] = arguments[_key];}function i(e, t) {for (var a in t) {e[a] = e[a] && "[object Object]" === e[a].toString() ? i(e[a], t[a]) : e[a] = t[a];}return e;}if (null == e) throw new TypeError("Cannot convert undefined or null to object");return !t || 0 >= t.length ? e : (t.forEach(function (t) {e = i(e, t);}), e);};var util = { toFixed: function toFixed(e, t) {return t = t || 2, this.isFloat(e) && (e = e.toFixed(t)), e;}, isFloat: function isFloat(e) {return 0 != e % 1;}, approximatelyEqual: function approximatelyEqual(e, t) {return 1e-10 > Math.abs(e - t);}, isSameSign: function isSameSign(e, t) {var i = Math.abs;return i(e) === e && i(t) === t || i(e) !== e && i(t) !== t;}, isSameXCoordinateArea: function isSameXCoordinateArea(e, t) {return this.isSameSign(e.x, t.x);}, isCollision: function isCollision(e, t) {e.end = {}, e.end.x = e.start.x + e.width, e.end.y = e.start.y - e.height, t.end = {}, t.end.x = t.start.x + t.width, t.end.y = t.start.y - t.height;var i = t.start.x > e.end.x || t.end.x < e.start.x || t.end.y > e.start.y || t.start.y < e.end.y;return !i;} };function getH5Offset(t) {return t.mp = { changedTouches: [] }, t.mp.changedTouches.push({ x: t.offsetX, y: t.offsetY }), t;}function hexToRgb(e, t) {var i = e.replace(/^#?([a-f\d])([a-f\d])([a-f\d])$/i, function (e, t, i, a) {return t + t + i + i + a + a;}),a = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(i),o = parseInt(a[1], 16),n = parseInt(a[2], 16),l = parseInt(a[3], 16);return "rgba(" + o + "," + n + "," + l + "," + t + ")";}function findRange(e, t, i) {if (isNaN(e)) throw new Error("[uCharts] unvalid series data!");i = i || 10, t = t ? t : "upper";for (var a = 1; 1 > i;) {i *= 10, a *= 10;}for (e = "upper" === t ? Math.ceil(e * a) : Math.floor(e * a); 0 != e % i;) {"upper" === t ? e++ : e--;}return e / a;}function calCandleMA(e, t, i, a) {var o = [];for (var n, l = 0; l < e.length; l++) {n = { data: [], name: t[l], color: i[l] };for (var _t = 0, _i = a.length; _t < _i; _t++) {if (_t < e[l]) {n.data.push(null);continue;}var _i2 = 0;for (var _o = 0; _o < e[l]; _o++) {_i2 += a[_t - _o][1];}n.data.push(+(_i2 / e[l]).toFixed(3));}o.push(n);}return o;}function calValidDistance(e, t, i, a, o) {var n = o.width - o.area[1] - o.area[3],l = i.eachSpacing * (o.chartData.xAxisData.xAxisPoints.length - 1),r = t;return 0 <= t ? (r = 0, e.event.trigger("scrollLeft")) : Math.abs(t) >= l - n && (r = n - l, e.event.trigger("scrollRight")), r;}function isInAngleRange(e, t, i) {function a(e) {for (; 0 > e;) {e += 2 * o;}for (; e > 2 * o;) {e -= 2 * o;}return e;}var o = Math.PI;return e = a(e), t = a(t), i = a(i), t > i && (i += 2 * o, e < t && (e += 2 * o)), e >= t && e <= i;}function calRotateTranslate(e, t, i) {var a = e,o = i - t,n = a + (i - o - a) / 1.4142135623730951;n *= -1;return { transX: n, transY: (i - o) * (1.4142135623730951 - 1) - (i - o - a) / 1.4142135623730951 };}function createCurveControlPoints(e, t) {function i(e, t) {return !!(e[t - 1] && e[t + 1]) && (e[t].y >= l(e[t - 1].y, e[t + 1].y) || e[t].y <= n(e[t - 1].y, e[t + 1].y));}function o(e, t) {return !!(e[t - 1] && e[t + 1]) && (e[t].x >= l(e[t - 1].x, e[t + 1].x) || e[t].x <= n(e[t - 1].x, e[t + 1].x));}var n = Math.min,l = Math.max,r = .2,a = .2,s = null,d = null,h = null,x = null;if (1 > t ? (s = e[0].x + (e[1].x - e[0].x) * r, d = e[0].y + (e[1].y - e[0].y) * r) : (s = e[t].x + (e[t + 1].x - e[t - 1].x) * r, d = e[t].y + (e[t + 1].y - e[t - 1].y) * r), t > e.length - 3) {var c = e.length - 1;h = e[c].x - (e[c].x - e[c - 1].x) * a, x = e[c].y - (e[c].y - e[c - 1].y) * a;} else h = e[t + 1].x - (e[t + 2].x - e[t].x) * a, x = e[t + 1].y - (e[t + 2].y - e[t].y) * a;return i(e, t + 1) && (x = e[t + 1].y), i(e, t) && (d = e[t].y), o(e, t + 1) && (h = e[t + 1].x), o(e, t) && (s = e[t].x), (d >= l(e[t].y, e[t + 1].y) || d <= n(e[t].y, e[t + 1].y)) && (d = e[t].y), (x >= l(e[t].y, e[t + 1].y) || x <= n(e[t].y, e[t + 1].y)) && (x = e[t + 1].y), (s >= l(e[t].x, e[t + 1].x) || s <= n(e[t].x, e[t + 1].x)) && (s = e[t].x), (h >= l(e[t].x, e[t + 1].x) || h <= n(e[t].x, e[t + 1].x)) && (h = e[t + 1].x), { ctrA: { x: s, y: d }, ctrB: { x: h, y: x } };}function convertCoordinateOrigin(e, t, i) {return { x: i.x + e, y: i.y - t };}function avoidCollision(e, t) {if (t) for (; util.isCollision(e, t);) {0 < e.start.x ? e.start.y-- : 0 > e.start.x ? e.start.y++ : 0 < e.start.y ? e.start.y++ : e.start.y--;}return e;}function fillSeries(e, t, i) {var a = 0;return e.map(function (e) {if (e.color || (e.color = i.colors[a], a = (a + 1) % i.colors.length), e.index || (e.index = 0), e.type || (e.type = t.type), "undefined" == typeof e.show && (e.show = !0), e.type || (e.type = t.type), e.pointShape || (e.pointShape = "circle"), !e.legendShape) switch (e.type) {case "line":e.legendShape = "line";break;case "column":e.legendShape = "rect";break;case "area":e.legendShape = "triangle";break;default:e.legendShape = "circle";}return e;});}function getDataRange(e, t) {var i = 0,a = t - e;return i = 1e4 <= a ? 1e3 : 1e3 <= a ? 100 : 100 <= a ? 10 : 10 <= a ? 5 : 1 <= a ? 1 : .1 <= a ? .1 : .01 <= a ? .01 : .001 <= a ? .001 : 1e-4 <= a ? 1e-4 : 1e-5 <= a ? 1e-5 : 1e-6, { minRange: findRange(e, "lower", i), maxRange: findRange(t, "upper", i) };}function measureText(e) {var t = 1 < arguments.length && arguments[1] !== void 0 ? arguments[1] : config.fontSize;e = e + "";var e = e.split(""),a = 0;for (var _t2, o = 0; o < e.length; o++) {_t2 = e[o], a += /[a-zA-Z]/.test(_t2) ? 7 : /[0-9]/.test(_t2) ? 5.5 : /\./.test(_t2) ? 2.7 : /-/.test(_t2) ? 3.25 : /[\u4e00-\u9fa5]/.test(_t2) ? 10 : /\(|\)/.test(_t2) ? 3.73 : /\s/.test(_t2) ? 2.5 : /%/.test(_t2) ? 8 : 10;}return a * t / 10;}function dataCombine(e) {return e.reduce(function (e, t) {return (e.data ? e.data : e).concat(t.data);}, []);}function dataCombineStack(e, t) {for (var o = Array(t), a = 0; a < o.length; a++) {o[a] = 0;}for (var n = 0; n < e.length; n++) {for (var a = 0; a < o.length; a++) {o[a] += e[n].data[a];}}return e.reduce(function (e, t) {return (e.data ? e.data : e).concat(t.data).concat(o);}, []);}function getTouches(t, i, a) {var e, o;return t.clientX ? i.rotate ? (o = i.height - t.clientX * i.pixelRatio, e = (t.pageY - a.currentTarget.offsetTop - i.height / i.pixelRatio / 2 * (i.pixelRatio - 1)) * i.pixelRatio) : (e = t.clientX * i.pixelRatio, o = (t.pageY - a.currentTarget.offsetTop - i.height / i.pixelRatio / 2 * (i.pixelRatio - 1)) * i.pixelRatio) : i.rotate ? (o = i.height - t.x * i.pixelRatio, e = t.y * i.pixelRatio) : (e = t.x * i.pixelRatio, o = t.y * i.pixelRatio), { x: e, y: o };}function getSeriesDataItem(e, t) {var i = [];for (var a, o = 0; o < e.length; o++) {if (a = e[o], null !== a.data[t] && "undefined" != typeof a.data[t] && a.show) {var _e = {};_e.color = a.color, _e.type = a.type, _e.style = a.style, _e.pointShape = a.pointShape, _e.disableLegend = a.disableLegend, _e.name = a.name, _e.show = a.show, _e.data = a.format ? a.format(a.data[t]) : a.data[t], i.push(_e);}}return i;}function getMaxTextListLength(e) {var t = e.map(function (e) {return measureText(e);});return Math.max.apply(null, t);}function getRadarCoordinateSeries(e) {for (var t = Math.PI, a = [], o = 0; o < e; o++) {a.push(2 * t / e * o);}return a.map(function (e) {return -1 * e + t / 2;});}function getToolTipData(e, t, a, i) {var o = 4 < arguments.length && void 0 !== arguments[4] ? arguments[4] : {},n = e.map(function (e) {var t = [];return t = i ? i : e.data, { text: o.format ? o.format(e, t[a]) : e.name + ": " + e.data, color: e.color };}),l = [],r = { x: 0, y: 0 };for (var _o2, _n = 0; _n < t.length; _n++) {_o2 = t[_n], "undefined" != typeof _o2[a] && null !== _o2[a] && l.push(_o2[a]);}for (var _o3, _n2 = 0; _n2 < l.length; _n2++) {_o3 = l[_n2], r.x = Math.round(_o3.x), r.y += _o3.y;}return r.y /= l.length, { textList: n, offset: r };}function getMixToolTipData(e, t, a, i) {var o = 4 < arguments.length && void 0 !== arguments[4] ? arguments[4] : {},n = e.map(function (e) {return { text: o.format ? o.format(e, i[a]) : e.name + ": " + e.data, color: e.color, disableLegend: !!e.disableLegend };});n = n.filter(function (e) {if (!0 !== e.disableLegend) return e;});var l = [],r = { x: 0, y: 0 };for (var _o4, _n3 = 0; _n3 < t.length; _n3++) {_o4 = t[_n3], "undefined" != typeof _o4[a] && null !== _o4[a] && l.push(_o4[a]);}for (var _o5, _n4 = 0; _n4 < l.length; _n4++) {_o5 = l[_n4], r.x = Math.round(_o5.x), r.y += _o5.y;}return r.y /= l.length, { textList: n, offset: r };}function getCandleToolTipData(e, t, a, o, i, n) {6 < arguments.length && void 0 !== arguments[6] ? arguments[6] : {};var l = n.color.upFill,r = n.color.downFill,s = [l, l, r, l];var d = [];var h = { text: i[o], color: null };d.push(h), t.map(function (t) {0 == o ? 0 > t.data[1] - t.data[0] ? s[1] = r : s[1] = l : (t.data[0] < e[o - 1][1] && (s[0] = r), t.data[1] < t.data[0] && (s[1] = r), t.data[2] > e[o - 1][1] && (s[2] = l), t.data[3] < e[o - 1][1] && (s[3] = r));var i = { text: "\u5F00\u76D8\uFF1A" + t.data[0], color: s[0] },a = { text: "\u6536\u76D8\uFF1A" + t.data[1], color: s[1] },n = { text: "\u6700\u4F4E\uFF1A" + t.data[2], color: s[2] },h = { text: "\u6700\u9AD8\uFF1A" + t.data[3], color: s[3] };d.push(i, a, n, h);});var x = [],c = { x: 0, y: 0 };for (var _l, _r = 0; _r < a.length; _r++) {_l = a[_r], "undefined" != typeof _l[o] && null !== _l[o] && x.push(_l[o]);}return c.x = Math.round(x[0][0].x), { textList: d, offset: c };}function filterSeries(e) {var t = [];for (var a = 0; a < e.length; a++) {!0 == e[a].show && t.push(e[a]);}return t;}function findCurrentIndex(e, t, i, a) {var o = 4 < arguments.length && arguments[4] !== void 0 ? arguments[4] : 0,n = -1,l = i.chartData.eachSpacing / 2;var r = [];if (0 < t.length) {if ("candle" == i.type) for (var _e2 = 0; _e2 < t[0].length; _e2++) {r.push(t[0][_e2][0].x);} else for (var _e3 = 0; _e3 < t[0].length; _e3++) {r.push(t[0][_e3].x);}("line" == i.type || "area" == i.type) && "justify" == i.xAxis.boundaryGap && (l = i.chartData.eachSpacing / 2), i.categories || (l = 0), isInExactChartArea(e, i, a) && r.forEach(function (t, i) {e.x + o + l > t && (n = i);});}return n;}function findLegendIndex(e, t) {var i = -1;if (isInExactLegendArea(e, t.area)) {var a = t.points,o = -1;for (var _t3, n = 0, l = a.length; n < l; n++) {_t3 = a[n];for (var _a = 0; _a < _t3.length; _a++) {o += 1;var _n5 = _t3[_a].area;if (e.x > _n5[0] && e.x < _n5[2] && e.y > _n5[1] && e.y < _n5[3]) {i = o;break;}}}return i;}return i;}function isInExactLegendArea(e, t) {return e.x > t.start.x && e.x < t.end.x && e.y > t.start.y && e.y < t.end.y;}function isInExactChartArea(e, t) {return e.x <= t.width - t.area[1] + 10 && e.x >= t.area[3] - 10 && e.y >= t.area[0] && e.y <= t.height - t.area[2];}function findRadarChartCurrentIndex(e, t, i) {var a = Math.PI,o = 2 * a / i,n = -1;if (isInExactPieChartArea(e, t.center, t.radius)) {var l = function l(e) {return 0 > e && (e += 2 * a), e > 2 * a && (e -= 2 * a), e;},r = Math.atan2(t.center.y - e.y, e.x - t.center.x);r = -1 * r, 0 > r && (r += 2 * a);var s = t.angleList.map(function (e) {return e = l(-1 * e), e;});s.forEach(function (e, t) {var i = l(e - o / 2),s = l(e + o / 2);s < i && (s += 2 * a), (r >= i && r <= s || r + 2 * a >= i && r + 2 * a <= s) && (n = t);});}return n;}function findFunnelChartCurrentIndex(e, t) {for (var a, o = -1, n = 0, l = t.series.length; n < l; n++) {if (a = t.series[n], e.x > a.funnelArea[0] && e.x < a.funnelArea[2] && e.y > a.funnelArea[1] && e.y < a.funnelArea[3]) {o = n;break;}}return o;}function findWordChartCurrentIndex(e, t) {for (var a, o = -1, n = 0, l = t.length; n < l; n++) {if (a = t[n], e.x > a.area[0] && e.x < a.area[2] && e.y > a.area[1] && e.y < a.area[3]) {o = n;break;}}return o;}function findMapChartCurrentIndex(e, t) {for (var a, o = -1, n = t.chartData.mapData, l = t.series, r = pointToCoordinate(e.y, e.x, n.bounds, n.scale, n.xoffset, n.yoffset), s = [r.x, r.y], d = 0, h = l.length; d < h; d++) {if (a = l[d].geometry.coordinates, isPoiWithinPoly(s, a)) {o = d;break;}}return o;}function findPieChartCurrentIndex(e, t) {var a = -1;if (isInExactPieChartArea(e, t.center, t.radius)) {var o = Math.atan2(t.center.y - e.y, e.x - t.center.x);o = -o;for (var n, l = 0, r = t.series.length; l < r; l++) {if (n = t.series[l], isInAngleRange(o, n._start_, n._start_ + 2 * n._proportion_ * Math.PI)) {a = l;break;}}}return a;}function isInExactPieChartArea(e, t, i) {var a = Math.pow;return a(e.x - t.x, 2) + a(e.y - t.y, 2) <= a(i, 2);}function splitPoints(e) {var t = [],i = [];return e.forEach(function (e) {null === e ? (i.length && t.push(i), i = []) : i.push(e);}), i.length && t.push(i), t;}function calLegendData(e, t, i, a) {var o = Math.max,n = Math.floor;var l = { area: { start: { x: 0, y: 0 }, end: { x: 0, y: 0 }, width: 0, height: 0, wholeWidth: 0, wholeHeight: 0 }, points: [], widthArr: [], heightArr: [] };if (!1 === t.legend.show) return a.legendData = l, l;var r = t.legend.padding,s = t.legend.margin,d = t.legend.fontSize,h = 15 * t.pixelRatio,x = 5 * t.pixelRatio,c = o(t.legend.lineHeight * t.pixelRatio, d);if ("top" == t.legend.position || "bottom" == t.legend.position) {var _a2 = [],_n6 = 0,p = [],g = [];for (var _o6 = 0; _o6 < e.length; _o6++) {var _i3 = e[_o6],_l2 = h + x + measureText(_i3.name || "undefined", d) + t.legend.itemGap;_n6 + _l2 > t.width - t.padding[1] - t.padding[3] ? (_a2.push(g), p.push(_n6 - t.legend.itemGap), _n6 = _l2, g = [_i3]) : (_n6 += _l2, g.push(_i3));}if (g.length) {_a2.push(g), p.push(_n6 - t.legend.itemGap), l.widthArr = p;var _e4 = o.apply(null, p);switch (t.legend.float) {case "left":l.area.start.x = t.padding[3], l.area.end.x = t.padding[3] + 2 * r;break;case "right":l.area.start.x = t.width - t.padding[1] - _e4 - 2 * r, l.area.end.x = t.width - t.padding[1];break;default:l.area.start.x = (t.width - _e4) / 2 - r, l.area.end.x = (t.width + _e4) / 2 + r;}l.area.width = _e4 + 2 * r, l.area.wholeWidth = _e4 + 2 * r, l.area.height = _a2.length * c + 2 * r, l.area.wholeHeight = _a2.length * c + 2 * r + 2 * s, l.points = _a2;}} else {var _i4 = e.length,_a3 = t.height - t.padding[0] - t.padding[2] - 2 * s - 2 * r,_o7 = Math.min(n(_a3 / c), _i4);switch (l.area.height = _o7 * c + 2 * r, l.area.wholeHeight = _o7 * c + 2 * r, t.legend.float) {case "top":l.area.start.y = t.padding[0] + s, l.area.end.y = t.padding[0] + s + l.area.height;break;case "bottom":l.area.start.y = t.height - t.padding[2] - s - l.area.height, l.area.end.y = t.height - t.padding[2] - s;break;default:l.area.start.y = (t.height - l.area.height) / 2, l.area.end.y = (t.height + l.area.height) / 2;}var _p = 0 == _i4 % _o7 ? _i4 / _o7 : n(_i4 / _o7 + 1),_g = [];for (var _t4, _a4 = 0; _a4 < _p; _a4++) {_t4 = e.slice(_a4 * _o7, _a4 * _o7 + _o7), _g.push(_t4);}if (l.points = _g, _g.length) {for (var _e6 = 0; _e6 < _g.length; _e6++) {var _i5 = _g[_e6],_a5 = 0;for (var _e7, _o8 = 0; _o8 < _i5.length; _o8++) {_e7 = h + x + measureText(_i5[_o8].name || "undefined", d) + t.legend.itemGap, _e7 > _a5 && (_a5 = _e7);}l.widthArr.push(_a5), l.heightArr.push(_i5.length * c + 2 * r);}var _e5 = 0;for (var _t5 = 0; _t5 < l.widthArr.length; _t5++) {_e5 += l.widthArr[_t5];}l.area.width = _e5 - t.legend.itemGap + 2 * r, l.area.wholeWidth = l.area.width + r;}}switch (t.legend.position) {case "top":l.area.start.y = t.padding[0] + s, l.area.end.y = t.padding[0] + s + l.area.height;break;case "bottom":l.area.start.y = t.height - t.padding[2] - l.area.height - s, l.area.end.y = t.height - t.padding[2] - s;break;case "left":l.area.start.x = t.padding[3], l.area.end.x = t.padding[3] + l.area.width;break;case "right":l.area.start.x = t.width - t.padding[1] - l.area.width, l.area.end.x = t.width - t.padding[1];}return a.legendData = l, l;}function calCategoriesData(e, t, i, a) {var o = { angle: 0, xAxisHeight: i.xAxisHeight },n = e.map(function (e) {return measureText(e, t.xAxis.fontSize || i.fontSize);}),l = Math.max.apply(this, n);return !0 == t.xAxis.rotateLabel && l + 2 * i.xAxisTextPadding > a && (o.angle = 45 * Math.PI / 180, o.xAxisHeight = 2 * i.xAxisTextPadding + l * Math.sin(o.angle)), o;}function getXAxisTextList(e, t) {var a = Math.min,o = Math.max,n = 4 < arguments.length && void 0 !== arguments[4] ? arguments[4] : -1,l = dataCombine(e),r = [];l = l.filter(function (e) {return "object" == typeof e && null !== e ? -1 < e.constructor.toString().indexOf("Array") ? null !== e : null !== e.value : null !== e;}), l.map(function (e) {"object" == typeof e ? -1 < e.constructor.toString().indexOf("Array") ? "candle" == t.type ? e.map(function (e) {r.push(e);}) : r.push(e[0]) : r.push(e.value) : r.push(e);});var s = 0,d = 0;if (0 < r.length && (s = a.apply(this, r), d = o.apply(this, r)), -1 < n ? ("number" == typeof t.xAxis.data[n].min && (s = a(t.xAxis.data[n].min, s)), "number" == typeof t.xAxis.data[n].max && (d = o(t.xAxis.data[n].max, d))) : ("number" == typeof t.xAxis.min && (s = a(t.xAxis.min, s)), "number" == typeof t.xAxis.max && (d = o(t.xAxis.max, d))), s === d) {var h = d || 10;d += h;}for (var x = s, c = d, p = [], g = (c - x) / t.xAxis.splitNumber, y = 0; y <= t.xAxis.splitNumber; y++) {p.push(x + g * y);}return p;}function calXAxisData(e, t, i) {var a = { angle: 0, xAxisHeight: i.xAxisHeight };a.ranges = getXAxisTextList(e, t, i), a.rangesFormat = a.ranges.map(function (e) {return e = t.xAxis.format ? t.xAxis.format(e) : util.toFixed(e, 2), e;});var o = a.ranges.map(function (e) {return e = util.toFixed(e, 2), e = t.xAxis.format ? t.xAxis.format(+e) : e, e;});a = Object.assign(a, getXAxisPoints(o, t, i));var n = a.eachSpacing,l = o.map(function (e) {return measureText(e);}),r = Math.max.apply(this, l);return r + 2 * i.xAxisTextPadding > n && (a.angle = 45 * Math.PI / 180, a.xAxisHeight = 2 * i.xAxisTextPadding + r * Math.sin(a.angle)), !0 === t.xAxis.disabled && (a.xAxisHeight = 0), a;}function getRadarDataPoints(e, t, i, a, o) {var n = Math.max,l = 5 < arguments.length && void 0 !== arguments[5] ? arguments[5] : 1,r = o.extra.radar || {};r.max = r.max || 0;var s = n(r.max, n.apply(null, dataCombine(a))),d = [];var _loop = function _loop(_n7) {var o = a[_n7],r = {};r.color = o.color, r.legendShape = o.legendShape, r.pointShape = o.pointShape, r.data = [], o.data.forEach(function (a, o) {var n = {};n.angle = e[o], n.proportion = a / s, n.position = convertCoordinateOrigin(i * n.proportion * l * Math.cos(n.angle), i * n.proportion * l * Math.sin(n.angle), t), r.data.push(n);}), d.push(r);};for (var _n7 = 0; _n7 < a.length; _n7++) {_loop(_n7);}return d;}function getPieDataPoints(e, t) {var a = 2 < arguments.length && arguments[2] !== void 0 ? arguments[2] : 1,o = 0,n = 0;for (var _a6, _n8 = 0; _n8 < e.length; _n8++) {_a6 = e[_n8], _a6.data = null === _a6.data ? 0 : _a6.data, o += _a6.data;}for (var _n9, l = 0; l < e.length; l++) {_n9 = e[l], _n9.data = null === _n9.data ? 0 : _n9.data, _n9._proportion_ = 0 === o ? 1 / e.length * a : _n9.data / o * a, _n9._radius_ = t;}for (var _a7, _o9 = 0; _o9 < e.length; _o9++) {_a7 = e[_o9], _a7._start_ = n, n += 2 * _a7._proportion_ * Math.PI;}return e;}function getFunnelDataPoints(e, t) {var a = 2 < arguments.length && arguments[2] !== void 0 ? arguments[2] : 1;e = e.sort(function (e, t) {return parseInt(t.data) - parseInt(e.data);});for (var o = 0; o < e.length; o++) {e[o].radius = e[o].data / e[0].data * t * a, e[o]._proportion_ = e[o].data / e[0].data;}return e.reverse();}function getRoseDataPoints(e, t, a, o) {var n = 4 < arguments.length && arguments[4] !== void 0 ? arguments[4] : 1,l = 0,r = 0,s = [];for (var _n10, _r2 = 0; _r2 < e.length; _r2++) {_n10 = e[_r2], _n10.data = null === _n10.data ? 0 : _n10.data, l += _n10.data, s.push(_n10.data);}var d = Math.min.apply(null, s),h = Math.max.apply(null, s);for (var _r3, _s = 0; _s < e.length; _s++) {_r3 = e[_s], _r3.data = null === _r3.data ? 0 : _r3.data, 0 === l || "area" == t ? (_r3._proportion_ = _r3.data / l * n, _r3._rose_proportion_ = 1 / e.length * n) : (_r3._proportion_ = _r3.data / l * n, _r3._rose_proportion_ = _r3.data / l * n), _r3._radius_ = a + (o - a) * ((_r3.data - d) / (h - d));}for (var _n11, _l3 = 0; _l3 < e.length; _l3++) {_n11 = e[_l3], _n11._start_ = r, r += 2 * _n11._rose_proportion_ * Math.PI;}return e;}function getArcbarDataPoints(e, t) {var a = 2 < arguments.length && arguments[2] !== void 0 ? arguments[2] : 1;1 == a && (a = .999999);for (var o, n = 0; n < e.length; n++) {o = e[n], o.data = null === o.data ? 0 : o.data;var i = void 0;i = "circle" == t.type ? 2 : t.endAngle < t.startAngle ? 2 + t.endAngle - t.startAngle : t.startAngle - t.endAngle, o._proportion_ = i * o.data * a + t.startAngle, 2 <= o._proportion_ && (o._proportion_ %= 2);}return e;}function getGaugeAxisPoints(e, t, a) {var o = t;for (var n = 0; n < e.length; n++) {e[n].value = null === e[n].value ? 0 : e[n].value, e[n]._startAngle_ = o, e[n]._endAngle_ = (t - a + 1) * e[n].value + t, 2 <= e[n]._endAngle_ && (e[n]._endAngle_ %= 2), o = e[n]._endAngle_;}return e;}function getGaugeDataPoints(e, t, a) {var o = 3 < arguments.length && arguments[3] !== void 0 ? arguments[3] : 1;for (var n, l = 0; l < e.length; l++) {if (n = e[l], n.data = null === n.data ? 0 : n.data, "auto" == a.pointer.color) {for (var _e8 = 0; _e8 < t.length; _e8++) {if (n.data <= t[_e8].value) {n.color = t[_e8].color;break;}}} else n.color = a.pointer.color;var i = a.startAngle - a.endAngle + 1;n._endAngle_ = i * n.data + a.startAngle, n._oldAngle_ = a.oldAngle, a.oldAngle < a.endAngle && (n._oldAngle_ += 2), n._proportion_ = n.data >= a.oldData ? (n._endAngle_ - n._oldAngle_) * o + a.oldAngle : n._oldAngle_ - (n._oldAngle_ - n._endAngle_) * o, 2 <= n._proportion_ && (n._proportion_ %= 2);}return e;}function getPieTextMaxLength(e) {e = getPieDataPoints(e);var t = 0;for (var a = 0; a < e.length; a++) {var i = e[a],o = i.format ? i.format(+i._proportion_.toFixed(2)) : util.toFixed(100 * i._proportion_) + "%";t = Math.max(t, measureText(o));}return t;}function fixColumeData(e, t, i, a, o, n) {return e.map(function (e) {return null === e ? null : (e.width = Math.ceil((t - 2 * o.columePadding) / i), n.extra.column && n.extra.column.width && 0 < +n.extra.column.width && (e.width = Math.min(e.width, +n.extra.column.width)), 0 >= e.width && (e.width = 1), e.x += (a + .5 - i / 2) * e.width, e);});}function fixColumeMeterData(e, t, i, a, o, n, l) {return e.map(function (e) {return null === e ? null : (e.width = Math.ceil((t - 2 * o.columePadding) / 2), n.extra.column && n.extra.column.width && 0 < +n.extra.column.width && (e.width = Math.min(e.width, +n.extra.column.width)), 0 < a && (e.width -= 2 * l), e);});}function fixColumeStackData(e, t, i, a, o, n) {return e.map(function (e) {return null === e ? null : (e.width = Math.ceil((t - 2 * o.columePadding) / 2), n.extra.column && n.extra.column.width && 0 < +n.extra.column.width && (e.width = Math.min(e.width, +n.extra.column.width)), e);});}function getXAxisPoints(e, t) {var i = t.width - t.area[1] - t.area[3],a = t.enableScroll ? Math.min(t.xAxis.itemCount, e.length) : e.length;("line" == t.type || "area" == t.type) && 1 < a && "justify" == t.xAxis.boundaryGap && (a -= 1);var o = i / a,n = [],l = t.area[3],r = t.width - t.area[1];return e.forEach(function (e, t) {n.push(l + t * o);}), "justify" !== t.xAxis.boundaryGap && (!0 === t.enableScroll ? n.push(l + e.length * o) : n.push(r)), { xAxisPoints: n, startX: l, endX: r, eachSpacing: o };}function getCandleDataPoints(e, t, i, a, o, n) {var l = Math.round,r = 7 < arguments.length && void 0 !== arguments[7] ? arguments[7] : 1,s = [],d = n.height - n.area[0] - n.area[2];return e.forEach(function (e, h) {if (null === e) s.push(null);else {var x = [];e.forEach(function (e) {var s = { x: a[h] + l(o / 2) },c = e.value || e,p = d * (c - t) / (i - t);p *= r, s.y = n.height - l(p) - n.area[2], x.push(s);}), s.push(x);}}), s;}function getDataPoints(e, t, i, a, o, n) {var l = Math.round,r = 7 < arguments.length && void 0 !== arguments[7] ? arguments[7] : 1,s = "center";("line" == n.type || "area" == n.type) && (s = n.xAxis.boundaryGap);var d = [],h = n.height - n.area[0] - n.area[2],x = n.width - n.area[1] - n.area[3];return e.forEach(function (e, c) {if (null === e) d.push(null);else {var p = { color: e.color, x: a[c] },g = e;if ("object" == typeof e && null !== e) if (-1 < e.constructor.toString().indexOf("Array")) {var _t6, _i6, _a8;_t6 = [].concat(n.chartData.xAxisData.ranges), _i6 = _t6.shift(), _a8 = _t6.pop(), g = e[1], p.x = n.area[3] + x * (e[0] - _i6) / (_a8 - _i6);} else g = e.value;"center" == s && (p.x += l(o / 2));var y = h * (g - t) / (i - t);y *= r, p.y = n.height - l(y) - n.area[2], d.push(p);}}), d;}function getStackDataPoints(e, t, i, a, o, n, l, r, s) {var d = Math.round,h = 9 < arguments.length && void 0 !== arguments[9] ? arguments[9] : 1,x = [],c = n.height - n.area[0] - n.area[2];return e.forEach(function (e, l) {if (null === e) x.push(null);else {var p = { color: e.color, x: a[l] + d(o / 2) };if (0 < r) {var g = 0;for (var _e9 = 0; _e9 <= r; _e9++) {g += s[_e9].data[l];}var y = g - e,f = c * (g - t) / (i - t),u = c * (y - t) / (i - t);} else var g = e,f = c * (g - t) / (i - t),u = 0;var m = u;f *= h, m *= h, p.y = n.height - d(f) - n.area[2], p.y0 = n.height - d(m) - n.area[2], x.push(p);}}), x;}function getYAxisTextList(e, t, a, o) {var n,l = Math.min,r = Math.max,s = 4 < arguments.length && void 0 !== arguments[4] ? arguments[4] : -1;n = "stack" == o ? dataCombineStack(e, t.categories.length) : dataCombine(e);var d = [];n = n.filter(function (e) {return "object" == typeof e && null !== e ? -1 < e.constructor.toString().indexOf("Array") ? null !== e : null !== e.value : null !== e;}), n.map(function (e) {"object" == typeof e ? -1 < e.constructor.toString().indexOf("Array") ? "candle" == t.type ? e.map(function (e) {d.push(e);}) : d.push(e[1]) : d.push(e.value) : d.push(e);});var h = 0,x = 0;if (0 < d.length && (h = l.apply(this, d), x = r.apply(this, d)), -1 < s ? ("number" == typeof t.yAxis.data[s].min && (h = l(t.yAxis.data[s].min, h)), "number" == typeof t.yAxis.data[s].max && (x = r(t.yAxis.data[s].max, x))) : ("number" == typeof t.yAxis.min && (h = l(t.yAxis.min, h)), "number" == typeof t.yAxis.max && (x = r(t.yAxis.max, x))), h === x) {var c = x || 10;x += c;}for (var p = getDataRange(h, x), g = p.minRange, y = p.maxRange, f = [], u = (y - g) / t.yAxis.splitNumber, m = 0; m <= t.yAxis.splitNumber; m++) {f.push(g + u * m);}return f.reverse();}function calYAxisData(e, t, a) {var o = Math.max,n = assign({}, { type: "" }, t.extra.column),l = t.yAxis.data.length,r = Array(l);if (0 < l) {for (var _t7 = 0; _t7 < l; _t7++) {r[_t7] = [];for (var _i7 = 0; _i7 < e.length; _i7++) {e[_i7].index == _t7 && r[_t7].push(e[_i7]);}}var s = Array(l),d = Array(l),h = Array(l);var _loop2 = function _loop2(x, _e11) {_e11 = t.yAxis.data[x], !0 == t.yAxis.disabled && (_e11.disabled = !0), s[x] = getYAxisTextList(r[x], t, a, n.type, x);var i = _e11.fontSize || a.fontSize;h[x] = { position: _e11.position ? _e11.position : "left", width: 0 }, d[x] = s[x].map(function (t) {_e10 = _e11;return t = util.toFixed(t, 6), t = _e11.format ? _e11.format(+t) : t, h[x].width = o(h[x].width, measureText(t, i) + 5), t;});var l = _e11.calibration ? 4 * t.pixelRatio : 0;h[x].width += l + 3 * t.pixelRatio, !0 === _e11.disabled && (h[x].width = 0);_e10 = _e11;};for (var _e10, x = 0; x < l; x++) {_loop2(x, _e10);}} else {var s = [,],d = [,],h = [,];s[0] = getYAxisTextList(e, t, a, n.type), h[0] = { position: "left", width: 0 };var i = t.yAxis.fontSize || a.fontSize;d[0] = s[0].map(function (e) {return e = util.toFixed(e, 6), e = t.yAxis.format ? t.yAxis.format(+e) : e, h[0].width = o(h[0].width, measureText(e, i) + 5), e;}), h[0].width += 3 * t.pixelRatio, !0 === t.yAxis.disabled ? (h[0] = { position: "left", width: 0 }, t.yAxis.data[0] = { disabled: !0 }) : t.yAxis.data[0] = { disabled: !1, position: "left", max: t.yAxis.max, min: t.yAxis.min, format: t.yAxis.format };}return { rangesFormat: d, ranges: s, yAxisWidth: h };}function calTooltipYAxisData(e, t, a) {var o = [].concat(a.chartData.yAxisData.ranges),n = a.height - a.area[0] - a.area[2],l = a.area[0],r = [];for (var s = 0; s < o.length; s++) {var _t8 = o[s].shift(),i = o[s].pop(),d = _t8 - (_t8 - i) * (e - l) / n;d = a.yAxis.data[s].format ? a.yAxis.data[s].format(+d) : d.toFixed(0), r.push(d + "");}return r;}function calMarkLineData(e, t) {var a,o,n = t.height - t.area[0] - t.area[2];for (var l = 0; l < e.length; l++) {e[l].yAxisIndex = e[l].yAxisIndex ? e[l].yAxisIndex : 0;var i = [].concat(t.chartData.yAxisData.ranges[e[l].yAxisIndex]);a = i.pop(), o = i.shift();var r = n * (e[l].value - a) / (o - a);e[l].y = t.height - Math.round(r) - t.area[2];}return e;}function contextRotate(e, t) {var i = Math.PI;!0 === t.rotateLock ? !0 !== t._rotate_ && (e.translate(t.height, 0), e.rotate(90 * i / 180), t._rotate_ = !0) : (e.translate(t.height, 0), e.rotate(90 * i / 180));}function drawPointShape(e, t, i, a, o) {a.beginPath(), "hollow" == o.dataPointShapeType ? (a.setStrokeStyle(t), a.setFillStyle(o.background), a.setLineWidth(2 * o.pixelRatio)) : (a.setStrokeStyle("#ffffff"), a.setFillStyle(t), a.setLineWidth(1 * o.pixelRatio)), "diamond" === i ? e.forEach(function (e) {null !== e && (a.moveTo(e.x, e.y - 4.5), a.lineTo(e.x - 4.5, e.y), a.lineTo(e.x, e.y + 4.5), a.lineTo(e.x + 4.5, e.y), a.lineTo(e.x, e.y - 4.5));}) : "circle" === i ? e.forEach(function (e) {null !== e && (a.moveTo(e.x + 2.5 * o.pixelRatio, e.y), a.arc(e.x, e.y, 3 * o.pixelRatio, 0, 2 * Math.PI, !1));}) : "rect" === i ? e.forEach(function (e) {null !== e && (a.moveTo(e.x - 3.5, e.y - 3.5), a.rect(e.x - 3.5, e.y - 3.5, 7, 7));}) : "triangle" == i && e.forEach(function (e) {null !== e && (a.moveTo(e.x, e.y - 4.5), a.lineTo(e.x - 4.5, e.y + 4.5), a.lineTo(e.x + 4.5, e.y + 4.5), a.lineTo(e.x, e.y - 4.5));}), a.closePath(), a.fill(), a.stroke();}function drawRingTitle(e, t, i, a) {var o = e.title.fontSize || t.titleFontSize,n = e.subtitle.fontSize || t.subtitleFontSize,l = e.title.name || "",r = e.subtitle.name || "",s = e.title.color || t.titleColor,d = e.subtitle.color || t.subtitleColor,h = l ? o : 0,x = r ? n : 0,c = 5;if (r) {var p = measureText(r, n),g = a.x - p / 2 + (e.subtitle.offsetX || 0),y = a.y + n / 2 + (e.subtitle.offsetY || 0);l && (y += (h + c) / 2), i.beginPath(), i.setFontSize(n), i.setFillStyle(d), i.fillText(r, g, y), i.closePath(), i.stroke();}if (l) {var f = measureText(l, o),u = a.x - f / 2 + (e.title.offsetX || 0),m = a.y + o / 2 + (e.title.offsetY || 0);r && (m -= (x + c) / 2), i.beginPath(), i.setFontSize(o), i.setFillStyle(s), i.fillText(l, u, m), i.closePath(), i.stroke();}}function drawPointText(e, t, i, a) {var o = t.data;e.forEach(function (e, n) {if (null !== e) {a.beginPath(), a.setFontSize(t.textSize || i.fontSize), a.setFillStyle(t.textColor || "#666666");var l = o[n];"object" == typeof o[n] && null !== o[n] && (o[n].constructor == Array ? l = o[n][1] : l = o[n].value);var r = t.format ? t.format(l) : l;a.fillText(r + "", e.x - measureText(r, t.textSize || i.fontSize) / 2, e.y - 4), a.closePath(), a.stroke();}});}function drawGaugeLabel(e, t, i, a, o, n) {var l = Math.PI;t -= e.width / 2 + o.gaugeLabelTextMargin;var r = e.startAngle - e.endAngle + 1,s = r / e.splitLine.splitNumber,d = e.endNumber - e.startNumber,h = d / e.splitLine.splitNumber,x = e.startAngle,c = e.startNumber;for (var _r4 = 0; _r4 < e.splitLine.splitNumber + 1; _r4++) {var p = { x: t * Math.cos(x * l), y: t * Math.sin(x * l) },g = e.labelFormat ? e.labelFormat(c) : c;p.x += i.x - measureText(g) / 2, p.y += i.y;var y = p.x,f = p.y;n.beginPath(), n.setFontSize(o.fontSize), n.setFillStyle(e.labelColor || "#666666"), n.fillText(g, y, f + o.fontSize / 2), n.closePath(), n.stroke(), x += s, 2 <= x && (x %= 2), c += h;}}function drawRadarLabel(e, t, i, a, o, n) {var l = a.extra.radar || {};t += o.radarLabelTextMargin, e.forEach(function (e, r) {var s = { x: t * Math.cos(e), y: t * Math.sin(e) },d = convertCoordinateOrigin(s.x, s.y, i),h = d.x,x = d.y;util.approximatelyEqual(s.x, 0) ? h -= measureText(a.categories[r] || "") / 2 : 0 > s.x && (h -= measureText(a.categories[r] || "")), n.beginPath(), n.setFontSize(o.fontSize), n.setFillStyle(l.labelColor || "#666666"), n.fillText(a.categories[r] || "", h, x + o.fontSize / 2), n.closePath(), n.stroke();});}function drawPieText(e, t, a, o, i, n) {var l = Math.cos,r = Math.sin,s = Math.min,d = Math.max,h = Math.PI,x = a.pieChartLinePadding,c = [],p = null,g = e.map(function (e) {var t = e.format ? e.format(+e._proportion_.toFixed(2)) : util.toFixed(100 * e._proportion_.toFixed(4)) + "%";e._rose_proportion_ && (e._proportion_ = e._rose_proportion_);var i = 2 * h - (e._start_ + 2 * h * e._proportion_ / 2),a = e.color,o = e._radius_;return { arc: i, text: t, color: a, radius: o, textColor: e.textColor, textSize: e.textSize };});for (var _h = 0; _h < g.length; _h++) {var _e12 = g[_h],_t9 = l(_e12.arc) * (_e12.radius + x),_i8 = r(_e12.arc) * (_e12.radius + x),_o10 = l(_e12.arc) * _e12.radius,_n12 = r(_e12.arc) * _e12.radius,y = 0 <= _t9 ? _t9 + a.pieChartTextPadding : _t9 - a.pieChartTextPadding,f = _i8,u = measureText(_e12.text, _e12.textSize || a.fontSize),m = f;p && util.isSameXCoordinateArea(p.start, { x: y }) && (0 < y ? m = s(f, p.start.y) : 0 > _t9 ? m = d(f, p.start.y) : 0 < f ? m = d(f, p.start.y) : m = s(f, p.start.y)), 0 > y && (y -= u);var S = { lineStart: { x: _o10, y: _n12 }, lineEnd: { x: _t9, y: _i8 }, start: { x: y, y: m }, width: u, height: a.fontSize, text: _e12.text, color: _e12.color, textColor: _e12.textColor, textSize: _e12.textSize };p = avoidCollision(S, p), c.push(p);}for (var _l4 = 0; _l4 < c.length; _l4++) {var _e13 = c[_l4],_i9 = convertCoordinateOrigin(_e13.lineStart.x, _e13.lineStart.y, n),_r5 = convertCoordinateOrigin(_e13.lineEnd.x, _e13.lineEnd.y, n),_s2 = convertCoordinateOrigin(_e13.start.x, _e13.start.y, n);o.setLineWidth(1 * t.pixelRatio), o.setFontSize(a.fontSize), o.beginPath(), o.setStrokeStyle(_e13.color), o.setFillStyle(_e13.color), o.moveTo(_i9.x, _i9.y);var _d = 0 > _e13.start.x ? _s2.x + _e13.width : _s2.x,_x = 0 > _e13.start.x ? _s2.x - 5 : _s2.x + 5;o.quadraticCurveTo(_r5.x, _r5.y, _d, _s2.y), o.moveTo(_i9.x, _i9.y), o.stroke(), o.closePath(), o.beginPath(), o.moveTo(_s2.x + _e13.width, _s2.y), o.arc(_d, _s2.y, 2, 0, 2 * h), o.closePath(), o.fill(), o.beginPath(), o.setFontSize(_e13.textSize || a.fontSize), o.setFillStyle(_e13.textColor || "#666666"), o.fillText(_e13.text, _x, _s2.y + 3), o.closePath(), o.stroke(), o.closePath();}}function drawToolTipSplitLine(e, t, i, a) {var o = t.extra.tooltip || {};o.gridType = null == o.gridType ? "solid" : o.gridType, o.dashLength = null == o.dashLength ? 4 : o.dashLength;var n = t.area[0],l = t.height - t.area[2];if ("dash" == o.gridType && a.setLineDash([o.dashLength, o.dashLength]), a.setStrokeStyle(o.gridColor || "#cccccc"), a.setLineWidth(1 * t.pixelRatio), a.beginPath(), a.moveTo(e, n), a.lineTo(e, l), a.stroke(), a.setLineDash([]), o.xAxisLabel) {var _n13 = t.categories[t.tooltip.index];a.setFontSize(i.fontSize);var r = measureText(_n13, i.fontSize),s = e - .5 * r,d = l;a.beginPath(), a.setFillStyle(hexToRgb(o.labelBgColor || i.toolTipBackground, o.labelBgOpacity || i.toolTipOpacity)), a.setStrokeStyle(o.labelBgColor || i.toolTipBackground), a.setLineWidth(1 * t.pixelRatio), a.rect(s - i.toolTipPadding, d, r + 2 * i.toolTipPadding, i.fontSize + 2 * i.toolTipPadding), a.closePath(), a.stroke(), a.fill(), a.beginPath(), a.setFontSize(i.fontSize), a.setFillStyle(o.labelFontColor || i.fontColor), a.fillText(_n13 + "", s, d + i.toolTipPadding + i.fontSize), a.closePath(), a.stroke();}}function drawMarkLine(e, t, a) {var o = assign({}, { type: "solid", dashLength: 4, data: [] }, e.extra.markLine),n = e.area[3],l = e.width - e.area[1],r = calMarkLineData(o.data, e);for (var s, d = 0; d < r.length; d++) {if (s = assign({}, { lineColor: "#DE4A42", showLabel: !1, labelFontColor: "#666666", labelBgColor: "#DFE8FF", labelBgOpacity: .8, yAxisIndex: 0 }, r[d]), "dash" == o.type && a.setLineDash([o.dashLength, o.dashLength]), a.setStrokeStyle(s.lineColor), a.setLineWidth(1 * e.pixelRatio), a.beginPath(), a.moveTo(n, s.y), a.lineTo(l, s.y), a.stroke(), a.setLineDash([]), s.showLabel) {var i = e.yAxis.format ? e.yAxis.format(+s.value) : s.value;a.setFontSize(t.fontSize);var _o11 = measureText(i, t.fontSize),_n14 = e.padding[3] + t.yAxisTitleWidth - t.toolTipPadding,_l5 = Math.max(e.area[3], _o11 + 2 * t.toolTipPadding),_r6 = _l5 - _n14,_d2 = s.y;a.setFillStyle(hexToRgb(s.labelBgColor, s.labelBgOpacity)), a.setStrokeStyle(s.labelBgColor), a.setLineWidth(1 * e.pixelRatio), a.beginPath(), a.rect(_n14, _d2 - .5 * t.fontSize - t.toolTipPadding, _r6, t.fontSize + 2 * t.toolTipPadding), a.closePath(), a.stroke(), a.fill(), a.beginPath(), a.setFontSize(t.fontSize), a.setFillStyle(s.labelFontColor), a.fillText(i + "", _n14 + (_r6 - _o11) / 2, _d2 + .5 * t.fontSize), a.stroke();}}}function drawToolTipHorizentalLine(e, t, a, i) {var o = Math.max,n = assign({}, { gridType: "solid", dashLength: 4 }, e.extra.tooltip),l = e.area[3],r = e.width - e.area[1];if ("dash" == n.gridType && a.setLineDash([n.dashLength, n.dashLength]), a.setStrokeStyle(n.gridColor || "#cccccc"), a.setLineWidth(1 * e.pixelRatio), a.beginPath(), a.moveTo(l, e.tooltip.offset.y), a.lineTo(r, e.tooltip.offset.y), a.stroke(), a.setLineDash([]), n.yAxisLabel) {var _l6 = calTooltipYAxisData(e.tooltip.offset.y, e.series, e, t, i),_r7 = e.chartData.yAxisData.yAxisWidth,s = e.area[3],d = e.width - e.area[1];for (var h = 0; h < _l6.length; h++) {a.setFontSize(t.fontSize);var _i10 = void 0,x = void 0,c = void 0,p = measureText(_l6[h], t.fontSize);"left" == _r7[h].position ? (_i10 = s - _r7[h].width, x = o(_i10, _i10 + p + 2 * t.toolTipPadding)) : (_i10 = d, x = o(_i10 + _r7[h].width, _i10 + p + 2 * t.toolTipPadding)), c = x - _i10;var g = _i10 + (c - p) / 2,y = e.tooltip.offset.y;a.beginPath(), a.setFillStyle(hexToRgb(n.labelBgColor || t.toolTipBackground, n.labelBgOpacity || t.toolTipOpacity)), a.setStrokeStyle(n.labelBgColor || t.toolTipBackground), a.setLineWidth(1 * e.pixelRatio), a.rect(_i10, y - .5 * t.fontSize - t.toolTipPadding, c, t.fontSize + 2 * t.toolTipPadding), a.closePath(), a.stroke(), a.fill(), a.beginPath(), a.setFontSize(t.fontSize), a.setFillStyle(n.labelFontColor || t.fontColor), a.fillText(_l6[h], g, y + .5 * t.fontSize), a.closePath(), a.stroke(), "left" == _r7[h].position ? s -= _r7[h].width + e.yAxis.padding : d += _r7[h].width + e.yAxis.padding;}}}function drawToolTipSplitArea(e, t, i, a, o) {var n = assign({}, { activeBgColor: "#000000", activeBgOpacity: .08 }, t.extra.tooltip),l = t.area[0],r = t.height - t.area[2];a.beginPath(), a.setFillStyle(hexToRgb(n.activeBgColor, n.activeBgOpacity)), a.rect(e - o / 2, l, o, r - l), a.closePath(), a.fill();}function drawToolTip(e, t, i, a, o) {var n = Math.round,l = assign({}, { showBox: !0, bgColor: "#000000", bgOpacity: .7, fontColor: "#FFFFFF" }, i.extra.tooltip),r = 4 * i.pixelRatio,s = 5 * i.pixelRatio,d = 8 * i.pixelRatio,h = !1;("line" == i.type || "area" == i.type || "candle" == i.type || "mix" == i.type) && drawToolTipSplitLine(i.tooltip.offset.x, i, a, o), t = assign({ x: 0, y: 0 }, t), t.y -= 8 * i.pixelRatio;var x = e.map(function (e) {return measureText(e.text, a.fontSize);}),c = r + s + 4 * a.toolTipPadding + Math.max.apply(null, x),p = 2 * a.toolTipPadding + e.length * a.toolTipLineHeight;!1 == l.showBox || (t.x - Math.abs(i._scrollDistance_) + d + c > i.width && (h = !0), p + t.y > i.height && (t.y = i.height - p), o.beginPath(), o.setFillStyle(hexToRgb(l.bgColor || a.toolTipBackground, l.bgOpacity || a.toolTipOpacity)), h ? (o.moveTo(t.x, t.y + 10 * i.pixelRatio), o.lineTo(t.x - d, t.y + 10 * i.pixelRatio - 5 * i.pixelRatio), o.lineTo(t.x - d, t.y), o.lineTo(t.x - d - n(c), t.y), o.lineTo(t.x - d - n(c), t.y + p), o.lineTo(t.x - d, t.y + p), o.lineTo(t.x - d, t.y + 10 * i.pixelRatio + 5 * i.pixelRatio), o.lineTo(t.x, t.y + 10 * i.pixelRatio)) : (o.moveTo(t.x, t.y + 10 * i.pixelRatio), o.lineTo(t.x + d, t.y + 10 * i.pixelRatio - 5 * i.pixelRatio), o.lineTo(t.x + d, t.y), o.lineTo(t.x + d + n(c), t.y), o.lineTo(t.x + d + n(c), t.y + p), o.lineTo(t.x + d, t.y + p), o.lineTo(t.x + d, t.y + 10 * i.pixelRatio + 5 * i.pixelRatio), o.lineTo(t.x, t.y + 10 * i.pixelRatio)), o.closePath(), o.fill(), e.forEach(function (e, i) {if (null !== e.color) {o.beginPath(), o.setFillStyle(e.color);var n = t.x + d + 2 * a.toolTipPadding,l = t.y + (a.toolTipLineHeight - a.fontSize) / 2 + a.toolTipLineHeight * i + a.toolTipPadding + 1;h && (n = t.x - c - d + 2 * a.toolTipPadding), o.fillRect(n, l, r, a.fontSize), o.closePath();}}), e.forEach(function (e, i) {var n = t.x + d + 2 * a.toolTipPadding + r + s;h && (n = t.x - c - d + 2 * a.toolTipPadding + +r + s);var x = t.y + (a.toolTipLineHeight - a.fontSize) / 2 + a.toolTipLineHeight * i + a.toolTipPadding;o.beginPath(), o.setFontSize(a.fontSize), o.setFillStyle(l.fontColor), o.fillText(e.text, n, x + a.fontSize), o.closePath(), o.stroke();}));}function drawYAxisTitle(e, t, i, a) {var o = i.xAxisHeight + (t.height - i.xAxisHeight - measureText(e)) / 2;a.save(), a.beginPath(), a.setFontSize(i.fontSize), a.setFillStyle(t.yAxis.titleFontColor || "#333333"), a.translate(0, t.height), a.rotate(-90 * Math.PI / 180), a.fillText(e, o, t.padding[3] + .5 * i.fontSize), a.closePath(), a.stroke(), a.restore();}function drawColumnDataPoints(e, t, i, a) {var o = 4 < arguments.length && void 0 !== arguments[4] ? arguments[4] : 1,n = t.chartData.xAxisData,l = n.xAxisPoints,r = n.eachSpacing,s = assign({}, { type: "group", width: r / 2, meter: { border: 4, fillColor: "#FFFFFF" } }, t.extra.column),d = [];a.save();var h = -2,x = l.length + 2;return t._scrollDistance_ && 0 !== t._scrollDistance_ && !0 === t.enableScroll && (a.translate(t._scrollDistance_, 0), h = Math.floor(-t._scrollDistance_ / r) - 2, x = h + t.xAxis.itemCount + 4), t.tooltip && t.tooltip.textList && t.tooltip.textList.length && 1 === o && drawToolTipSplitArea(t.tooltip.offset.x, t, i, a, r), e.forEach(function (n, c) {var p, g, y;p = [].concat(t.chartData.yAxisData.ranges[n.index]), g = p.pop(), y = p.shift();var f = n.data;switch (s.type) {case "group":var u = getDataPoints(f, g, y, l, r, t, i, o),m = getStackDataPoints(f, g, y, l, r, t, i, c, e, o);d.push(m), u = fixColumeData(u, r, e.length, c, i, t);for (var _e14, _o12 = 0; _o12 < u.length; _o12++) {if (_e14 = u[_o12], null !== _e14 && _o12 > h && _o12 < x) {a.beginPath(), a.setStrokeStyle(_e14.color || n.color), a.setLineWidth(1), a.setFillStyle(_e14.color || n.color);var S = _e14.x - _e14.width / 2,A = t.height - _e14.y - t.area[2];a.moveTo(S, _e14.y), a.lineTo(S + _e14.width - 2, _e14.y), a.lineTo(S + _e14.width - 2, t.height - t.area[2]), a.lineTo(S, t.height - t.area[2]), a.lineTo(S, _e14.y), a.closePath(), a.stroke(), a.fill();}};break;case "stack":var u = getStackDataPoints(f, g, y, l, r, t, i, c, e, o);d.push(u), u = fixColumeStackData(u, r, e.length, c, i, t, e);for (var _e15, _o13 = 0; _o13 < u.length; _o13++) {if (_e15 = u[_o13], null !== _e15 && _o13 > h && _o13 < x) {a.beginPath(), a.setFillStyle(_e15.color || n.color);var S = _e15.x - _e15.width / 2 + 1,A = t.height - _e15.y - t.area[2],T = t.height - _e15.y0 - t.area[2];0 < c && (A -= T), a.moveTo(S, _e15.y), a.fillRect(S, _e15.y, _e15.width - 2, A), a.closePath(), a.fill();}};break;case "meter":var u = getDataPoints(f, g, y, l, r, t, i, o);if (d.push(u), u = fixColumeMeterData(u, r, e.length, c, i, t, s.meter.border), 0 == c) {for (var _e16, _o14 = 0; _o14 < u.length; _o14++) {if (_e16 = u[_o14], null !== _e16 && _o14 > h && _o14 < x) {a.beginPath(), a.setFillStyle(s.meter.fillColor);var S = _e16.x - _e16.width / 2,A = t.height - _e16.y - t.area[2];a.moveTo(S, _e16.y), a.fillRect(S, _e16.y, _e16.width, A), a.closePath(), a.fill(), 0 < s.meter.border && (a.beginPath(), a.setStrokeStyle(n.color), a.setLineWidth(s.meter.border * t.pixelRatio), a.moveTo(S + .5 * s.meter.border, _e16.y + A), a.lineTo(S + .5 * s.meter.border, _e16.y + .5 * s.meter.border), a.lineTo(S + _e16.width - .5 * s.meter.border, _e16.y + .5 * s.meter.border), a.lineTo(S + _e16.width - .5 * s.meter.border, _e16.y + A), a.stroke());}}} else for (var _e17, _o15 = 0; _o15 < u.length; _o15++) {if (_e17 = u[_o15], null !== _e17 && _o15 > h && _o15 < x) {a.beginPath(), a.setFillStyle(_e17.color || n.color);var S = _e17.x - _e17.width / 2,A = t.height - _e17.y - t.area[2];a.moveTo(S, _e17.y), a.fillRect(S, _e17.y, _e17.width, A), a.closePath(), a.fill();}}}}), !1 !== t.dataLabel && 1 === o && e.forEach(function (n, d) {var h, x, c;h = [].concat(t.chartData.yAxisData.ranges[n.index]), x = h.pop(), c = h.shift();var p = n.data;switch (s.type) {case "group":var g = getDataPoints(p, x, c, l, r, t, i, o);g = fixColumeData(g, r, e.length, d, i, t), drawPointText(g, n, i, a);break;case "stack":var g = getStackDataPoints(p, x, c, l, r, t, i, d, e, o);drawPointText(g, n, i, a);break;case "meter":var g = getDataPoints(p, x, c, l, r, t, i, o);drawPointText(g, n, i, a);}}), a.restore(), { xAxisPoints: l, calPoints: d, eachSpacing: r };}function drawCandleDataPoints(e, t, a, i, o) {var n = 5 < arguments.length && void 0 !== arguments[5] ? arguments[5] : 1,l = assign({}, { color: {}, average: {} }, a.extra.candle);l.color = assign({}, { upLine: "#f04864", upFill: "#f04864", downLine: "#2fc25b", downFill: "#2fc25b" }, l.color), l.average = assign({}, { show: !1, name: [], day: [], color: i.colors }, l.average), a.extra.candle = l;var r = a.chartData.xAxisData,s = r.xAxisPoints,d = r.eachSpacing,h = [];o.save();var x = -2,c = s.length + 2,p = 0,g = a.width + d;return a._scrollDistance_ && 0 !== a._scrollDistance_ && !0 === a.enableScroll && (o.translate(a._scrollDistance_, 0), x = Math.floor(-a._scrollDistance_ / d) - 2, c = x + a.xAxis.itemCount + 4, p = -a._scrollDistance_ - d + a.area[3], g = p + (a.xAxis.itemCount + 4) * d), l.average.show && t.forEach(function (e) {var t, l, r;t = [].concat(a.chartData.yAxisData.ranges[e.index]), l = t.pop(), r = t.shift();var h = e.data,x = getDataPoints(h, l, r, s, d, a, i, n),c = splitPoints(x);for (var _t10, _a9 = 0; _a9 < c.length; _a9++) {if (_t10 = c[_a9], o.beginPath(), o.setStrokeStyle(e.color), o.setLineWidth(1), 1 === _t10.length) o.moveTo(_t10[0].x, _t10[0].y), o.arc(_t10[0].x, _t10[0].y, 1, 0, 2 * Math.PI);else {o.moveTo(_t10[0].x, _t10[0].y);var _e18 = 0;for (var _i11, _a10 = 0; _a10 < _t10.length; _a10++) {if (_i11 = _t10[_a10], 0 == _e18 && _i11.x > p && (o.moveTo(_i11.x, _i11.y), _e18 = 1), 0 < _a10 && _i11.x > p && _i11.x < g) {var y = createCurveControlPoints(_t10, _a10 - 1);o.bezierCurveTo(y.ctrA.x, y.ctrA.y, y.ctrB.x, y.ctrB.y, _i11.x, _i11.y);}}o.moveTo(_t10[0].x, _t10[0].y);}o.closePath(), o.stroke();}}), e.forEach(function (e) {var t, r, p;t = [].concat(a.chartData.yAxisData.ranges[e.index]), r = t.pop(), p = t.shift();var g = e.data,y = getCandleDataPoints(g, r, p, s, d, a, i, n);h.push(y);var f = splitPoints(y);for (var _t11 = 0; _t11 < f[0].length; _t11++) {if (_t11 > x && _t11 < c) {var _e19 = f[0][_t11];o.beginPath(), 0 < g[_t11][1] - g[_t11][0] ? (o.setStrokeStyle(l.color.upLine), o.setFillStyle(l.color.upFill), o.setLineWidth(1 * a.pixelRatio), o.moveTo(_e19[3].x, _e19[3].y), o.lineTo(_e19[1].x, _e19[1].y), o.lineTo(_e19[1].x - d / 4, _e19[1].y), o.lineTo(_e19[0].x - d / 4, _e19[0].y), o.lineTo(_e19[0].x, _e19[0].y), o.lineTo(_e19[2].x, _e19[2].y), o.lineTo(_e19[0].x, _e19[0].y), o.lineTo(_e19[0].x + d / 4, _e19[0].y), o.lineTo(_e19[1].x + d / 4, _e19[1].y), o.lineTo(_e19[1].x, _e19[1].y), o.moveTo(_e19[3].x, _e19[3].y)) : (o.setStrokeStyle(l.color.downLine), o.setFillStyle(l.color.downFill), o.setLineWidth(1 * a.pixelRatio), o.moveTo(_e19[3].x, _e19[3].y), o.lineTo(_e19[0].x, _e19[0].y), o.lineTo(_e19[0].x - d / 4, _e19[0].y), o.lineTo(_e19[1].x - d / 4, _e19[1].y), o.lineTo(_e19[1].x, _e19[1].y), o.lineTo(_e19[2].x, _e19[2].y), o.lineTo(_e19[1].x, _e19[1].y), o.lineTo(_e19[1].x + d / 4, _e19[1].y), o.lineTo(_e19[0].x + d / 4, _e19[0].y), o.lineTo(_e19[0].x, _e19[0].y), o.moveTo(_e19[3].x, _e19[3].y)), o.closePath(), o.fill(), o.stroke();}}}), o.restore(), { xAxisPoints: s, calPoints: h, eachSpacing: d };}function drawAreaDataPoints(e, t, i, a) {var o = 4 < arguments.length && void 0 !== arguments[4] ? arguments[4] : 1,n = assign({}, { type: "straight", opacity: .2, addLine: !1, width: 2, gradient: !1 }, t.extra.area);var l = t.chartData.xAxisData,r = l.xAxisPoints,s = l.eachSpacing,d = t.height - t.area[2],h = [];a.save();var x = 0,c = t.width + s;return t._scrollDistance_ && 0 !== t._scrollDistance_ && !0 === t.enableScroll && (a.translate(t._scrollDistance_, 0), x = -t._scrollDistance_ - s + t.area[3], c = x + (t.xAxis.itemCount + 4) * s), e.forEach(function (e) {var l, p, g;l = [].concat(t.chartData.yAxisData.ranges[e.index]), p = l.pop(), g = l.shift();var y = e.data,f = getDataPoints(y, p, g, r, s, t, i, o);h.push(f);var u = splitPoints(f);for (var _o16, _l7 = 0; _l7 < u.length; _l7++) {if (_o16 = u[_l7], a.beginPath(), a.setStrokeStyle(hexToRgb(e.color, n.opacity)), n.gradient) {var _i12 = a.createLinearGradient(0, t.area[0], 0, t.height - t.area[2]);_i12.addColorStop("0", hexToRgb(e.color, n.opacity)), _i12.addColorStop("1.0", hexToRgb("#FFFFFF", .1)), a.setFillStyle(_i12);} else a.setFillStyle(hexToRgb(e.color, n.opacity));if (a.setLineWidth(n.width * t.pixelRatio), 1 < _o16.length) {var _e20 = _o16[0],_t12 = _o16[_o16.length - 1];a.moveTo(_e20.x, _e20.y);var _i13 = 0;if ("curve" === n.type) {for (var _e21, _t13 = 0; _t13 < _o16.length; _t13++) {if (_e21 = _o16[_t13], 0 == _i13 && _e21.x > x && (a.moveTo(_e21.x, _e21.y), _i13 = 1), 0 < _t13 && _e21.x > x && _e21.x < c) {var _i14 = createCurveControlPoints(_o16, _t13 - 1);a.bezierCurveTo(_i14.ctrA.x, _i14.ctrA.y, _i14.ctrB.x, _i14.ctrB.y, _e21.x, _e21.y);}}} else for (var _e22, _t14 = 0; _t14 < _o16.length; _t14++) {_e22 = _o16[_t14], 0 == _i13 && _e22.x > x && (a.moveTo(_e22.x, _e22.y), _i13 = 1), 0 < _t14 && _e22.x > x && _e22.x < c && a.lineTo(_e22.x, _e22.y);}a.lineTo(_t12.x, d), a.lineTo(_e20.x, d), a.lineTo(_e20.x, _e20.y);} else {var _e23 = _o16[0];a.moveTo(_e23.x - s / 2, _e23.y), a.lineTo(_e23.x + s / 2, _e23.y), a.lineTo(_e23.x + s / 2, d), a.lineTo(_e23.x - s / 2, d), a.moveTo(_e23.x - s / 2, _e23.y);}if (a.closePath(), a.fill(), n.addLine) {if ("dash" == e.lineType) {var _i15 = e.dashLength ? e.dashLength : 8;_i15 *= t.pixelRatio, a.setLineDash([_i15, _i15]);}if (a.beginPath(), a.setStrokeStyle(e.color), a.setLineWidth(n.width * t.pixelRatio), 1 === _o16.length) a.moveTo(_o16[0].x, _o16[0].y), a.arc(_o16[0].x, _o16[0].y, 1, 0, 2 * Math.PI);else {a.moveTo(_o16[0].x, _o16[0].y);var _e24 = 0;if ("curve" === n.type) {for (var _t15, _i16 = 0; _i16 < _o16.length; _i16++) {if (_t15 = _o16[_i16], 0 == _e24 && _t15.x > x && (a.moveTo(_t15.x, _t15.y), _e24 = 1), 0 < _i16 && _t15.x > x && _t15.x < c) {var _e25 = createCurveControlPoints(_o16, _i16 - 1);a.bezierCurveTo(_e25.ctrA.x, _e25.ctrA.y, _e25.ctrB.x, _e25.ctrB.y, _t15.x, _t15.y);}}} else for (var _t16, _i17 = 0; _i17 < _o16.length; _i17++) {_t16 = _o16[_i17], 0 == _e24 && _t16.x > x && (a.moveTo(_t16.x, _t16.y), _e24 = 1), 0 < _i17 && _t16.x > x && _t16.x < c && a.lineTo(_t16.x, _t16.y);}a.moveTo(_o16[0].x, _o16[0].y);}a.stroke(), a.setLineDash([]);}}!1 !== t.dataPointShape && drawPointShape(f, e.color, e.pointShape, a, t);}), !1 !== t.dataLabel && 1 === o && e.forEach(function (e) {var n, l, d;n = [].concat(t.chartData.yAxisData.ranges[e.index]), l = n.pop(), d = n.shift();var h = e.data,x = getDataPoints(h, l, d, r, s, t, i, o);drawPointText(x, e, i, a);}), a.restore(), { xAxisPoints: r, calPoints: h, eachSpacing: s };}function drawLineDataPoints(e, t, i, a) {var o = 4 < arguments.length && void 0 !== arguments[4] ? arguments[4] : 1,n = assign({}, { type: "straight", width: 2 }, t.extra.line);n.width *= t.pixelRatio;var l = t.chartData.xAxisData,r = l.xAxisPoints,s = l.eachSpacing;var d = [];a.save();var h = 0,x = t.width + s;return t._scrollDistance_ && 0 !== t._scrollDistance_ && !0 === t.enableScroll && (a.translate(t._scrollDistance_, 0), h = -t._scrollDistance_ - s + t.area[3], x = h + (t.xAxis.itemCount + 4) * s), e.forEach(function (e) {var l, c, p;l = [].concat(t.chartData.yAxisData.ranges[e.index]), c = l.pop(), p = l.shift();var g = e.data,y = getDataPoints(g, c, p, r, s, t, i, o);d.push(y);var f = splitPoints(y);if ("dash" == e.lineType) {var _i18 = e.dashLength ? e.dashLength : 8;_i18 *= t.pixelRatio, a.setLineDash([_i18, _i18]);}a.beginPath(), a.setStrokeStyle(e.color), a.setLineWidth(n.width), f.forEach(function (e) {if (1 === e.length) a.moveTo(e[0].x, e[0].y), a.arc(e[0].x, e[0].y, 1, 0, 2 * Math.PI);else {a.moveTo(e[0].x, e[0].y);var _i19 = 0;if ("curve" === n.type) {for (var _o17, _n15 = 0; _n15 < e.length; _n15++) {if (_o17 = e[_n15], 0 == _i19 && _o17.x > h && (a.moveTo(_o17.x, _o17.y), _i19 = 1), 0 < _n15 && _o17.x > h && _o17.x < x) {var t = createCurveControlPoints(e, _n15 - 1);a.bezierCurveTo(t.ctrA.x, t.ctrA.y, t.ctrB.x, t.ctrB.y, _o17.x, _o17.y);}}} else for (var _t17, _o18 = 0; _o18 < e.length; _o18++) {_t17 = e[_o18], 0 == _i19 && _t17.x > h && (a.moveTo(_t17.x, _t17.y), _i19 = 1), 0 < _o18 && _t17.x > h && _t17.x < x && a.lineTo(_t17.x, _t17.y);}a.moveTo(e[0].x, e[0].y);}}), a.stroke(), a.setLineDash([]), !1 !== t.dataPointShape && drawPointShape(y, e.color, e.pointShape, a, t);}), !1 !== t.dataLabel && 1 === o && e.forEach(function (e) {var n, l, d;n = [].concat(t.chartData.yAxisData.ranges[e.index]), l = n.pop(), d = n.shift();var h = e.data,x = getDataPoints(h, l, d, r, s, t, i, o);drawPointText(x, e, i, a);}), a.restore(), { xAxisPoints: r, calPoints: d, eachSpacing: s };}function drawMixDataPoints(e, t, i, a) {var o = 4 < arguments.length && void 0 !== arguments[4] ? arguments[4] : 1,n = t.chartData.xAxisData,l = n.xAxisPoints,r = n.eachSpacing,s = t.height - t.area[2],d = [];var h = 0,x = 0;e.forEach(function (e) {"column" == e.type && (x += 1);}), a.save();var c = -2,p = l.length + 2,g = 0,y = t.width + r;if (t._scrollDistance_ && 0 !== t._scrollDistance_ && !0 === t.enableScroll && (a.translate(t._scrollDistance_, 0), c = Math.floor(-t._scrollDistance_ / r) - 2, p = c + t.xAxis.itemCount + 4, g = -t._scrollDistance_ - r + t.area[3], y = g + (t.xAxis.itemCount + 4) * r), e.forEach(function (e) {var n, f, u;n = [].concat(t.chartData.yAxisData.ranges[e.index]), f = n.pop(), u = n.shift();var m = e.data,S = getDataPoints(m, f, u, l, r, t, i, o);if (d.push(S), "column" == e.type) {S = fixColumeData(S, r, x, h, i, t);for (var _o19, _n16 = 0; _n16 < S.length; _n16++) {if (_o19 = S[_n16], null !== _o19 && _n16 > c && _n16 < p) {a.beginPath(), a.setStrokeStyle(_o19.color || e.color), a.setLineWidth(1), a.setFillStyle(_o19.color || e.color);var A = _o19.x - _o19.width / 2,T = t.height - _o19.y - t.area[2];a.moveTo(A, _o19.y), a.moveTo(A, _o19.y), a.lineTo(A + _o19.width - 2, _o19.y), a.lineTo(A + _o19.width - 2, t.height - t.area[2]), a.lineTo(A, t.height - t.area[2]), a.lineTo(A, _o19.y), a.closePath(), a.stroke(), a.fill(), a.closePath(), a.fill();}}h += 1;}if ("area" == e.type) {var _o20 = splitPoints(S);for (var _n17, _l8 = 0; _l8 < _o20.length; _l8++) {if (_n17 = _o20[_l8], a.beginPath(), a.setStrokeStyle(e.color), a.setFillStyle(hexToRgb(e.color, .2)), a.setLineWidth(2 * t.pixelRatio), 1 < _n17.length) {var b = _n17[0];var _t18 = _n17[_n17.length - 1];a.moveTo(b.x, b.y);var _i20 = 0;if ("curve" === e.style) {for (var _e26, _t19 = 0; _t19 < _n17.length; _t19++) {if (_e26 = _n17[_t19], 0 == _i20 && _e26.x > g && (a.moveTo(_e26.x, _e26.y), _i20 = 1), 0 < _t19 && _e26.x > g && _e26.x < y) {var P = createCurveControlPoints(_n17, _t19 - 1);a.bezierCurveTo(P.ctrA.x, P.ctrA.y, P.ctrB.x, P.ctrB.y, _e26.x, _e26.y);}}} else for (var _e27, _t20 = 0; _t20 < _n17.length; _t20++) {_e27 = _n17[_t20], 0 == _i20 && _e27.x > g && (a.moveTo(_e27.x, _e27.y), _i20 = 1), 0 < _t20 && _e27.x > g && _e27.x < y && a.lineTo(_e27.x, _e27.y);}a.lineTo(_t18.x, s), a.lineTo(b.x, s), a.lineTo(b.x, b.y);} else {var _e28 = _n17[0];a.moveTo(_e28.x - r / 2, _e28.y), a.lineTo(_e28.x + r / 2, _e28.y), a.lineTo(_e28.x + r / 2, s), a.lineTo(_e28.x - r / 2, s), a.moveTo(_e28.x - r / 2, _e28.y);}a.closePath(), a.fill();}}if ("line" == e.type) {var _ = splitPoints(S);_.forEach(function (i) {if ("dash" == e.lineType) {var _i21 = e.dashLength ? e.dashLength : 8;_i21 *= t.pixelRatio, a.setLineDash([_i21, _i21]);}if (a.beginPath(), a.setStrokeStyle(e.color), a.setLineWidth(2 * t.pixelRatio), 1 === i.length) a.moveTo(i[0].x, i[0].y), a.arc(i[0].x, i[0].y, 1, 0, 2 * Math.PI);else {a.moveTo(i[0].x, i[0].y);var _t21 = 0;if ("curve" == e.style) {for (var _e29, _n18 = 0; _n18 < i.length; _n18++) {if (_e29 = i[_n18], 0 == _t21 && _e29.x > g && (a.moveTo(_e29.x, _e29.y), _t21 = 1), 0 < _n18 && _e29.x > g && _e29.x < y) {var o = createCurveControlPoints(i, _n18 - 1);a.bezierCurveTo(o.ctrA.x, o.ctrA.y, o.ctrB.x, o.ctrB.y, _e29.x, _e29.y);}}} else for (var _e30, _o21 = 0; _o21 < i.length; _o21++) {_e30 = i[_o21], 0 == _t21 && _e30.x > g && (a.moveTo(_e30.x, _e30.y), _t21 = 1), 0 < _o21 && _e30.x > g && _e30.x < y && a.lineTo(_e30.x, _e30.y);}a.moveTo(i[0].x, i[0].y);}a.stroke(), a.setLineDash([]);});}"point" == e.type && (e.addPoint = !0), !0 == e.addPoint && "column" !== e.type && drawPointShape(S, e.color, e.pointShape, a, t);}), !1 !== t.dataLabel && 1 === o) {var h = 0;e.forEach(function (e) {var n, s, d;n = [].concat(t.chartData.yAxisData.ranges[e.index]), s = n.pop(), d = n.shift();var c = e.data,p = getDataPoints(c, s, d, l, r, t, i, o);"column" === e.type ? (p = fixColumeData(p, r, x, h, i, t), drawPointText(p, e, i, a), h += 1) : drawPointText(p, e, i, a);});}return a.restore(), { xAxisPoints: l, calPoints: d, eachSpacing: r };}function drawToolTipBridge(e, t, i, a, o, n) {var l = e.extra.tooltip || {};l.horizentalLine && e.tooltip && 1 === a && ("line" == e.type || "area" == e.type || "column" == e.type || "candle" == e.type || "mix" == e.type) && drawToolTipHorizentalLine(e, t, i, o, n), i.save(), e._scrollDistance_ && 0 !== e._scrollDistance_ && !0 === e.enableScroll && i.translate(e._scrollDistance_, 0), e.tooltip && e.tooltip.textList && e.tooltip.textList.length && 1 === a && drawToolTip(e.tooltip.textList, e.tooltip.offset, e, t, i, o, n), i.restore();}function drawXAxis(e, t, i, a) {var o = Math.ceil;var n = t.chartData.xAxisData,l = n.xAxisPoints,r = n.startX,s = n.endX,d = n.eachSpacing;var h = "center";("line" == t.type || "area" == t.type) && (h = t.xAxis.boundaryGap);var x = t.height - t.area[2],c = t.area[0];if (t.enableScroll && t.xAxis.scrollShow) {var p = t.height - t.area[2] + i.xAxisHeight,g = s - r,y = d * (l.length - 1),f = 0;t._scrollDistance_ && (f = -t._scrollDistance_ * g / y), a.beginPath(), a.setLineCap("round"), a.setLineWidth(6 * t.pixelRatio), a.setStrokeStyle(t.xAxis.scrollBackgroundColor || "#EFEBEF"), a.moveTo(r, p), a.lineTo(s, p), a.stroke(), a.closePath(), a.beginPath(), a.setLineCap("round"), a.setLineWidth(6 * t.pixelRatio), a.setStrokeStyle(t.xAxis.scrollColor || "#A6A6A6"), a.moveTo(r + f, p), a.lineTo(r + f + g * g / y, p), a.stroke(), a.closePath(), a.setLineCap("butt");}if (a.save(), t._scrollDistance_ && 0 !== t._scrollDistance_ && a.translate(t._scrollDistance_, 0), !0 === t.xAxis.calibration && (a.setStrokeStyle(t.xAxis.gridColor || "#cccccc"), a.setLineCap("butt"), a.setLineWidth(1 * t.pixelRatio), l.forEach(function (e, i) {0 < i && (a.beginPath(), a.moveTo(e - d / 2, x), a.lineTo(e - d / 2, x + 3 * t.pixelRatio), a.closePath(), a.stroke());})), !0 !== t.xAxis.disableGrid && (a.setStrokeStyle(t.xAxis.gridColor || "#cccccc"), a.setLineCap("butt"), a.setLineWidth(1 * t.pixelRatio), "dash" == t.xAxis.gridType && a.setLineDash([t.xAxis.dashLength, t.xAxis.dashLength]), t.xAxis.gridEval = t.xAxis.gridEval || 1, l.forEach(function (e, i) {0 == i % t.xAxis.gridEval && (a.beginPath(), a.moveTo(e, x), a.lineTo(e, c), a.stroke());}), a.setLineDash([])), !0 !== t.xAxis.disabled) {var _n19 = e.length;t.xAxis.labelCount && (_n19 = t.xAxis.itemCount ? o(e.length / t.xAxis.itemCount * t.xAxis.labelCount) : t.xAxis.labelCount, _n19 -= 1);var _r8 = o(e.length / _n19),_s3 = [],_c = e.length;for (var _t22 = 0; _t22 < _c; _t22++) {0 == _t22 % _r8 ? _s3.push(e[_t22]) : _s3.push("");}_s3[_c - 1] = e[_c - 1];var u = t.xAxis.fontSize || i.fontSize;0 === i._xAxisTextAngle_ ? _s3.forEach(function (e, o) {var n = -measureText(e + "", u) / 2;"center" == h && (n += d / 2);var r = 0;t.xAxis.scrollShow && (r = 6 * t.pixelRatio), a.beginPath(), a.setFontSize(u), a.setFillStyle(t.xAxis.fontColor || "#666666"), a.fillText(e + "", l[o] + n, x + u + (i.xAxisHeight - r - u) / 2), a.closePath(), a.stroke();}) : _s3.forEach(function (e, o) {a.save(), a.beginPath(), a.setFontSize(u), a.setFillStyle(t.xAxis.fontColor || "#666666");var n = measureText(e + "", u),r = -n;"center" == h && (r += d / 2);var s = calRotateTranslate(l[o] + d / 2, x + u / 2 + 5, t.height),c = s.transX,p = s.transY;a.rotate(-1 * i._xAxisTextAngle_), a.translate(c, p), a.fillText(e + "", l[o] + r, x + u + 5), a.closePath(), a.stroke(), a.restore();});}a.restore(), t.xAxis.axisLine && (a.beginPath(), a.setStrokeStyle(t.xAxis.axisLineColor), a.setLineWidth(1 * t.pixelRatio), a.moveTo(r, t.height - t.area[2]), a.lineTo(s, t.height - t.area[2]), a.stroke());}function drawYAxisGrid(e, t, i, a) {if (!0 === t.yAxis.disableGrid) return;var o = t.height - t.area[0] - t.area[2],n = o / t.yAxis.splitNumber,l = t.area[3],r = t.chartData.xAxisData.xAxisPoints,s = t.chartData.xAxisData.eachSpacing,d = s * (r.length - 1),h = [];for (var _o22 = 0; _o22 < t.yAxis.splitNumber + 1; _o22++) {h.push(t.height - t.area[2] - n * _o22);}a.save(), t._scrollDistance_ && 0 !== t._scrollDistance_ && a.translate(t._scrollDistance_, 0), "dash" == t.yAxis.gridType && a.setLineDash([t.yAxis.dashLength, t.yAxis.dashLength]), a.setStrokeStyle(t.yAxis.gridColor), a.setLineWidth(1 * t.pixelRatio), h.forEach(function (e) {a.beginPath(), a.moveTo(l, e), a.lineTo(l + d, e), a.stroke();}), a.setLineDash([]), a.restore();}function drawYAxis(e, t, a, o) {if (!0 === t.yAxis.disabled) return;var i = t.height - t.area[0] - t.area[2],n = i / t.yAxis.splitNumber,l = t.area[3],r = t.width - t.area[1],s = t.height - t.area[2],d = s + a.xAxisHeight;t.xAxis.scrollShow && (d -= 3 * t.pixelRatio), t.xAxis.rotateLabel && (d = t.height - t.area[2] + 3), o.beginPath(), o.setFillStyle(t.background || "#ffffff"), 0 > t._scrollDistance_ && o.fillRect(0, 0, l, d), !0 == t.enableScroll && o.fillRect(r, 0, t.width, d), o.closePath(), o.stroke();var h = [];for (var _l9 = 0; _l9 <= t.yAxis.splitNumber; _l9++) {h.push(t.area[0] + n * _l9);}var x = t.area[3],c = t.width - t.area[1];var _loop3 = function _loop3(_n21, _l10) {if (_n21 = t.yAxis.data[_l10], !0 !== _n21.disabled) {var _e31 = t.chartData.yAxisData.rangesFormat[_l10],_i22 = _n21.fontSize || a.fontSize,_r9 = t.chartData.yAxisData.yAxisWidth[_l10];if (_e31.forEach(function (e, a) {var l = h[a] ? h[a] : s;o.beginPath(), o.setFontSize(_i22), o.setLineWidth(1 * t.pixelRatio), o.setStrokeStyle(_n21.axisLineColor || "#cccccc"), o.setFillStyle(_n21.fontColor || "#666666"), "left" == _r9.position ? (o.fillText(e + "", x - _r9.width, l + _i22 / 2), !0 == _n21.calibration && (o.moveTo(x, l), o.lineTo(x - 3 * t.pixelRatio, l))) : (o.fillText(e + "", c + 4 * t.pixelRatio, l + _i22 / 2), !0 == _n21.calibration && (o.moveTo(c, l), o.lineTo(c + 3 * t.pixelRatio, l))), o.closePath(), o.stroke();}), !1 !== _n21.axisLine && (o.beginPath(), o.setStrokeStyle(_n21.axisLineColor || "#cccccc"), o.setLineWidth(1 * t.pixelRatio), "left" == _r9.position ? (o.moveTo(x, t.height - t.area[2]), o.lineTo(x, t.area[0])) : (o.moveTo(c, t.height - t.area[2]), o.lineTo(c, t.area[0])), o.stroke()), t.yAxis.showTitle) {var _e32 = _n21.titleFontSize || a.fontSize,_i23 = _n21.title;o.beginPath(), o.setFontSize(_e32), o.setFillStyle(_n21.titleFontColor || "#666666"), "left" == _r9.position ? o.fillText(_i23, x - measureText(_i23, _e32) / 2, t.area[0] - 10 * t.pixelRatio) : o.fillText(_i23, c - measureText(_i23, _e32) / 2, t.area[0] - 10 * t.pixelRatio), o.closePath(), o.stroke();}"left" == _r9.position ? x -= _r9.width + t.yAxis.padding : c += _r9.width + t.yAxis.padding;}_n20 = _n21;};for (var _n20, _l10 = 0; _l10 < t.yAxis.data.length; _l10++) {_loop3(_n20, _l10);}}function drawLegend(e, t, i, a, o) {if (!1 === t.legend.show) return;var n = o.legendData,l = n.points,r = n.area,s = t.legend.padding,d = t.legend.fontSize,h = 15 * t.pixelRatio,x = 5 * t.pixelRatio,c = t.legend.itemGap,p = Math.max(t.legend.lineHeight * t.pixelRatio, d);a.beginPath(), a.setLineWidth(t.legend.borderWidth), a.setStrokeStyle(t.legend.borderColor), a.setFillStyle(t.legend.backgroundColor), a.moveTo(r.start.x, r.start.y), a.rect(r.start.x, r.start.y, r.width, r.height), a.closePath(), a.fill(), a.stroke(), l.forEach(function (e, o) {var l = 0,g = 0;l = n.widthArr[o], g = n.heightArr[o];var y = 0,f = 0;"top" == t.legend.position || "bottom" == t.legend.position ? (y = r.start.x + (r.width - l) / 2, f = r.start.y + s + o * p) : (l = 0 == o ? 0 : n.widthArr[o - 1], y = r.start.x + s + l, f = r.start.y + s + (r.height - g) / 2), a.setFontSize(i.fontSize);for (var _n22, _l11 = 0; _l11 < e.length; _l11++) {switch (_n22 = e[_l11], _n22.area = [0, 0, 0, 0], _n22.area[0] = y, _n22.area[1] = f, _n22.area[3] = f + p, a.beginPath(), a.setLineWidth(1 * t.pixelRatio), a.setStrokeStyle(_n22.show ? _n22.color : t.legend.hiddenColor), a.setFillStyle(_n22.show ? _n22.color : t.legend.hiddenColor), _n22.legendShape) {case "line":a.moveTo(y, f + .5 * p - 2 * t.pixelRatio), a.fillRect(y, f + .5 * p - 2 * t.pixelRatio, 15 * t.pixelRatio, 4 * t.pixelRatio);break;case "triangle":a.moveTo(y + 7.5 * t.pixelRatio, f + .5 * p - 5 * t.pixelRatio), a.lineTo(y + 2.5 * t.pixelRatio, f + .5 * p + 5 * t.pixelRatio), a.lineTo(y + 12.5 * t.pixelRatio, f + .5 * p + 5 * t.pixelRatio), a.lineTo(y + 7.5 * t.pixelRatio, f + .5 * p - 5 * t.pixelRatio);break;case "diamond":a.moveTo(y + 7.5 * t.pixelRatio, f + .5 * p - 5 * t.pixelRatio), a.lineTo(y + 2.5 * t.pixelRatio, f + .5 * p), a.lineTo(y + 7.5 * t.pixelRatio, f + .5 * p + 5 * t.pixelRatio), a.lineTo(y + 12.5 * t.pixelRatio, f + .5 * p), a.lineTo(y + 7.5 * t.pixelRatio, f + .5 * p - 5 * t.pixelRatio);break;case "circle":a.moveTo(y + 7.5 * t.pixelRatio, f + .5 * p), a.arc(y + 7.5 * t.pixelRatio, f + .5 * p, 5 * t.pixelRatio, 0, 2 * Math.PI);break;case "rect":a.moveTo(y, f + .5 * p - 5 * t.pixelRatio), a.fillRect(y, f + .5 * p - 5 * t.pixelRatio, 15 * t.pixelRatio, 10 * t.pixelRatio);break;default:a.moveTo(y, f + .5 * p - 5 * t.pixelRatio), a.fillRect(y, f + .5 * p - 5 * t.pixelRatio, 15 * t.pixelRatio, 10 * t.pixelRatio);}a.closePath(), a.fill(), a.stroke(), y += h + x;a.beginPath(), a.setFontSize(d), a.setFillStyle(_n22.show ? t.legend.fontColor : t.legend.hiddenColor), a.fillText(_n22.name, y, f + (.5 * p + .5 * d - 2)), a.closePath(), a.stroke(), "top" == t.legend.position || "bottom" == t.legend.position ? (y += measureText(_n22.name, d) + c, _n22.area[2] = y) : (_n22.area[2] = y + measureText(_n22.name, d) + c, y -= h + x, f += p);}});}function drawPieDataPoints(e, t, a, o) {var n = Math.PI,l = 4 < arguments.length && void 0 !== arguments[4] ? arguments[4] : 1,r = assign({}, { activeOpacity: .5, activeRadius: 10 * t.pixelRatio, offsetAngle: 0, labelWidth: 15 * t.pixelRatio, ringWidth: 0, border: !1, borderWidth: 2, borderColor: "#FFFFFF" }, t.extra.pie),s = { x: t.area[3] + (t.width - t.area[1] - t.area[3]) / 2, y: t.area[0] + (t.height - t.area[0] - t.area[2]) / 2 };0 == a.pieChartLinePadding && (a.pieChartLinePadding = r.activeRadius);var d = Math.min((t.width - t.area[1] - t.area[3]) / 2 - a.pieChartLinePadding - a.pieChartTextPadding - a._pieTextMaxLength_, (t.height - t.area[0] - t.area[2]) / 2 - a.pieChartLinePadding - a.pieChartTextPadding);e = getPieDataPoints(e, d, l);var h = r.activeRadius;if (e = e.map(function (e) {return e._start_ += r.offsetAngle * n / 180, e;}), e.forEach(function (e, i) {t.tooltip && t.tooltip.index == i && (o.beginPath(), o.setFillStyle(hexToRgb(e.color, t.extra.pie.activeOpacity || .5)), o.moveTo(s.x, s.y), o.arc(s.x, s.y, e._radius_ + h, e._start_, e._start_ + 2 * e._proportion_ * n), o.closePath(), o.fill()), o.beginPath(), o.setLineWidth(r.borderWidth * t.pixelRatio), o.lineJoin = "round", o.setStrokeStyle(r.borderColor), o.setFillStyle(e.color), o.moveTo(s.x, s.y), o.arc(s.x, s.y, e._radius_, e._start_, e._start_ + 2 * e._proportion_ * n), o.closePath(), o.fill(), !0 == r.border && o.stroke();}), "ring" === t.type) {var x = .6 * d;"number" == typeof t.extra.pie.ringWidth && 0 < t.extra.pie.ringWidth && (x = Math.max(0, d - t.extra.pie.ringWidth)), o.beginPath(), o.setFillStyle(t.background || "#ffffff"), o.moveTo(s.x, s.y), o.arc(s.x, s.y, x, 0, 2 * n), o.closePath(), o.fill();}if (!1 !== t.dataLabel && 1 === l) {for (var c = !1, p = 0, g = e.length; p < g; p++) {if (0 < e[p].data) {c = !0;break;}}c && drawPieText(e, t, a, o, d, s);}return 1 === l && "ring" === t.type && drawRingTitle(t, a, o, s), { center: s, radius: d, series: e };}function drawRoseDataPoints(e, t, a, o) {var n = Math.PI,l = 4 < arguments.length && void 0 !== arguments[4] ? arguments[4] : 1,r = assign({}, { type: "area", activeOpacity: .5, activeRadius: 10 * t.pixelRatio, offsetAngle: 0, labelWidth: 15 * t.pixelRatio, border: !1, borderWidth: 2, borderColor: "#FFFFFF" }, t.extra.rose);0 == a.pieChartLinePadding && (a.pieChartLinePadding = r.activeRadius);var s = { x: t.area[3] + (t.width - t.area[1] - t.area[3]) / 2, y: t.area[0] + (t.height - t.area[0] - t.area[2]) / 2 },d = Math.min((t.width - t.area[1] - t.area[3]) / 2 - a.pieChartLinePadding - a.pieChartTextPadding - a._pieTextMaxLength_, (t.height - t.area[0] - t.area[2]) / 2 - a.pieChartLinePadding - a.pieChartTextPadding),h = r.minRadius || .5 * d;e = getRoseDataPoints(e, r.type, h, d, l);var x = r.activeRadius;if (e = e.map(function (e) {return e._start_ += (r.offsetAngle || 0) * n / 180, e;}), e.forEach(function (e, i) {t.tooltip && t.tooltip.index == i && (o.beginPath(), o.setFillStyle(hexToRgb(e.color, r.activeOpacity || .5)), o.moveTo(s.x, s.y), o.arc(s.x, s.y, x + e._radius_, e._start_, e._start_ + 2 * e._rose_proportion_ * n), o.closePath(), o.fill()), o.beginPath(), o.setLineWidth(r.borderWidth * t.pixelRatio), o.lineJoin = "round", o.setStrokeStyle(r.borderColor), o.setFillStyle(e.color), o.moveTo(s.x, s.y), o.arc(s.x, s.y, e._radius_, e._start_, e._start_ + 2 * e._rose_proportion_ * n), o.closePath(), o.fill(), !0 == r.border && o.stroke();}), !1 !== t.dataLabel && 1 === l) {for (var c = !1, p = 0, g = e.length; p < g; p++) {if (0 < e[p].data) {c = !0;break;}}c && drawPieText(e, t, a, o, d, s);}return { center: s, radius: d, series: e };}function drawArcbarDataPoints(e, t, i, a) {var o = Math.PI,n = 4 < arguments.length && void 0 !== arguments[4] ? arguments[4] : 1,l = assign({}, { startAngle: .75, endAngle: .25, type: "default", width: 12 * t.pixelRatio, gap: 2 * t.pixelRatio }, t.extra.arcbar);e = getArcbarDataPoints(e, l, n);var r = l.center ? l.center : { x: t.width / 2, y: t.height / 2 };var s;l.radius ? s = l.radius : (s = Math.min(r.x, r.y), s -= 5 * t.pixelRatio, s -= l.width / 2);for (var _n23, d = 0; d < e.length; d++) {_n23 = e[d], a.setLineWidth(l.width), a.setStrokeStyle(l.backgroundColor || "#E9E9E9"), a.setLineCap("round"), a.beginPath(), "default" == l.type ? a.arc(r.x, r.y, s - (l.width + l.gap) * d, l.startAngle * o, l.endAngle * o, !1) : a.arc(r.x, r.y, s - (l.width + l.gap) * d, 0, 2 * o, !1), a.stroke(), a.setLineWidth(l.width), a.setStrokeStyle(_n23.color), a.setLineCap("round"), a.beginPath(), a.arc(r.x, r.y, s - (l.width + l.gap) * d, l.startAngle * o, _n23._proportion_ * o, !1), a.stroke();}return drawRingTitle(t, i, a, r), { center: r, radius: s, series: e };}function drawGaugeDataPoints(e, t, a, i, o) {var n = Math.PI,l = 5 < arguments.length && void 0 !== arguments[5] ? arguments[5] : 1,r = assign({}, { type: "default", startAngle: .75, endAngle: .25, width: 15, splitLine: { fixRadius: 0, splitNumber: 10, width: 15, color: "#FFFFFF", childNumber: 5, childWidth: 5 }, pointer: { width: 15, color: "auto" } }, a.extra.gauge);null == r.oldAngle && (r.oldAngle = r.startAngle), null == r.oldData && (r.oldData = 0), e = getGaugeAxisPoints(e, r.startAngle, r.endAngle);var s = { x: a.width / 2, y: a.height / 2 },d = Math.min(s.x, s.y);d -= 5 * a.pixelRatio, d -= r.width / 2;var h = d - r.width,x = 0;if ("progress" == r.type) {var c = d - 3 * r.width;o.beginPath();var _e33 = o.createLinearGradient(s.x, s.y - c, s.x, s.y + c);_e33.addColorStop("0", hexToRgb(t[0].color, .3)), _e33.addColorStop("1.0", hexToRgb("#FFFFFF", .1)), o.setFillStyle(_e33), o.arc(s.x, s.y, c, 0, 2 * n, !1), o.fill(), o.setLineWidth(r.width), o.setStrokeStyle(hexToRgb(t[0].color, .3)), o.setLineCap("round"), o.beginPath(), o.arc(s.x, s.y, h, r.startAngle * n, r.endAngle * n, !1), o.stroke(), x = r.startAngle - r.endAngle + 1;var _i24 = x / r.splitLine.splitNumber,p = x / r.splitLine.splitNumber / r.splitLine.childNumber,g = -d - .5 * r.width - r.splitLine.fixRadius,y = -d - r.width - r.splitLine.fixRadius + r.splitLine.width;o.save(), o.translate(s.x, s.y), o.rotate((r.startAngle - 1) * n);var f = r.splitLine.splitNumber * r.splitLine.childNumber + 1,u = t[0].data * l;for (var _e34 = 0; _e34 < f; _e34++) {o.beginPath(), u > _e34 / f ? o.setStrokeStyle(hexToRgb(t[0].color, 1)) : o.setStrokeStyle(hexToRgb(t[0].color, .3)), o.setLineWidth(3 * a.pixelRatio), o.moveTo(g, 0), o.lineTo(y, 0), o.stroke(), o.rotate(p * n);}o.restore(), t = getArcbarDataPoints(t, r, l), o.setLineWidth(r.width), o.setStrokeStyle(t[0].color), o.setLineCap("round"), o.beginPath(), o.arc(s.x, s.y, h, r.startAngle * n, t[0]._proportion_ * n, !1), o.stroke();var m = d - 2.5 * r.width;o.save(), o.translate(s.x, s.y), o.rotate((t[0]._proportion_ - 1) * n), o.beginPath(), o.setLineWidth(r.width / 3);var S = o.createLinearGradient(0, .6 * -m, 0, .6 * m);S.addColorStop("0", hexToRgb("#FFFFFF", 0)), S.addColorStop("0.5", hexToRgb(t[0].color, 1)), S.addColorStop("1.0", hexToRgb("#FFFFFF", 0)), o.setStrokeStyle(S), o.arc(0, 0, m, .85 * n, 1.15 * n, !1), o.stroke(), o.beginPath(), o.setLineWidth(1), o.setStrokeStyle(t[0].color), o.setFillStyle(t[0].color), o.moveTo(-m - r.width / 3 / 2, -4), o.lineTo(-m - r.width / 3 / 2 - 4, 0), o.lineTo(-m - r.width / 3 / 2, 4), o.lineTo(-m - r.width / 3 / 2, -4), o.stroke(), o.fill(), o.restore();} else {o.setLineWidth(r.width), o.setLineCap("butt");for (var _t23, _a11 = 0; _a11 < e.length; _a11++) {_t23 = e[_a11], o.beginPath(), o.setStrokeStyle(_t23.color), o.arc(s.x, s.y, d, _t23._startAngle_ * n, _t23._endAngle_ * n, !1), o.stroke();}o.save(), x = r.startAngle - r.endAngle + 1;var _c2 = x / r.splitLine.splitNumber,_p2 = x / r.splitLine.splitNumber / r.splitLine.childNumber,_g2 = -d - .5 * r.width - r.splitLine.fixRadius,_y = -d - .5 * r.width - r.splitLine.fixRadius + r.splitLine.width,_f = -d - .5 * r.width - r.splitLine.fixRadius + r.splitLine.childWidth;o.translate(s.x, s.y), o.rotate((r.startAngle - 1) * n);for (var _e35 = 0; _e35 < r.splitLine.splitNumber + 1; _e35++) {o.beginPath(), o.setStrokeStyle(r.splitLine.color), o.setLineWidth(2 * a.pixelRatio), o.moveTo(_g2, 0), o.lineTo(_y, 0), o.stroke(), o.rotate(_c2 * n);}o.restore(), o.save(), o.translate(s.x, s.y), o.rotate((r.startAngle - 1) * n);for (var _e36 = 0; _e36 < r.splitLine.splitNumber * r.splitLine.childNumber + 1; _e36++) {o.beginPath(), o.setStrokeStyle(r.splitLine.color), o.setLineWidth(1 * a.pixelRatio), o.moveTo(_g2, 0), o.lineTo(_f, 0), o.stroke(), o.rotate(_p2 * n);}o.restore(), t = getGaugeDataPoints(t, e, r, l);for (var _e37, _a12 = 0; _a12 < t.length; _a12++) {_e37 = t[_a12], o.save(), o.translate(s.x, s.y), o.rotate((_e37._proportion_ - 1) * n), o.beginPath(), o.setFillStyle(_e37.color), o.moveTo(r.pointer.width, 0), o.lineTo(0, -r.pointer.width / 2), o.lineTo(-h, 0), o.lineTo(0, r.pointer.width / 2), o.lineTo(r.pointer.width, 0), o.closePath(), o.fill(), o.beginPath(), o.setFillStyle("#FFFFFF"), o.arc(0, 0, r.pointer.width / 6, 0, 2 * n, !1), o.fill(), o.restore();}!1 !== a.dataLabel && drawGaugeLabel(r, d, s, a, i, o);}return drawRingTitle(a, i, o, s), 1 === l && "gauge" === a.type && (a.extra.gauge.oldAngle = t[0]._proportion_, a.extra.gauge.oldData = t[0].data), { center: s, radius: d, innerRadius: h, categories: e, totalAngle: x };}function drawRadarDataPoints(e, t, a, o) {var n = Math.cos,l = Math.sin,r = 4 < arguments.length && void 0 !== arguments[4] ? arguments[4] : 1,s = assign({}, { gridColor: "#cccccc", labelColor: "#666666", opacity: .2, gridCount: 3 }, t.extra.radar),d = getRadarCoordinateSeries(t.categories.length),h = { x: t.area[3] + (t.width - t.area[1] - t.area[3]) / 2, y: t.area[0] + (t.height - t.area[0] - t.area[2]) / 2 },x = Math.min(h.x - (getMaxTextListLength(t.categories) + a.radarLabelTextMargin), h.y - a.radarLabelTextMargin);x -= t.padding[1], o.beginPath(), o.setLineWidth(1 * t.pixelRatio), o.setStrokeStyle(s.gridColor), d.forEach(function (e) {var t = convertCoordinateOrigin(x * n(e), x * l(e), h);o.moveTo(h.x, h.y), o.lineTo(t.x, t.y);}), o.stroke(), o.closePath();for (var c = function c(e) {var i = {};o.beginPath(), o.setLineWidth(1 * t.pixelRatio), o.setStrokeStyle(s.gridColor), d.forEach(function (t, a) {var r = convertCoordinateOrigin(x / s.gridCount * e * n(t), x / s.gridCount * e * l(t), h);0 === a ? (i = r, o.moveTo(r.x, r.y)) : o.lineTo(r.x, r.y);}), o.lineTo(i.x, i.y), o.stroke(), o.closePath();}, p = 1; p <= s.gridCount; p++) {c(p);}var g = getRadarDataPoints(d, h, x, e, t, r);return g.forEach(function (e) {if (o.beginPath(), o.setFillStyle(hexToRgb(e.color, s.opacity)), e.data.forEach(function (e, t) {0 === t ? o.moveTo(e.position.x, e.position.y) : o.lineTo(e.position.x, e.position.y);}), o.closePath(), o.fill(), !1 !== t.dataPointShape) {var i = e.data.map(function (e) {return e.position;});drawPointShape(i, e.color, e.pointShape, o, t);}}), drawRadarLabel(d, x, h, t, a, o), { center: h, radius: x, angleList: d };}function normalInt(e, t, a) {a = 0 == a ? 1 : a;for (var o = [], n = 0; n < a; n++) {o[n] = Math.random();}return Math.floor(o.reduce(function (e, t) {return e + t;}) / a * (t - e)) + e;}function collisionNew(e, t, a, o) {var n = !1;for (var l = 0; l < t.length; l++) {if (t[l].area) if (!(e[3] < t[l].area[1] || e[0] > t[l].area[2] || e[1] > t[l].area[3] || e[2] < t[l].area[0])) {n = !0;break;} else if (0 > e[0] || 0 > e[1] || e[2] > a || e[3] > o) {n = !0;break;} else n = !1;}return n;}function getBoundingBox(e) {var t,a = {};a.xMin = 180, a.xMax = 0, a.yMin = 90, a.yMax = 0;for (var o, n = 0; n < e.length; n++) {o = e[n].geometry.coordinates;for (var l = 0; l < o.length; l++) {t = o[l], 1 == t.length && (t = t[0]);for (var r = 0; r < t.length; r++) {var s = t[r][0],d = t[r][1],h = { x: s, y: d };a.xMin = a.xMin < h.x ? a.xMin : h.x, a.xMax = a.xMax > h.x ? a.xMax : h.x, a.yMin = a.yMin < h.y ? a.yMin : h.y, a.yMax = a.yMax > h.y ? a.yMax : h.y;}}}return a;}function coordinateToPoint(e, t, i, a, o, n) {return { x: (t - i.xMin) * a + o, y: (i.yMax - e) * a + n };}function pointToCoordinate(e, t, i, a, o, n) {return { x: (t - o) / a + i.xMin, y: i.yMax - (e - n) / a };}function isRayIntersectsSegment(e, t, i) {if (t[1] == i[1]) return !1;if (t[1] > e[1] && i[1] > e[1]) return !1;if (t[1] < e[1] && i[1] < e[1]) return !1;if (t[1] == e[1] && i[1] > e[1]) return !1;if (i[1] == e[1] && t[1] > e[1]) return !1;if (t[0] < e[0] && i[1] < e[1]) return !1;var a = i[0] - (i[0] - t[0]) * (i[1] - e[1]) / (i[1] - t[1]);return !(a < e[0]);}function isPoiWithinPoly(e, t) {var i = 0;for (var a, o = 0; o < t.length; o++) {a = t[o][0], 1 == t.length && (a = t[o][0]);for (var _t24 = 0; _t24 < a.length - 1; _t24++) {var _o23 = a[_t24],n = a[_t24 + 1];isRayIntersectsSegment(e, _o23, n) && (i += 1);}}return !(1 != i % 2);}function drawMapDataPoints(e, t, a, o) {var n,l,r = Math.abs,s = assign({}, { border: !0, borderWidth: 1, borderColor: "#666666", fillOpacity: .6, activeBorderColor: "#f04864", activeFillColor: "#facc14", activeFillOpacity: 1 }, t.extra.map),d = e,h = getBoundingBox(d),x = t.width / r(h.xMax - h.xMin),c = t.height / r(h.yMax - h.yMin),p = x < c ? x : c,g = t.width / 2 - r(h.xMax - h.xMin) / 2 * p,y = t.height / 2 - r(h.yMax - h.yMin) / 2 * p;o.beginPath(), o.clearRect(0, 0, t.width, t.height), o.setFillStyle(t.background || "#FFFFFF"), o.rect(0, 0, t.width, t.height), o.fill();for (var f = 0; f < d.length; f++) {o.beginPath(), o.setLineWidth(s.borderWidth * t.pixelRatio), o.setStrokeStyle(s.borderColor), o.setFillStyle(hexToRgb(e[f].color, s.fillOpacity)), t.tooltip && t.tooltip.index == f && (o.setStrokeStyle(s.activeBorderColor), o.setFillStyle(hexToRgb(s.activeFillColor, s.activeFillOpacity)));for (var u = d[f].geometry.coordinates, m = 0; m < u.length; m++) {n = u[m], 1 == n.length && (n = n[0]);for (var S = 0; S < n.length; S++) {l = coordinateToPoint(n[S][1], n[S][0], h, p, g, y), 0 == S ? (o.beginPath(), o.moveTo(l.x, l.y)) : o.lineTo(l.x, l.y);}o.fill(), !0 == s.border && o.stroke();}if (!0 == t.dataLabel) {var A = d[f].properties.centroid;if (A) {l = coordinateToPoint(A[1], A[0], h, p, g, y);var _e38 = d[f].textSize || a.fontSize,_t25 = d[f].properties.name;o.beginPath(), o.setFontSize(_e38), o.setFillStyle(d[f].textColor || "#666666"), o.fillText(_t25, l.x - measureText(_t25, _e38) / 2, l.y + _e38 / 2), o.closePath(), o.stroke();}}}t.chartData.mapData = { bounds: h, scale: p, xoffset: g, yoffset: y }, drawToolTipBridge(t, a, o, 1), o.draw();}function getWordCloudPoint(e, t) {var a = e.series.sort(function (e, t) {return parseInt(t.textSize) - parseInt(e.textSize);});switch (t) {case "normal":for (var _t26 = 0; _t26 < a.length; _t26++) {var i = void 0,_o24 = void 0,n = void 0,l = a[_t26].name,r = a[_t26].textSize,s = measureText(l, r),d = 0;for (;;) {d++, i = normalInt(-e.width / 2, e.width / 2, 5) - s / 2, _o24 = normalInt(-e.height / 2, e.height / 2, 5) + r / 2, n = [i - 5 + e.width / 2, _o24 - 5 - r + e.height / 2, i + s + 5 + e.width / 2, _o24 + 5 + e.height / 2];var _t27 = collisionNew(n, a, e.width, e.height);if (!_t27) break;if (1e3 == d) {n = [-100, -100, -100, -100];break;}}a[_t26].area = n;}break;case "vertical":var o = function o() {return !!(.7 < Math.random());};;for (var _t28 = 0; _t28 < a.length; _t28++) {var _i25 = void 0,_n24 = void 0,_l12 = void 0,_r10 = void 0,_s4 = a[_t28].name,_d3 = a[_t28].textSize,h = measureText(_s4, _d3),x = o(),c = 0;for (;;) {c++;var _t29 = void 0;if (x ? (_i25 = normalInt(-e.width / 2, e.width / 2, 5) - h / 2, _n24 = normalInt(-e.height / 2, e.height / 2, 5) + _d3 / 2, _l12 = [_n24 - 5 - h + e.width / 2, -_i25 - 5 + e.height / 2, _n24 + 5 + e.width / 2, -_i25 + _d3 + 5 + e.height / 2], _r10 = [e.width - (e.width / 2 - e.height / 2) - (-_i25 + _d3 + 5 + e.height / 2) - 5, e.height / 2 - e.width / 2 + (_n24 - 5 - h + e.width / 2) - 5, e.width - (e.width / 2 - e.height / 2) - (-_i25 + _d3 + 5 + e.height / 2) + _d3, e.height / 2 - e.width / 2 + (_n24 - 5 - h + e.width / 2) + h + 5], _t29 = collisionNew(_r10, a, e.height, e.width)) : (_i25 = normalInt(-e.width / 2, e.width / 2, 5) - h / 2, _n24 = normalInt(-e.height / 2, e.height / 2, 5) + _d3 / 2, _l12 = [_i25 - 5 + e.width / 2, _n24 - 5 - _d3 + e.height / 2, _i25 + h + 5 + e.width / 2, _n24 + 5 + e.height / 2], _t29 = collisionNew(_l12, a, e.width, e.height)), !_t29) break;if (1e3 == c) {_l12 = [-1e3, -1e3, -1e3, -1e3];break;}}x ? (a[_t28].area = _r10, a[_t28].areav = _l12) : a[_t28].area = _l12, a[_t28].rotate = x;};}return a;}function drawWordCloudDataPoints(e, t, i, a) {var o = 4 < arguments.length && arguments[4] !== void 0 ? arguments[4] : 1,n = assign({}, { type: "normal", autoColors: !0 }, t.extra.word);a.beginPath(), a.setFillStyle(t.background || "#FFFFFF"), a.rect(0, 0, t.width, t.height), a.fill(), a.save();var l = t.chartData.wordCloudData;a.translate(t.width / 2, t.height / 2);for (var _n25 = 0; _n25 < l.length; _n25++) {a.save(), l[_n25].rotate && a.rotate(90 * Math.PI / 180);var _e39 = l[_n25].name,_i26 = l[_n25].textSize,r = measureText(_e39, _i26);a.beginPath(), a.setStrokeStyle(l[_n25].color), a.setFillStyle(l[_n25].color), a.setFontSize(_i26), l[_n25].rotate ? 0 < l[_n25].areav[0] && (t.tooltip ? t.tooltip.index == _n25 ? a.strokeText(_e39, (l[_n25].areav[0] + 5 - t.width / 2) * o - r * (1 - o) / 2, (l[_n25].areav[1] + 5 + _i26 - t.height / 2) * o) : a.fillText(_e39, (l[_n25].areav[0] + 5 - t.width / 2) * o - r * (1 - o) / 2, (l[_n25].areav[1] + 5 + _i26 - t.height / 2) * o) : a.fillText(_e39, (l[_n25].areav[0] + 5 - t.width / 2) * o - r * (1 - o) / 2, (l[_n25].areav[1] + 5 + _i26 - t.height / 2) * o)) : 0 < l[_n25].area[0] && (t.tooltip ? t.tooltip.index == _n25 ? a.strokeText(_e39, (l[_n25].area[0] + 5 - t.width / 2) * o - r * (1 - o) / 2, (l[_n25].area[1] + 5 + _i26 - t.height / 2) * o) : a.fillText(_e39, (l[_n25].area[0] + 5 - t.width / 2) * o - r * (1 - o) / 2, (l[_n25].area[1] + 5 + _i26 - t.height / 2) * o) : a.fillText(_e39, (l[_n25].area[0] + 5 - t.width / 2) * o - r * (1 - o) / 2, (l[_n25].area[1] + 5 + _i26 - t.height / 2) * o)), a.stroke(), a.restore();}a.restore();}function drawFunnelDataPoints(e, t, i, a) {var o = 4 < arguments.length && void 0 !== arguments[4] ? arguments[4] : 1,n = assign({}, { activeWidth: 10, activeOpacity: .3, border: !1, borderWidth: 2, borderColor: "#FFFFFF", fillOpacity: 1, labelAlign: "right" }, t.extra.funnel),l = (t.height - t.area[0] - t.area[2]) / e.length,r = { x: t.area[3] + (t.width - t.area[1] - t.area[3]) / 2, y: t.height - t.area[2] },s = n.activeWidth,d = Math.min((t.width - t.area[1] - t.area[3]) / 2 - s, (t.height - t.area[0] - t.area[2]) / 2 - s);e = getFunnelDataPoints(e, d, o), a.save(), a.translate(r.x, r.y);for (var _o25 = 0; _o25 < e.length; _o25++) {0 == _o25 ? (t.tooltip && t.tooltip.index == _o25 && (a.beginPath(), a.setFillStyle(hexToRgb(e[_o25].color, n.activeOpacity)), a.moveTo(-s, 0), a.lineTo(-e[_o25].radius - s, -l), a.lineTo(e[_o25].radius + s, -l), a.lineTo(s, 0), a.lineTo(-s, 0), a.closePath(), a.fill()), e[_o25].funnelArea = [r.x - e[_o25].radius, r.y - l, r.x + e[_o25].radius, r.y], a.beginPath(), a.setLineWidth(n.borderWidth * t.pixelRatio), a.setStrokeStyle(n.borderColor), a.setFillStyle(hexToRgb(e[_o25].color, n.fillOpacity)), a.moveTo(0, 0), a.lineTo(-e[_o25].radius, -l), a.lineTo(e[_o25].radius, -l), a.lineTo(0, 0), a.closePath(), a.fill(), !0 == n.border && a.stroke()) : (t.tooltip && t.tooltip.index == _o25 && (a.beginPath(), a.setFillStyle(hexToRgb(e[_o25].color, n.activeOpacity)), a.moveTo(0, 0), a.lineTo(-e[_o25 - 1].radius - s, 0), a.lineTo(-e[_o25].radius - s, -l), a.lineTo(e[_o25].radius + s, -l), a.lineTo(e[_o25 - 1].radius + s, 0), a.lineTo(0, 0), a.closePath(), a.fill()), e[_o25].funnelArea = [r.x - e[_o25].radius, r.y - l * (_o25 + 1), r.x + e[_o25].radius, r.y - l * _o25], a.beginPath(), a.setLineWidth(n.borderWidth * t.pixelRatio), a.setStrokeStyle(n.borderColor), a.setFillStyle(hexToRgb(e[_o25].color, n.fillOpacity)), a.moveTo(0, 0), a.lineTo(-e[_o25 - 1].radius, 0), a.lineTo(-e[_o25].radius, -l), a.lineTo(e[_o25].radius, -l), a.lineTo(e[_o25 - 1].radius, 0), a.lineTo(0, 0), a.closePath(), a.fill(), !0 == n.border && a.stroke()), a.translate(0, -l);}return a.restore(), !1 !== t.dataLabel && 1 === o && drawFunnelText(e, t, a, l, n.labelAlign, s, r), { center: r, radius: d, series: e };}function drawFunnelText(e, t, a, o, n, l, r) {var s = Math.PI;for (var d = 0; d < e.length; d++) {var i = void 0,h = void 0,x = void 0,c = void 0,p = e[d],g = p.format ? p.format(+p._proportion_.toFixed(2)) : util.toFixed(100 * p._proportion_) + "%";"right" == n ? (i = 0 == d ? (p.funnelArea[2] + r.x) / 2 : (p.funnelArea[2] + e[d - 1].funnelArea[2]) / 2, h = i + 2 * l, x = p.funnelArea[1] + o / 2, c = p.textSize || t.fontSize, a.setLineWidth(1 * t.pixelRatio), a.setStrokeStyle(p.color), a.setFillStyle(p.color), a.beginPath(), a.moveTo(i, x), a.lineTo(h, x), a.stroke(), a.closePath(), a.beginPath(), a.moveTo(h, x), a.arc(h, x, 2, 0, 2 * s), a.closePath(), a.fill(), a.beginPath(), a.setFontSize(c), a.setFillStyle(p.textColor || "#666666"), a.fillText(g, h + 5, x + c / 2 - 2), a.closePath(), a.stroke(), a.closePath()) : (i = 0 == d ? (p.funnelArea[0] + r.x) / 2 : (p.funnelArea[0] + e[d - 1].funnelArea[0]) / 2, h = i - 2 * l, x = p.funnelArea[1] + o / 2, c = p.textSize || t.fontSize, a.setLineWidth(1 * t.pixelRatio), a.setStrokeStyle(p.color), a.setFillStyle(p.color), a.beginPath(), a.moveTo(i, x), a.lineTo(h, x), a.stroke(), a.closePath(), a.beginPath(), a.moveTo(h, x), a.arc(h, x, 2, 0, 2 * s), a.closePath(), a.fill(), a.beginPath(), a.setFontSize(c), a.setFillStyle(p.textColor || "#666666"), a.fillText(g, h - 5 - measureText(g), x + c / 2 - 2), a.closePath(), a.stroke(), a.closePath());}}function drawCanvas(e, t) {t.draw();}var Timing = { easeIn: function easeIn(e) {return Math.pow(e, 3);}, easeOut: function easeOut(e) {return Math.pow(e - 1, 3) + 1;}, easeInOut: function easeInOut(e) {var t = Math.pow;return 1 > (e /= .5) ? .5 * t(e, 3) : .5 * (t(e - 2, 3) + 2);}, linear: function linear(e) {return e;} };function Animation(e) {this.isStop = !1, e.duration = "undefined" == typeof e.duration ? 1e3 : e.duration, e.timing = e.timing || "linear";var t = function () {return "undefined" == typeof setTimeout ? "undefined" == typeof requestAnimationFrame ? function (e) {e(null);} : requestAnimationFrame : function (e, t) {setTimeout(function () {var t = +new Date();e(t);}, t);};}(),i = null,_a13 = function a(o) {if (null === o || !0 === this.isStop) return e.onProcess && e.onProcess(1), void (e.onAnimationFinish && e.onAnimationFinish());if (null === i && (i = o), o - i < e.duration) {var n = (o - i) / e.duration,l = Timing[e.timing];n = l(n), e.onProcess && e.onProcess(n), t(_a13, 17);} else e.onProcess && e.onProcess(1), e.onAnimationFinish && e.onAnimationFinish();};_a13 = _a13.bind(this), t(_a13, 17);}Animation.prototype.stop = function () {this.isStop = !0;};function drawCharts(e, t, a, i) {var o = this,n = t.series,l = t.categories;n = fillSeries(n, t, a);var r = t.animation ? t.duration : 0;o.animationInstance && o.animationInstance.stop();var s = null;if ("candle" == e) {var _e40 = assign({}, t.extra.candle.average);_e40.show ? (s = calCandleMA(_e40.day, _e40.name, _e40.color, n[0].data), s = fillSeries(s, t, a), t.seriesMA = s) : t.seriesMA ? s = t.seriesMA = fillSeries(t.seriesMA, t, a) : s = n;} else s = n;t._series_ = n = filterSeries(n), t.area = [,,,,];for (var _o26 = 0; 4 > _o26; _o26++) {t.area[_o26] = t.padding[_o26];}var d = calLegendData(s, t, a, t.chartData),h = d.area.wholeHeight,x = d.area.wholeWidth;switch (t.legend.position) {case "top":t.area[0] += h;break;case "bottom":t.area[2] += h;break;case "left":t.area[3] += x;break;case "right":t.area[1] += x;}var c = {},p = 0;if ("line" === t.type || "column" === t.type || "area" === t.type || "mix" === t.type || "candle" === t.type) {if (c = calYAxisData(n, t, a), p = c.yAxisWidth, t.yAxis.showTitle) {var _e42 = 0;for (var _o28 = 0; _o28 < t.yAxis.data.length; _o28++) {_e42 = Math.max(_e42, t.yAxis.data[_o28].titleFontSize ? t.yAxis.data[_o28].titleFontSize : a.fontSize);}t.area[0] += (_e42 + 6) * t.pixelRatio;}var _e41 = 0,_o27 = 0;for (var _a14 = 0; _a14 < p.length; _a14++) {"left" == p[_a14].position ? (t.area[3] += 0 < _o27 ? p[_a14].width + t.yAxis.padding : p[_a14].width, _o27 += 1) : (t.area[1] += 0 < _e41 ? p[_a14].width + t.yAxis.padding : p[_a14].width, _e41 += 1);}} else a.yAxisWidth = p;if (t.chartData.yAxisData = c, t.categories && t.categories.length) {t.chartData.xAxisData = getXAxisPoints(t.categories, t, a);var _e43 = calCategoriesData(t.categories, t, a, t.chartData.xAxisData.eachSpacing),_i27 = _e43.xAxisHeight,_o29 = _e43.angle;a.xAxisHeight = _i27, a._xAxisTextAngle_ = _o29, t.area[2] += _i27, t.chartData.categoriesData = _e43;} else if ("line" === t.type || "area" === t.type || "points" === t.type) {t.chartData.xAxisData = calXAxisData(n, t, a), l = t.chartData.xAxisData.rangesFormat;var _e44 = calCategoriesData(l, t, a, t.chartData.xAxisData.eachSpacing),_i28 = _e44.xAxisHeight,_o30 = _e44.angle;a.xAxisHeight = _i28, a._xAxisTextAngle_ = _o30, t.area[2] += _i28, t.chartData.categoriesData = _e44;} else t.chartData.xAxisData = { xAxisPoints: [] };if (t.enableScroll && "right" == t.xAxis.scrollAlign && void 0 === t._scrollDistance_) {var _e45 = 0,_i29 = t.chartData.xAxisData.xAxisPoints,_a15 = t.chartData.xAxisData.startX,_n26 = t.chartData.xAxisData.endX,_l13 = t.chartData.xAxisData.eachSpacing,_r11 = _l13 * (_i29.length - 1);_e45 = _n26 - _a15 - _r11, o.scrollOption = { currentOffset: _e45, startTouchX: _e45, distance: 0, lastMoveTime: 0 }, t._scrollDistance_ = _e45;}switch (("pie" === e || "ring" === e || "rose" === e) && (a._pieTextMaxLength_ = !1 === t.dataLabel ? 0 : getPieTextMaxLength(s)), e) {case "word":var _d4 = assign({}, { type: "normal", autoColors: !0 }, t.extra.word);(!0 == t.updateData || null == t.updateData) && (t.chartData.wordCloudData = getWordCloudPoint(t, _d4.type)), this.animationInstance = new Animation({ timing: "easeInOut", duration: r, onProcess: function onProcess(e) {i.clearRect(0, 0, t.width, t.height), t.rotate && contextRotate(i, t), drawWordCloudDataPoints(n, t, a, i, e), drawCanvas(t, i);}, onAnimationFinish: function onAnimationFinish() {o.event.trigger("renderComplete");} });break;case "map":i.clearRect(0, 0, t.width, t.height), drawMapDataPoints(n, t, a, i);break;case "funnel":this.animationInstance = new Animation({ timing: "easeInOut", duration: r, onProcess: function onProcess(e) {i.clearRect(0, 0, t.width, t.height), t.rotate && contextRotate(i, t), t.chartData.funnelData = drawFunnelDataPoints(n, t, a, i, e), drawLegend(t.series, t, a, i, t.chartData), drawToolTipBridge(t, a, i, e), drawCanvas(t, i);}, onAnimationFinish: function onAnimationFinish() {o.event.trigger("renderComplete");} });break;case "line":this.animationInstance = new Animation({ timing: "easeIn", duration: r, onProcess: function onProcess(e) {i.clearRect(0, 0, t.width, t.height), t.rotate && contextRotate(i, t), drawYAxisGrid(l, t, a, i), drawXAxis(l, t, a, i);var o = drawLineDataPoints(n, t, a, i, e),r = o.xAxisPoints,s = o.calPoints,d = o.eachSpacing;t.chartData.xAxisPoints = r, t.chartData.calPoints = s, t.chartData.eachSpacing = d, drawYAxis(n, t, a, i), !1 !== t.enableMarkLine && 1 === e && drawMarkLine(t, a, i), drawLegend(t.series, t, a, i, t.chartData), drawToolTipBridge(t, a, i, e, d, r), drawCanvas(t, i);}, onAnimationFinish: function onAnimationFinish() {o.event.trigger("renderComplete");} });break;case "mix":this.animationInstance = new Animation({ timing: "easeIn", duration: r, onProcess: function onProcess(e) {i.clearRect(0, 0, t.width, t.height), t.rotate && contextRotate(i, t), drawYAxisGrid(l, t, a, i), drawXAxis(l, t, a, i);var o = drawMixDataPoints(n, t, a, i, e),r = o.xAxisPoints,s = o.calPoints,d = o.eachSpacing;t.chartData.xAxisPoints = r, t.chartData.calPoints = s, t.chartData.eachSpacing = d, drawYAxis(n, t, a, i), !1 !== t.enableMarkLine && 1 === e && drawMarkLine(t, a, i), drawLegend(t.series, t, a, i, t.chartData), drawToolTipBridge(t, a, i, e, d, r), drawCanvas(t, i);}, onAnimationFinish: function onAnimationFinish() {o.event.trigger("renderComplete");} });break;case "column":this.animationInstance = new Animation({ timing: "easeIn", duration: r, onProcess: function onProcess(e) {i.clearRect(0, 0, t.width, t.height), t.rotate && contextRotate(i, t), drawYAxisGrid(l, t, a, i), drawXAxis(l, t, a, i);var o = drawColumnDataPoints(n, t, a, i, e),r = o.xAxisPoints,s = o.calPoints,d = o.eachSpacing;t.chartData.xAxisPoints = r, t.chartData.calPoints = s, t.chartData.eachSpacing = d, drawYAxis(n, t, a, i), !1 !== t.enableMarkLine && 1 === e && drawMarkLine(t, a, i), drawLegend(t.series, t, a, i, t.chartData), drawToolTipBridge(t, a, i, e, d, r), drawCanvas(t, i);}, onAnimationFinish: function onAnimationFinish() {o.event.trigger("renderComplete");} });break;case "area":this.animationInstance = new Animation({ timing: "easeIn", duration: r, onProcess: function onProcess(e) {i.clearRect(0, 0, t.width, t.height), t.rotate && contextRotate(i, t), drawYAxisGrid(l, t, a, i), drawXAxis(l, t, a, i);var o = drawAreaDataPoints(n, t, a, i, e),r = o.xAxisPoints,s = o.calPoints,d = o.eachSpacing;t.chartData.xAxisPoints = r, t.chartData.calPoints = s, t.chartData.eachSpacing = d, drawYAxis(n, t, a, i), !1 !== t.enableMarkLine && 1 === e && drawMarkLine(t, a, i), drawLegend(t.series, t, a, i, t.chartData), drawToolTipBridge(t, a, i, e, d, r), drawCanvas(t, i);}, onAnimationFinish: function onAnimationFinish() {o.event.trigger("renderComplete");} });break;case "ring":case "pie":this.animationInstance = new Animation({ timing: "easeInOut", duration: r, onProcess: function onProcess(e) {i.clearRect(0, 0, t.width, t.height), t.rotate && contextRotate(i, t), t.chartData.pieData = drawPieDataPoints(n, t, a, i, e), drawLegend(t.series, t, a, i, t.chartData), drawToolTipBridge(t, a, i, e), drawCanvas(t, i);}, onAnimationFinish: function onAnimationFinish() {o.event.trigger("renderComplete");} });break;case "rose":this.animationInstance = new Animation({ timing: "easeInOut", duration: r, onProcess: function onProcess(e) {i.clearRect(0, 0, t.width, t.height), t.rotate && contextRotate(i, t), t.chartData.pieData = drawRoseDataPoints(n, t, a, i, e), drawLegend(t.series, t, a, i, t.chartData), drawToolTipBridge(t, a, i, e), drawCanvas(t, i);}, onAnimationFinish: function onAnimationFinish() {o.event.trigger("renderComplete");} });break;case "radar":this.animationInstance = new Animation({ timing: "easeInOut", duration: r, onProcess: function onProcess(e) {i.clearRect(0, 0, t.width, t.height), t.rotate && contextRotate(i, t), t.chartData.radarData = drawRadarDataPoints(n, t, a, i, e), drawLegend(t.series, t, a, i, t.chartData), drawToolTipBridge(t, a, i, e), drawCanvas(t, i);}, onAnimationFinish: function onAnimationFinish() {o.event.trigger("renderComplete");} });break;case "arcbar":this.animationInstance = new Animation({ timing: "easeInOut", duration: r, onProcess: function onProcess(e) {i.clearRect(0, 0, t.width, t.height), t.rotate && contextRotate(i, t), t.chartData.arcbarData = drawArcbarDataPoints(n, t, a, i, e), drawCanvas(t, i);}, onAnimationFinish: function onAnimationFinish() {o.event.trigger("renderComplete");} });break;case "gauge":this.animationInstance = new Animation({ timing: "easeInOut", duration: r, onProcess: function onProcess(e) {i.clearRect(0, 0, t.width, t.height), t.rotate && contextRotate(i, t), t.chartData.gaugeData = drawGaugeDataPoints(l, n, t, a, i, e), drawCanvas(t, i);}, onAnimationFinish: function onAnimationFinish() {o.event.trigger("renderComplete");} });break;case "candle":this.animationInstance = new Animation({ timing: "easeIn", duration: r, onProcess: function onProcess(e) {i.clearRect(0, 0, t.width, t.height), t.rotate && contextRotate(i, t), drawYAxisGrid(l, t, a, i), drawXAxis(l, t, a, i);var o = drawCandleDataPoints(n, s, t, a, i, e),r = o.xAxisPoints,d = o.calPoints,h = o.eachSpacing;t.chartData.xAxisPoints = r, t.chartData.calPoints = d, t.chartData.eachSpacing = h, drawYAxis(n, t, a, i), !1 !== t.enableMarkLine && 1 === e && drawMarkLine(t, a, i), s ? drawLegend(s, t, a, i, t.chartData) : drawLegend(t.series, t, a, i, t.chartData), drawToolTipBridge(t, a, i, e, h, r), drawCanvas(t, i);}, onAnimationFinish: function onAnimationFinish() {o.event.trigger("renderComplete");} });}}function Event() {this.events = {};}Event.prototype.addEventListener = function (e, t) {this.events[e] = this.events[e] || [], this.events[e].push(t);}, Event.prototype.trigger = function () {for (var e = arguments.length, t = Array(e), i = 0; i < e; i++) {t[i] = arguments[i];}var a = t[0],o = t.slice(1);!this.events[a] || this.events[a].forEach(function (e) {try {e.apply(null, o);} catch (t) {console.error(t);}});};var Charts = function Charts(e) {e.pixelRatio = e.pixelRatio ? e.pixelRatio : 1, e.fontSize = e.fontSize ? e.fontSize * e.pixelRatio : 13 * e.pixelRatio, e.title = assign({}, e.title), e.subtitle = assign({}, e.subtitle), e.duration = e.duration ? e.duration : 1e3, e.yAxis = assign({}, { data: [], showTitle: !1, disabled: !1, disableGrid: !1, splitNumber: 5, gridType: "solid", dashLength: 4 * e.pixelRatio, gridColor: "#cccccc", padding: 10, fontColor: "#666666" }, e.yAxis), e.yAxis.dashLength *= e.pixelRatio, e.yAxis.padding *= e.pixelRatio, e.xAxis = assign({}, { rotateLabel: !1, type: "calibration", gridType: "solid", dashLength: 4, scrollAlign: "left", boundaryGap: "center", axisLine: !0, axisLineColor: "#cccccc" }, e.xAxis), e.xAxis.dashLength *= e.pixelRatio, e.legend = assign({}, { show: !0, position: "bottom", float: "center", backgroundColor: "rgba(0,0,0,0)", borderColor: "rgba(0,0,0,0)", borderWidth: 0, padding: 5, margin: 5, itemGap: 10, fontSize: e.fontSize, lineHeight: e.fontSize, fontColor: "#333333", format: {}, hiddenColor: "#CECECE" }, e.legend), e.legend.borderWidth *= e.pixelRatio, e.legend.itemGap *= e.pixelRatio, e.legend.padding *= e.pixelRatio, e.legend.margin *= e.pixelRatio, e.extra = assign({}, e.extra), e.rotate = !!e.rotate, e.animation = !!e.animation, e.rotate = !!e.rotate;var t = JSON.parse(JSON.stringify(config));if (t.colors = e.colors ? e.colors : t.colors, t.yAxisTitleWidth = !0 !== e.yAxis.disabled && e.yAxis.title ? t.yAxisTitleWidth : 0, ("pie" == e.type || "ring" == e.type) && (t.pieChartLinePadding = !1 === e.dataLabel ? 0 : e.extra.pie.labelWidth * e.pixelRatio || t.pieChartLinePadding * e.pixelRatio), "rose" == e.type && (t.pieChartLinePadding = !1 === e.dataLabel ? 0 : e.extra.rose.labelWidth * e.pixelRatio || t.pieChartLinePadding * e.pixelRatio), t.pieChartTextPadding = !1 === e.dataLabel ? 0 : t.pieChartTextPadding * e.pixelRatio, t.yAxisSplit = e.yAxis.splitNumber ? e.yAxis.splitNumber : config.yAxisSplit, t.rotate = e.rotate, e.rotate) {var _t30 = e.width,i = e.height;e.width = i, e.height = _t30;}e.padding = e.padding ? e.padding : t.padding;for (var _t31 = 0; 4 > _t31; _t31++) {e.padding[_t31] *= e.pixelRatio;}t.yAxisWidth = config.yAxisWidth * e.pixelRatio, t.xAxisHeight = config.xAxisHeight * e.pixelRatio, e.enableScroll && e.xAxis.scrollShow && (t.xAxisHeight += 6 * e.pixelRatio), t.xAxisLineHeight = config.xAxisLineHeight * e.pixelRatio, t.fontSize = e.fontSize, t.titleFontSize = config.titleFontSize * e.pixelRatio, t.subtitleFontSize = config.subtitleFontSize * e.pixelRatio, t.toolTipPadding = config.toolTipPadding * e.pixelRatio, t.toolTipLineHeight = config.toolTipLineHeight * e.pixelRatio, t.columePadding = config.columePadding * e.pixelRatio, e.$this = e.$this ? e.$this : this, this.context = uni.createCanvasContext(e.canvasId, e.$this), e.chartData = {}, this.event = new Event(), this.scrollOption = { currentOffset: 0, startTouchX: 0, distance: 0, lastMoveTime: 0 }, this.opts = e, this.config = t, drawCharts.call(this, e.type, e, t, this.context);};Charts.prototype.updateData = function () {var e = 0 < arguments.length && arguments[0] !== void 0 ? arguments[0] : {};this.opts = assign({}, this.opts, e), this.opts.updateData = !0;var t = e.scrollPosition || "current";switch (t) {case "current":this.opts._scrollDistance_ = this.scrollOption.currentOffset;break;case "left":this.opts._scrollDistance_ = 0, this.scrollOption = { currentOffset: 0, startTouchX: 0, distance: 0, lastMoveTime: 0 };break;case "right":var _e46 = calYAxisData(this.opts.series, this.opts, this.config),i = _e46.yAxisWidth;this.config.yAxisWidth = i;var a = 0,o = getXAxisPoints(this.opts.categories, this.opts, this.config),n = o.xAxisPoints,l = o.startX,r = o.endX,s = o.eachSpacing,d = s * (n.length - 1);a = r - l - d, this.scrollOption = { currentOffset: a, startTouchX: a, distance: 0, lastMoveTime: 0 }, this.opts._scrollDistance_ = a;}drawCharts.call(this, this.opts.type, this.opts, this.config, this.context);}, Charts.prototype.zoom = function () {var e = Math.round,t = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : this.opts.xAxis.itemCount;if (!0 !== this.opts.enableScroll) return void console.log("\u8BF7\u542F\u7528\u6EDA\u52A8\u6761\u540E\u4F7F\u7528\uFF01");var i = e(Math.abs(this.scrollOption.currentOffset) / this.opts.chartData.eachSpacing) + e(this.opts.xAxis.itemCount / 2);this.opts.animation = !1, this.opts.xAxis.itemCount = t.itemCount;var a = calYAxisData(this.opts.series, this.opts, this.config),o = a.yAxisWidth;this.config.yAxisWidth = o;var n = 0,l = getXAxisPoints(this.opts.categories, this.opts, this.config),r = l.xAxisPoints,s = l.startX,d = l.endX,h = l.eachSpacing,x = d - s,c = x - h * (r.length - 1);n = x / 2 - h * i, 0 < n && (n = 0), n < c && (n = c), this.scrollOption = { currentOffset: n, startTouchX: n, distance: 0, lastMoveTime: 0 }, this.opts._scrollDistance_ = n, drawCharts.call(this, this.opts.type, this.opts, this.config, this.context);}, Charts.prototype.stopAnimation = function () {this.animationInstance && this.animationInstance.stop();}, Charts.prototype.addEventListener = function (e, t) {this.event.addEventListener(e, t);}, Charts.prototype.getCurrentDataIndex = function (t) {var e = null;if (e = t.changedTouches ? t.changedTouches[0] : t.mp.changedTouches[0], e) {var i = getTouches(e, this.opts, t);return "pie" === this.opts.type || "ring" === this.opts.type || "rose" === this.opts.type ? findPieChartCurrentIndex({ x: i.x, y: i.y }, this.opts.chartData.pieData) : "radar" === this.opts.type ? findRadarChartCurrentIndex({ x: i.x, y: i.y }, this.opts.chartData.radarData, this.opts.categories.length) : "funnel" === this.opts.type ? findFunnelChartCurrentIndex({ x: i.x, y: i.y }, this.opts.chartData.funnelData) : "map" === this.opts.type ? findMapChartCurrentIndex({ x: i.x, y: i.y }, this.opts) : "word" === this.opts.type ? findWordChartCurrentIndex({ x: i.x, y: i.y }, this.opts.chartData.wordCloudData) : findCurrentIndex({ x: i.x, y: i.y }, this.opts.chartData.calPoints, this.opts, this.config, Math.abs(this.scrollOption.currentOffset));}return -1;}, Charts.prototype.getLegendDataIndex = function (t) {var e = null;if (e = t.changedTouches ? t.changedTouches[0] : t.mp.changedTouches[0], e) {var i = getTouches(e, this.opts, t);return findLegendIndex({ x: i.x, y: i.y }, this.opts.chartData.legendData);}return -1;}, Charts.prototype.touchLegend = function (t) {var e = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : {},i = null;if (i = t.changedTouches ? t.changedTouches[0] : t.mp.changedTouches[0], i) {var a = getTouches(i, this.opts, t),o = this.getLegendDataIndex(t);0 <= o && (this.opts.series[o].show = !this.opts.series[o].show, this.opts.animation = !!e.animation, this.opts._scrollDistance_ = this.scrollOption.currentOffset, drawCharts.call(this, this.opts.type, this.opts, this.config, this.context));}}, Charts.prototype.showToolTip = function (t) {var e = 1 < arguments.length && arguments[1] !== void 0 ? arguments[1] : {},i = null;i = t.changedTouches ? t.changedTouches[0] : t.mp.changedTouches[0], i || console.log("touchError");var a = getTouches(i, this.opts, t),o = this.scrollOption.currentOffset,n = assign({}, this.opts, { _scrollDistance_: o, animation: !1 });if ("line" === this.opts.type || "area" === this.opts.type || "column" === this.opts.type) {var l = e.index == null ? this.getCurrentDataIndex(t) : e.index;if (-1 < l) {var r = getSeriesDataItem(this.opts.series, l);if (0 !== r.length) {var s = getToolTipData(r, this.opts.chartData.calPoints, l, this.opts.categories, e),d = s.textList,h = s.offset;h.y = a.y, n.tooltip = { textList: e.textList ? e.textList : d, offset: h, option: e, index: l };}}drawCharts.call(this, n.type, n, this.config, this.context);}if ("mix" === this.opts.type) {var l = null == e.index ? this.getCurrentDataIndex(t) : e.index;if (-1 < l) {var o = this.scrollOption.currentOffset,n = assign({}, this.opts, { _scrollDistance_: o, animation: !1 }),r = getSeriesDataItem(this.opts.series, l);if (0 !== r.length) {var x = getMixToolTipData(r, this.opts.chartData.calPoints, l, this.opts.categories, e),d = x.textList,h = x.offset;h.y = a.y, n.tooltip = { textList: e.textList ? e.textList : d, offset: h, option: e, index: l };}}drawCharts.call(this, n.type, n, this.config, this.context);}if ("candle" === this.opts.type) {var l = null == e.index ? this.getCurrentDataIndex(t) : e.index;if (-1 < l) {var o = this.scrollOption.currentOffset,n = assign({}, this.opts, { _scrollDistance_: o, animation: !1 }),r = getSeriesDataItem(this.opts.series, l);if (0 !== r.length) {var s = getCandleToolTipData(this.opts.series[0].data, r, this.opts.chartData.calPoints, l, this.opts.categories, this.opts.extra.candle, e),d = s.textList,h = s.offset;h.y = a.y, n.tooltip = { textList: e.textList ? e.textList : d, offset: h, option: e, index: l };}}drawCharts.call(this, n.type, n, this.config, this.context);}if ("pie" === this.opts.type || "ring" === this.opts.type || "rose" === this.opts.type || "funnel" === this.opts.type) {var l = null == e.index ? this.getCurrentDataIndex(t) : e.index;if (-1 < l) {var o = this.scrollOption.currentOffset,n = assign({}, this.opts, { _scrollDistance_: o, animation: !1 }),r = this.opts._series_[l],d = [{ text: e.format ? e.format(r) : r.name + ": " + r.data, color: r.color }],h = { x: a.x, y: a.y };n.tooltip = { textList: e.textList ? e.textList : d, offset: h, option: e, index: l };}drawCharts.call(this, n.type, n, this.config, this.context);}if ("map" === this.opts.type || "word" === this.opts.type) {var l = null == e.index ? this.getCurrentDataIndex(t) : e.index;if (-1 < l) {var o = this.scrollOption.currentOffset,n = assign({}, this.opts, { _scrollDistance_: o, animation: !1 }),r = this.opts._series_[l],d = [{ text: e.format ? e.format(r) : r.properties.name, color: r.color }],h = { x: a.x, y: a.y };n.tooltip = { textList: e.textList ? e.textList : d, offset: h, option: e, index: l };}n.updateData = !1, drawCharts.call(this, n.type, n, this.config, this.context);}if ("radar" === this.opts.type) {var l = null == e.index ? this.getCurrentDataIndex(t) : e.index;if (-1 < l) {var o = this.scrollOption.currentOffset,n = assign({}, this.opts, { _scrollDistance_: o, animation: !1 }),r = getSeriesDataItem(this.opts.series, l);if (0 !== r.length) {var d = r.map(function (t) {return { text: e.format ? e.format(t) : t.name + ": " + t.data, color: t.color };}),h = { x: a.x, y: a.y };n.tooltip = { textList: e.textList ? e.textList : d, offset: h, option: e, index: l };}}drawCharts.call(this, n.type, n, this.config, this.context);}}, Charts.prototype.translate = function (e) {this.scrollOption = { currentOffset: e, startTouchX: e, distance: 0, lastMoveTime: 0 };var t = assign({}, this.opts, { _scrollDistance_: e, animation: !1 });drawCharts.call(this, this.opts.type, t, this.config, this.context);}, Charts.prototype.scrollStart = function (t) {var e = null;e = t.changedTouches ? t.changedTouches[0] : t.mp.changedTouches[0];var i = getTouches(e, this.opts, t);e && !0 === this.opts.enableScroll && (this.scrollOption.startTouchX = i.x);}, Charts.prototype.scroll = function (t) {0 === this.scrollOption.lastMoveTime && (this.scrollOption.lastMoveTime = Date.now());var e = this.opts.extra.touchMoveLimit || 20,i = Date.now(),a = i - this.scrollOption.lastMoveTime;if (!(a < Math.floor(1e3 / e))) {this.scrollOption.lastMoveTime = i;var o = null;if (o = t.changedTouches ? t.changedTouches[0] : t.mp.changedTouches[0], o && !0 === this.opts.enableScroll) {var n,l = getTouches(o, this.opts, t);n = l.x - this.scrollOption.startTouchX;var r = this.scrollOption.currentOffset,s = calValidDistance(this, r + n, this.opts.chartData, this.config, this.opts);this.scrollOption.distance = n = s - r;var d = assign({}, this.opts, { _scrollDistance_: r + n, animation: !1 });return drawCharts.call(this, d.type, d, this.config, this.context), r + n;}}}, Charts.prototype.scrollEnd = function () {if (!0 === this.opts.enableScroll) {var e = this.scrollOption,t = e.currentOffset,i = e.distance;this.scrollOption.currentOffset = t + i, this.scrollOption.distance = 0;}},  true && "object" == typeof module.exports && (module.exports = Charts);
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 1)["default"]))

/***/ }),
/* 454 */,
/* 455 */,
/* 456 */,
/* 457 */,
/* 458 */,
/* 459 */,
/* 460 */,
/* 461 */
/*!*****************************************************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/@dcloudio/uni-ui/lib/uni-swipe-action-item/mpwxs.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(uni) {Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;var _default = {
  data: function data() {
    return {
      position: [],
      button: {},
      btn: "[]" };

  },
  // computed: {
  // 	pos() {
  // 		return JSON.stringify(this.position)
  // 	},
  // 	btn() {
  // 		return JSON.stringify(this.button)
  // 	}
  // },
  watch: {
    button: {
      handler: function handler(newVal) {
        this.btn = JSON.stringify(newVal);
      },
      deep: true },

    show: function show(newVal) {
      if (this.autoClose) return;
      if (!this.button) {
        this.init();
        return;
      }
      this.button.show = newVal;
    },
    leftOptions: function leftOptions() {
      this.init();
    },
    rightOptions: function rightOptions() {
      this.init();
    } },

  created: function created() {
    if (this.swipeaction.children !== undefined) {
      this.swipeaction.children.push(this);
    }
  },
  mounted: function mounted() {
    this.init();
  },
  beforeDestroy: function beforeDestroy() {var _this = this;
    this.swipeaction.children.forEach(function (item, index) {
      if (item === _this) {
        _this.swipeaction.children.splice(index, 1);
      }
    });
  },
  methods: {
    init: function init() {var _this2 = this;
      clearTimeout(this.swipetimer);
      this.swipetimer = setTimeout(function () {
        _this2.getButtonSize();
      }, 50);
    },
    closeSwipe: function closeSwipe(e) {
      if (!this.autoClose) return;
      this.swipeaction.closeOther(this);
    },

    change: function change(e) {
      this.$emit('change', e.open);
      var show = this.button.show;
      if (show !== e.open) {
        this.button.show = e.open;
      }

    },

    appTouchStart: function appTouchStart(e) {var

      clientX =
      e.changedTouches[0].clientX;
      this.clientX = clientX;
      this.timestamp = new Date().getTime();
    },
    appTouchEnd: function appTouchEnd(e, index, item, position) {var

      clientX =
      e.changedTouches[0].clientX;
      // fixed by xxxx 模拟点击事件，解决 ios 13 点击区域错位的问题
      var diff = Math.abs(this.clientX - clientX);
      var time = new Date().getTime() - this.timestamp;
      if (diff < 40 && time < 300) {
        this.$emit('click', {
          content: item,
          index: index,
          position: position });

      }
    },
    getButtonSize: function getButtonSize() {var _this3 = this;
      var views = uni.createSelectorQuery().in(this);
      views.
      selectAll('.uni-swipe_button-group').
      boundingClientRect(function (data) {
        var show = 'none';
        if (_this3.autoClose) {
          show = 'none';
        } else {
          show = _this3.show;
        }
        _this3.button = {
          data: data,
          show: show };

      }).
      exec();
    } } };exports.default = _default;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 1)["default"]))

/***/ }),
/* 462 */,
/* 463 */,
/* 464 */,
/* 465 */,
/* 466 */,
/* 467 */,
/* 468 */,
/* 469 */,
/* 470 */,
/* 471 */,
/* 472 */,
/* 473 */,
/* 474 */,
/* 475 */,
/* 476 */
/*!*****************************************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/@dcloudio/uni-ui/lib/uni-popup/popup.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;var _message = _interopRequireDefault(__webpack_require__(/*! ./message.js */ 477));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}
// 定义 type 类型:弹出类型：top/bottom/center
var config = {
  // 顶部弹出
  top: 'top',
  // 底部弹出
  bottom: 'bottom',
  // 居中弹出
  center: 'center',
  // 消息提示
  message: 'top',
  // 对话框
  dialog: 'center',
  // 分享
  share: 'bottom' };var _default =


{
  data: function data() {
    return {
      config: config };

  },
  mixins: [_message.default] };exports.default = _default;

/***/ }),
/* 477 */
/*!*******************************************************************************************!*\
  !*** E:/uni_doctor_app/uni-doctor/node_modules/@dcloudio/uni-ui/lib/uni-popup/message.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;var _default = {
  created: function created() {
    if (this.type === 'message') {
      // 不显示遮罩
      this.maskShow = false;
      // 获取子组件对象
      this.childrenMsg = null;
    }
  },
  methods: {
    customOpen: function customOpen() {
      if (this.childrenMsg) {
        this.childrenMsg.open();
      }
    },
    customClose: function customClose() {
      if (this.childrenMsg) {
        this.childrenMsg.close();
      }
    } } };exports.default = _default;

/***/ })
]]);
//# sourceMappingURL=../../.sourcemap/mp-weixin/common/vendor.js.map